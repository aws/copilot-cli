// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/cli/completion.go

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockshellCompleter is a mock of shellCompleter interface.
type MockshellCompleter struct {
	ctrl     *gomock.Controller
	recorder *MockshellCompleterMockRecorder
}

// MockshellCompleterMockRecorder is the mock recorder for MockshellCompleter.
type MockshellCompleterMockRecorder struct {
	mock *MockshellCompleter
}

// NewMockshellCompleter creates a new mock instance.
func NewMockshellCompleter(ctrl *gomock.Controller) *MockshellCompleter {
	mock := &MockshellCompleter{ctrl: ctrl}
	mock.recorder = &MockshellCompleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockshellCompleter) EXPECT() *MockshellCompleterMockRecorder {
	return m.recorder
}

// GenBashCompletion mocks base method.
func (m *MockshellCompleter) GenBashCompletion(w io.Writer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenBashCompletion", w)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenBashCompletion indicates an expected call of GenBashCompletion.
func (mr *MockshellCompleterMockRecorder) GenBashCompletion(w interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenBashCompletion", reflect.TypeOf((*MockshellCompleter)(nil).GenBashCompletion), w)
}

// GenFishCompletion mocks base method.
func (m *MockshellCompleter) GenFishCompletion(w io.Writer, includeDesc bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenFishCompletion", w, includeDesc)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenFishCompletion indicates an expected call of GenFishCompletion.
func (mr *MockshellCompleterMockRecorder) GenFishCompletion(w, includeDesc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenFishCompletion", reflect.TypeOf((*MockshellCompleter)(nil).GenFishCompletion), w, includeDesc)
}

// GenZshCompletion mocks base method.
func (m *MockshellCompleter) GenZshCompletion(w io.Writer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenZshCompletion", w)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenZshCompletion indicates an expected call of GenZshCompletion.
func (mr *MockshellCompleterMockRecorder) GenZshCompletion(w interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenZshCompletion", reflect.TypeOf((*MockshellCompleter)(nil).GenZshCompletion), w)
}
