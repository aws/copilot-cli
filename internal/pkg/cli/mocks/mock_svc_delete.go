// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/cli/svc_delete.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockwkldCleaner is a mock of wkldCleaner interface.
type MockwkldCleaner struct {
	ctrl     *gomock.Controller
	recorder *MockwkldCleanerMockRecorder
}

// MockwkldCleanerMockRecorder is the mock recorder for MockwkldCleaner.
type MockwkldCleanerMockRecorder struct {
	mock *MockwkldCleaner
}

// NewMockwkldCleaner creates a new mock instance.
func NewMockwkldCleaner(ctrl *gomock.Controller) *MockwkldCleaner {
	mock := &MockwkldCleaner{ctrl: ctrl}
	mock.recorder = &MockwkldCleanerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockwkldCleaner) EXPECT() *MockwkldCleanerMockRecorder {
	return m.recorder
}

// Clean mocks base method.
func (m *MockwkldCleaner) Clean(app, env, wkld string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Clean", app, env, wkld)
	ret0, _ := ret[0].(error)
	return ret0
}

// Clean indicates an expected call of Clean.
func (mr *MockwkldCleanerMockRecorder) Clean(app, env, wkld interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clean", reflect.TypeOf((*MockwkldCleaner)(nil).Clean), app, env, wkld)
}
