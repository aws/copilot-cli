// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/describe/env.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	ec2 "github.com/aws/copilot-cli/internal/pkg/aws/ec2"
	gomock "github.com/golang/mock/gomock"
)

// MockvpcSubnetLister is a mock of vpcSubnetLister interface.
type MockvpcSubnetLister struct {
	ctrl     *gomock.Controller
	recorder *MockvpcSubnetListerMockRecorder
}

// MockvpcSubnetListerMockRecorder is the mock recorder for MockvpcSubnetLister.
type MockvpcSubnetListerMockRecorder struct {
	mock *MockvpcSubnetLister
}

// NewMockvpcSubnetLister creates a new mock instance.
func NewMockvpcSubnetLister(ctrl *gomock.Controller) *MockvpcSubnetLister {
	mock := &MockvpcSubnetLister{ctrl: ctrl}
	mock.recorder = &MockvpcSubnetListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockvpcSubnetLister) EXPECT() *MockvpcSubnetListerMockRecorder {
	return m.recorder
}

// ListVPCSubnets mocks base method.
func (m *MockvpcSubnetLister) ListVPCSubnets(vpcID string) (*ec2.VPCSubnets, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVPCSubnets", vpcID)
	ret0, _ := ret[0].(*ec2.VPCSubnets)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVPCSubnets indicates an expected call of ListVPCSubnets.
func (mr *MockvpcSubnetListerMockRecorder) ListVPCSubnets(vpcID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVPCSubnets", reflect.TypeOf((*MockvpcSubnetLister)(nil).ListVPCSubnets), vpcID)
}
