# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template that represents a load balanced web service on Amazon ECS.
{{- if .SerializedManifest }}
Metadata:
  Manifest: |
{{indent 4 .SerializedManifest}}
{{- end }}
Parameters:
  AppName:
    Type: String
  EnvName:
    Type: String
  WorkloadName:
    Type: String
  ContainerImage:
    Type: String
  ContainerPort:
    Type: Number
  TaskCPU:
    Type: String
  TaskMemory:
    Type: String
  TaskCount:
    Type: Number
  DNSDelegated:
    Type: String
    AllowedValues: [true, false]
  LogRetention:
    Type: Number
  AddonsTemplateURL:
    Description: 'URL of the addons nested stack template within the S3 bucket.'
    Type: String
    Default: ""
  EnvFileARN:
    Description: 'URL of the environment file.'
    Type: String
    Default: ""
  TargetContainer:
    Type: String
  TargetPort:
    Type: Number
{{- if .NLB }}
  NLBAliases:
    Type: String
    Default: ""
  NLBPort:
    Type: String
{{- end }}
{{- if .ALBEnabled}}
  HTTPSEnabled:
    Type: String
    AllowedValues: [true, false]
  RulePath:
    Type: String
  Stickiness:
    Type: String
    Default: false
{{- end}}
Conditions:
{{- if .ALBEnabled}}
  IsDefaultRootPath:
    !Equals [!Ref RulePath, "/"]
{{- end}}
  HasAssociatedDomain:
    !Equals [!Ref DNSDelegated, true]
  HasAddons: # If a bucket URL is specified, that means the template exists.
    !Not [!Equals [!Ref AddonsTemplateURL, ""]]
  HasEnvFile:
    !Not [!Equals [!Ref EnvFileARN, ""]]
Resources:
{{include "loggroup" . | indent 2}}

  TaskDefinition:
    Metadata:
      'aws:copilot:description': 'An ECS task definition to group your containers and run them on ECS'
    Type: AWS::ECS::TaskDefinition
    DependsOn: LogGroup
    Properties:
{{include "fargate-taskdef-base-properties" . | indent 6}}
      ContainerDefinitions:
{{include "workload-container" . | indent 8}}
{{- include "sidecars" . | indent 8}}

{{if .Storage -}}
{{include "volumes" . | indent 6}}
{{- end}}
{{include "executionrole" . | indent 2}}
{{include "taskrole" . | indent 2}}
{{include "servicediscovery" . | indent 2}}
{{- if .Autoscaling}}
{{include "autoscaling" . | indent 2}}
{{- end}}

{{include "env-controller" . | indent 2}}

  Service:
    Metadata:
      'aws:copilot:description': 'An ECS service to run and maintain your tasks in the environment cluster'
    Type: AWS::ECS::Service
    DependsOn:
    {{- if .ALBEnabled}}
    {{- if .HTTPSListener}}
      - HTTPListenerRuleWithDomain
      - HTTPSListenerRule
    {{- else}}
      - HTTPListenerRule
    {{- end}}
    {{- end}}
    {{- if .NLB}}
      - NLBListener
    {{- end}}
    Properties:
{{include "service-base-properties" . | indent 6}}
      # This may need to be adjusted if the container takes a while to start up
      HealthCheckGracePeriodSeconds: {{.HTTPHealthCheck.GracePeriod}}
      LoadBalancers:
  {{- if .ALBEnabled}}
        - ContainerName: !Ref TargetContainer
          ContainerPort: !Ref TargetPort
          TargetGroupArn: !Ref TargetGroup
  {{- end}}
  {{- if .NLB}}
        - ContainerName: {{.NLB.Listener.TargetContainer}}
          ContainerPort:  {{.NLB.Listener.TargetPort}}
          TargetGroupArn: !Ref NLBTargetGroup
  {{- end}}
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryService.Arn
          Port: !Ref ContainerPort

{{- if .ALBEnabled}}
{{include "alb" . | indent 2}}
{{- end}}

{{- if .NLB}}
{{include "nlb" . | indent 2}}
{{- end}}

{{include "efs-access-point" . | indent 2}}

{{include "addons" . | indent 2}}

{{include "publish" . | indent 2}}

Outputs:
  DiscoveryServiceARN:
    Description: ARN of the Discovery Service.
    Value: !GetAtt DiscoveryService.Arn
    Export:
      Name: !Sub ${AWS::StackName}-DiscoveryServiceARN
  {{- if .NLB}}
  PublicNetworkLoadBalancerDNSName:
    Value: !GetAtt PublicNetworkLoadBalancer.DNSName
    Export:
      Name: !Sub ${AWS::StackName}-PublicNetworkLoadBalancerDNSName
  {{- end}}
