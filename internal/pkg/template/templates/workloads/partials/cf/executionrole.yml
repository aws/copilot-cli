ExecutionRole:
  Metadata:
    'aws:copilot:description': 'An IAM Role for the Fargate agent to make AWS API calls on your behalf'
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: !Join ['', [!Ref AppName, '-', !Ref EnvName, '-', !Ref WorkloadName, SecretsPolicy]]
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - 'ssm:GetParameters'
              Resource:
                - !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*'
              Condition:
                StringEquals:
                  'ssm:ResourceTag/copilot-application': !Sub '${AppName}'
                  'ssm:ResourceTag/copilot-environment': !Sub '${EnvName}'
            - Effect: 'Allow'
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource:
                - !Sub 'arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
              Condition:
                StringEquals:
                  'secretsmanager:ResourceTag/copilot-application': !Sub '${AppName}'
                  'secretsmanager:ResourceTag/copilot-environment': !Sub '${EnvName}'
            - Effect: 'Allow'
              Action:
                - 'kms:Decrypt'
              Resource:
                - !Sub 'arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/*'
    ManagedPolicyArns:
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
