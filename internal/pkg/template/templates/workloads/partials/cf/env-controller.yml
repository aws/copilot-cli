EnvControllerAction:
  Metadata:
    'aws:copilot:description': "Update your environment's shared resources"
  Type: Custom::EnvControllerFunction
  Properties:
    ServiceToken: !GetAtt EnvControllerFunction.Arn
    Workload: !Ref WorkloadName
{{- if .Aliases}}
    Aliases: {{ fmtSlice (quoteSlice .Aliases) }}
{{- end}}
    EnvStack: !Sub '${AppName}-${EnvName}'
    Parameters: {{ envControllerParams . }}

EnvControllerFunction:
  Type: AWS::Lambda::Function
  Properties:
    {{- with $cr := index .CustomResources "EnvControllerFunction" }}
    Code:
      S3Bucket: {{$cr.Bucket}}
      S3Key: {{$cr.Key}}
    {{- end }}
    Handler: "index.handler"
    Timeout: 900
    MemorySize: 512
    Role: !GetAtt 'EnvControllerRole.Arn'
    Runtime: nodejs16.x

EnvControllerRole:
  Metadata:
    'aws:copilot:description': "An IAM role to update your environment stack"
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        -
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
    Path: /
    Policies:
      - PolicyName: "EnvControllerStackUpdate"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
            Resource:  !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AppName}-${EnvName}/*'
            Condition:
              StringEquals:
                'cloudformation:ResourceTag/copilot-application': !Sub '${AppName}'
                'cloudformation:ResourceTag/copilot-environment': !Sub '${EnvName}'
      - PolicyName: "EnvControllerRolePass"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:  !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${AppName}-${EnvName}-CFNExecutionRole'
            Condition:
              StringEquals:
                'iam:ResourceTag/copilot-application': !Sub '${AppName}'
                'iam:ResourceTag/copilot-environment': !Sub '${EnvName}'
    ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
