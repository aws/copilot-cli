TargetGroup:
  Metadata:
    'aws:copilot:description': 'A target group to connect the load balancer to your service'
  Type: AWS::ElasticLoadBalancingV2::TargetGroup
  Properties:
    HealthCheckPath: {{.HTTPHealthCheck.HealthCheckPath}} # Default is '/'.
    {{- if .HTTPHealthCheck.SuccessCodes}}
    Matcher:
      HttpCode: {{.HTTPHealthCheck.SuccessCodes}}
    {{- end}}
    {{- if .HTTPHealthCheck.HealthyThreshold}}
    HealthyThresholdCount: {{.HTTPHealthCheck.HealthyThreshold}}
    {{- end}}
    {{- if .HTTPHealthCheck.UnhealthyThreshold}}
    UnhealthyThresholdCount: {{.HTTPHealthCheck.UnhealthyThreshold}}
    {{- end}}
    {{- if .HTTPHealthCheck.Interval}}
    HealthCheckIntervalSeconds: {{.HTTPHealthCheck.Interval}}
    {{- end}}
    {{- if .HTTPHealthCheck.Timeout}}
    HealthCheckTimeoutSeconds: {{.HTTPHealthCheck.Timeout}}
    {{- end}}
    Port: !Ref ContainerPort
    Protocol: HTTP
    {{- if .HTTPVersion}}
    ProtocolVersion: {{.HTTPVersion}}
    {{- end}}
    TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: {{.DeregistrationDelay}}  # ECS Default is 300; Copilot default is 60.
      - Key: stickiness.enabled
        Value: !Ref Stickiness
    TargetType: ip
    VpcId:
      Fn::ImportValue:
        !Sub "${AppName}-${EnvName}-VpcId"

RulePriorityFunction:
  Type: AWS::Lambda::Function
  Properties:
    Code:
      ZipFile: |
        {{.RulePriorityLambda}}
    Handler: "index.nextAvailableRulePriorityHandler"
    Timeout: 600
    MemorySize: 512
    Role: !GetAtt 'CustomResourceRole.Arn'
    Runtime: nodejs12.x

CustomResourceRole:
  Metadata:
    'aws:copilot:description': 'An IAM role used by custom resources to describe your ECS service'
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: 2012-10-17
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
    Path: /
    Policies:
      - PolicyName: "DNSandACMAccess"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - elasticloadbalancing:DescribeRules
            Resource: "*"
      {{- if .Autoscaling }}
      - PolicyName: "DelegateDesiredCountAccess"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: ECS
              Effect: Allow
              Action:
                - ecs:DescribeServices
              Resource: "*"
              Condition: 
                ArnEquals: 
                  'ecs:cluster':
                    Fn::Sub:
                      - arn:${AWS::Partition}:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ClusterName}
                      - ClusterName:
                          Fn::ImportValue:
                            !Sub '${AppName}-${EnvName}-ClusterId'
            - Sid: ResourceGroups
              Effect: Allow
              Action:
                - resource-groups:GetResources
              Resource: "*"
            - Sid: Tags
              Effect: Allow
              Action:
                - "tag:GetResources"
              Resource: "*"
      {{- end}}
    ManagedPolicyArns:
      - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

{{- if .HTTPSListener}}
{{include "https-listener" .}}
{{- else}}
{{include "http-listener" .}}
{{- end}}