"use strict";const aws=require("aws-sdk"),priorityForRootRule="50000";let defaultResponseURL,defaultLogGroup,defaultLogStream,report=function(a,b,c,d,e,f){return new Promise((g,h)=>{const i=require("https"),{URL:j}=require("url");var k=JSON.stringify({Status:c,Reason:f,PhysicalResourceId:d||b.logStreamName,StackId:a.StackId,RequestId:a.RequestId,LogicalResourceId:a.LogicalResourceId,Data:e});const l=new j(a.ResponseURL||defaultResponseURL),m={hostname:l.hostname,port:443,path:l.pathname+l.search,method:"PUT",headers:{"Content-Type":"","Content-Length":k.length}};i.request(m).on("error",h).on("response",a=>{a.resume(),400<=a.statusCode?h(new Error(`Error ${a.statusCode}: ${a.statusMessage}`)):g()}).end(k,"utf8")})};const calculateNextRulePriority=async function(a){var b,c=new aws.ELBv2,d=[];do{const e=await c.describeRules({ListenerArn:a,Marker:b}).promise();d=d.concat(e.Rules),b=e.NextMarker}while(b);let e=1;if(0<d.length){const a=d.map(a=>"default"===a.Priority||a.Priority===priorityForRootRule?0:parseInt(a.Priority)),b=Math.max(...a);e=b+1}return e};exports.nextAvailableRulePriorityHandler=async function(a,b){var c={};const d=a.PhysicalResourceId||`alb-rule-priority-${a.LogicalResourceId}`;var e;try{switch(a.RequestType){case"Create":e=await calculateNextRulePriority(a.ResourceProperties.ListenerArn),c.Priority=e;break;case"Update":case"Delete":break;default:throw new Error(`Unsupported request type ${a.RequestType}`);}await report(a,b,"SUCCESS",d,c)}catch(c){console.log(`Caught error ${c}.`),await report(a,b,"FAILED",d,null,`${c.message} (Log: ${defaultLogGroup||b.logGroupName}/${defaultLogStream||b.logStreamName})`)}},exports.withDefaultResponseURL=function(a){defaultResponseURL=a},exports.withDefaultLogStream=function(a){defaultLogStream=a},exports.withDefaultLogGroup=function(a){defaultLogGroup=a};