CloudFrontDistribution:
  Metadata:
    'aws:copilot:description': 'A CloudFront distribution for global content delivery'
  Condition: CreateALB
  Type: AWS::CloudFront::Distribution
  Properties:
    DistributionConfig:
      DefaultCacheBehavior:
        AllowedMethods: ["GET", "HEAD", "OPTIONS", "PUT", "PATCH", "POST", "DELETE"]
        CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # See https://go.aws/3bJid3k
        TargetOriginId: !Sub 'copilot-${AppName}-${EnvironmentName}-origin'
        ViewerProtocolPolicy: allow-all # Will need to change with TLS termination and Alias usage
      Enabled: true
      IPV6Enabled: true
      Origins:
        - CustomOriginConfig:
            OriginProtocolPolicy: match-viewer # Will need to change with TLS termination and Alias usage
          DomainName: !GetAtt PublicLoadBalancer.DNSName
          Id: !Sub 'copilot-${AppName}-${EnvironmentName}-origin'
{{- if .CDNConfig.ViewerCertificate}}
      ViewerCertificate:
        AcmCertificateArn: {{.CDNConfig.ViewerCertificate}}
        MinimumProtocolVersion: TLSv1
        SslSupportMethod:  sni-only
{{- else}}
{{- if not .PublicHTTPConfig.ImportedCertARNs}}
      ViewerCertificate:
        !If
          - DelegateDNS
          - AcmCertificateArn: !Ref CertificateReplicator
            MinimumProtocolVersion: TLSv1
            SslSupportMethod:  sni-only
          - !Ref AWS::NoValue

CertificateReplicatorFunction:
  Type: AWS::Lambda::Function
  Condition: DelegateDNS
  Properties:
    {{- with $cr := index .CustomResources "CertificateReplicatorFunction" }}
    Code:
      S3Bucket: {{$cr.Bucket}}
      S3Key: {{$cr.Key}}
    {{- end}}
    Handler: "index.certificateReplicateHandler"
    Timeout: 900
    MemorySize: 512
    Role: !GetAtt 'CustomResourceRole.Arn'
    Runtime: nodejs12.x
    
CertificateReplicator:
  Metadata:
    'aws:copilot:description': 'Replicate certificate to us-east-1'
  Condition: DelegateDNS
  Type: Custom::CertificateReplicatorFunction
  Properties:
    ServiceToken: !GetAtt CertificateReplicatorFunction.Arn
    AppName: !Ref AppName
    EnvName: !Ref EnvironmentName
    TargetRegion: "us-east-1"
    EnvRegion: !Ref AWS::Region
    CertificateArn: !Ref HTTPSCert
{{- end}}
{{- end}}