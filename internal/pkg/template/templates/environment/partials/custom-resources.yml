EnableLongARNFormatAction:
  Metadata:
    'aws:copilot:description': 'Enable long ARN formats for the authenticated AWS principal'
  Type: Custom::EnableLongARNFormatFunction
  DependsOn:
    - EnableLongARNFormatFunction
  Properties:
    ServiceToken: !GetAtt EnableLongARNFormatFunction.Arn

DelegateDNSAction:
  Metadata:
    'aws:copilot:description': 'Delegate DNS for environment subdomain'
  Condition: DelegateDNS
  Type: Custom::DNSDelegationFunction
  DependsOn:
  - DNSDelegationFunction
  - EnvironmentHostedZone
  Properties:
    ServiceToken: !GetAtt DNSDelegationFunction.Arn
    DomainName: !Sub ${AppName}.${AppDNSName}
    SubdomainName: !Sub ${EnvironmentName}.${AppName}.${AppDNSName}
    NameServers: !GetAtt EnvironmentHostedZone.NameServers
    RootDNSRole: !Ref AppDNSDelegationRole

HTTPSCert:
  Metadata:
    'aws:copilot:description': 'Request and validate an ACM certificate for your domain'
  Condition: DelegateDNS
  Type: Custom::CertificateValidationFunction
  DependsOn:
  - CertificateValidationFunction
  - EnvironmentHostedZone
  - DelegateDNSAction
  Properties:
    ServiceToken: !GetAtt CertificateValidationFunction.Arn
    AppName: !Ref AppName
    EnvName: !Ref EnvironmentName
    DomainName: !Ref AppDNSName
    Aliases: !Ref Aliases
    EnvHostedZoneId: !Ref EnvironmentHostedZone
    Region: !Ref AWS::Region
    RootDNSRole: !Ref AppDNSDelegationRole

CustomDomainAction:
  Metadata:
    'aws:copilot:description': 'Add an A-record to the hosted zone for the domain alias'
  Condition: HasAliases
  DependsOn: HTTPSCert
  Type: Custom::CustomDomainFunction
  Properties:
    ServiceToken: !GetAtt CustomDomainFunction.Arn
    AppName: !Ref AppName
    EnvName: !Ref EnvironmentName
    Aliases: !Ref Aliases
    AppDNSRole: !Ref AppDNSDelegationRole
    DomainName: !Ref AppDNSName
    LoadBalancerDNS: !GetAtt PublicLoadBalancer.DNSName
    LoadBalancerHostedZone: !GetAtt PublicLoadBalancer.CanonicalHostedZoneID 