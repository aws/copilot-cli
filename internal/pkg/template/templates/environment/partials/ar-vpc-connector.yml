AppRunnerVpcEndpointSecurityGroup:
  Metadata:
    'aws:copilot:description': 'A security group for App Runner private services'
  Type: AWS::EC2::SecurityGroup
  Condition: CreateAppRunnerVPCEndpoint
  Properties:
    GroupDescription: !Join ['', [!Ref AppName, '-', !Ref EnvironmentName, AppRunnerVpcEndpointSecurityGroup]]
    {{- if .VPCConfig.Imported}}
    VpcId: {{.VPCConfig.Imported.ID}}
    {{- else}}
    VpcId: !Ref VPC
    {{- end}}
    Tags:
      - Key: Name
        Value: !Sub 'copilot-${AppName}-${EnvironmentName}-app-runner-vpc-endpoint'

AppRunnerVpcEndpointSecurityGroupIngressFromEnvironment:
  Type: AWS::EC2::SecurityGroupIngress
  Condition: CreateAppRunnerVPCEndpoint
  Properties:
    Description: Ingress from services in the environment
    GroupId: !Ref AppRunnerVpcEndpointSecurityGroup
    IpProtocol: -1
    SourceSecurityGroupId: !Ref EnvironmentSecurityGroup

AppRunnerVpcEndpoint:
  Metadata:
    'aws:copilot:description': 'VPC Endpoint in private subnets to App Runner for private services'
  Type: AWS::EC2::VPCEndpoint
  Condition: CreateAppRunnerVPCEndpoint
  Properties:
    VpcEndpointType: Interface
    VpcId: !Ref VPC
    SecurityGroupIds:
      - !Ref AppRunnerVpcEndpointSecurityGroup
    # ServiceName: !Sub 'com.amazonaws.${AWS::Region}.apprunner'
    ServiceName: !Sub "com.amazonaws.${AWS::Region}.apprunner.requests.gamma" # TODO switch to non-beta on release
    SubnetIds:
      {{- range $ind, $cidr := .VPCConfig.Managed.PrivateSubnetCIDRs}}
      - !Ref PrivateSubnet{{inc $ind}}
      {{- end}}