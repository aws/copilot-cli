{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"blogs/apprunner-vpc/","text":"AWS App Runner VPC connection with AWS Copilot Posted On: Jun 15, 2022 Rafael Mosca , Associate Solutions Architect, WWPS EMEA Central SA The AWS Copilot CLI is a tool that was launched in 2020 , and since then developers have been using it to build, manage, and operate Linux and Windows containers on Amazon Elastic Container Service (Amazon ECS) , AWS Fargate , and AWS App Runner. In February 2022, AWS announced VPC Support for AWS App Runner . This means that web applications and APIs that you deploy using AWS App Runner can now communicate with databases running in services like Amazon Relational Database Service (RDS) , and other applications running on Amazon Elastic Container Service (Amazon ECS) , Amazon Elastic Kubernetes Service (EKS) , Amazon Elastic Compute Cloud (Amazon EC2) that are hosted in an Amazon Virtual Private Cloud (Amazon VPC) . Although you can enable VPC access from the AWS App Runner console following the steps described in the documentation , this walkthrough will show you how to easily enable VPC access and connect to an Amazon Aurora database using AWS Copilot. Context AWS App Runner is a fully managed service designed to make it easy for developers to run HTTP-based applications such as web and API servers. You don\u2019t need prior infrastructure or experience. You provide the source code or a container image and App Runner will build and deploy your application containers in the AWS Cloud, automatically scaling and load-balancing requests across them behind the scenes. All you see is a service URL against which HTTPS requests can be made. When you create a service, behind the scenes, App Runner deploys your application containers as AWS Fargate tasks orchestrated by Amazon Elastic Container Service (ECS) in a VPC owned by App Runner. By default, all outbound traffic initiated by the application is routed to the internet via a NAT Gateway and an internet gateway provisioned in this App Runner owned VPC. Therefore in this mode, applications hosted on App Runner can only connect to public endpoints on the internet and cannot reach private endpoints within any of your VPCs. With the announcement of VPC support for App Runner services , your applications can now connect to private resources in your VPCs, such as an Amazon RDS database, Amazon ElastiCache cluster, or other private services hosted in your VPC. To understand what happens under the hood, check out this dive deep post on VPC networking for the AWS App Runner . In summary, by creating a VPC connector, the App Runner service creates a uni-directional Elastic Network Interface (ENI) on the Customer-owned VPC that can be used for outbound traffic only (i.e. you cannot send any inbound requests to the ENI\u2019s IP address). This ENI has a security group that you can modify to contain your own customised outbound rules that allow communication to the desired destination endpoints. Example architecture To demonstrate the capabilities of AWS Copilot CLI and VPC support for AWS App Runner I will show you how to implement an architecture as shown in the following diagram. The steps you will need to complete are as follows: You will create a Customer VPC by using Copilot\u2019s notion of environment. You will create an Amazon Aurora PostgreSQL database inside a private subnet within this VPC. You will connect your service running on AWS App Runner to the database, residing inside your VPC, using the VPC connector and configure the appropriate security group rules. You will verify the connection works by connecting to the database by using SQLAlchemy, a popular ORM for the Python programming language. Prerequisites To build the architecture above, you need the following prerequisites: An AWS account and chosen a region in which you will deploy the infrastructure described above. Have the AWS Copilot CLI installed on your local workstation. Properly configured AWS credentials using the AWS CLI or with environment variables . Docker is installed and running on your local workstation. Cloned the sample repository git clone https://github.com/aws-rafams/apprunner-vpc-copilot Create an application and environment You will first need to create a logical group of related services, environments, and pipelines. In the AWS Copilot terminology this is called an application . copilot app init apprunner-vpc Once you execute that command, Copilot will use a folder named ./copilot to hold infrastructure-as-code YAML configuration files, called manifests, that will enable you to easily deploy containerised applications on AWS using Copilot. Your next step is to create an environment for the application where you will deploy your services. With AWS Copilot it is possible to create different environments that logically isolate the deployments of our applications in separate accounts and regions. A common use case is to have a test environment and a separate production environment where applications are deployed only when they have been validated on the test environment. For the scope of this post, you will only deploy the services to a testing environment named test that you create with the following command: copilot env init \\ --app apprunner-vpc \\ --name test \\ --region 'eu-west-1' \\ --default-config Once you press enter on the command, you will be asked to select AWS credentials that will be used to create the necessary infrastructure to host our services. Once the credentials have been selected, Copilot will start to create the resources on your behalf. This process may take a while so stretch a bit while this process is completed. For every environment you create, AWS Copilot will create a separate networking stack (VPC) and an ECS Cluster that won\u2019t be used for this particular demo. Create a service running on AWS App Runner AWS Copilot gives us several abstractions that you can use to deploy different types of services. In this walkthrough example I use the Copilot pattern called Request-Driven Web Service, which deploys an AWS App Runner service that autoscales based on incoming traffic and scales down to a baseline when there's no traffic. This option is more cost effective for HTTP services with sudden bursts in request volumes or low request volumes. copilot svc init \\ --app apprunner-vpc \\ --svc-type \"Request-Driven Web Service\" \\ --name demo-service\\ --port 5000 \\ --dockerfile \"demo-service/Dockerfile\" As usual, AWS Copilot generates a manifest.yml file that you can use to further customise the resources before you proceed to the actual deployment. To enable VPC access by your application all you need is to uncomment is the following section from the manifest file copilot/demo-service/manifest.yml : network: vpc: placement: private What will happen under the hood is that these extra lines will create the VPC Connector needed to connect to private VPC resources. Database on the VPC To verify that you can connect to a private resource in your VPC, you are going to create an Amazon Aurora Serverless v1 PostgreSQL database cluster named demoDb using AWS Copilot. copilot storage init \\ --name demoDb \\ --storage-type Aurora\\ --workload demo-service \\ --engine PostgreSQL\\ --initial-db demo This will create a file under ./copilot/demo-service/addons/demoDb.yml which contains configuration of the Amazon Aurora Serverless database that will be deployed using the AWS Copilot CLI. By viewing the manifest file you will see that the database will be created by default inside of the private subnets associated with the Copilot application and environment VPC. Notice that Copilot will use AWS Secrets Manager to generate the database password and the ser. To be able to access the database password, AWS Copilot will inject an environment variable with the secret\u2019s ARN so we can later use the SDK to retrieve the password. In this demo, I have used Python (so boto3 will be used), and the environment variable injected will be named DEMO_DB_SECRET_ARN . In order to retrieve the password using Python we can use the following code: sm_client = boto3.client('secretsmanager') secret_arn = os.getenv(\"DEMO_DB_SECRET_ARN\") response = sm_client.get_secret_value(SecretId=secret_arn) secret = json.loads(response['SecretString']) secret will then be a dict made with the following information: {dbClusterIdentifier, password, dbname, engine, port, host, username} which can be used to connect to the database. In this case, we are going to leverage SQLAlchemy , a popular Object Relation Mapper (ORM) tool for Python that lets you query and manipulate data from a database using an object-oriented paradigm instead of the low-level SQL queries. To connect to the database we need to construct a database connection string as specified in the documentation . In our case we can get all the needed parameters with the secret dictionary. DB_URI = f\"postgresql://{secret['username']}:{secret['password']}@{secret['host']}/{secret['dbname']}\" Notice that we don\u2019t need to explicitly allow the service to access the database secret, Copilot will automatically create the appropriate Instance Role allowing the secretsmanager:GetSecretValue action on the secret created. We also don\u2019t need to configure the security groups. Since we added the database through Copilot, the database security group automatically allows traffic onto the PostgreSQL port ( 5432 ) from the service security group (which is associated to the VPC connector) and where your service routes outbound traffic. Deploy sample application Now that everything is ready, you can deploy the sample application. This sample application allows new users to be inserted into a private database: copilot svc deploy --name demo-service --env test Copilot will build the container image using the Docker Daemon running locally and upload it to ECR, therefore if the daemon is not running the image building will fail and an error will pop-up. After the image is pushed to the ECR Repo, Copilot will then start to create all the needed resources and when the provisioning is done, you will get a secure URL through which you can access the application. It should look something similar to this: https://rxrwprcxdp.eu-west-1.awsapprunner.com/ In case you want to retrieve this URL in future occasions you can run copilot svc show --name demo-service and copy the value of the URL under the Routes section. Verify it works Every time you refresh the page a new name and e-mail will be generated, but you are able to modify the fields if you want. By clicking send, SQLAlchemy will perform a SQL Insert the user into the database we have created (demo) and into the table \u2018 users \u2019 that we have specified into the Python code with ( __tablename__ = 'users' ). Add several users by using the front-end. To verify the users have been saved on the database you can go to the Users section of the front-end and see they are there. To further verify the users are really in the database, you can use the query editor in the RDS console which allows you to run Data Definition Language (DDL) and Data Manipulation Language (DML) using standard SQL statements. By default this functionality is not activated and requires you to activate it manually by enabling the Data API. After enabling this functionality we can run SQL statements like a SELECT to verify the inserted data is indeed inside the database. Cleaning up To avoid incurring future charges, delete the resources. If you created everything correctly, you can run the command copilot app delete apprunner-vpc and all the services and related infrastructure created for this demo will be deleted. Conclusion I showed you how you can connect to private VPC resources by using AWS Copilot and the new VPC connection feature of AWS App Runner. Using these two capabilities you can easily deploy HTTP-based services that are able to connect to VPC resources while Copilot masks all the complexity of creating the infrastructure and permissions, ultimately saving you time and simplifying the management.","title":"AWS App Runner VPC"},{"location":"blogs/apprunner-vpc/#aws-app-runner-vpc-connection-with-aws-copilot","text":"Posted On: Jun 15, 2022 Rafael Mosca , Associate Solutions Architect, WWPS EMEA Central SA The AWS Copilot CLI is a tool that was launched in 2020 , and since then developers have been using it to build, manage, and operate Linux and Windows containers on Amazon Elastic Container Service (Amazon ECS) , AWS Fargate , and AWS App Runner. In February 2022, AWS announced VPC Support for AWS App Runner . This means that web applications and APIs that you deploy using AWS App Runner can now communicate with databases running in services like Amazon Relational Database Service (RDS) , and other applications running on Amazon Elastic Container Service (Amazon ECS) , Amazon Elastic Kubernetes Service (EKS) , Amazon Elastic Compute Cloud (Amazon EC2) that are hosted in an Amazon Virtual Private Cloud (Amazon VPC) . Although you can enable VPC access from the AWS App Runner console following the steps described in the documentation , this walkthrough will show you how to easily enable VPC access and connect to an Amazon Aurora database using AWS Copilot.","title":"AWS App Runner VPC connection with AWS Copilot"},{"location":"blogs/apprunner-vpc/#context","text":"AWS App Runner is a fully managed service designed to make it easy for developers to run HTTP-based applications such as web and API servers. You don\u2019t need prior infrastructure or experience. You provide the source code or a container image and App Runner will build and deploy your application containers in the AWS Cloud, automatically scaling and load-balancing requests across them behind the scenes. All you see is a service URL against which HTTPS requests can be made. When you create a service, behind the scenes, App Runner deploys your application containers as AWS Fargate tasks orchestrated by Amazon Elastic Container Service (ECS) in a VPC owned by App Runner. By default, all outbound traffic initiated by the application is routed to the internet via a NAT Gateway and an internet gateway provisioned in this App Runner owned VPC. Therefore in this mode, applications hosted on App Runner can only connect to public endpoints on the internet and cannot reach private endpoints within any of your VPCs. With the announcement of VPC support for App Runner services , your applications can now connect to private resources in your VPCs, such as an Amazon RDS database, Amazon ElastiCache cluster, or other private services hosted in your VPC. To understand what happens under the hood, check out this dive deep post on VPC networking for the AWS App Runner . In summary, by creating a VPC connector, the App Runner service creates a uni-directional Elastic Network Interface (ENI) on the Customer-owned VPC that can be used for outbound traffic only (i.e. you cannot send any inbound requests to the ENI\u2019s IP address). This ENI has a security group that you can modify to contain your own customised outbound rules that allow communication to the desired destination endpoints.","title":"Context"},{"location":"blogs/apprunner-vpc/#example-architecture","text":"To demonstrate the capabilities of AWS Copilot CLI and VPC support for AWS App Runner I will show you how to implement an architecture as shown in the following diagram. The steps you will need to complete are as follows: You will create a Customer VPC by using Copilot\u2019s notion of environment. You will create an Amazon Aurora PostgreSQL database inside a private subnet within this VPC. You will connect your service running on AWS App Runner to the database, residing inside your VPC, using the VPC connector and configure the appropriate security group rules. You will verify the connection works by connecting to the database by using SQLAlchemy, a popular ORM for the Python programming language.","title":"Example architecture"},{"location":"blogs/apprunner-vpc/#prerequisites","text":"To build the architecture above, you need the following prerequisites: An AWS account and chosen a region in which you will deploy the infrastructure described above. Have the AWS Copilot CLI installed on your local workstation. Properly configured AWS credentials using the AWS CLI or with environment variables . Docker is installed and running on your local workstation. Cloned the sample repository git clone https://github.com/aws-rafams/apprunner-vpc-copilot","title":"Prerequisites"},{"location":"blogs/apprunner-vpc/#create-an-application-and-environment","text":"You will first need to create a logical group of related services, environments, and pipelines. In the AWS Copilot terminology this is called an application . copilot app init apprunner-vpc Once you execute that command, Copilot will use a folder named ./copilot to hold infrastructure-as-code YAML configuration files, called manifests, that will enable you to easily deploy containerised applications on AWS using Copilot. Your next step is to create an environment for the application where you will deploy your services. With AWS Copilot it is possible to create different environments that logically isolate the deployments of our applications in separate accounts and regions. A common use case is to have a test environment and a separate production environment where applications are deployed only when they have been validated on the test environment. For the scope of this post, you will only deploy the services to a testing environment named test that you create with the following command: copilot env init \\ --app apprunner-vpc \\ --name test \\ --region 'eu-west-1' \\ --default-config Once you press enter on the command, you will be asked to select AWS credentials that will be used to create the necessary infrastructure to host our services. Once the credentials have been selected, Copilot will start to create the resources on your behalf. This process may take a while so stretch a bit while this process is completed. For every environment you create, AWS Copilot will create a separate networking stack (VPC) and an ECS Cluster that won\u2019t be used for this particular demo.","title":"Create an application and environment"},{"location":"blogs/apprunner-vpc/#create-a-service-running-on-aws-app-runner","text":"AWS Copilot gives us several abstractions that you can use to deploy different types of services. In this walkthrough example I use the Copilot pattern called Request-Driven Web Service, which deploys an AWS App Runner service that autoscales based on incoming traffic and scales down to a baseline when there's no traffic. This option is more cost effective for HTTP services with sudden bursts in request volumes or low request volumes. copilot svc init \\ --app apprunner-vpc \\ --svc-type \"Request-Driven Web Service\" \\ --name demo-service\\ --port 5000 \\ --dockerfile \"demo-service/Dockerfile\" As usual, AWS Copilot generates a manifest.yml file that you can use to further customise the resources before you proceed to the actual deployment. To enable VPC access by your application all you need is to uncomment is the following section from the manifest file copilot/demo-service/manifest.yml : network: vpc: placement: private What will happen under the hood is that these extra lines will create the VPC Connector needed to connect to private VPC resources.","title":"Create a service running on AWS App Runner"},{"location":"blogs/apprunner-vpc/#database-on-the-vpc","text":"To verify that you can connect to a private resource in your VPC, you are going to create an Amazon Aurora Serverless v1 PostgreSQL database cluster named demoDb using AWS Copilot. copilot storage init \\ --name demoDb \\ --storage-type Aurora\\ --workload demo-service \\ --engine PostgreSQL\\ --initial-db demo This will create a file under ./copilot/demo-service/addons/demoDb.yml which contains configuration of the Amazon Aurora Serverless database that will be deployed using the AWS Copilot CLI. By viewing the manifest file you will see that the database will be created by default inside of the private subnets associated with the Copilot application and environment VPC. Notice that Copilot will use AWS Secrets Manager to generate the database password and the ser. To be able to access the database password, AWS Copilot will inject an environment variable with the secret\u2019s ARN so we can later use the SDK to retrieve the password. In this demo, I have used Python (so boto3 will be used), and the environment variable injected will be named DEMO_DB_SECRET_ARN . In order to retrieve the password using Python we can use the following code: sm_client = boto3.client('secretsmanager') secret_arn = os.getenv(\"DEMO_DB_SECRET_ARN\") response = sm_client.get_secret_value(SecretId=secret_arn) secret = json.loads(response['SecretString']) secret will then be a dict made with the following information: {dbClusterIdentifier, password, dbname, engine, port, host, username} which can be used to connect to the database. In this case, we are going to leverage SQLAlchemy , a popular Object Relation Mapper (ORM) tool for Python that lets you query and manipulate data from a database using an object-oriented paradigm instead of the low-level SQL queries. To connect to the database we need to construct a database connection string as specified in the documentation . In our case we can get all the needed parameters with the secret dictionary. DB_URI = f\"postgresql://{secret['username']}:{secret['password']}@{secret['host']}/{secret['dbname']}\" Notice that we don\u2019t need to explicitly allow the service to access the database secret, Copilot will automatically create the appropriate Instance Role allowing the secretsmanager:GetSecretValue action on the secret created. We also don\u2019t need to configure the security groups. Since we added the database through Copilot, the database security group automatically allows traffic onto the PostgreSQL port ( 5432 ) from the service security group (which is associated to the VPC connector) and where your service routes outbound traffic.","title":"Database on the VPC"},{"location":"blogs/apprunner-vpc/#deploy-sample-application","text":"Now that everything is ready, you can deploy the sample application. This sample application allows new users to be inserted into a private database: copilot svc deploy --name demo-service --env test Copilot will build the container image using the Docker Daemon running locally and upload it to ECR, therefore if the daemon is not running the image building will fail and an error will pop-up. After the image is pushed to the ECR Repo, Copilot will then start to create all the needed resources and when the provisioning is done, you will get a secure URL through which you can access the application. It should look something similar to this: https://rxrwprcxdp.eu-west-1.awsapprunner.com/ In case you want to retrieve this URL in future occasions you can run copilot svc show --name demo-service and copy the value of the URL under the Routes section.","title":"Deploy sample application"},{"location":"blogs/apprunner-vpc/#verify-it-works","text":"Every time you refresh the page a new name and e-mail will be generated, but you are able to modify the fields if you want. By clicking send, SQLAlchemy will perform a SQL Insert the user into the database we have created (demo) and into the table \u2018 users \u2019 that we have specified into the Python code with ( __tablename__ = 'users' ). Add several users by using the front-end. To verify the users have been saved on the database you can go to the Users section of the front-end and see they are there. To further verify the users are really in the database, you can use the query editor in the RDS console which allows you to run Data Definition Language (DDL) and Data Manipulation Language (DML) using standard SQL statements. By default this functionality is not activated and requires you to activate it manually by enabling the Data API. After enabling this functionality we can run SQL statements like a SELECT to verify the inserted data is indeed inside the database.","title":"Verify it works"},{"location":"blogs/apprunner-vpc/#cleaning-up","text":"To avoid incurring future charges, delete the resources. If you created everything correctly, you can run the command copilot app delete apprunner-vpc and all the services and related infrastructure created for this demo will be deleted.","title":"Cleaning up"},{"location":"blogs/apprunner-vpc/#conclusion","text":"I showed you how you can connect to private VPC resources by using AWS Copilot and the new VPC connection feature of AWS App Runner. Using these two capabilities you can easily deploy HTTP-based services that are able to connect to VPC resources while Copilot masks all the complexity of creating the infrastructure and permissions, ultimately saving you time and simplifying the management.","title":"Conclusion"},{"location":"blogs/apprunner-waf/","text":"Using WAF With App Runner in Copilot Posted On: Feb 23, 2023 Siddharth Vohra , Software Development Engineer, AWS App Runner You can now associate your AWS Web Application Firewall (WAF) Web access control lists (web ACLs) with your App Runner service - all in Copilot! AWS Web Application Firewall (WAF) helps you monitor the HTTP(S) requests that are forwarded to your web applications, and allows you to control access to your content. You can protect your application by blocking or allowing web requests based on criteria that you specify, such as the IP addresses that requests originate from or the values of query strings. Today, AWS announced WAF support for AWS App Runner . This means that you can now protect your Request-Driven Web Services with AWS WAF. This blog post will show you how to easily enable the protection using AWS Copilot. Info We posted these steps in our GitHub \"Show and tell\" discussion section as well! If you have any questions, feedbacks or requests that are related to App Runner's WAF support, feel free to drop a comment there! Prerequisite To proceed, you need to bring your own WAF Web Application Control List (ACL). If you don't have one already, you need to first create a WAF ACL with rule options for your application (See here for more on creating your own Web ACL). Once your Web ACL is ready, note down its ARN. To use the WAF Web ACL with your Request-Driven Web Service, follow the steps below. Step 1 (Optional): Create a Request-Driven Web Service If you don\u2019t already have a Request-Driven Web Service, you can run the following command to create and configure an App Runner service. copilot init \\ --svc-type \"Request-Driven Web Service\" \\ --name \"waf-example\" \\ --dockerfile path/to/Dockerfile Alternatively, you can simply run copilot svc init without any flags. Copilot will prompt for information and guide you through the process. Step 2 (Optional): Create an addons/ folder for your service Stay in the workspace where your Request-Driven Web Service is. If you followed step 1, then your working directory's structure may look like: . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u2514\u2500\u2500 manifest.yml If you don't have addons/ folder under ./copilot/<name of your Request-Driven Web Service> yet, create one. Now your workspace may look like: . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/ Step 3: Associate Web ACL with your Request-Driven Web Service using addon. In the addons folder, create two new files: waf.yml and addons.parameters.yml . Your folders would now look like this: . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 waf.yml \u2514\u2500\u2500 addons.parameters.yml Copy and paste the following content to the respective files: waf.yml addons.parameters.yml #Addon template to add WAF configuration to your App Runner service. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. ServiceARN : Type : String Default : \"\" Description : The ARN of the service being deployed. Resources : # Configuration of the WAF Web ACL you want to asscoiate with # your App Runner service. Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : <paste your WAF Web ACL ARN here> # Paste your WAF Web ACL ARN here. Parameters : ServiceARN : !Ref Service Step 4: Populate your Web ACL ARN in waf.yml Open waf.yml and replace <paste your WAF Web ACL ARN here> with the ARN of your Web ACL resource. For example: Resources : # Configuration of the WAF Web ACL you want to associate with # your App Runner service Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : arn:aws:wafv2:us-east-2:123456789138:regional/webacl/mytestwebacl/3df43564-be9f-47ce-a12b-3a577d2d8913 Step 5: Deploy your service Finally, run copilot svc deploy ! Your Request-Driven Web service will now be deployed and be associated with a WAF Web ACL! Some considerations A Web ACL can be linked to multiple services but one service can not be linked to more than one Web ACL If you already have an App Runner service deployed through Copilot, all you need to do is follow Steps 2-5, and you will be able to add a WAF Web ACL to the existing service.","title":"AWS App Runner WAF"},{"location":"blogs/apprunner-waf/#using-waf-with-app-runner-in-copilot","text":"Posted On: Feb 23, 2023 Siddharth Vohra , Software Development Engineer, AWS App Runner You can now associate your AWS Web Application Firewall (WAF) Web access control lists (web ACLs) with your App Runner service - all in Copilot! AWS Web Application Firewall (WAF) helps you monitor the HTTP(S) requests that are forwarded to your web applications, and allows you to control access to your content. You can protect your application by blocking or allowing web requests based on criteria that you specify, such as the IP addresses that requests originate from or the values of query strings. Today, AWS announced WAF support for AWS App Runner . This means that you can now protect your Request-Driven Web Services with AWS WAF. This blog post will show you how to easily enable the protection using AWS Copilot. Info We posted these steps in our GitHub \"Show and tell\" discussion section as well! If you have any questions, feedbacks or requests that are related to App Runner's WAF support, feel free to drop a comment there!","title":"Using WAF With App Runner in Copilot"},{"location":"blogs/apprunner-waf/#prerequisite","text":"To proceed, you need to bring your own WAF Web Application Control List (ACL). If you don't have one already, you need to first create a WAF ACL with rule options for your application (See here for more on creating your own Web ACL). Once your Web ACL is ready, note down its ARN. To use the WAF Web ACL with your Request-Driven Web Service, follow the steps below.","title":"Prerequisite"},{"location":"blogs/apprunner-waf/#step-1-optional-create-a-request-driven-web-service","text":"If you don\u2019t already have a Request-Driven Web Service, you can run the following command to create and configure an App Runner service. copilot init \\ --svc-type \"Request-Driven Web Service\" \\ --name \"waf-example\" \\ --dockerfile path/to/Dockerfile Alternatively, you can simply run copilot svc init without any flags. Copilot will prompt for information and guide you through the process.","title":"Step 1 (Optional): Create a Request-Driven Web Service"},{"location":"blogs/apprunner-waf/#step-2-optional-create-an-addons-folder-for-your-service","text":"Stay in the workspace where your Request-Driven Web Service is. If you followed step 1, then your working directory's structure may look like: . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u2514\u2500\u2500 manifest.yml If you don't have addons/ folder under ./copilot/<name of your Request-Driven Web Service> yet, create one. Now your workspace may look like: . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/","title":"Step 2 (Optional): Create an addons/ folder for your service"},{"location":"blogs/apprunner-waf/#step-3-associate-web-acl-with-your-request-driven-web-service-using-addon","text":"In the addons folder, create two new files: waf.yml and addons.parameters.yml . Your folders would now look like this: . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 waf.yml \u2514\u2500\u2500 addons.parameters.yml Copy and paste the following content to the respective files: waf.yml addons.parameters.yml #Addon template to add WAF configuration to your App Runner service. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. ServiceARN : Type : String Default : \"\" Description : The ARN of the service being deployed. Resources : # Configuration of the WAF Web ACL you want to asscoiate with # your App Runner service. Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : <paste your WAF Web ACL ARN here> # Paste your WAF Web ACL ARN here. Parameters : ServiceARN : !Ref Service","title":"Step 3: Associate Web ACL with your Request-Driven Web Service using addon."},{"location":"blogs/apprunner-waf/#step-4-populate-your-web-acl-arn-in-wafyml","text":"Open waf.yml and replace <paste your WAF Web ACL ARN here> with the ARN of your Web ACL resource. For example: Resources : # Configuration of the WAF Web ACL you want to associate with # your App Runner service Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : arn:aws:wafv2:us-east-2:123456789138:regional/webacl/mytestwebacl/3df43564-be9f-47ce-a12b-3a577d2d8913","title":"Step 4: Populate your Web ACL ARN in waf.yml"},{"location":"blogs/apprunner-waf/#step-5-deploy-your-service","text":"Finally, run copilot svc deploy ! Your Request-Driven Web service will now be deployed and be associated with a WAF Web ACL! Some considerations A Web ACL can be linked to multiple services but one service can not be linked to more than one Web ACL If you already have an App Runner service deployed through Copilot, all you need to do is follow Steps 2-5, and you will be able to add a WAF Web ACL to the existing service.","title":"Step 5: Deploy your service"},{"location":"blogs/release-v116/","text":"AWS Copilot v1.16: Multiple pipelines, SNS subscription filters and more Posted On: Apr 6, 2022 The AWS Copilot core team is excited to announce the Copilot v1.16 release. We welcome 7 new community developers who contributed to this release: @codekitchen , @shingos , @csantos , @rfma23 , @g-grass , @isleys , @kangere . Our public \u0441ommunity \u0441hat is growing and has over 270 people online, who help each other daily and we recently passed a milestone of over 2.1k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.16 brings with it several new features and improvements: Multiple pipelines: You can now run copilot pipeline init to create multiple CodePipelines that track separate branches in your repository. See detailed section . SNS subscription filter policies: Worker services can now filter SNS messages for each subscribed topic using the filter_policy field. See detailed section . Lots of other improvements: Add a --no-rollback flag to the deploy commands to disable automatic stack rollback in case of a deployment failure ( #3341 ). The new flag is useful for troubleshooting infrastructure change failures. For example, if a deployment fails CloudFormation will delete the logs that happened during the failure because it rolls back the stack. This flag will help preserve the logs to troubleshoot the issue, then you can rollback and update your manifest again. Add a --upload-assets flag to the package commands to push assets to ECR or S3 before generating CloudFormation templates ( #3268 ). Your pipeline buildspec can now be significantly simplified with this flag. If you'd like to regenerate the buildspec, delete the file and run copilot pipeline init again, using your existing pipeline name at the prompt. Allow additional security groups when running task run in an environment ( #3365 ). Make Docker progress updates less noisy when Copilot is running in CI environment (the environment variable CI is set to true ) ( #3345 ). Log a warning when deploying an App Runner service in a region where it's not available yet ( #3326 ). app show and env show commands now display the deployed environments for services and jobs in a table format ( #3379 , #3316 ). Customize buildspec path in the pipeline manifest with build.buildspec ( #3403 ). What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Create Multiple Pipelines per Branch Contributed by Efe Karakus , Janice Huang Having an automated release process is one of the most important parts of software delivery, so AWS Copilot wants to make setting up that process as easy as possible. Instead of running copilot deploy manually for all the environments in your application, you can run just a few copilot pipeline commands to setup a continuous delivery pipeline that automatically releases to the environments whenever you git push . The generated CodePipeline has the following basic structure: Source stage: when you push to a configured GitHub, Bitbucket, or CodeCommit repository branch, a new pipeline execution is triggered. Build: After your source code is pulled from your repository host, your service's container image is built and published to every environment's ECR repository and any input files, such as addons templates, lambda function zip files, and environment variable files, are uploaded to S3 Deploy stages: After your code is built, you can deploy to any or all of your environments, with optional post-deployment tests or manual approvals. Previously, Copilot allowed creation of only a single pipeline per git repository. Running copilot pipeline init resulted in a single pipeline manifest file; for example, the manifest file below models a CodePipeline that first releases to \u201ctest,\u201d then once the deployment succeeds, to the \u201cprod\u201d environment: $ copilot pipeline init 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for my-pipeline at 'copilot/pipeline.yml' Required follow-up actions: - Commit and push the buildspec.yml, pipeline.yml, and .workspace files of your copilot directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ cat copilot/pipeline.yml name: my-pipeline source: provider: GitHub properties: branch: main repository: https://github.com/user/repo stages: - name: test - name: prod # requires_approval: true # test_commands: [echo 'running tests', make test] This model works well for users that want every commit to the \u201cmain\u201d branch to be released across their environments. An alternative model is to create a pipeline per branch. For example, I could commit several changes to \u201cmain\u201d branch, then, once satisfied, merge the changes to the \u201ctest\u201d branch to deploy to the \u201ctest\u201d environment, and then merge to the \u201cprod\u201d branch. Until v1.16, this model was not possible because only a single pipeline manifest was supported. Starting with v1.16, Copilot users can now create multiple pipelines in their git repository so that they can have a separate pipeline per branch. For example, I can run copilot pipeline init in separate branches of my git repository without worrying about merge conflicts: $ git checkout test $ copilot pipeline init Pipeline name: repo-test 1st stage: test Your pipeline will follow branch 'test'. \u2714 Wrote the pipeline manifest for repo-test at 'copilot/pipelines/repo-test/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ git checkout prod $ copilot pipeline init Pipeline name: repo-prod 1st stage: prod Your pipeline will follow branch 'prod'. \u2714 Wrote the pipeline manifest for repo-prod at 'copilot/pipelines/repo-prod/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. Once changes are merged to the \u201ctest\u201d branch, then the \u201crepo-test\u201d pipeline will be triggered. Similarly, I can then promote the changes to the \u201cprod\u201d branch and trigger the \u201crepo-prod\u201d pipeline. You can learn more about pipelines in Copilot's docs . Define messages filter policy in Publish/Subscribe service architecture Contributed by Penghao He A common need in microservices architecture is to have an easy way to implement the robust publish/subscribe logic for passing messages between services. AWS Copilot leverages a combination of Amazon SNS and Amazon SQS services to make it easy. With AWS Copilot, you can configure single or multiple services to publish messages to named SNS topics and create worker services to receive and process those messages. AWS Copilot configures and auto-provisions required pub/sub infrastructure, including SNS topics, SQS queues, and required policies. You can read more about Publish/Subscribe architecture in AWS Copilot documentation . By default, an Amazon SNS topic subscriber receives every message published to the topic. To receive a subset of the messages, a subscriber must assign a filter policy to the topic subscription. For example, you might have a service that publishes orders to a topic: ` # manifest.yml for api service name : api type : Backend Service publish : topics : - name : ordersTopic` and a worker that processes all type of messages in ordersTopic : name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 AWS Copilot will create a subscription and provision all required infrastructure, so you can focus on writing your code. However, let\u2019s say you need to create a new worker that only processes messages of canceled orders with price value of more than $100. Starting with the Copilot v1.16 release, you don\u2019t need to filter out those messages in your code; you can simply define a SNS subscription filter policy: name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api filter_policy : store : - example_corp event : - order_canceled price_usd : - numeric : - \">=\" - 100 queue : dead_letter : tries : 5 With this filter policy in place, Amazon SNS will filter all messages by matching those attributes. You can learn more about SNS filters in Copilot's documentation . What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.16"},{"location":"blogs/release-v116/#aws-copilot-v116-multiple-pipelines-sns-subscription-filters-and-more","text":"Posted On: Apr 6, 2022 The AWS Copilot core team is excited to announce the Copilot v1.16 release. We welcome 7 new community developers who contributed to this release: @codekitchen , @shingos , @csantos , @rfma23 , @g-grass , @isleys , @kangere . Our public \u0441ommunity \u0441hat is growing and has over 270 people online, who help each other daily and we recently passed a milestone of over 2.1k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.16 brings with it several new features and improvements: Multiple pipelines: You can now run copilot pipeline init to create multiple CodePipelines that track separate branches in your repository. See detailed section . SNS subscription filter policies: Worker services can now filter SNS messages for each subscribed topic using the filter_policy field. See detailed section . Lots of other improvements: Add a --no-rollback flag to the deploy commands to disable automatic stack rollback in case of a deployment failure ( #3341 ). The new flag is useful for troubleshooting infrastructure change failures. For example, if a deployment fails CloudFormation will delete the logs that happened during the failure because it rolls back the stack. This flag will help preserve the logs to troubleshoot the issue, then you can rollback and update your manifest again. Add a --upload-assets flag to the package commands to push assets to ECR or S3 before generating CloudFormation templates ( #3268 ). Your pipeline buildspec can now be significantly simplified with this flag. If you'd like to regenerate the buildspec, delete the file and run copilot pipeline init again, using your existing pipeline name at the prompt. Allow additional security groups when running task run in an environment ( #3365 ). Make Docker progress updates less noisy when Copilot is running in CI environment (the environment variable CI is set to true ) ( #3345 ). Log a warning when deploying an App Runner service in a region where it's not available yet ( #3326 ). app show and env show commands now display the deployed environments for services and jobs in a table format ( #3379 , #3316 ). Customize buildspec path in the pipeline manifest with build.buildspec ( #3403 ).","title":"AWS Copilot v1.16: Multiple pipelines, SNS subscription filters and more"},{"location":"blogs/release-v116/#whats-aws-copilot","text":"The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"What\u2019s AWS Copilot?"},{"location":"blogs/release-v116/#create-multiple-pipelines-per-branch","text":"Contributed by Efe Karakus , Janice Huang Having an automated release process is one of the most important parts of software delivery, so AWS Copilot wants to make setting up that process as easy as possible. Instead of running copilot deploy manually for all the environments in your application, you can run just a few copilot pipeline commands to setup a continuous delivery pipeline that automatically releases to the environments whenever you git push . The generated CodePipeline has the following basic structure: Source stage: when you push to a configured GitHub, Bitbucket, or CodeCommit repository branch, a new pipeline execution is triggered. Build: After your source code is pulled from your repository host, your service's container image is built and published to every environment's ECR repository and any input files, such as addons templates, lambda function zip files, and environment variable files, are uploaded to S3 Deploy stages: After your code is built, you can deploy to any or all of your environments, with optional post-deployment tests or manual approvals. Previously, Copilot allowed creation of only a single pipeline per git repository. Running copilot pipeline init resulted in a single pipeline manifest file; for example, the manifest file below models a CodePipeline that first releases to \u201ctest,\u201d then once the deployment succeeds, to the \u201cprod\u201d environment: $ copilot pipeline init 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for my-pipeline at 'copilot/pipeline.yml' Required follow-up actions: - Commit and push the buildspec.yml, pipeline.yml, and .workspace files of your copilot directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ cat copilot/pipeline.yml name: my-pipeline source: provider: GitHub properties: branch: main repository: https://github.com/user/repo stages: - name: test - name: prod # requires_approval: true # test_commands: [echo 'running tests', make test] This model works well for users that want every commit to the \u201cmain\u201d branch to be released across their environments. An alternative model is to create a pipeline per branch. For example, I could commit several changes to \u201cmain\u201d branch, then, once satisfied, merge the changes to the \u201ctest\u201d branch to deploy to the \u201ctest\u201d environment, and then merge to the \u201cprod\u201d branch. Until v1.16, this model was not possible because only a single pipeline manifest was supported. Starting with v1.16, Copilot users can now create multiple pipelines in their git repository so that they can have a separate pipeline per branch. For example, I can run copilot pipeline init in separate branches of my git repository without worrying about merge conflicts: $ git checkout test $ copilot pipeline init Pipeline name: repo-test 1st stage: test Your pipeline will follow branch 'test'. \u2714 Wrote the pipeline manifest for repo-test at 'copilot/pipelines/repo-test/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ git checkout prod $ copilot pipeline init Pipeline name: repo-prod 1st stage: prod Your pipeline will follow branch 'prod'. \u2714 Wrote the pipeline manifest for repo-prod at 'copilot/pipelines/repo-prod/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. Once changes are merged to the \u201ctest\u201d branch, then the \u201crepo-test\u201d pipeline will be triggered. Similarly, I can then promote the changes to the \u201cprod\u201d branch and trigger the \u201crepo-prod\u201d pipeline. You can learn more about pipelines in Copilot's docs .","title":"Create Multiple Pipelines per Branch"},{"location":"blogs/release-v116/#define-messages-filter-policy-in-publishsubscribe-service-architecture","text":"Contributed by Penghao He A common need in microservices architecture is to have an easy way to implement the robust publish/subscribe logic for passing messages between services. AWS Copilot leverages a combination of Amazon SNS and Amazon SQS services to make it easy. With AWS Copilot, you can configure single or multiple services to publish messages to named SNS topics and create worker services to receive and process those messages. AWS Copilot configures and auto-provisions required pub/sub infrastructure, including SNS topics, SQS queues, and required policies. You can read more about Publish/Subscribe architecture in AWS Copilot documentation . By default, an Amazon SNS topic subscriber receives every message published to the topic. To receive a subset of the messages, a subscriber must assign a filter policy to the topic subscription. For example, you might have a service that publishes orders to a topic: ` # manifest.yml for api service name : api type : Backend Service publish : topics : - name : ordersTopic` and a worker that processes all type of messages in ordersTopic : name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 AWS Copilot will create a subscription and provision all required infrastructure, so you can focus on writing your code. However, let\u2019s say you need to create a new worker that only processes messages of canceled orders with price value of more than $100. Starting with the Copilot v1.16 release, you don\u2019t need to filter out those messages in your code; you can simply define a SNS subscription filter policy: name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api filter_policy : store : - example_corp event : - order_canceled price_usd : - numeric : - \">=\" - 100 queue : dead_letter : tries : 5 With this filter policy in place, Amazon SNS will filter all messages by matching those attributes. You can learn more about SNS filters in Copilot's documentation .","title":"Define messages filter policy in Publish/Subscribe service architecture"},{"location":"blogs/release-v116/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v117/","text":"AWS Copilot v1.17: Tracing for Request-Driven Web Services Posted On: Apr 12, 2022 It's only been a week since v1.16! The AWS Copilot core team, together with AWS App Runner, is announcing support for integrated tracing using AWS X-Ray with OpenTelemetry. To learn more about App Runner's release, see here . For enabling tracing for your Request-Driven Web Services in Copilot, see detailed section . Special shout-out to @kangere who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 270 people online, who help each other daily. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.17 brings a brand-new feature and several improvements: Tracing for Request-Driven Web Service: With the release of AWS X-Ray tracing support for AWS App Runner services, you can now add observability.tracing: awsxray in your Request-Driven Web Service's manifest to send your traces to AWS X-Ray. See detailed section . Allow disabling of Scheduled Jobs : Easily toggle your Scheduled Job off by setting your schedule to \"none\" in your manifest, disabling the event rule. ( #3447 ) on : schedule : \"none\" Increased visibility for progress trackers: Now progress trackers are showing more information, such as the creation of HTTP listener rules. ( #3430 & #3432 ). Bug fix: Remove color formatting of suggested pipeline names ( #3437 ). There is no breaking change in this release. What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Send Your Request-Driven Web Service's Traces to AWS X-Ray Contributed by Wanxian Yang You can now send traces generated by your Request-Driven Web Services to AWS X-Ray. This allows you to visualize the service map and traces through the Amazon CloudWatch console or AWS X-Ray console. To use this feature, your service needs to be first instrumented with AWS Distro for OpenTelemetry . You can either manually instrument your service, or for a quicker, easier set up, auto-instrument your service through your Dockerfile without changing the application code. After instrumenting your service, simply modify your Request-Driven Web Service's manifest to include the observability configuration: observability : tracing : awsxray After running copilot svc deploy , traces generated by your service will get sent to AWS X-Ray, allowing you to measure the current state of your services easily. What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.17"},{"location":"blogs/release-v117/#aws-copilot-v117-tracing-for-request-driven-web-services","text":"Posted On: Apr 12, 2022 It's only been a week since v1.16! The AWS Copilot core team, together with AWS App Runner, is announcing support for integrated tracing using AWS X-Ray with OpenTelemetry. To learn more about App Runner's release, see here . For enabling tracing for your Request-Driven Web Services in Copilot, see detailed section . Special shout-out to @kangere who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 270 people online, who help each other daily. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.17 brings a brand-new feature and several improvements: Tracing for Request-Driven Web Service: With the release of AWS X-Ray tracing support for AWS App Runner services, you can now add observability.tracing: awsxray in your Request-Driven Web Service's manifest to send your traces to AWS X-Ray. See detailed section . Allow disabling of Scheduled Jobs : Easily toggle your Scheduled Job off by setting your schedule to \"none\" in your manifest, disabling the event rule. ( #3447 ) on : schedule : \"none\" Increased visibility for progress trackers: Now progress trackers are showing more information, such as the creation of HTTP listener rules. ( #3430 & #3432 ). Bug fix: Remove color formatting of suggested pipeline names ( #3437 ). There is no breaking change in this release.","title":"AWS Copilot v1.17: Tracing for Request-Driven Web Services"},{"location":"blogs/release-v117/#whats-aws-copilot","text":"The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"What\u2019s AWS Copilot?"},{"location":"blogs/release-v117/#send-your-request-driven-web-services-traces-to-aws-x-ray","text":"Contributed by Wanxian Yang You can now send traces generated by your Request-Driven Web Services to AWS X-Ray. This allows you to visualize the service map and traces through the Amazon CloudWatch console or AWS X-Ray console. To use this feature, your service needs to be first instrumented with AWS Distro for OpenTelemetry . You can either manually instrument your service, or for a quicker, easier set up, auto-instrument your service through your Dockerfile without changing the application code. After instrumenting your service, simply modify your Request-Driven Web Service's manifest to include the observability configuration: observability : tracing : awsxray After running copilot svc deploy , traces generated by your service will get sent to AWS X-Ray, allowing you to measure the current state of your services easily.","title":"Send Your Request-Driven Web Service's Traces to AWS X-Ray"},{"location":"blogs/release-v117/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v118/","text":"AWS Copilot v1.18: Certificate import, ordering deployments in a pipeline, and more The AWS Copilot core team is announcing the Copilot v1.18 release. Special thanks to @corey-cole who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has almost 280 people online and over 2.2k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.18 brings several new features and improvements: Certificate import: You can now run copilot env init --import-cert-arns to import validated ACM certificates to your environment's load balancer listener. See detailed section . Ordering deployments in a pipeline: You can now control the order in which services or jobs get deployed in a continuous delivery pipeline. See detailed section . Additional pipeline improvements: Besides deployment orders, you can now limit which services or jobs to deploy in your pipeline or deploy custom cloudformation stacks in a pipeline. See detailed section . \"recreate\" strategy for faster redeployments: You can now specify \"recreate\" deployment strategy so that ECS will stop old tasks in your service before starting new ones. See detailed section . Tracing for Load Balanced Web, Worker, and Backend Service: To collect and ship traces to AWS X-Ray from ECS tasks, we are introducing observability.tracing configuration in the manifest to add an AWS Distro for OpenTelemetry Collector sidecar container. See detailed section . What\u2019s AWS Copilot? Posted On: May 9, 2022 The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Certificate Import Contributed by Penghao He If you have domains managed outside of Route 53, or want to enable HTTPS without having a domain associated with your application, you can now use the new --import-cert-arns flag to import any validated certificates when creating your environments. $ copilot env init --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/87654321-4321-4321-4321-210987654321 For example, one of the certificates has example.com as its domain and *.example.com as a subject alternative name (SAN): Sample certificate { \"Certificate\" : { \"CertificateArn\" : \"arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012\" , \"DomainName\" : \"example.com\" , \"SubjectAlternativeNames\" : [ \"*.example.com\" ], \"DomainValidationOptions\" : [ { \"DomainName\" : \"example.com\" , \"ValidationDomain\" : \"example.com\" , \"ValidationStatus\" : \"SUCCESS\" , \"ResourceRecord\" : { \"Name\" : \"_45c8aa9ac85568e905a6c3852e62ebc6.example.com.\" , \"Type\" : \"CNAME\" , \"Value\" : \"_f8be688050b7d23184863690b3d4baa8.xrchbtpdjs.acm-validations.aws.\" }, \"ValidationMethod\" : \"DNS\" } ], ... } Then, you need to specify aliases that are valid against any of the imported certificates in a Load Balanced Web Service manifest : name : frontend type : Load Balanced Web Service http : path : 'frontend' alias : v1.example.com Attention Specifying http.alias in service manifests is required for deploying services to an environment with imported certificates. After the deployment, add the DNS of the Application Load Balancer (ALB) created in the environment as an A record to where your alias domain is hosted. For example, if your alias domain is hosted in Route 53: Sample Route 53 A Record { \"Name\" : \"v1.example.com.\" , \"Type\" : \"A\" , \"AliasTarget\" : { \"HostedZoneId\" : \"Z1H1FL3HABSF5\" , \"DNSName\" : \"demo-publi-1d328e3bqag4r-1914228528.us-west-2.elb.amazonaws.com.\" , \"EvaluateTargetHealth\" : true } } Now, your service has HTTPS enabled using your own certificates and can be accessed via https://v1.example.com ! Controlling Order of Deployments in a Pipeline Contributed by Efe Karakus Copilot provides the copilot pipeline commands to create continuous delivery pipelines to automatically release microservices in your git repository. Prior to v1.18, all services and jobs defined in your git repository got deployed in parallel for each stage. For example, given a monorepo with three microservices: frontend , orders , warehouse . All of them got deployed at the same time to the test and prod environments: Pipeline Pipeline Manifest Repository Layout name : release source : provider : GitHub properties : branch : main repository : https://github.com/user/repo stages : - name : test - name : prod requires_approval : true copilot \u251c\u2500\u2500 frontend \u2502 \u2514\u2500\u2500 manifest.yml \u251c\u2500\u2500 orders \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 warehouse \u2514\u2500\u2500 manifest.yml Starting with v1.18, you can control the order of your deployments in your pipeline with the new deployments field . stages : - name : test deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] - name : prod require_approval : true deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] With the manifest above, we're declaring that the orders and warehouse services should be deployed prior to the frontend so that clients can't send new API requests before the downstream services are ready to accept them. Copilot figures out in which order the stacks should be deployed, and the resulting CodePipeline looks as follows: Additional pipeline improvements There are a few other enhancements that come with the new deployments field: 1. It is now possible for monorepos to configure which services or jobs to deploy in a pipeline. For example, I can limit the pipeline to only deploy the orders microservice: deployments : orders : 2. Your pipelines can now deploy standalone CloudFormation templates that are not generated by Copilot. For example, if we have a repository structured as follows: copilot \u251c\u2500\u2500 api \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 templates \u251c\u2500\u2500 cognito.params.json \u2514\u2500\u2500 cognito.yml Then I can leverage the new stack_name , template_path and template_config fields under deployments to specify deploying the cognito cloudformation stack in my pipeline: deployments : cognito : stack_name : myapp-test-cognito template_path : infrastructure/cognito.yml template_config : infrastructure/cognito.params.json api : The final step would be modifying the copilot generated buildspec to copy the files under copilot/templates to infrastructure/ with cp -r copilot/templates infrastructure/ so that the template_path and template_config fields point to existing files. \"recreate\" Strategy for Faster Redeployments Contributed by Parag Bhingre Alert Due to the possible service downtime caused by \"recreate\", we do not recommend using it for your production services. Before v1.18, a Copilot ECS-based service (Load Balanced Web Service, Backend Service, and Worker Service) redeployment always spun up new tasks, waited for them to be stable, and then stopped the old tasks. In order to support faster redeployments for ECS-based services in the development stage, users can specify \"recreate\" as the deployment strategy in the service manifest: deployment : rolling : recreate Under the hood, Copilot sets minimumHealthyPercent and maximumPercent to 0 and 100 respectively (defaults are 100 and 200 ), so that old tasks are stopped before spinning up any new tasks. Tracing for Load Balanced Web Service, Worker Service, and Backend Service Contributed by Danny Randall In v1.17 , Copilot launched support for sending traces from your Request-Driven Web Services to AWS X-Ray . Now, you can easily export traces from your Load Balanced Web, Worker, and Backend services to X-Ray by configuring observability in your service's manifest: observability : tracing : awsxray For these service types, Copilot will deploy an AWS Distro for OpenTelemetry Collector sidecar container to collect traces from your service and export them to X-Ray. After instrumenting your service to send traces, you can view the end-to-end journey of requests through your services to aid in debugging and monitoring performance of your application. Read our documentation on Observability to learn more about tracing and get started! What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.18"},{"location":"blogs/release-v118/#aws-copilot-v118-certificate-import-ordering-deployments-in-a-pipeline-and-more","text":"The AWS Copilot core team is announcing the Copilot v1.18 release. Special thanks to @corey-cole who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has almost 280 people online and over 2.2k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.18 brings several new features and improvements: Certificate import: You can now run copilot env init --import-cert-arns to import validated ACM certificates to your environment's load balancer listener. See detailed section . Ordering deployments in a pipeline: You can now control the order in which services or jobs get deployed in a continuous delivery pipeline. See detailed section . Additional pipeline improvements: Besides deployment orders, you can now limit which services or jobs to deploy in your pipeline or deploy custom cloudformation stacks in a pipeline. See detailed section . \"recreate\" strategy for faster redeployments: You can now specify \"recreate\" deployment strategy so that ECS will stop old tasks in your service before starting new ones. See detailed section . Tracing for Load Balanced Web, Worker, and Backend Service: To collect and ship traces to AWS X-Ray from ECS tasks, we are introducing observability.tracing configuration in the manifest to add an AWS Distro for OpenTelemetry Collector sidecar container. See detailed section .","title":"AWS Copilot v1.18: Certificate import, ordering deployments in a pipeline, and more"},{"location":"blogs/release-v118/#whats-aws-copilot","text":"Posted On: May 9, 2022 The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"What\u2019s AWS Copilot?"},{"location":"blogs/release-v118/#certificate-import","text":"Contributed by Penghao He If you have domains managed outside of Route 53, or want to enable HTTPS without having a domain associated with your application, you can now use the new --import-cert-arns flag to import any validated certificates when creating your environments. $ copilot env init --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/87654321-4321-4321-4321-210987654321 For example, one of the certificates has example.com as its domain and *.example.com as a subject alternative name (SAN): Sample certificate { \"Certificate\" : { \"CertificateArn\" : \"arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012\" , \"DomainName\" : \"example.com\" , \"SubjectAlternativeNames\" : [ \"*.example.com\" ], \"DomainValidationOptions\" : [ { \"DomainName\" : \"example.com\" , \"ValidationDomain\" : \"example.com\" , \"ValidationStatus\" : \"SUCCESS\" , \"ResourceRecord\" : { \"Name\" : \"_45c8aa9ac85568e905a6c3852e62ebc6.example.com.\" , \"Type\" : \"CNAME\" , \"Value\" : \"_f8be688050b7d23184863690b3d4baa8.xrchbtpdjs.acm-validations.aws.\" }, \"ValidationMethod\" : \"DNS\" } ], ... } Then, you need to specify aliases that are valid against any of the imported certificates in a Load Balanced Web Service manifest : name : frontend type : Load Balanced Web Service http : path : 'frontend' alias : v1.example.com Attention Specifying http.alias in service manifests is required for deploying services to an environment with imported certificates. After the deployment, add the DNS of the Application Load Balancer (ALB) created in the environment as an A record to where your alias domain is hosted. For example, if your alias domain is hosted in Route 53: Sample Route 53 A Record { \"Name\" : \"v1.example.com.\" , \"Type\" : \"A\" , \"AliasTarget\" : { \"HostedZoneId\" : \"Z1H1FL3HABSF5\" , \"DNSName\" : \"demo-publi-1d328e3bqag4r-1914228528.us-west-2.elb.amazonaws.com.\" , \"EvaluateTargetHealth\" : true } } Now, your service has HTTPS enabled using your own certificates and can be accessed via https://v1.example.com !","title":"Certificate Import"},{"location":"blogs/release-v118/#controlling-order-of-deployments-in-a-pipeline","text":"Contributed by Efe Karakus Copilot provides the copilot pipeline commands to create continuous delivery pipelines to automatically release microservices in your git repository. Prior to v1.18, all services and jobs defined in your git repository got deployed in parallel for each stage. For example, given a monorepo with three microservices: frontend , orders , warehouse . All of them got deployed at the same time to the test and prod environments: Pipeline Pipeline Manifest Repository Layout name : release source : provider : GitHub properties : branch : main repository : https://github.com/user/repo stages : - name : test - name : prod requires_approval : true copilot \u251c\u2500\u2500 frontend \u2502 \u2514\u2500\u2500 manifest.yml \u251c\u2500\u2500 orders \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 warehouse \u2514\u2500\u2500 manifest.yml Starting with v1.18, you can control the order of your deployments in your pipeline with the new deployments field . stages : - name : test deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] - name : prod require_approval : true deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] With the manifest above, we're declaring that the orders and warehouse services should be deployed prior to the frontend so that clients can't send new API requests before the downstream services are ready to accept them. Copilot figures out in which order the stacks should be deployed, and the resulting CodePipeline looks as follows:","title":"Controlling Order of Deployments in a Pipeline"},{"location":"blogs/release-v118/#additional-pipeline-improvements","text":"There are a few other enhancements that come with the new deployments field: 1. It is now possible for monorepos to configure which services or jobs to deploy in a pipeline. For example, I can limit the pipeline to only deploy the orders microservice: deployments : orders : 2. Your pipelines can now deploy standalone CloudFormation templates that are not generated by Copilot. For example, if we have a repository structured as follows: copilot \u251c\u2500\u2500 api \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 templates \u251c\u2500\u2500 cognito.params.json \u2514\u2500\u2500 cognito.yml Then I can leverage the new stack_name , template_path and template_config fields under deployments to specify deploying the cognito cloudformation stack in my pipeline: deployments : cognito : stack_name : myapp-test-cognito template_path : infrastructure/cognito.yml template_config : infrastructure/cognito.params.json api : The final step would be modifying the copilot generated buildspec to copy the files under copilot/templates to infrastructure/ with cp -r copilot/templates infrastructure/ so that the template_path and template_config fields point to existing files.","title":"Additional pipeline improvements"},{"location":"blogs/release-v118/#recreate-strategy-for-faster-redeployments","text":"Contributed by Parag Bhingre Alert Due to the possible service downtime caused by \"recreate\", we do not recommend using it for your production services. Before v1.18, a Copilot ECS-based service (Load Balanced Web Service, Backend Service, and Worker Service) redeployment always spun up new tasks, waited for them to be stable, and then stopped the old tasks. In order to support faster redeployments for ECS-based services in the development stage, users can specify \"recreate\" as the deployment strategy in the service manifest: deployment : rolling : recreate Under the hood, Copilot sets minimumHealthyPercent and maximumPercent to 0 and 100 respectively (defaults are 100 and 200 ), so that old tasks are stopped before spinning up any new tasks.","title":"\"recreate\" Strategy for Faster Redeployments"},{"location":"blogs/release-v118/#tracing-for-load-balanced-web-service-worker-service-and-backend-service","text":"Contributed by Danny Randall In v1.17 , Copilot launched support for sending traces from your Request-Driven Web Services to AWS X-Ray . Now, you can easily export traces from your Load Balanced Web, Worker, and Backend services to X-Ray by configuring observability in your service's manifest: observability : tracing : awsxray For these service types, Copilot will deploy an AWS Distro for OpenTelemetry Collector sidecar container to collect traces from your service and export them to X-Ray. After instrumenting your service to send traces, you can view the end-to-end journey of requests through your services to aid in debugging and monitoring performance of your application. Read our documentation on Observability to learn more about tracing and get started!","title":"Tracing for Load Balanced Web Service, Worker Service, and Backend Service"},{"location":"blogs/release-v118/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v119/","text":"AWS Copilot v1.19: Internal Load Balancers, Subnet Placement Specification, and more Posted On: Jun 13, 2022 The AWS Copilot core team is excited to announce the v1.19 release! Special thanks to @gautam-nutalapati and @jonstacks , who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has nearly 300 people online, who help each other daily. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.19 brings brand-new features and several improvements: Load Balancing for Backend Services: You can now add an Application Load Balancer that is internal (as opposed to 'internet-facing', like those created for Load Balanced Web Services). See detailed section . Subnet Placement Specification : You now have even finer-grained control over where your ECS tasks are launched. Beyond public and private subnet placement, you can now tell Copilot specific subnets. Simply add the IDs of the desired subnets to your workload manifest. # in copilot/{service name}/manifest.yml network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] Hosted Zones\u2013A Record Management : You can now list, along with aliases, the IDs of hosted zones in your service manifest. Copilot will handle the insertion of A records upon deployment to an environment with imported certificates. ( #3608 , #3643 ) # single alias and hosted zone http : alias : example.com hosted_zone : HostedZoneID1 # multiple aliases that share a hosted zone http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 # multiple aliases, some of which use the top-level hosted zone http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2 Access to Created Private Route Tables : Copilot now exports private route table IDs from CloudFormation environment stacks. Use them to create VPC gateway endpoints with addons . ( #3611 ) port for Target Group Health Checks : With the new port field, you can configure a non-default port for health checks, one different than that for requests from the load balancer. ( #3548 ) http : path : '/' healthcheck : port : 8080 Bug fixes: Preserve tags applied by app init --resource-tags when services are deleted from an application ( #3582 ) Fix regression when enabling autoscaling fields for Load Balanced Web Services with Network Load Balancers ( #3578 ) Enable copilot svc exec for Fargate Windows tasks ( #3566 ) There are no breaking changes in this release. What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Internal Load Balancers Contributed by Janice Huang and Danny Randall By configuring a few things when you initiate your Copilot environment and workload, you can now create an internal load balancer , whose nodes have only private IP addresses. The internal load balancer is an environment-level resource, to be shared among other permitted services. When you run copilot env init , you can import some specific resources to support the ALB. For services with https capability, use the --import-cert-arns flag to import the ARNs of your existing private certificates. For now, Copilot will associate imported certs with an internal ALB only if the environment's VPC has no public subnets, so import only private subnets. If you'd like your ALB to receive ingress traffic within the environment VPC, use the --internal-alb-allow-vpc-ingress flag; otherwise, by default, access to the internal ALB will be limited to only Copilot-created services within the environment. The only service type that you can place behind an internal load balancer is a Backend Service . To tell Copilot to generate an internal ALB in the environment in which you deploy this service, add the http field to your Backend Service's workload manifest: # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private # for https alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 For more, read our documentation on Internal ALBs ! What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.19"},{"location":"blogs/release-v119/#aws-copilot-v119-internal-load-balancers-subnet-placement-specification-and-more","text":"Posted On: Jun 13, 2022 The AWS Copilot core team is excited to announce the v1.19 release! Special thanks to @gautam-nutalapati and @jonstacks , who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has nearly 300 people online, who help each other daily. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.19 brings brand-new features and several improvements: Load Balancing for Backend Services: You can now add an Application Load Balancer that is internal (as opposed to 'internet-facing', like those created for Load Balanced Web Services). See detailed section . Subnet Placement Specification : You now have even finer-grained control over where your ECS tasks are launched. Beyond public and private subnet placement, you can now tell Copilot specific subnets. Simply add the IDs of the desired subnets to your workload manifest. # in copilot/{service name}/manifest.yml network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] Hosted Zones\u2013A Record Management : You can now list, along with aliases, the IDs of hosted zones in your service manifest. Copilot will handle the insertion of A records upon deployment to an environment with imported certificates. ( #3608 , #3643 ) # single alias and hosted zone http : alias : example.com hosted_zone : HostedZoneID1 # multiple aliases that share a hosted zone http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 # multiple aliases, some of which use the top-level hosted zone http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2 Access to Created Private Route Tables : Copilot now exports private route table IDs from CloudFormation environment stacks. Use them to create VPC gateway endpoints with addons . ( #3611 ) port for Target Group Health Checks : With the new port field, you can configure a non-default port for health checks, one different than that for requests from the load balancer. ( #3548 ) http : path : '/' healthcheck : port : 8080 Bug fixes: Preserve tags applied by app init --resource-tags when services are deleted from an application ( #3582 ) Fix regression when enabling autoscaling fields for Load Balanced Web Services with Network Load Balancers ( #3578 ) Enable copilot svc exec for Fargate Windows tasks ( #3566 ) There are no breaking changes in this release.","title":"AWS Copilot v1.19: Internal Load Balancers, Subnet Placement Specification, and more"},{"location":"blogs/release-v119/#whats-aws-copilot","text":"The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code in a single operation. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro services creation and operation, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"What\u2019s AWS Copilot?"},{"location":"blogs/release-v119/#internal-load-balancers","text":"Contributed by Janice Huang and Danny Randall By configuring a few things when you initiate your Copilot environment and workload, you can now create an internal load balancer , whose nodes have only private IP addresses. The internal load balancer is an environment-level resource, to be shared among other permitted services. When you run copilot env init , you can import some specific resources to support the ALB. For services with https capability, use the --import-cert-arns flag to import the ARNs of your existing private certificates. For now, Copilot will associate imported certs with an internal ALB only if the environment's VPC has no public subnets, so import only private subnets. If you'd like your ALB to receive ingress traffic within the environment VPC, use the --internal-alb-allow-vpc-ingress flag; otherwise, by default, access to the internal ALB will be limited to only Copilot-created services within the environment. The only service type that you can place behind an internal load balancer is a Backend Service . To tell Copilot to generate an internal ALB in the environment in which you deploy this service, add the http field to your Backend Service's workload manifest: # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private # for https alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 For more, read our documentation on Internal ALBs !","title":"Internal Load Balancers"},{"location":"blogs/release-v119/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v120/","text":"AWS Copilot v1.20: To Environment Manifests and Beyond! Posted On: Jul 19, 2022 The AWS Copilot core team is announcing the Copilot v1.20 release. Special thanks to @gautam-nutalapati , @codekitchen , and @kangere who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and over 2.3k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.20 brings several new features and improvements: Environment manifests : You can now create and update environments with a manifest file bringing all the benefits of infrastructure as code to environments. See detailed walkthrough for how to migrate your existing environments. Autoscaling Cooldown Support : You can now specify autoscaling cooldowns in the service manifest. Additional policy to build role : You can now specify an additional policy for the CodeBuild Build Project Role through the pipeline manifest field additional_policy . See detailed walkthrough for how to specify an additional policy document to add to the build project role. (#3709) Invoke a scheduled job : You can now execute an existing scheduled job ad hoc using the new copilot job run command. (#3692) Deny default security group : Add an option deny_default to security_groups in service manifests to remove the EnvironmentSecurityGroup ingress that is applied by default. (#3682) Predictable aliases for Backend Services with an ALB : If you don't specify an alias for your Backend Services that have an internal ALB configured, they will now be reachable with the host name svc.env.app.internal instead of the default ALB host name. ( #3668 ) What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Environment Manifest Prior to v1.20, clients could not update their environments with additional configuration. For example, if your environment wasn't associated with a domain, users would need to run env init --name copy --import-cert-arns to create a new environment with certificates and then tear down the old one. Starting with this release, users can modify their environments using the manifest without having to recreate them. Moving forward new environment resources will be configured with the manifest.yml file instead of flags in the env init command. Walkthrough [1] copilot env init no longer immediately deploys an environment in your account. Instead, the command writes a manifest.yml file to your local workspace. Running copilot env init $ copilot env init Environment name: prod-pdx Credential source: [profile default] Default environment configuration? Yes, use default. \u2714 Wrote the manifest for environment prod-pdx at copilot/environments/prod-pdx/manifest.yml ...additional output messages $ cat copilot/environments/prod-pdx/manifest.yml # The manifest for the \"prod-pdx\" environment. # Read the full specification for the \"Environment\" type at: # https://aws.github.io/copilot-cli/docs/manifest/environment/ # Your environment name will be used in naming your resources like VPC, cluster, etc. name: prod-pdx type: Environment # Import your own VPC and subnets or configure how they should be created. # network: # vpc: # id: # Configure the load balancers in your environment, once created. # http: # public: # private: # Configure observability for your environment resources. observability: container_insights: false [2] After modifying the manifest, you can run the new copilot env deploy command to create or update the environment stack. Running copilot env deploy $ copilot env deploy Name: prod-pdx \u2714 Proposing infrastructure changes for the demo-prod-pdx environment. - Creating the infrastructure for the demo-prod-pdx environment. [update complete] [110.6s] - An ECS cluster to group your services [create complete] [9.1s] - A security group to allow your containers to talk to each other [create complete] [6.3s] - An Internet Gateway to connect to the public internet [create complete] [18.5s] - Private subnet 1 for resources with no internet access [create complete] [6.3s] - Private subnet 2 for resources with no internet access [create complete] [6.3s] - A custom route table that directs network traffic for the public subnets [create complete] [15.5s] - Public subnet 1 for resources that can access the internet [create complete] [6.3s] - Public subnet 2 for resources that can access the internet [create complete] [6.3s] - A private DNS namespace for discovering services within the environment [create complete] [47.2s] - A Virtual Private Cloud to control networking of your AWS resources [create complete] [43.6s] And that's it \ud83d\ude80! The workflow is identical to how copilot svc and copilot job commands work. Migrating Existing Environments To create a manifest.yml file for existing environments, Copilot introduced a new --manifest flag to copilot env show . In this example, we'll generate a manifest file for an existing \"prod\" environment. [1] First, in your current git repository or in a new one, create the mandatory directory structure for environment manifests. Directory structure for prod # 1 . Navigate to your git repository. $ cd my-sample-repo/ # 2 . Create the directory for the \"prod\" environment $ mkdir -p copilot/environments/prod [2] Run the copilot env show --manifest command to generate a manifest and redirect it to the \"prod\" folder. Generate manifest $ copilot env show -n prod --manifest > copilot/environments/prod/manifest.yml And that's it! you can now modify the manifest file with any fields in the specification and run copilot env deploy to update your stack. Continuous Delivery Finally, Copilot provides the same continuous delivery pipeline workflow for environments as services or jobs. [1] Once a manifest file is created , you can run the existing copilot pipeline init command to create a pipeline manifest.yml file to describe deployment stages, and a buildspec.yml used in the \"Build\" stage to generate the CloudFormation configuration files. Create pipeline manifest and buildspec $ copilot pipeline init Pipeline name: env-pipeline What type of continuous delivery pipeline is this? Environments 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for copilot-pipeline-test at 'copilot/pipelines/env-pipeline/manifest.yml' \u2714 Wrote the buildspec for the pipeline's build stage at 'copilot/pipelines/env-pipeline/buildspec.yml' [2] Run copilot pipeline deploy to create or update the AWS CodePipeline stack. Create pipeline $ copilot pipeline deploy Are you sure you want to redeploy an existing pipeline: env-pipeline? Yes \u2714 Successfully deployed pipeline: env-pipeline Autoscaling Cooldown Support A small addition to our service manifests: the ability to configure autoscaling cooldown periods. For Load Balanced , Backend , and Worker Services, you can now configure their autoscaling fields under count to have custom cooldown periods. Previously, each scaling metric such as cpu_percentage had a fixed 'in' cooldown of 120 secs and 'out' cooldown of 60 seconds. Now, you can set a global cooldown period: Using general autoscaling cooldowns count: range: 1-10 cooldown: in: 30s out: 30s cpu_percentage: 50 Alternatively, you can set individual cooldowns that override the general ones: Using specific autoscaling cooldowns count: range: 1-10 cooldown: in: 2m out: 2m cpu_percentage: 50 requests: value: 10 cooldown: in: 30s out: 30s What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.20"},{"location":"blogs/release-v120/#aws-copilot-v120-to-environment-manifests-and-beyond","text":"Posted On: Jul 19, 2022 The AWS Copilot core team is announcing the Copilot v1.20 release. Special thanks to @gautam-nutalapati , @codekitchen , and @kangere who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and over 2.3k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.20 brings several new features and improvements: Environment manifests : You can now create and update environments with a manifest file bringing all the benefits of infrastructure as code to environments. See detailed walkthrough for how to migrate your existing environments. Autoscaling Cooldown Support : You can now specify autoscaling cooldowns in the service manifest. Additional policy to build role : You can now specify an additional policy for the CodeBuild Build Project Role through the pipeline manifest field additional_policy . See detailed walkthrough for how to specify an additional policy document to add to the build project role. (#3709) Invoke a scheduled job : You can now execute an existing scheduled job ad hoc using the new copilot job run command. (#3692) Deny default security group : Add an option deny_default to security_groups in service manifests to remove the EnvironmentSecurityGroup ingress that is applied by default. (#3682) Predictable aliases for Backend Services with an ALB : If you don't specify an alias for your Backend Services that have an internal ALB configured, they will now be reachable with the host name svc.env.app.internal instead of the default ALB host name. ( #3668 ) What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.20: To Environment Manifests and Beyond!"},{"location":"blogs/release-v120/#environment-manifest","text":"Prior to v1.20, clients could not update their environments with additional configuration. For example, if your environment wasn't associated with a domain, users would need to run env init --name copy --import-cert-arns to create a new environment with certificates and then tear down the old one. Starting with this release, users can modify their environments using the manifest without having to recreate them. Moving forward new environment resources will be configured with the manifest.yml file instead of flags in the env init command.","title":"Environment Manifest"},{"location":"blogs/release-v120/#walkthrough","text":"[1] copilot env init no longer immediately deploys an environment in your account. Instead, the command writes a manifest.yml file to your local workspace. Running copilot env init $ copilot env init Environment name: prod-pdx Credential source: [profile default] Default environment configuration? Yes, use default. \u2714 Wrote the manifest for environment prod-pdx at copilot/environments/prod-pdx/manifest.yml ...additional output messages $ cat copilot/environments/prod-pdx/manifest.yml # The manifest for the \"prod-pdx\" environment. # Read the full specification for the \"Environment\" type at: # https://aws.github.io/copilot-cli/docs/manifest/environment/ # Your environment name will be used in naming your resources like VPC, cluster, etc. name: prod-pdx type: Environment # Import your own VPC and subnets or configure how they should be created. # network: # vpc: # id: # Configure the load balancers in your environment, once created. # http: # public: # private: # Configure observability for your environment resources. observability: container_insights: false [2] After modifying the manifest, you can run the new copilot env deploy command to create or update the environment stack. Running copilot env deploy $ copilot env deploy Name: prod-pdx \u2714 Proposing infrastructure changes for the demo-prod-pdx environment. - Creating the infrastructure for the demo-prod-pdx environment. [update complete] [110.6s] - An ECS cluster to group your services [create complete] [9.1s] - A security group to allow your containers to talk to each other [create complete] [6.3s] - An Internet Gateway to connect to the public internet [create complete] [18.5s] - Private subnet 1 for resources with no internet access [create complete] [6.3s] - Private subnet 2 for resources with no internet access [create complete] [6.3s] - A custom route table that directs network traffic for the public subnets [create complete] [15.5s] - Public subnet 1 for resources that can access the internet [create complete] [6.3s] - Public subnet 2 for resources that can access the internet [create complete] [6.3s] - A private DNS namespace for discovering services within the environment [create complete] [47.2s] - A Virtual Private Cloud to control networking of your AWS resources [create complete] [43.6s] And that's it \ud83d\ude80! The workflow is identical to how copilot svc and copilot job commands work.","title":"Walkthrough"},{"location":"blogs/release-v120/#migrating-existing-environments","text":"To create a manifest.yml file for existing environments, Copilot introduced a new --manifest flag to copilot env show . In this example, we'll generate a manifest file for an existing \"prod\" environment. [1] First, in your current git repository or in a new one, create the mandatory directory structure for environment manifests. Directory structure for prod # 1 . Navigate to your git repository. $ cd my-sample-repo/ # 2 . Create the directory for the \"prod\" environment $ mkdir -p copilot/environments/prod [2] Run the copilot env show --manifest command to generate a manifest and redirect it to the \"prod\" folder. Generate manifest $ copilot env show -n prod --manifest > copilot/environments/prod/manifest.yml And that's it! you can now modify the manifest file with any fields in the specification and run copilot env deploy to update your stack.","title":"Migrating Existing Environments"},{"location":"blogs/release-v120/#continuous-delivery","text":"Finally, Copilot provides the same continuous delivery pipeline workflow for environments as services or jobs. [1] Once a manifest file is created , you can run the existing copilot pipeline init command to create a pipeline manifest.yml file to describe deployment stages, and a buildspec.yml used in the \"Build\" stage to generate the CloudFormation configuration files. Create pipeline manifest and buildspec $ copilot pipeline init Pipeline name: env-pipeline What type of continuous delivery pipeline is this? Environments 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for copilot-pipeline-test at 'copilot/pipelines/env-pipeline/manifest.yml' \u2714 Wrote the buildspec for the pipeline's build stage at 'copilot/pipelines/env-pipeline/buildspec.yml' [2] Run copilot pipeline deploy to create or update the AWS CodePipeline stack. Create pipeline $ copilot pipeline deploy Are you sure you want to redeploy an existing pipeline: env-pipeline? Yes \u2714 Successfully deployed pipeline: env-pipeline","title":"Continuous Delivery"},{"location":"blogs/release-v120/#autoscaling-cooldown-support","text":"A small addition to our service manifests: the ability to configure autoscaling cooldown periods. For Load Balanced , Backend , and Worker Services, you can now configure their autoscaling fields under count to have custom cooldown periods. Previously, each scaling metric such as cpu_percentage had a fixed 'in' cooldown of 120 secs and 'out' cooldown of 60 seconds. Now, you can set a global cooldown period: Using general autoscaling cooldowns count: range: 1-10 cooldown: in: 30s out: 30s cpu_percentage: 50 Alternatively, you can set individual cooldowns that override the general ones: Using specific autoscaling cooldowns count: range: 1-10 cooldown: in: 2m out: 2m cpu_percentage: 50 requests: value: 10 cooldown: in: 30s out: 30s","title":"Autoscaling Cooldown Support"},{"location":"blogs/release-v120/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v121/","text":"AWS Copilot v1.21: CloudFront is here! Posted On: Aug 17, 2022 The AWS Copilot core team is announcing the Copilot v1.21 release. Special thanks to @dave-moser , @dclark , and @apopa57 who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and over 2.4k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.21 brings several new features and improvements: Integrate CloudFront with Application Load Balancer : You can now deploy CloudFront in front of your Load Balanced Web Services! See detailed section to learn more. Configure environment security group : Configure your environment security group rules through environment manifest. See detailed section . ELB access log support : Enable elastic load balancing access logs for your Load Balanced Web Service. See detailed section . job logs improvements : You can now follow logs and view state machine execution logs for your jobs. See detailed Section Package addon CloudFormation templates before deployments : Copilot will now package addon templates on copilot svc deploy . This means Copilot can now deploy AWS Lambda functions alongside your containerized services! Read more about how to get started in Copilot's documentation . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. CloudFront Integration One of our first major additions to the Copilot environment manifest! CloudFront is an AWS Content Delivery Network (CDN) which helps people deploy their applications across the globe, and now you can enable a distribution by simply setting cdn: true in your environment manifest and running copilot env deploy . Currently supported features A distribution deployed in front of your public Application Load Balancer (ALB) ALB ingress restricted to the CloudFront distribution to protect from DDoS attack HTTPS traffic through an imported certificate, or a Copilot-managed certificate CloudFront with HTTPS Copilot makes this process easy! If you have an application initialized with a --domain specified during app init , the required certificate will be created for you and no additional actions are required. If you import your own certificates for your hosted zone, we'll walk you through importing the correct certificate for CloudFront. Info CloudFront requires certificates to be in the us-east-1 region. When importing a certificate, make sure to create your certificate in this region. First, create a certificate in the us-east-1 region for your application with AWS Certificate Manager . You must add each domain associated with your application to this certificate. Once you've validated the certificate, you can add a field to your environment manifest to import the certificate for CloudFront: cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd Run copilot env deploy , then you can create an A-record in Route 53 which points to the CloudFront distribution created by Copilot. Just select to point the record to an Alias in the console, then select to route traffic to a CloudFront distribution resource type, and enter the CloudFront DNS from the deployed distribution. Restricting traffic to CloudFront To restrict public traffic to come through the CloudFront distribution, there's a new field in http for your public load balancer: http : public : security_groups : ingress : restrict_to : cdn : true Specifying this will modify the Load Balancer's security group to only accept traffic from CloudFront. Configure Environment Security Group You can now configure your environment security group rules through environment manifest. Sample security group rules template inside environment manifest is given below. network : vpc : security_group : ingress : - ip_protocol : tcp ports : 80 cidr : 0.0.0.0/0 egress : - ip_protocol : tcp ports : 0-65535 cidr : 0.0.0.0/0 For the complete specification, see the environment manifest . ELB Access Logs Support You can now enable Elastic Load Balancing access logs that capture detailed information about requests sent to your load balancer. There are a few ways to enable access logs: You can specify access_logs: true in your environment manifest as shown below and Copilot will create an S3 bucket where the Public Load Balancer will store access logs. name : qa type : Environment http : public : access_logs : true You can also view the bucket name with copilot env show --resources command. You can also bring in your own bucket and prefix. Copilot will use those bucket details to enable access logs. You can do that by specifying the following configuration in your environment manifest. name : qa type : Environment http : public : access_logs : bucket_name : my-bucket prefix : my-prefix When importing your own bucket, you need to make sure that the bucket exists and has the required bucket policy for the load balancer to write access logs to it. job logs At long last, you can now view and follow logs for executions of your scheduled jobs. You can choose how many invocations of the job to view, filter logs by specific task IDs, and choose whether to view state machine execution logs. For example, you can view logs from the last invocation of the job and all the state machine execution data: $ copilot job logs --include-state-machine Which application does your job belong to? [Use arrows to move, type to filter, ? for more help] > app1 app2 Which job's logs would you like to show? [Use arrows to move, type to filter, ? for more help] > emailer (test) emailer (prod) Application: app1 Job: emailer states/app1-test-emailer {\"id\":\"1\",\"type\":\"ExecutionStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"2\",\"type\":\"TaskStateEntered\",\"details\": ... states/app1-test-emailer {\"id\":\"3\",\"type\":\"TaskScheduled\",\"details\": ... states/app1-test-emailer {\"id\":\"4\",\"type\":\"TaskStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"5\",\"type\":\"TaskSubmitted\",\"details\": ... copilot/emailer/d476069 Gathered recipients copilot/emailer/d476069 Prepared email body copilot/emailer/d476069 Attached headers copilot/emailer/d476069 Sent all emails states/app1-test-emailer {\"id\":\"6\",\"type\":\"TaskSucceeded\",\"details\": ... states/app1-test-emailer {\"id\":\"7\",\"type\":\"TaskStateExited\",\"details\": ... states/app1-test-emailer {\"id\":\"8\",\"type\":\"ExecutionSucceeded\",\"details\": ... or follow the logs of a task you've just invoked with copilot job run : $ copilot job run -n emailer && copilot job logs -n emailer --follow What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.21"},{"location":"blogs/release-v121/#aws-copilot-v121-cloudfront-is-here","text":"Posted On: Aug 17, 2022 The AWS Copilot core team is announcing the Copilot v1.21 release. Special thanks to @dave-moser , @dclark , and @apopa57 who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and over 2.4k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.21 brings several new features and improvements: Integrate CloudFront with Application Load Balancer : You can now deploy CloudFront in front of your Load Balanced Web Services! See detailed section to learn more. Configure environment security group : Configure your environment security group rules through environment manifest. See detailed section . ELB access log support : Enable elastic load balancing access logs for your Load Balanced Web Service. See detailed section . job logs improvements : You can now follow logs and view state machine execution logs for your jobs. See detailed Section Package addon CloudFormation templates before deployments : Copilot will now package addon templates on copilot svc deploy . This means Copilot can now deploy AWS Lambda functions alongside your containerized services! Read more about how to get started in Copilot's documentation . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.21: CloudFront is here!"},{"location":"blogs/release-v121/#cloudfront-integration","text":"One of our first major additions to the Copilot environment manifest! CloudFront is an AWS Content Delivery Network (CDN) which helps people deploy their applications across the globe, and now you can enable a distribution by simply setting cdn: true in your environment manifest and running copilot env deploy .","title":"CloudFront Integration"},{"location":"blogs/release-v121/#currently-supported-features","text":"A distribution deployed in front of your public Application Load Balancer (ALB) ALB ingress restricted to the CloudFront distribution to protect from DDoS attack HTTPS traffic through an imported certificate, or a Copilot-managed certificate","title":"Currently supported features"},{"location":"blogs/release-v121/#cloudfront-with-https","text":"Copilot makes this process easy! If you have an application initialized with a --domain specified during app init , the required certificate will be created for you and no additional actions are required. If you import your own certificates for your hosted zone, we'll walk you through importing the correct certificate for CloudFront. Info CloudFront requires certificates to be in the us-east-1 region. When importing a certificate, make sure to create your certificate in this region. First, create a certificate in the us-east-1 region for your application with AWS Certificate Manager . You must add each domain associated with your application to this certificate. Once you've validated the certificate, you can add a field to your environment manifest to import the certificate for CloudFront: cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd Run copilot env deploy , then you can create an A-record in Route 53 which points to the CloudFront distribution created by Copilot. Just select to point the record to an Alias in the console, then select to route traffic to a CloudFront distribution resource type, and enter the CloudFront DNS from the deployed distribution.","title":"CloudFront with HTTPS"},{"location":"blogs/release-v121/#restricting-traffic-to-cloudfront","text":"To restrict public traffic to come through the CloudFront distribution, there's a new field in http for your public load balancer: http : public : security_groups : ingress : restrict_to : cdn : true Specifying this will modify the Load Balancer's security group to only accept traffic from CloudFront.","title":"Restricting traffic to CloudFront"},{"location":"blogs/release-v121/#configure-environment-security-group","text":"You can now configure your environment security group rules through environment manifest. Sample security group rules template inside environment manifest is given below. network : vpc : security_group : ingress : - ip_protocol : tcp ports : 80 cidr : 0.0.0.0/0 egress : - ip_protocol : tcp ports : 0-65535 cidr : 0.0.0.0/0 For the complete specification, see the environment manifest .","title":"Configure Environment Security Group"},{"location":"blogs/release-v121/#elb-access-logs-support","text":"You can now enable Elastic Load Balancing access logs that capture detailed information about requests sent to your load balancer. There are a few ways to enable access logs: You can specify access_logs: true in your environment manifest as shown below and Copilot will create an S3 bucket where the Public Load Balancer will store access logs. name : qa type : Environment http : public : access_logs : true You can also view the bucket name with copilot env show --resources command. You can also bring in your own bucket and prefix. Copilot will use those bucket details to enable access logs. You can do that by specifying the following configuration in your environment manifest. name : qa type : Environment http : public : access_logs : bucket_name : my-bucket prefix : my-prefix When importing your own bucket, you need to make sure that the bucket exists and has the required bucket policy for the load balancer to write access logs to it.","title":"ELB Access Logs Support"},{"location":"blogs/release-v121/#job-logs","text":"At long last, you can now view and follow logs for executions of your scheduled jobs. You can choose how many invocations of the job to view, filter logs by specific task IDs, and choose whether to view state machine execution logs. For example, you can view logs from the last invocation of the job and all the state machine execution data: $ copilot job logs --include-state-machine Which application does your job belong to? [Use arrows to move, type to filter, ? for more help] > app1 app2 Which job's logs would you like to show? [Use arrows to move, type to filter, ? for more help] > emailer (test) emailer (prod) Application: app1 Job: emailer states/app1-test-emailer {\"id\":\"1\",\"type\":\"ExecutionStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"2\",\"type\":\"TaskStateEntered\",\"details\": ... states/app1-test-emailer {\"id\":\"3\",\"type\":\"TaskScheduled\",\"details\": ... states/app1-test-emailer {\"id\":\"4\",\"type\":\"TaskStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"5\",\"type\":\"TaskSubmitted\",\"details\": ... copilot/emailer/d476069 Gathered recipients copilot/emailer/d476069 Prepared email body copilot/emailer/d476069 Attached headers copilot/emailer/d476069 Sent all emails states/app1-test-emailer {\"id\":\"6\",\"type\":\"TaskSucceeded\",\"details\": ... states/app1-test-emailer {\"id\":\"7\",\"type\":\"TaskStateExited\",\"details\": ... states/app1-test-emailer {\"id\":\"8\",\"type\":\"ExecutionSucceeded\",\"details\": ... or follow the logs of a task you've just invoked with copilot job run : $ copilot job run -n emailer && copilot job logs -n emailer --follow","title":"job logs"},{"location":"blogs/release-v121/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v122/","text":"AWS Copilot v1.22: Try out IAM Permissions Boundaries and more! Posted On: Sep 27, 2022 The AWS Copilot core team is announcing the Copilot v1.22 release. Special thanks to @jterry75 , @gabrielcostasilva , @shingos , and @hkford who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and over 2.4k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.22 brings several new features and improvements: IAM Role Permissions Boundary : See detailed section . FIFO SNS/SQS : See detailed section . CloudFront TLS Termination : You can now use CloudFront to perform faster TLS termination! See detailed section . TLS connection between the Application Load Balancer and Fargate tasks : Copilot now sets the target group's protocol and health check protocol to HTTPS if the target container's port is set to 443 . See manifest sample What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. IAM Role Permissions Boundary Whether you have an AWS Organizations Service Control Policy that requires an attached permissions boundary for IAM role creation, or simply want to add some guardrails to your application, Copilot can help. By using the --permissions-boundary flag with the copilot app init command, you can specify an existing IAM policy name. That policy will get attached to any and all IAM roles that Copilot creates (within that application) as a permissions boundary. If you init your application with the name of a permissions boundary specified: copilot app init --permissions-boundary examplePermissionsBoundaryPolicy The permissions boundary will be attached to every IAM role created in the app: ExampleIAMRole : Type : AWS::IAM::Role Properties : PermissionsBoundary : 'arn:aws:iam::123456789012:policy/examplePermissionsBoundaryPolicy' FIFO SNS/SQS To have strict message ordering and message deduplication for your publish-subscribe architecture, you can now use SNS FIFO Topics and SQS FIFO Queues. You can configure your manifest to have SNS FIFO Topics for your services. You can specify fifo: true in your service manifest under publish.topics as shown below and Copilot will create a SNS FIFO topic for you. publish : topics : - name : mytopic fifo : true Alternatively, you can also specify the advanced SNS FIFO Topic configuration as: publish : topics : - name : mytopic fifo : content_based_deduplication : true For the full specification of FIFO topics, see manifest specification SQS FIFO queues for worker services You can specify fifo: true in your worker service manifest under subscribe.topics.queue or subscribe.queue as shown below and Copilot will create a FIFO SQS Queue and Subscriptions for you. subscribe : topics : - name : mytopic service : myservice queue : fifo : true # topics specific SQS FIFO queue queue : fifo : true # Configure the default SQS queue to be FIFO. Alternatively, you can also specify the advanced FIFO SQS Queue configuration as: subscribe : topics : - name : mytopic service : myservice queue : fifo : content_based_deduplication : true deduplication_scope : messageGroup throughput_limit : perMessageGroupId queue : fifo : high_throughput : true For the full specification of FIFO queues, see manifest specification CloudFront TLS Termination You can now configure your env manifest to have CloudFront terminate TLS for your Load Balanced Web Services (LBWS): cdn : terminate_tls : true The configuration above uses CloudFront for TLS termination, which means the traffic from CF \u2192 ALB \u2192 ECS will be HTTP only. This brings faster TLS termination and shorter page loading for viewers, since the CloudFront edges are usually geographically closer to them. However, if your services have HTTPS enabled (you have either an app domain or imported certificates in the environment), you must turn off ALB http redirect by updating your Load Balanced Web Service manifests . http : redirect_to_https : false And then redeploy the services with svc deploy before using env deploy to enable CloudFront TLS termination. What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.22"},{"location":"blogs/release-v122/#aws-copilot-v122-try-out-iam-permissions-boundaries-and-more","text":"Posted On: Sep 27, 2022 The AWS Copilot core team is announcing the Copilot v1.22 release. Special thanks to @jterry75 , @gabrielcostasilva , @shingos , and @hkford who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and over 2.4k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.22 brings several new features and improvements: IAM Role Permissions Boundary : See detailed section . FIFO SNS/SQS : See detailed section . CloudFront TLS Termination : You can now use CloudFront to perform faster TLS termination! See detailed section . TLS connection between the Application Load Balancer and Fargate tasks : Copilot now sets the target group's protocol and health check protocol to HTTPS if the target container's port is set to 443 . See manifest sample What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.22: Try out IAM Permissions Boundaries and more!"},{"location":"blogs/release-v122/#iam-role-permissions-boundary","text":"Whether you have an AWS Organizations Service Control Policy that requires an attached permissions boundary for IAM role creation, or simply want to add some guardrails to your application, Copilot can help. By using the --permissions-boundary flag with the copilot app init command, you can specify an existing IAM policy name. That policy will get attached to any and all IAM roles that Copilot creates (within that application) as a permissions boundary. If you init your application with the name of a permissions boundary specified: copilot app init --permissions-boundary examplePermissionsBoundaryPolicy The permissions boundary will be attached to every IAM role created in the app: ExampleIAMRole : Type : AWS::IAM::Role Properties : PermissionsBoundary : 'arn:aws:iam::123456789012:policy/examplePermissionsBoundaryPolicy'","title":"IAM Role Permissions Boundary"},{"location":"blogs/release-v122/#fifo-snssqs","text":"To have strict message ordering and message deduplication for your publish-subscribe architecture, you can now use SNS FIFO Topics and SQS FIFO Queues.","title":"FIFO SNS/SQS"},{"location":"blogs/release-v122/#you-can-configure-your-manifest-to-have-sns-fifo-topics-for-your-services","text":"You can specify fifo: true in your service manifest under publish.topics as shown below and Copilot will create a SNS FIFO topic for you. publish : topics : - name : mytopic fifo : true Alternatively, you can also specify the advanced SNS FIFO Topic configuration as: publish : topics : - name : mytopic fifo : content_based_deduplication : true For the full specification of FIFO topics, see manifest specification","title":"You can configure your manifest to have SNS FIFO Topics for your services."},{"location":"blogs/release-v122/#sqs-fifo-queues-for-worker-services","text":"You can specify fifo: true in your worker service manifest under subscribe.topics.queue or subscribe.queue as shown below and Copilot will create a FIFO SQS Queue and Subscriptions for you. subscribe : topics : - name : mytopic service : myservice queue : fifo : true # topics specific SQS FIFO queue queue : fifo : true # Configure the default SQS queue to be FIFO. Alternatively, you can also specify the advanced FIFO SQS Queue configuration as: subscribe : topics : - name : mytopic service : myservice queue : fifo : content_based_deduplication : true deduplication_scope : messageGroup throughput_limit : perMessageGroupId queue : fifo : high_throughput : true For the full specification of FIFO queues, see manifest specification","title":"SQS FIFO queues for worker services"},{"location":"blogs/release-v122/#cloudfront-tls-termination","text":"You can now configure your env manifest to have CloudFront terminate TLS for your Load Balanced Web Services (LBWS): cdn : terminate_tls : true The configuration above uses CloudFront for TLS termination, which means the traffic from CF \u2192 ALB \u2192 ECS will be HTTP only. This brings faster TLS termination and shorter page loading for viewers, since the CloudFront edges are usually geographically closer to them. However, if your services have HTTPS enabled (you have either an app domain or imported certificates in the environment), you must turn off ALB http redirect by updating your Load Balanced Web Service manifests . http : redirect_to_https : false And then redeploy the services with svc deploy before using env deploy to enable CloudFront TLS termination.","title":"CloudFront TLS Termination"},{"location":"blogs/release-v122/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v123/","text":"AWS Copilot v1.23: App Runner Private Services, Aurora Serverless v2 and more! Posted On: Nov 1, 2022 The AWS Copilot core team is announcing the Copilot v1.23 release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and nearly 2.5k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.23 brings several new features and improvements: App Runner Private Services : App Runner just launched support for private services, and you can create them by adding http.private to your Request-Driven Web Service manifest! See detailed section . Support Aurora Serverless v2 in storage init : See detailed section . Move misplaced http fields in environment manifest (backward-compatible!): See detailed section . Restrict container access to root file system to read-only: See manifest field ( #4062 ). Configure SSL policy for your ALB\u2019s HTTPS listener: See manifest field ( #4099 ). Restrict ingress to your ALB through source IPs : See manifest field ( #4103 ). What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. App Runner Private Services You can now create App Runner private services using Copilot. Simply update your Request-Driven Web Service manifest with: http : private : true And deploy! Your service is now only reachable by other services in your Copilot environment. Behind the scenes, Copilot creates a VPC Endpoint to App Runner that gets shared across all private services in your environment. If you have an existing App Runner VPC Endpoint, you can import it by setting the following in your manifest: http : private : endpoint : vpce-12345 By default, your private service can only send traffic to the internet. If you'd like to a send traffic to your environment, set network.vpc.placement: 'private' in your manifest. Support Aurora Serverless v2 in storage init Aurora Serverless v2 was made generally available earlier this year , and is now supported as a storage option in Copilot. Previously, you could run $ copilot storage init --storage-type Aurora to generate an addon template for a v1 cluster. Now, it will generate the template for v2 by default . However, you can still use copilot storage init --storage-type Aurora --serverless-version v1 to generate a v1 template. For more, check out the doc for storage init ! Move misplaced http fields in environment manifest (backward-compatible!) In Copilot v1.23.0 , we are fixing the hierarchy under the http field in the environment manifest. What is getting fixed, and why? Back in Copilot v1.20.0 , we released the environment manifest, bringing all the benefits of infrastructure as code to environments. At the time, its http field hierarchy looked like: name : test type : Environment http : public : security_groups : ingress : # [Flaw 1] restrict_to : # [Flaw 2] cdn : true private : security_groups : ingress : # [Flaw 1] from_vpc : true # [Flaw 2] There are two flaws in this hierarchy design: Putting ingress under security_groups is ambiguous. Each security group has its own ingress - it is unclear what the \"ingress\" of several security groups means. (Here, it was meant to configure the ingress of the default security group that Copilot applies to an Application Load Balancer.) restrict_to is redundant. It should be clearly implied that the ingress under http.public is restrictive, and the ingress under http.private is permissive. The \"from\" in from_vpc also suffers from the same redundancy issue. To illustrate - fixing them would give us an environment manifest that looks like: name : test type : Environment http : public : ingress : cdn : true private : ingress : vpc : true What do I need to do? The short answer: nothing for now. (Recommended) Adapt your manifest to the corrected hierarchy While your existing manifest will keep working (we will get to this later), it is recommended that you update your manifest to the corrected hierarchy. Below are snippets detailing how to update each of the fields impacted: Adapt your environment manifest to the corrected hierarchy CDN for public ALB VPC ingress for private ALB # If you have http : public : security_groups : ingress : restrict_to : cdn : true # Then change it to http : public : ingress : cdn : true # If you have http : private : security_groups : ingress : from_vpc : true # Then change it to http : private : ingress : vpc : true Your existing environment manifest will keep working It's okay if you don't adapt your environment manifest to the corrected hierarchy immediately. It will keep working - unless you modify your manifest so that it contains both http.public.security_groups.ingress (the flawed version) and http.public.ingress (the corrected version). For example, say before the release of v1.23.0, your manifest looked like: # Flawed hierarchy but will keep working. http : public : security_groups : ingress : restrict_to : cdn : true The same manifest will keep working after v1.23.0. However, if at some point you modify the manifest to: # Error! Both flawed hierarchy and corrected hierarchy are present. http : public : security_groups : ingress : restrict_to : cdn : true ingress : source_ips : - 10.0.0.0/24 - 10.0.1.0/24 Copilot will detect that both http.public.security_groups.ingress (the flawed version) and http.public.ingress exist in the manifest. It will error out, along with a friendly suggestion to update your manifest so that only http.public.ingress , the corrected version is present: # Same configuration but written in the corrected hierarchy. http : public : ingress : cdn : true source_ips : - 10.0.0.0/24 - 10.0.1.0/24 What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.23"},{"location":"blogs/release-v123/#aws-copilot-v123-app-runner-private-services-aurora-serverless-v2-and-more","text":"Posted On: Nov 1, 2022 The AWS Copilot core team is announcing the Copilot v1.23 release. Our public \u0441ommunity \u0441hat is growing and has over 300 people online and nearly 2.5k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.23 brings several new features and improvements: App Runner Private Services : App Runner just launched support for private services, and you can create them by adding http.private to your Request-Driven Web Service manifest! See detailed section . Support Aurora Serverless v2 in storage init : See detailed section . Move misplaced http fields in environment manifest (backward-compatible!): See detailed section . Restrict container access to root file system to read-only: See manifest field ( #4062 ). Configure SSL policy for your ALB\u2019s HTTPS listener: See manifest field ( #4099 ). Restrict ingress to your ALB through source IPs : See manifest field ( #4103 ). What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.23: App Runner Private Services, Aurora Serverless v2 and more!"},{"location":"blogs/release-v123/#app-runner-private-services","text":"You can now create App Runner private services using Copilot. Simply update your Request-Driven Web Service manifest with: http : private : true And deploy! Your service is now only reachable by other services in your Copilot environment. Behind the scenes, Copilot creates a VPC Endpoint to App Runner that gets shared across all private services in your environment. If you have an existing App Runner VPC Endpoint, you can import it by setting the following in your manifest: http : private : endpoint : vpce-12345 By default, your private service can only send traffic to the internet. If you'd like to a send traffic to your environment, set network.vpc.placement: 'private' in your manifest.","title":"App Runner Private Services"},{"location":"blogs/release-v123/#support-aurora-serverless-v2-in-storage-init","text":"Aurora Serverless v2 was made generally available earlier this year , and is now supported as a storage option in Copilot. Previously, you could run $ copilot storage init --storage-type Aurora to generate an addon template for a v1 cluster. Now, it will generate the template for v2 by default . However, you can still use copilot storage init --storage-type Aurora --serverless-version v1 to generate a v1 template. For more, check out the doc for storage init !","title":"Support Aurora Serverless v2 in storage init"},{"location":"blogs/release-v123/#move-misplaced-http-fields-in-environment-manifest-backward-compatible","text":"In Copilot v1.23.0 , we are fixing the hierarchy under the http field in the environment manifest.","title":"Move misplaced http fields in environment manifest (backward-compatible!)"},{"location":"blogs/release-v123/#what-is-getting-fixed-and-why","text":"Back in Copilot v1.20.0 , we released the environment manifest, bringing all the benefits of infrastructure as code to environments. At the time, its http field hierarchy looked like: name : test type : Environment http : public : security_groups : ingress : # [Flaw 1] restrict_to : # [Flaw 2] cdn : true private : security_groups : ingress : # [Flaw 1] from_vpc : true # [Flaw 2] There are two flaws in this hierarchy design: Putting ingress under security_groups is ambiguous. Each security group has its own ingress - it is unclear what the \"ingress\" of several security groups means. (Here, it was meant to configure the ingress of the default security group that Copilot applies to an Application Load Balancer.) restrict_to is redundant. It should be clearly implied that the ingress under http.public is restrictive, and the ingress under http.private is permissive. The \"from\" in from_vpc also suffers from the same redundancy issue. To illustrate - fixing them would give us an environment manifest that looks like: name : test type : Environment http : public : ingress : cdn : true private : ingress : vpc : true","title":"What is getting fixed, and why?"},{"location":"blogs/release-v123/#what-do-i-need-to-do","text":"The short answer: nothing for now.","title":"What do I need to do?"},{"location":"blogs/release-v123/#recommended-adapt-your-manifest-to-the-corrected-hierarchy","text":"While your existing manifest will keep working (we will get to this later), it is recommended that you update your manifest to the corrected hierarchy. Below are snippets detailing how to update each of the fields impacted: Adapt your environment manifest to the corrected hierarchy CDN for public ALB VPC ingress for private ALB # If you have http : public : security_groups : ingress : restrict_to : cdn : true # Then change it to http : public : ingress : cdn : true # If you have http : private : security_groups : ingress : from_vpc : true # Then change it to http : private : ingress : vpc : true","title":"(Recommended) Adapt your manifest to the corrected hierarchy"},{"location":"blogs/release-v123/#your-existing-environment-manifest-will-keep-working","text":"It's okay if you don't adapt your environment manifest to the corrected hierarchy immediately. It will keep working - unless you modify your manifest so that it contains both http.public.security_groups.ingress (the flawed version) and http.public.ingress (the corrected version). For example, say before the release of v1.23.0, your manifest looked like: # Flawed hierarchy but will keep working. http : public : security_groups : ingress : restrict_to : cdn : true The same manifest will keep working after v1.23.0. However, if at some point you modify the manifest to: # Error! Both flawed hierarchy and corrected hierarchy are present. http : public : security_groups : ingress : restrict_to : cdn : true ingress : source_ips : - 10.0.0.0/24 - 10.0.1.0/24 Copilot will detect that both http.public.security_groups.ingress (the flawed version) and http.public.ingress exist in the manifest. It will error out, along with a friendly suggestion to update your manifest so that only http.public.ingress , the corrected version is present: # Same configuration but written in the corrected hierarchy. http : public : ingress : cdn : true source_ips : - 10.0.0.0/24 - 10.0.1.0/24","title":"Your existing environment manifest will keep working"},{"location":"blogs/release-v123/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v124/","text":"AWS Copilot v1.24: ECS Service Connect! Posted On: Nov 28, 2022 The AWS Copilot core team is announcing the Copilot v1.24 release. Our public \u0441ommunity \u0441hat is growing and has over 350 people online and over 2.5k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.24 brings several new features and improvements: ECS Service Connect support : See detailed section . Add --no-rollback flag to env deploy : Copilot env deploy now has a new flag --no-rollback ; you can specify the flag to disable automatic env deployment rollback to help with debugging. Config autoscaling for Request-Driven Web Service : It is now possible to specify autoscaling configuration for your RDWS. For example, this can be configured in your service manifest: count : high-availability/3 Add log retention to VPC flow logs : There is now a default value of 14 days. network : vpc : flow_logs : on Alternatively, you can customize the number of days for retention: network : vpc : flow_logs : retention : 30 What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. ECS Service Connect Support Copilot supports the newly launched ECS Service Connect ! Your private service-to-service communication will be more resilient and load-balanced with Service Connect than with Service Discovery. Let's walk through how Copilot supports ECS Service Connect. (Optional) Deploy an example service If you don't have any existing services deployed, please follow our tutorial to deploy a simple front-end service that is accessible in your browser. Set up Service Connect In addition to Service Discovery, you can set up Service Connect with the following configuration in your service manifest. network : connect : true Attention In order to use Service Connect, both server and client services need to have Service Connect enabled. Check out the generated endpoint After successfully deploying with the updated manifest, Service Connect should be enabled for your service. You can run copilot svc show to get the endpoint URL for your service. $ copilot svc show --name front-end ... Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.demo.local:80 test Service Discovery ... As shown above, front-end:80 is your Service Connect endpoint that your other client services can call. (They must have Service Connect enabled as well.) (Optional) Verify that it works To verify the IP address for your Service Connect endpoint URL has indeed been added to your service network, you can simply use copilot svc exec to execute into your container and check out the hosts file. $ copilot svc exec --name front-end Execute `/bin/sh` in container frontend in task a2d57c4b40014a159d3b2e3ec7b73004. Starting session with SessionId: ecs-execute-command-088d464a5721fuej3f # cat /etc/hosts 127.0.0.1 localhost 10.0.1.253 ip-10-0-1-253.us-west-2.compute.internal 127.255.0.1 front-end 2600:f0f0:0:0:0:0:0:1 front-end # exit Exiting session with sessionId: ecs-execute-command-088d464a5721fuej3f. What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.24"},{"location":"blogs/release-v124/#aws-copilot-v124-ecs-service-connect","text":"Posted On: Nov 28, 2022 The AWS Copilot core team is announcing the Copilot v1.24 release. Our public \u0441ommunity \u0441hat is growing and has over 350 people online and over 2.5k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.24 brings several new features and improvements: ECS Service Connect support : See detailed section . Add --no-rollback flag to env deploy : Copilot env deploy now has a new flag --no-rollback ; you can specify the flag to disable automatic env deployment rollback to help with debugging. Config autoscaling for Request-Driven Web Service : It is now possible to specify autoscaling configuration for your RDWS. For example, this can be configured in your service manifest: count : high-availability/3 Add log retention to VPC flow logs : There is now a default value of 14 days. network : vpc : flow_logs : on Alternatively, you can customize the number of days for retention: network : vpc : flow_logs : retention : 30 What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.24: ECS Service Connect!"},{"location":"blogs/release-v124/#ecs-service-connect-support","text":"Copilot supports the newly launched ECS Service Connect ! Your private service-to-service communication will be more resilient and load-balanced with Service Connect than with Service Discovery. Let's walk through how Copilot supports ECS Service Connect.","title":"ECS Service Connect Support"},{"location":"blogs/release-v124/#optional-deploy-an-example-service","text":"If you don't have any existing services deployed, please follow our tutorial to deploy a simple front-end service that is accessible in your browser.","title":"(Optional) Deploy an example service"},{"location":"blogs/release-v124/#set-up-service-connect","text":"In addition to Service Discovery, you can set up Service Connect with the following configuration in your service manifest. network : connect : true Attention In order to use Service Connect, both server and client services need to have Service Connect enabled.","title":"Set up Service Connect"},{"location":"blogs/release-v124/#check-out-the-generated-endpoint","text":"After successfully deploying with the updated manifest, Service Connect should be enabled for your service. You can run copilot svc show to get the endpoint URL for your service. $ copilot svc show --name front-end ... Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.demo.local:80 test Service Discovery ... As shown above, front-end:80 is your Service Connect endpoint that your other client services can call. (They must have Service Connect enabled as well.)","title":"Check out the generated endpoint"},{"location":"blogs/release-v124/#optional-verify-that-it-works","text":"To verify the IP address for your Service Connect endpoint URL has indeed been added to your service network, you can simply use copilot svc exec to execute into your container and check out the hosts file. $ copilot svc exec --name front-end Execute `/bin/sh` in container frontend in task a2d57c4b40014a159d3b2e3ec7b73004. Starting session with SessionId: ecs-execute-command-088d464a5721fuej3f # cat /etc/hosts 127.0.0.1 localhost 10.0.1.253 ip-10-0-1-253.us-west-2.compute.internal 127.255.0.1 front-end 2600:f0f0:0:0:0:0:0:1 front-end # exit Exiting session with sessionId: ecs-execute-command-088d464a5721fuej3f.","title":"(Optional) Verify that it works"},{"location":"blogs/release-v124/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v125/","text":"AWS Copilot v1.25: Environment addons and static content delivery. Posted On: Jan 17, 2023 The AWS Copilot core team is announcing the Copilot v1.25 release. Our public \u0441ommunity \u0441hat is growing and has almost 400 people online and over 2.6k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.25 brings several new features and improvements: Environment Addons : See detailed section . Static Content Delivery With CloudFront : See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Environment Addons You can now deploy addons associated with your environments. Addons are additional AWS resources that are not integrated in Copilot by default - for example, DynamoDB, RDS, etc. Environment addons are additional resources managed on the environment level. Their lifecycle will be tied to your environment: you will run copilot env deploy to create or update your environment addons; when you run copilot env delete against an environment, Copilot will try to delete its addons as well. If you are already familiar with workload addons, then good news - the experience of managing environment addons is pretty similar. Getting Started Step 1: Model additional AWS resources with CloudFormation Today, addons only support modeling using CloudFormation. For environment addons, you must: Have App and Env in the Parameters section. Include at least one Resource . Sample CloudFormation template Here is a CloudFormation template example that you can experiment with. AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The name of the environment being deployed. Resources : MyTable : Type : 'AWS::DynamoDB::Table' Properties : TableName : MyEnvAddonsGettingStartedTable AttributeDefinitions : - AttributeName : key AttributeType : S KeySchema : - AttributeName : key KeyType : HASH ProvisionedThroughput : ReadCapacityUnits : 5 WriteCapacityUnits : 2 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName Step 2: Store the CFN template under copilot/environments/addons If you have run copilot env init , you should already have the folder copilot/environments in your workspace. If you haven't, it's recommended to do so now - you will need it sooner or later. Afterward, your workspace structure may look like this: copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u251c\u2500\u2500 appmesh.yml \u2502 \u2502 \u2514\u2500\u2500 ddb.yml # <- You can have multiple addons. \u2502 \u251c\u2500\u2500 test/ \u2502 \u2502 \u2514\u2500\u2500\u2500 manifest.yml \u2502 \u2514\u2500\u2500 dev/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 web \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 s3.yml # <- A workload addon template. \u2514\u2500\u2500\u2500 manifest.yml Step 3: Run copilot env deploy After you run copilot env deploy , Copilot will scan through the addons folder to look for addons templates. If it is able to find any, it will deploy the templates along with the environment. (Optional) Step 4: Verify the deployment You can verify the deployment by going to the AWS CloudFormation console in your region. You should be able to find a stack named [app]-[env]-AddonsStack-[random string] . This is a nested stack created under your environment stack, named [app]-[env] . Feature Parity With Workload Addons Environment addons is shipped with all existing features available for workload addons. This means that: You can refer to customized Parameters in addition to the required App and Env . In your templates, you can reference local paths. Copilot will upload those local files and replace the relevant resource properties with the uploaded S3 location. Read here for more! Other Considerations All environments (in the example above, both \"test\" and \"dev\") will share the same addon templates. Just like today\u2019s workload-level addons, any environment-specific configuration should be specified inside the addon templates via the Conditions and Mappings sections. This is designed to follow CFN\u2019s best practice of reusing templates . AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application name. Env : Type : String Description : The name of the environment being deployed. Conditions : IsTestEnv : !Equals [ !Ref Env , \"test\" ] # <- Use `Conditions` section to specify \"test\"-specific configurations. Mappings : ScalingConfigurationMapByEnv : test : \"DBMinCapacity\" : 0.5 prod : \"DBMinCapacity\" : 1 Integrating With Workloads You can reference values from your environment addons in your workload-level resources. Reference Environment Addons Values In Workload Addon Step 1: Export values from your environment addons In an environment addon template, you should add an Outputs section, and define the Output that you want your workload resource to reference. See this doc for CloudFormation Outputs syntax. Taking the example template that we provided - this is the Outputs section that we have added in the example. Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName You can specify any name you like for Export.Name . However, the name must be unique within an AWS region; therefore, we recommend that you namespace it with ${App} and ${Env} to reduce the chances of name collision. With the namespace, for example, say your application's name is \"my-app\" , and you deployed the addons with environment test , then the final export name would be my-app-test-MyTableName . After you've made the code change, run copilot env deploy for the change to take effect. Step 2: Import the values from your workload addons. In your workload addons, use the Fn::ImportValue function to import the value that you just exported from your environment addons. Continuing the above example, say I now want my db-front service to access MyTable . I will create a workload addon attached to db-front with an IAM policy that gives it access. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: Scope down the permissions in your real application. This is done so that this blog post isn't too long! Resource : Fn::ImportValue : # <- We import the table ARN from the environment addons. !Sub ${App}-${Env}-MyTableARN # <- The export name that we used. For another example, suppose you did not namespace your Export.Name , and instead gave your export a name like this: Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub MyTableARN You should instead import this value with Fn::ImportValue : !Sub MyTableARN This is how you would hook your workload addons with your environment addons! Reference Environment Addons Values In Workload Manifests If you need to reference any value from your environment addons - for example, adding a secret created in an environment addon to your service - you can use the feature from_cfn in workload manifests to do so. Step 1: Export values from your environment addons Same as when working with workload addons, you need to export the value from your environment addons. Outputs : MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName Step 2: Reference the value using from_cfn in your workload manifests Suppose I want to inject the table name as an environment variable in my db-front service, then my db-front service should have a manifest that looks like name : db-front type : Backend Service // Other configurations... variables : MY_TABLE_NAME : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyTableName Similarly, if you have exported your table name without the namespace like this: Outputs : MyTableName : Value : !Ref MyTable Export : Name : MyTableName Then your manifest should have instead variables : MY_TABLE_NAME : from_cfn : MyTableName Import Values From CloudFormation Stacks In Workload Manifests You can now import values from environment addons' CloudFormation stacks or any other stack in your workload manifest using from_cfn . To reference a value from another CloudFormation stack, users should first export the output value from the source stack. Here is an example of how the Outputs section of a CloudFormation template looks when exporting values from other stacks or creating cross-stack references. Outputs : WebBucketURL : Description : URL for the website bucket Value : !GetAtt WebBucket.WebsiteURL Export : Name : stack-WebsiteUrl # <- Unique export name within the region. To find our more, see this page . For now, from_cfn is added only to the following workload manifest fields. variables : LOG_LEVEL : info WebsiteUrl : from_cfn : stack-WebsiteUrl secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName logging : secretOptions : GIT_USERNAME : from_cfn : stack-SSMGHUserName sidecars : secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName network : vpc : security_groups : - sg-1234 - from_cfn : UserDBAccessSecurityGroup Static Content Delivery With CloudFront You can now bring your own S3 bucket to work with CloudFront for faster static content delivery. More native support for bucket management (for example, bucket creation and asset upload) will be included in future releases. (Optional) Create an S3 bucket If you don't have an existing S3 bucket, use the S3 console/AWS CLI/SDK to create an S3 bucket. Note that for security concerns, we strongly recommend creating a private S3 bucket, which blocks public access by default. Configuring CloudFront in the env manifest You can use CloudFront with an S3 bucket as the origin by configuring the environment manifest as below: cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* More specifically, location is the DNS domain name of the S3 bucket , and the static assets will be accessible at example.com/static/* . (Optional) Update bucket policy If the bucket you use for CloudFront is private , you need to update the bucket policy to grant read access to CloudFront. To use the example above, we need to update the bucket policy for cf-s3-ecs-demo-bucket to { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::cf-s3-ecs-demo-bucket/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } } You can find the CloudFront distribution ID by running copilot env show --resources . What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.25"},{"location":"blogs/release-v125/#aws-copilot-v125-environment-addons-and-static-content-delivery","text":"Posted On: Jan 17, 2023 The AWS Copilot core team is announcing the Copilot v1.25 release. Our public \u0441ommunity \u0441hat is growing and has almost 400 people online and over 2.6k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.25 brings several new features and improvements: Environment Addons : See detailed section . Static Content Delivery With CloudFront : See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.25: Environment addons and static content delivery."},{"location":"blogs/release-v125/#environment-addons","text":"You can now deploy addons associated with your environments. Addons are additional AWS resources that are not integrated in Copilot by default - for example, DynamoDB, RDS, etc. Environment addons are additional resources managed on the environment level. Their lifecycle will be tied to your environment: you will run copilot env deploy to create or update your environment addons; when you run copilot env delete against an environment, Copilot will try to delete its addons as well. If you are already familiar with workload addons, then good news - the experience of managing environment addons is pretty similar.","title":"Environment Addons"},{"location":"blogs/release-v125/#getting-started","text":"","title":"Getting Started"},{"location":"blogs/release-v125/#step-1-model-additional-aws-resources-with-cloudformation","text":"Today, addons only support modeling using CloudFormation. For environment addons, you must: Have App and Env in the Parameters section. Include at least one Resource . Sample CloudFormation template Here is a CloudFormation template example that you can experiment with. AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The name of the environment being deployed. Resources : MyTable : Type : 'AWS::DynamoDB::Table' Properties : TableName : MyEnvAddonsGettingStartedTable AttributeDefinitions : - AttributeName : key AttributeType : S KeySchema : - AttributeName : key KeyType : HASH ProvisionedThroughput : ReadCapacityUnits : 5 WriteCapacityUnits : 2 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName","title":"Step 1: Model additional AWS resources with CloudFormation"},{"location":"blogs/release-v125/#step-2-store-the-cfn-template-under-copilotenvironmentsaddons","text":"If you have run copilot env init , you should already have the folder copilot/environments in your workspace. If you haven't, it's recommended to do so now - you will need it sooner or later. Afterward, your workspace structure may look like this: copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u251c\u2500\u2500 appmesh.yml \u2502 \u2502 \u2514\u2500\u2500 ddb.yml # <- You can have multiple addons. \u2502 \u251c\u2500\u2500 test/ \u2502 \u2502 \u2514\u2500\u2500\u2500 manifest.yml \u2502 \u2514\u2500\u2500 dev/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 web \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 s3.yml # <- A workload addon template. \u2514\u2500\u2500\u2500 manifest.yml","title":"Step 2: Store the CFN template under copilot/environments/addons"},{"location":"blogs/release-v125/#step-3-run-copilot-env-deploy","text":"After you run copilot env deploy , Copilot will scan through the addons folder to look for addons templates. If it is able to find any, it will deploy the templates along with the environment.","title":"Step 3: Run copilot env deploy"},{"location":"blogs/release-v125/#optional-step-4-verify-the-deployment","text":"You can verify the deployment by going to the AWS CloudFormation console in your region. You should be able to find a stack named [app]-[env]-AddonsStack-[random string] . This is a nested stack created under your environment stack, named [app]-[env] .","title":"(Optional) Step 4: Verify the deployment"},{"location":"blogs/release-v125/#feature-parity-with-workload-addons","text":"Environment addons is shipped with all existing features available for workload addons. This means that: You can refer to customized Parameters in addition to the required App and Env . In your templates, you can reference local paths. Copilot will upload those local files and replace the relevant resource properties with the uploaded S3 location. Read here for more!","title":"Feature Parity With Workload Addons"},{"location":"blogs/release-v125/#other-considerations","text":"All environments (in the example above, both \"test\" and \"dev\") will share the same addon templates. Just like today\u2019s workload-level addons, any environment-specific configuration should be specified inside the addon templates via the Conditions and Mappings sections. This is designed to follow CFN\u2019s best practice of reusing templates . AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application name. Env : Type : String Description : The name of the environment being deployed. Conditions : IsTestEnv : !Equals [ !Ref Env , \"test\" ] # <- Use `Conditions` section to specify \"test\"-specific configurations. Mappings : ScalingConfigurationMapByEnv : test : \"DBMinCapacity\" : 0.5 prod : \"DBMinCapacity\" : 1","title":"Other Considerations"},{"location":"blogs/release-v125/#integrating-with-workloads","text":"You can reference values from your environment addons in your workload-level resources.","title":"Integrating With Workloads"},{"location":"blogs/release-v125/#reference-environment-addons-values-in-workload-addon","text":"","title":"Reference Environment Addons Values In Workload Addon"},{"location":"blogs/release-v125/#step-1-export-values-from-your-environment-addons","text":"In an environment addon template, you should add an Outputs section, and define the Output that you want your workload resource to reference. See this doc for CloudFormation Outputs syntax. Taking the example template that we provided - this is the Outputs section that we have added in the example. Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName You can specify any name you like for Export.Name . However, the name must be unique within an AWS region; therefore, we recommend that you namespace it with ${App} and ${Env} to reduce the chances of name collision. With the namespace, for example, say your application's name is \"my-app\" , and you deployed the addons with environment test , then the final export name would be my-app-test-MyTableName . After you've made the code change, run copilot env deploy for the change to take effect.","title":"Step 1: Export values from your environment addons"},{"location":"blogs/release-v125/#step-2-import-the-values-from-your-workload-addons","text":"In your workload addons, use the Fn::ImportValue function to import the value that you just exported from your environment addons. Continuing the above example, say I now want my db-front service to access MyTable . I will create a workload addon attached to db-front with an IAM policy that gives it access. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: Scope down the permissions in your real application. This is done so that this blog post isn't too long! Resource : Fn::ImportValue : # <- We import the table ARN from the environment addons. !Sub ${App}-${Env}-MyTableARN # <- The export name that we used. For another example, suppose you did not namespace your Export.Name , and instead gave your export a name like this: Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub MyTableARN You should instead import this value with Fn::ImportValue : !Sub MyTableARN This is how you would hook your workload addons with your environment addons!","title":"Step 2: Import the values from your workload addons."},{"location":"blogs/release-v125/#reference-environment-addons-values-in-workload-manifests","text":"If you need to reference any value from your environment addons - for example, adding a secret created in an environment addon to your service - you can use the feature from_cfn in workload manifests to do so.","title":"Reference Environment Addons Values In Workload Manifests"},{"location":"blogs/release-v125/#step-1-export-values-from-your-environment-addons_1","text":"Same as when working with workload addons, you need to export the value from your environment addons. Outputs : MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName","title":"Step 1: Export values from your environment addons"},{"location":"blogs/release-v125/#step-2-reference-the-value-using-from_cfn-in-your-workload-manifests","text":"Suppose I want to inject the table name as an environment variable in my db-front service, then my db-front service should have a manifest that looks like name : db-front type : Backend Service // Other configurations... variables : MY_TABLE_NAME : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyTableName Similarly, if you have exported your table name without the namespace like this: Outputs : MyTableName : Value : !Ref MyTable Export : Name : MyTableName Then your manifest should have instead variables : MY_TABLE_NAME : from_cfn : MyTableName","title":"Step 2: Reference the value using from_cfn in your workload manifests"},{"location":"blogs/release-v125/#import-values-from-cloudformation-stacks-in-workload-manifests","text":"You can now import values from environment addons' CloudFormation stacks or any other stack in your workload manifest using from_cfn . To reference a value from another CloudFormation stack, users should first export the output value from the source stack. Here is an example of how the Outputs section of a CloudFormation template looks when exporting values from other stacks or creating cross-stack references. Outputs : WebBucketURL : Description : URL for the website bucket Value : !GetAtt WebBucket.WebsiteURL Export : Name : stack-WebsiteUrl # <- Unique export name within the region. To find our more, see this page . For now, from_cfn is added only to the following workload manifest fields. variables : LOG_LEVEL : info WebsiteUrl : from_cfn : stack-WebsiteUrl secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName logging : secretOptions : GIT_USERNAME : from_cfn : stack-SSMGHUserName sidecars : secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName network : vpc : security_groups : - sg-1234 - from_cfn : UserDBAccessSecurityGroup","title":"Import Values From CloudFormation Stacks In Workload Manifests"},{"location":"blogs/release-v125/#static-content-delivery-with-cloudfront","text":"You can now bring your own S3 bucket to work with CloudFront for faster static content delivery. More native support for bucket management (for example, bucket creation and asset upload) will be included in future releases.","title":"Static Content Delivery With CloudFront"},{"location":"blogs/release-v125/#optional-create-an-s3-bucket","text":"If you don't have an existing S3 bucket, use the S3 console/AWS CLI/SDK to create an S3 bucket. Note that for security concerns, we strongly recommend creating a private S3 bucket, which blocks public access by default.","title":"(Optional) Create an S3 bucket"},{"location":"blogs/release-v125/#configuring-cloudfront-in-the-env-manifest","text":"You can use CloudFront with an S3 bucket as the origin by configuring the environment manifest as below: cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* More specifically, location is the DNS domain name of the S3 bucket , and the static assets will be accessible at example.com/static/* .","title":"Configuring CloudFront in the env manifest"},{"location":"blogs/release-v125/#optional-update-bucket-policy","text":"If the bucket you use for CloudFront is private , you need to update the bucket policy to grant read access to CloudFront. To use the example above, we need to update the bucket policy for cf-s3-ecs-demo-bucket to { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::cf-s3-ecs-demo-bucket/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } } You can find the CloudFront distribution ID by running copilot env show --resources .","title":"(Optional) Update bucket policy"},{"location":"blogs/release-v125/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v126/","text":"AWS Copilot v1.26: Automate rollbacks with CloudWatch alarms, storage init for env addons, and RDWS secrets support Posted On: Feb 20, 2023 The AWS Copilot core team is announcing the Copilot v1.26 release. Our public \u0441ommunity \u0441hat is growing and has over 400 people online and over 2.6k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.26 brings several new features and improvements: Service alarm-based rollback : See detailed section . storage init for environment addons : See detailed section . Request-Driven Web Service secrets support : See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready containerized applications on AWS. From getting started to releasing in production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application instead of writing deployment scripts. See the Overview section for a more detailed introduction to AWS Copilot. Service alarm-based rollback You can now monitor your ECS deployments with custom CloudWatch alarms ! Configure your services to roll back to the last completed deployment if your alarms go into In alarm state during deployment. With the circuit breaker , Copilot has already been rolling back your failed deployments. Now, you can also roll back service deployments that aren't failing, but aren't performing in accordance with the metrics of your choice. In your backend, worker, or load-balanced web service manifest, you may import your own existing CloudWatch alarms: deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] Or have Copilot create a CPU and/or memory utilization alarm for you, with thresholds of your choice: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. For worker services, you may also create an alarm to monitor ApproximateNumberOfMessagesDelayed : deployment : rollback_alarms : messages_delayed : 5 When Copilot creates alarms for you, some defaults are set under the hood: ComparisonOperator : 'GreaterThanOrEqualToThreshold' DatapointsToAlarm : 2 EvaluationPeriods : 3 Period : 60 Statistic : 'Average' With rollback alarms configured in your service manifest, each time you run svc deploy after the initial deployment (when there is no existing deployment to roll back to), ECS will poll your alarms and trigger a rollback if there is a breach. storage init for environment addons Previously, copilot storage init only supported storage addons attached to workloads: you need to run copilot svc deploy in order to deploy the storage, and the storage is deleted along with the service when you run copilot svc delete . Now, you have the option to create environment storage addons: the storage is deployed when you run copilot env deploy , and isn't deleted until you delete the environment by running copilot env delete . Similar to the workload storage, the environment storage is, under the hood, just another environment addon ! Database-Per-Service By Default In the microservice world, it is generally recommended to set up data storage resources that are each private to a microservice, instead of monolith storages that are shared by multiple services. This pattern preserves the core characteristics of microservices - loose coupling. Copilot encourages you to follow this database-per-service pattern. By default, a storage resource that Copilot generates is assumed to be accessed by one service or job. However, each user has its own unique situation. If you do need your data storage to be shared among multiple service, you can modify the Copilot-generated CloudFormation template in order to achieve your goal. Here is an example of prompts that you might see. $ copilot storage init What type of storage would you like to create? > DynamoDB (NoSQL) S3 (Objects) Aurora Serverless (SQL) Which workload needs access to the storage? > api backend What would you like to name this DynamoDB Table? movies Do you want the storage to be created and deleted with the api service? Yes, the storage should be created and deleted at the same time as api > No, the storage should be created and deleted at the environment level You can skip the prompts using the flags. The following command is equivalent to the prompts above: copilot storage init \\ --storage-type \"DynamoDB\" \\ --workload \"api\" \\ --name \"movies\" \\ --lifecycle \"environment\" After you've answered all the prompts or skipped them by using flags, Copilot will generate the CloudFormation template that defines the DynamoDB storage resource under your copilot/environments directory. In addition, it will generate the necessary access policy; here is one that grants \"api\" service access to the \"movies\" storage. The access policy is created as a workload addon, meaning that it is deployed and deleted at the same time as the \"api\" service. copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u2514\u2500\u2500 movies.yml # <- The CloudFormation template that defines the \"movies\" DynamoDB storage. \u2502 \u2514\u2500\u2500 test/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 api \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 movies-access-policy.yml # <- The CloudFormation template that defines the access policy. \u2514\u2500\u2500\u2500 manifest.yml Depending on the storage type, and the type of the workload that is fronting the storage, Copilot may generate different CloudFormation files. Sample files generated for an Aurora Serverless fronted by a Request-Driven Web Service # Example: an Aurora Serverless v2 storage whose lifecycle is at the environment-level, faced by a Request-Driven Web Service. copilot/ \u251c\u2500\u2500 environments/ \u2502 \u2514\u2500\u2500 addons/ \u2502 \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the Aurora Serverless v2 storage. \u2502 \u2514\u2500\u2500 user.yml # An Aurora Serverless v2 storage \u2514\u2500\u2500 api # \"api\" is a Request-Driven Web Service \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the ingress resource. \u2514\u2500\u2500 user-ingress.yml # A security group ingress that grants \"api\" access to the \"api\" storage\" Also check out our storage page for more information! Request-Driven Web Service secrets support You can now add your secrets (from SSM Parameter Store or AWS Secrets Manager) to your App Runner service as environment variables using Copilot. Similar to other service types such as Load-Balanced Web Service, you need to first add the following tags to your secrets: Key Value copilot-application Application name from which you want to access the secret copilot-environment Environment name from which you want to access the secret Then simply update your Request-Driven Web Service manifest with: secrets : GITHUB_TOKEN : GH_TOKEN_SECRET And deploy! Your service can now access the secret as an environment variable. For more detailed use of the secrets field: secrets : # To inject a secret from SecretsManager. # (Recommended) Option 1. Referring to the secret by name. DB : secretsmanager : 'mysql' # You can refer to a specific key in the JSON blob. DB_PASSWORD : secretsmanager : 'mysql:password::' # You can substitute predefined environment variables to keep your manifest succinct. DB_PASSWORD : secretsmanager : 'mysql:password::' # Option 2. Alternatively, you can refer to the secret by ARN. DB : 'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL' # To inject a secret from SSM Parameter Store # Option 1. Referring to the secret by ARN. GITHUB_WEBHOOK_SECRET : 'arn:aws:ssm:us-east-1:615525334900:parameter/GH_WEBHOOK_SECRET' # Option 2. Referring to the secret by name. GITHUB_WEBHOOK_SECRET : GITHUB_WEBHOOK_SECRET See the manifest specification . To learn more about injecting secrets into your services, see the secrets page What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.26"},{"location":"blogs/release-v126/#aws-copilot-v126-automate-rollbacks-with-cloudwatch-alarms-storage-init-for-env-addons-and-rdws-secrets-support","text":"Posted On: Feb 20, 2023 The AWS Copilot core team is announcing the Copilot v1.26 release. Our public \u0441ommunity \u0441hat is growing and has over 400 people online and over 2.6k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.26 brings several new features and improvements: Service alarm-based rollback : See detailed section . storage init for environment addons : See detailed section . Request-Driven Web Service secrets support : See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready containerized applications on AWS. From getting started to releasing in production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application instead of writing deployment scripts. See the Overview section for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.26: Automate rollbacks with CloudWatch alarms, storage init for env addons, and RDWS secrets support"},{"location":"blogs/release-v126/#service-alarm-based-rollback","text":"You can now monitor your ECS deployments with custom CloudWatch alarms ! Configure your services to roll back to the last completed deployment if your alarms go into In alarm state during deployment. With the circuit breaker , Copilot has already been rolling back your failed deployments. Now, you can also roll back service deployments that aren't failing, but aren't performing in accordance with the metrics of your choice. In your backend, worker, or load-balanced web service manifest, you may import your own existing CloudWatch alarms: deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] Or have Copilot create a CPU and/or memory utilization alarm for you, with thresholds of your choice: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. For worker services, you may also create an alarm to monitor ApproximateNumberOfMessagesDelayed : deployment : rollback_alarms : messages_delayed : 5 When Copilot creates alarms for you, some defaults are set under the hood: ComparisonOperator : 'GreaterThanOrEqualToThreshold' DatapointsToAlarm : 2 EvaluationPeriods : 3 Period : 60 Statistic : 'Average' With rollback alarms configured in your service manifest, each time you run svc deploy after the initial deployment (when there is no existing deployment to roll back to), ECS will poll your alarms and trigger a rollback if there is a breach.","title":"Service alarm-based rollback"},{"location":"blogs/release-v126/#storage-init-for-environment-addons","text":"Previously, copilot storage init only supported storage addons attached to workloads: you need to run copilot svc deploy in order to deploy the storage, and the storage is deleted along with the service when you run copilot svc delete . Now, you have the option to create environment storage addons: the storage is deployed when you run copilot env deploy , and isn't deleted until you delete the environment by running copilot env delete . Similar to the workload storage, the environment storage is, under the hood, just another environment addon !","title":"storage init for environment addons"},{"location":"blogs/release-v126/#database-per-service-by-default","text":"In the microservice world, it is generally recommended to set up data storage resources that are each private to a microservice, instead of monolith storages that are shared by multiple services. This pattern preserves the core characteristics of microservices - loose coupling. Copilot encourages you to follow this database-per-service pattern. By default, a storage resource that Copilot generates is assumed to be accessed by one service or job. However, each user has its own unique situation. If you do need your data storage to be shared among multiple service, you can modify the Copilot-generated CloudFormation template in order to achieve your goal. Here is an example of prompts that you might see. $ copilot storage init What type of storage would you like to create? > DynamoDB (NoSQL) S3 (Objects) Aurora Serverless (SQL) Which workload needs access to the storage? > api backend What would you like to name this DynamoDB Table? movies Do you want the storage to be created and deleted with the api service? Yes, the storage should be created and deleted at the same time as api > No, the storage should be created and deleted at the environment level You can skip the prompts using the flags. The following command is equivalent to the prompts above: copilot storage init \\ --storage-type \"DynamoDB\" \\ --workload \"api\" \\ --name \"movies\" \\ --lifecycle \"environment\" After you've answered all the prompts or skipped them by using flags, Copilot will generate the CloudFormation template that defines the DynamoDB storage resource under your copilot/environments directory. In addition, it will generate the necessary access policy; here is one that grants \"api\" service access to the \"movies\" storage. The access policy is created as a workload addon, meaning that it is deployed and deleted at the same time as the \"api\" service. copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u2514\u2500\u2500 movies.yml # <- The CloudFormation template that defines the \"movies\" DynamoDB storage. \u2502 \u2514\u2500\u2500 test/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 api \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 movies-access-policy.yml # <- The CloudFormation template that defines the access policy. \u2514\u2500\u2500\u2500 manifest.yml Depending on the storage type, and the type of the workload that is fronting the storage, Copilot may generate different CloudFormation files. Sample files generated for an Aurora Serverless fronted by a Request-Driven Web Service # Example: an Aurora Serverless v2 storage whose lifecycle is at the environment-level, faced by a Request-Driven Web Service. copilot/ \u251c\u2500\u2500 environments/ \u2502 \u2514\u2500\u2500 addons/ \u2502 \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the Aurora Serverless v2 storage. \u2502 \u2514\u2500\u2500 user.yml # An Aurora Serverless v2 storage \u2514\u2500\u2500 api # \"api\" is a Request-Driven Web Service \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the ingress resource. \u2514\u2500\u2500 user-ingress.yml # A security group ingress that grants \"api\" access to the \"api\" storage\" Also check out our storage page for more information!","title":"Database-Per-Service By Default"},{"location":"blogs/release-v126/#request-driven-web-service-secrets-support","text":"You can now add your secrets (from SSM Parameter Store or AWS Secrets Manager) to your App Runner service as environment variables using Copilot. Similar to other service types such as Load-Balanced Web Service, you need to first add the following tags to your secrets: Key Value copilot-application Application name from which you want to access the secret copilot-environment Environment name from which you want to access the secret Then simply update your Request-Driven Web Service manifest with: secrets : GITHUB_TOKEN : GH_TOKEN_SECRET And deploy! Your service can now access the secret as an environment variable. For more detailed use of the secrets field: secrets : # To inject a secret from SecretsManager. # (Recommended) Option 1. Referring to the secret by name. DB : secretsmanager : 'mysql' # You can refer to a specific key in the JSON blob. DB_PASSWORD : secretsmanager : 'mysql:password::' # You can substitute predefined environment variables to keep your manifest succinct. DB_PASSWORD : secretsmanager : 'mysql:password::' # Option 2. Alternatively, you can refer to the secret by ARN. DB : 'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL' # To inject a secret from SSM Parameter Store # Option 1. Referring to the secret by ARN. GITHUB_WEBHOOK_SECRET : 'arn:aws:ssm:us-east-1:615525334900:parameter/GH_WEBHOOK_SECRET' # Option 2. Referring to the secret by name. GITHUB_WEBHOOK_SECRET : GITHUB_WEBHOOK_SECRET See the manifest specification . To learn more about injecting secrets into your services, see the secrets page","title":"Request-Driven Web Service secrets support"},{"location":"blogs/release-v126/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v127/","text":"AWS Copilot v1.27: Extend Copilot templates, additional routing rule supports, preview differences, and sidecar improvements! Posted On: Mar 28, 2023 The AWS Copilot core team is announcing the Copilot v1.27 release \ud83d\ude80. Our public \u0441ommunity \u0441hat is growing and has over 400 people online and over 2.7k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.27 is a big release with several new features and improvements: Extend Copilot templates : You can now customize any properties in Copilot-generated AWS CloudFormation templates with the AWS Cloud Development Kit (CDK) or YAML Patch overrides. See detailed section . Enable multiple listeners and listener rules : You can define multiple host-based or path listener rules for application load balancers or multiple listeners on different ports and protocols for network load balancers . See detailed section . Preview CloudFormation template changes : You can now run copilot [noun] package or copilot [noun] deploy commands with the --diff flag to show differences between the last deployed CloudFormation template and local changes. See detailed section . Build and push container images for sidecars : Add support for image.build to build and push sidecar containers from local Dockerfiles. See detailed section . Environment file support for sidecars : Add support for env_file to push a local .env file for sidecar containers. See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready containerized applications on AWS. From getting started to releasing in production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application instead of writing deployment scripts. See the Overview section for a more detailed introduction to AWS Copilot. Extend Copilot-generated AWS CloudFormation templates AWS Copilot enables builders to quickly get started with containerized applications through the copilot init command and following prompts. Developers can then grow their applications by editing and deploying manifest infrastructure-as-code files. And now with v1.27, developers can extend any Copilot-generated CloudFormation template with the copilot [noun] override command, enabling them to fully customize their infrastructure. AWS Cloud Development Kit (CDK) Overrides You can use the CDK to extend your CloudFormation templates when you need the expressive power and safety of a programming language. After running the copilot [noun] override command, Copilot will generate a CDK application under the copilot/[name]/override directory: . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json You can get started with adding, removing, or replacing properties by editing the stack.ts file or following the instructions in the README.md . View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } Once you run copilot [noun] deploy or your continuous delivery pipeline is triggered, Copilot will deploy the overriden template. To learn more about extending with the CDK, checkout the guide . YAML Patch Overrides You can use YAML Patch overrides for a more lightweight experience when 1) you do not want to have a dependency on any other tooling and framework, or 2) you have to write only a handful of modifications. After running the copilot [noun] override command, Copilot will generate a sample cfn.patches.yml file under the copilot/[name]/override directory: . \u251c\u2500\u2500 cfn.patches.yml \u2514\u2500\u2500 README.md You can get started with adding, removing, or replacing properties by editing the cfn.patches.yaml file. View sample cfn.patches.yml - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool Once you run copilot [noun] deploy or your continuous delivery pipeline is triggered, Copilot will deploy the overriden template. To learn more about extending with YAML patches, check out the guide . Preview AWS CloudFormation template changes copilot [noun] package --diff You can now run copilot [noun] package --diff to see the diff between your local changes and the latest deployed template. The program will exit after it prints the diff. The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error-producing diffs $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled If the diff looks good to you, you can run copilot [noun] package again to write the template file and parameter file to your designated directory. copilot [noun] deploy --diff Similar to copilot [noun] package --diff , you can run copilot [noun] deploy --diff to see the same diff. However, instead of exiting after printing the diff, Copilot will follow up with the question: Continue with the deployment? [y/N] . $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) If the diff looks good to you, enter \"y\" to deploy. Otherwise, enter \"N\" to make adjustments as needed! Enable multiple listeners and listener rules for Load Balancers You can now configure additional listener rules for Application Load Balancer as well as additional listeners for Network Load Balancer. Add multiple host-based or path-based listener rules to your Application Load Balancer You can configure additional listener rules for ALB with the new field http.additional_rules . Let's learn through an example. If you want your service to handle traffic to paths customerdb , admin and superadmin with different container ports. name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : path : '/' additional_rules : # The new field \"additional_rules\". - path : 'customerdb' target_port : 8081 # Optional. Defaults to the `image.port`. - path : 'admin' target_container : nginx # Optional. Defaults to the main container. target_port : 8082 - path : 'superAdmin' target_port : 80 sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest With this manifest, requests to \u201c/\u201d will be routed to the main container on port 8080. Requests to \"/customerdb\" will be routed to the main container on port 8081, , \"/admin\" to nginx on port 8082 and \"/superAdmin\" to nginx on port 80. Note that the third listener rule just defined 'target_port: 80' and Copilot was able to intelligently route traffic from the '/superAdmin' to the nginx sidecar container. It is also possible to configure the container port that handles the requests to \u201c/\u201d via the new field http.target_port Add multiple port and protocol listeners to your Network Load Balancers You can configure additional listeners for NLB with the new field nlb.additional_listeners . Let's learn through an example. name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile http : false nlb : port : 8080/tcp additional_listeners : - port : 8081/tcp - port : 8082/tcp target_port : 8085 # Optional. Default is set 8082. target_container : nginx # Optional. Default is set to the main container. sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest With this manifest, requests to NLB port 8080 will be routed to the main container\u2019s port 8080. Requests to the NLB on port 8081 will be routed to the port 8081 of the main container. We need to notice here that the default value of the target_port will be the same as that of the corresponding NLB port. The requests to NLB port 8082 will be routed to port 8085 of the sidecar container named nginx. Sidecar improvements You can now build and push container images for sidecar containers just like you can for your main container. Additionally, you can now specify the paths to local environment files for sidecar containers. Build and push container images for sidecar containers Copilot now allows users to build sidecar container images natively from Dockerfiles and push them to ECR. In order to take advantage of this feature, users can modify their workload manifests in several ways. The first option is to simply specify the path to the Dockerfile as a string. sidecars : nginx : image : build : path/to/dockerfile Alternatively, you can specify build as a map, which allows for more advanced customization. This includes specifying the Dockerfile path, context directory, target build stage, cache from images, and build arguments. sidecars : nginx : image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image : tag args : value Another option is to specify an existing image URI instead of building from a Dockerfile. sidecars : nginx : image : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest Or you can provide the image URI using the location field. sidecars : nginx : image : location : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest Upload local environment files for sidecar containers You can now specify an environment file to upload to any sidecar container in your task. Previously, you could only specify an environment file for your main task container: # in copilot/{service name}/manifest.yml env_file : log.env Now, you can do the same in a sidecar definition: sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 It also works with the managed logging sidecar: logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env If you specify the same file more than once in different sidecars, Copilot will only upload the file to S3 once.","title":"Release v1.27"},{"location":"blogs/release-v127/#aws-copilot-v127-extend-copilot-templates-additional-routing-rule-supports-preview-differences-and-sidecar-improvements","text":"","title":"AWS Copilot v1.27: Extend Copilot templates, additional routing rule supports, preview differences, and sidecar improvements!"},{"location":"blogs/release-v127/#posted-on-mar-28-2023","text":"The AWS Copilot core team is announcing the Copilot v1.27 release \ud83d\ude80. Our public \u0441ommunity \u0441hat is growing and has over 400 people online and over 2.7k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.27 is a big release with several new features and improvements: Extend Copilot templates : You can now customize any properties in Copilot-generated AWS CloudFormation templates with the AWS Cloud Development Kit (CDK) or YAML Patch overrides. See detailed section . Enable multiple listeners and listener rules : You can define multiple host-based or path listener rules for application load balancers or multiple listeners on different ports and protocols for network load balancers . See detailed section . Preview CloudFormation template changes : You can now run copilot [noun] package or copilot [noun] deploy commands with the --diff flag to show differences between the last deployed CloudFormation template and local changes. See detailed section . Build and push container images for sidecars : Add support for image.build to build and push sidecar containers from local Dockerfiles. See detailed section . Environment file support for sidecars : Add support for env_file to push a local .env file for sidecar containers. See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready containerized applications on AWS. From getting started to releasing in production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application instead of writing deployment scripts. See the Overview section for a more detailed introduction to AWS Copilot.","title":"Posted On: Mar 28, 2023"},{"location":"blogs/release-v127/#extend-copilot-generated-aws-cloudformation-templates","text":"AWS Copilot enables builders to quickly get started with containerized applications through the copilot init command and following prompts. Developers can then grow their applications by editing and deploying manifest infrastructure-as-code files. And now with v1.27, developers can extend any Copilot-generated CloudFormation template with the copilot [noun] override command, enabling them to fully customize their infrastructure.","title":"Extend Copilot-generated AWS CloudFormation templates"},{"location":"blogs/release-v127/#aws-cloud-development-kit-cdk-overrides","text":"You can use the CDK to extend your CloudFormation templates when you need the expressive power and safety of a programming language. After running the copilot [noun] override command, Copilot will generate a CDK application under the copilot/[name]/override directory: . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json You can get started with adding, removing, or replacing properties by editing the stack.ts file or following the instructions in the README.md . View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } Once you run copilot [noun] deploy or your continuous delivery pipeline is triggered, Copilot will deploy the overriden template. To learn more about extending with the CDK, checkout the guide .","title":"AWS Cloud Development Kit (CDK) Overrides"},{"location":"blogs/release-v127/#yaml-patch-overrides","text":"You can use YAML Patch overrides for a more lightweight experience when 1) you do not want to have a dependency on any other tooling and framework, or 2) you have to write only a handful of modifications. After running the copilot [noun] override command, Copilot will generate a sample cfn.patches.yml file under the copilot/[name]/override directory: . \u251c\u2500\u2500 cfn.patches.yml \u2514\u2500\u2500 README.md You can get started with adding, removing, or replacing properties by editing the cfn.patches.yaml file. View sample cfn.patches.yml - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool Once you run copilot [noun] deploy or your continuous delivery pipeline is triggered, Copilot will deploy the overriden template. To learn more about extending with YAML patches, check out the guide .","title":"YAML Patch Overrides"},{"location":"blogs/release-v127/#preview-aws-cloudformation-template-changes","text":"","title":"Preview AWS CloudFormation template changes"},{"location":"blogs/release-v127/#copilot-noun-package-diff","text":"You can now run copilot [noun] package --diff to see the diff between your local changes and the latest deployed template. The program will exit after it prints the diff. The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error-producing diffs $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled If the diff looks good to you, you can run copilot [noun] package again to write the template file and parameter file to your designated directory.","title":"copilot [noun] package --diff"},{"location":"blogs/release-v127/#copilot-noun-deploy-diff","text":"Similar to copilot [noun] package --diff , you can run copilot [noun] deploy --diff to see the same diff. However, instead of exiting after printing the diff, Copilot will follow up with the question: Continue with the deployment? [y/N] . $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) If the diff looks good to you, enter \"y\" to deploy. Otherwise, enter \"N\" to make adjustments as needed!","title":"copilot [noun] deploy --diff"},{"location":"blogs/release-v127/#enable-multiple-listeners-and-listener-rules-for-load-balancers","text":"You can now configure additional listener rules for Application Load Balancer as well as additional listeners for Network Load Balancer.","title":"Enable multiple listeners and listener rules for Load Balancers"},{"location":"blogs/release-v127/#add-multiple-host-based-or-path-based-listener-rules-to-your-application-load-balancer","text":"You can configure additional listener rules for ALB with the new field http.additional_rules . Let's learn through an example. If you want your service to handle traffic to paths customerdb , admin and superadmin with different container ports. name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : path : '/' additional_rules : # The new field \"additional_rules\". - path : 'customerdb' target_port : 8081 # Optional. Defaults to the `image.port`. - path : 'admin' target_container : nginx # Optional. Defaults to the main container. target_port : 8082 - path : 'superAdmin' target_port : 80 sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest With this manifest, requests to \u201c/\u201d will be routed to the main container on port 8080. Requests to \"/customerdb\" will be routed to the main container on port 8081, , \"/admin\" to nginx on port 8082 and \"/superAdmin\" to nginx on port 80. Note that the third listener rule just defined 'target_port: 80' and Copilot was able to intelligently route traffic from the '/superAdmin' to the nginx sidecar container. It is also possible to configure the container port that handles the requests to \u201c/\u201d via the new field http.target_port","title":"Add multiple host-based or path-based listener rules to your Application Load Balancer"},{"location":"blogs/release-v127/#add-multiple-port-and-protocol-listeners-to-your-network-load-balancers","text":"You can configure additional listeners for NLB with the new field nlb.additional_listeners . Let's learn through an example. name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile http : false nlb : port : 8080/tcp additional_listeners : - port : 8081/tcp - port : 8082/tcp target_port : 8085 # Optional. Default is set 8082. target_container : nginx # Optional. Default is set to the main container. sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest With this manifest, requests to NLB port 8080 will be routed to the main container\u2019s port 8080. Requests to the NLB on port 8081 will be routed to the port 8081 of the main container. We need to notice here that the default value of the target_port will be the same as that of the corresponding NLB port. The requests to NLB port 8082 will be routed to port 8085 of the sidecar container named nginx.","title":"Add multiple port and protocol listeners to your Network Load Balancers"},{"location":"blogs/release-v127/#sidecar-improvements","text":"You can now build and push container images for sidecar containers just like you can for your main container. Additionally, you can now specify the paths to local environment files for sidecar containers.","title":"Sidecar improvements"},{"location":"blogs/release-v127/#build-and-push-container-images-for-sidecar-containers","text":"Copilot now allows users to build sidecar container images natively from Dockerfiles and push them to ECR. In order to take advantage of this feature, users can modify their workload manifests in several ways. The first option is to simply specify the path to the Dockerfile as a string. sidecars : nginx : image : build : path/to/dockerfile Alternatively, you can specify build as a map, which allows for more advanced customization. This includes specifying the Dockerfile path, context directory, target build stage, cache from images, and build arguments. sidecars : nginx : image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image : tag args : value Another option is to specify an existing image URI instead of building from a Dockerfile. sidecars : nginx : image : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest Or you can provide the image URI using the location field. sidecars : nginx : image : location : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest","title":"Build and push container images for sidecar containers"},{"location":"blogs/release-v127/#upload-local-environment-files-for-sidecar-containers","text":"You can now specify an environment file to upload to any sidecar container in your task. Previously, you could only specify an environment file for your main task container: # in copilot/{service name}/manifest.yml env_file : log.env Now, you can do the same in a sidecar definition: sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 It also works with the managed logging sidecar: logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env If you specify the same file more than once in different sidecars, Copilot will only upload the file to S3 once.","title":"Upload local environment files for sidecar containers"},{"location":"blogs/release-v128/","text":"AWS Copilot v1.28: Static Site service type is here! Posted On: May 24, 2023 The AWS Copilot core team is announcing the Copilot v1.28 release. Special thanks to @interu , @0xO0O0 , @andreas-bergstrom who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 400 people online and over 2.9k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.28 brings several new features and improvements: Static Site service type : You can now deploy and host static websites with AWS S3. See detailed section . Container Images Parallel Build : You can now build main container and sidecar container images in parallel. With parallel build, you can reduce the overall time it takes build and push container images to AWS ECR. What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Static Site service type Copilot's newest workload type, Static Site, provisions and configures everything you need to create a static website hosted by Amazon S3 and fronted by an Amazon CloudFront distribution. Let's say you want to launch a straightforward, read-only website. You don't need a backend or a database, you don't need to personalize the site based on the user or store any information. Make a static site! This workload type is relatively simple and quick to launch, and is highly performant. Static Site Upload Experience After you have created your static assets (HTML file and any CSS and/or JavaScript, etc. files), begin your Static Site creation with the copilot init command, or copilot svc init if you've already run copilot app init and copilot env init . You may use the --sources flag to pass in the path(s) (relative to your project root) to your static asset directories and/or files. Alternatively, you may select the directories/files when prompted. A manifest will be populated and stored in the copilot/[service name] folder. There, you may adjust your asset specifications if you'd like. By default, all directories will be uploaded recursively. If that's not what you want, leverage the exclude and reinclude fields to add filters. The available pattern symbols: * : Matches everything ? : Matches any single character [sequence] : Matches any character in sequence [!sequence] : Matches any character not in sequence # The manifest for the \"example\" service. # Read the full specification for the \"Static Site\" type at: # https://aws.github.io/copilot-cli/docs/manifest/static-site/ # Your service name will be used in naming your resources like S3 buckets, etc. name : example type : Static Site http : alias : 'example.com' files : - source : src/someDirectory recursive : true - source : someFile.html # You can override any of the values defined above by environment. # environments: # test: # files: # - source: './blob' # recursive: true # destination: 'assets' # exclude: '*' # reinclude: # - '*.txt' # - '*.png' For more on exclude and reinclude filters, go here . The copilot deploy or copilot svc deploy command will provision and launch your static website: creating an S3 bucket and uploading your chosen local files to that bucket, and generating a CloudFront distribution with the S3 bucket as the origin. Under the hood, your Static Site service will have a CloudFormation stack, just like other Copilot workloads. Note Server access logging for the Static Site S3 bucket is not enabled by default, because object uploading is managed by Copilot. What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.28"},{"location":"blogs/release-v128/#aws-copilot-v128-static-site-service-type-is-here","text":"Posted On: May 24, 2023 The AWS Copilot core team is announcing the Copilot v1.28 release. Special thanks to @interu , @0xO0O0 , @andreas-bergstrom who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has over 400 people online and over 2.9k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.28 brings several new features and improvements: Static Site service type : You can now deploy and host static websites with AWS S3. See detailed section . Container Images Parallel Build : You can now build main container and sidecar container images in parallel. With parallel build, you can reduce the overall time it takes build and push container images to AWS ECR. What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production ready containerized applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision infrastructure as code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of micro service architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.28: Static Site service type is here!"},{"location":"blogs/release-v128/#static-site-service-type","text":"Copilot's newest workload type, Static Site, provisions and configures everything you need to create a static website hosted by Amazon S3 and fronted by an Amazon CloudFront distribution. Let's say you want to launch a straightforward, read-only website. You don't need a backend or a database, you don't need to personalize the site based on the user or store any information. Make a static site! This workload type is relatively simple and quick to launch, and is highly performant.","title":"Static Site service type"},{"location":"blogs/release-v128/#static-site-upload-experience","text":"After you have created your static assets (HTML file and any CSS and/or JavaScript, etc. files), begin your Static Site creation with the copilot init command, or copilot svc init if you've already run copilot app init and copilot env init . You may use the --sources flag to pass in the path(s) (relative to your project root) to your static asset directories and/or files. Alternatively, you may select the directories/files when prompted. A manifest will be populated and stored in the copilot/[service name] folder. There, you may adjust your asset specifications if you'd like. By default, all directories will be uploaded recursively. If that's not what you want, leverage the exclude and reinclude fields to add filters. The available pattern symbols: * : Matches everything ? : Matches any single character [sequence] : Matches any character in sequence [!sequence] : Matches any character not in sequence # The manifest for the \"example\" service. # Read the full specification for the \"Static Site\" type at: # https://aws.github.io/copilot-cli/docs/manifest/static-site/ # Your service name will be used in naming your resources like S3 buckets, etc. name : example type : Static Site http : alias : 'example.com' files : - source : src/someDirectory recursive : true - source : someFile.html # You can override any of the values defined above by environment. # environments: # test: # files: # - source: './blob' # recursive: true # destination: 'assets' # exclude: '*' # reinclude: # - '*.txt' # - '*.png' For more on exclude and reinclude filters, go here . The copilot deploy or copilot svc deploy command will provision and launch your static website: creating an S3 bucket and uploading your chosen local files to that bucket, and generating a CloudFront distribution with the S3 bucket as the origin. Under the hood, your Static Site service will have a CloudFormation stack, just like other Copilot workloads. Note Server access logging for the Static Site S3 bucket is not enabled by default, because object uploading is managed by Copilot.","title":"Static Site Upload Experience"},{"location":"blogs/release-v128/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v129/","text":"AWS Copilot v1.29: Pipeline template overrides and CloudFront cache invalidation! Posted On: July 19, 2023 The AWS Copilot core team is announcing the Copilot v1.29 release. Special thanks to @tjhorner and @build-with-aws-copilot , who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has nearly 500 people online and over 2.9k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.29 brings big enhancements to help you develop more flexibly and efficiently: Pipeline overrides : In v1.27.0 , we introduced CDK and YAML patch overrides for workload and environment CloudFormation templates. Now you can enjoy the same extensibility for Copilot pipeline templates! See detailed section . Static Site enhancements : We've improved our latest workload type with CloudFront cache invalidation and Static Site-tailored operational commands. See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Pipeline overrides Copilot pipelines are much more nimble and extensible with CDK and YAML path overrides! This feature provides a safe and easy way to modify your pipeline's CloudFormation template. Much like the other override commands, you can run copilot pipeline override to customize that CloudFormation template, with the option of using either the CDK or YAML. A new --diff flag for copilot pipeline deploy enables you to preview the differences between your last deployed CloudFormation template and any local changes before the deployment is executed. Copilot will confirm that you'd like to proceed; use the --yes flag to skip the confirmation: copilot pipeline deploy --diff --yes . To learn more about overrides and to see examples, check out the CDK overrides guide and YAML patch overrides guide . Static Site enhancements For more dynamic development, Copilot will now invalidate the CloudFront edge cache each time you redeploy a Static Site workload, enabling you to see and deliver your updated content right away. Our operational commands have some Static Site-specific additions as well: copilot svc show for Static Site workloads now includes a tree representation of your S3 bucket's contents. Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg And copilot svc status for Static Site workloads includes the S3 bucket's object count and total size. What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.29"},{"location":"blogs/release-v129/#aws-copilot-v129-pipeline-template-overrides-and-cloudfront-cache-invalidation","text":"Posted On: July 19, 2023 The AWS Copilot core team is announcing the Copilot v1.29 release. Special thanks to @tjhorner and @build-with-aws-copilot , who contributed to this release. Our public \u0441ommunity \u0441hat is growing and has nearly 500 people online and over 2.9k stars on GitHub . Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.29 brings big enhancements to help you develop more flexibly and efficiently: Pipeline overrides : In v1.27.0 , we introduced CDK and YAML patch overrides for workload and environment CloudFormation templates. Now you can enjoy the same extensibility for Copilot pipeline templates! See detailed section . Static Site enhancements : We've improved our latest workload type with CloudFront cache invalidation and Static Site-tailored operational commands. See detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.29: Pipeline template overrides and CloudFront cache invalidation!"},{"location":"blogs/release-v129/#pipeline-overrides","text":"Copilot pipelines are much more nimble and extensible with CDK and YAML path overrides! This feature provides a safe and easy way to modify your pipeline's CloudFormation template. Much like the other override commands, you can run copilot pipeline override to customize that CloudFormation template, with the option of using either the CDK or YAML. A new --diff flag for copilot pipeline deploy enables you to preview the differences between your last deployed CloudFormation template and any local changes before the deployment is executed. Copilot will confirm that you'd like to proceed; use the --yes flag to skip the confirmation: copilot pipeline deploy --diff --yes . To learn more about overrides and to see examples, check out the CDK overrides guide and YAML patch overrides guide .","title":"Pipeline overrides"},{"location":"blogs/release-v129/#static-site-enhancements","text":"For more dynamic development, Copilot will now invalidate the CloudFront edge cache each time you redeploy a Static Site workload, enabling you to see and deliver your updated content right away. Our operational commands have some Static Site-specific additions as well: copilot svc show for Static Site workloads now includes a tree representation of your S3 bucket's contents. Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg And copilot svc status for Static Site workloads includes the S3 bucket's object count and total size.","title":"Static Site enhancements"},{"location":"blogs/release-v129/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v130/","text":"AWS Copilot v1.30: copilot run local command, Ctrl-C functionality, pre- and post-deployments, copilot deploy enhancements Posted On: August 30, 2023 The AWS Copilot core team is announcing the Copilot v1.30 release. Special thanks to @Varun359 , who contributed to this release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3k stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.30 brings big enhancements to help you develop more flexibly and efficiently: copilot run local : Copilot has a new operational command that enables you to run services locally! See detailed section . Roll back deployments with Ctrl-C : The wait is over! Roll back your CloudFormation deployment right from the terminal, whenever you want. See detailed section . Pre- and post- deployment pipeline actions : Insert db migrations, integration tests, and/or other actions before or after workload/environment deployments. See detailed section . copilot deploy enhancements : We've increased the scope and flexibility of this command. See detailed section . --detach flag : Skip progress of CloudFormation stack events on your terminal. see detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. copilot run local As you're developing changes to your services, copilot run local speeds up your iteration loop by enabling you to test changes to your code without the overhead of a deployment. To get started, you first need to deploy a version of your service by running copilot svc deploy . After you have your service deployed, you can start making modifications to your code. When you're ready to test your changes, run copilot run local and Copilot will do the following for both your primary container and any sidecars: Build or pull the image specified by image Get the values for secrets specified by secrets Get credentials for your current IAM user/role Run images from step 1 with variables , secrets from step 2, and IAM credentials from step 3 on your local machine Logs from your service are streamed to your terminal. When you're finished testing, type Ctrl-C and Copilot will clean up all of running containers before exiting! Roll back deployments with Ctrl-C While waiting for your service, job, or environment to deploy, you can now hit Ctrl-C to cancel the update. This will either rollback your stack to its previous configuration, or delete the stack if it was being deployed for the first time. If you hit 'Ctrl-C' a second time, the program will exit, but the stack rollback/deletion will continue. Ctrl-C is now enabled for copilot svc deploy , copilot job deploy , copilot env deploy and copilot deploy commands. Deployment actions Maybe you want to run a database migration before a workload deployment, and the workload's health check depends on the update. Or maybe you'd like your pipeline to execute some end-to-end or integration tests after a workload deployment. These actions are now possible with Copilot pipelines ! While Copilot has supported 'test_commands' for some time now, pre- and post-deployment actions extend pipeline functionality and flexibility. For test_commands , Copilot inlines a buildspec with your command strings into the pipeline Cloudformation template; for pre_deployments and post_deployments , Copilot reads the buildspec(s) in your local workspace. You control all the configuration for these actions right in your pipeline manifest . You may have multiple pre-deployment actions and multiple post-deployment actions; for each one, you must provide the path to the buildspec , relative to your project root, in the [pre_/post_]deployments.buildspec field. Copilot will generate a CodeBuild project for your action, deployed in the same region as the pipeline and app. Use Copilot commands\u2013such as copilot svc exec or copilot task run \u2013within your buildspec to access the VPC of the environment being deployed or deployed to; you may use the $COPILOT_APPLICATION_NAME and $COPILOT_ENVIRONMENT_NAME Copilot environment variables to reuse your buildspec file for multiple environments. You can even specify the order of actions within your pre-deployment and post-deployment groups by using the depends_on field; by default, the actions will run in parallel. post_deployments and test_commands are mutually exclusive. stages : - name : test require_approval : true pre_deployments : db_migration : # The name of this action. buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # The path to the buildspec. deployments : # Optional, ordering of deployments. orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # Optional, ordering of actions. copilot deploy enhancements copilot deploy now supports initialization of workloads, and initialization and deployment of environments. You can now start from a repo containing only an app and manifests, and with a single command, deploy a working environment and service. You can also deploy environments before deploying your desired workload. For example, imagine you would like to clone and deploy a repository containing manifests for a \"prod\" environment and \"frontend\" and \"backend\" services. copilot deploy will now prompt you to initialize your workload and environment if necessary, ask you for credentials for the account in which you'd like to deploy the environment, then deploy it and the workload. $ git clone myrepo $ cd myrepo $ copilot app init myapp $ copilot deploy -n frontend -e prod To specify the profile and region where the environment will be deployed: $ copilot deploy --region us-west-2 --profile prod-profile -e prod --init-env To skip deploying the environment if it already exists: $ copilot deploy --deploy-env = false Use --detach to deploy without waiting Typically, after you run any deploy commands, Copilot prints the progress to your terminal and waits for the deployment to finish. Now, if you don't want Copilot to wait, you can use the --detach flag. Copilot will trigger the deployment and exit the program, without printing the progress or waiting for the deployment. The --detach flag is available for copilot svc deploy , copilot job deploy , copilot env deploy and copilot deploy commands. What\u2019s next? Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"Release v1.30"},{"location":"blogs/release-v130/#aws-copilot-v130-copilot-run-local-command-ctrl-c-functionality-pre-and-post-deployments-copilot-deploy-enhancements","text":"Posted On: August 30, 2023 The AWS Copilot core team is announcing the Copilot v1.30 release. Special thanks to @Varun359 , who contributed to this release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3k stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.30 brings big enhancements to help you develop more flexibly and efficiently: copilot run local : Copilot has a new operational command that enables you to run services locally! See detailed section . Roll back deployments with Ctrl-C : The wait is over! Roll back your CloudFormation deployment right from the terminal, whenever you want. See detailed section . Pre- and post- deployment pipeline actions : Insert db migrations, integration tests, and/or other actions before or after workload/environment deployments. See detailed section . copilot deploy enhancements : We've increased the scope and flexibility of this command. See detailed section . --detach flag : Skip progress of CloudFormation stack events on your terminal. see detailed section . What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.30: copilot run local command, Ctrl-C functionality, pre- and post-deployments, copilot deploy enhancements"},{"location":"blogs/release-v130/#copilot-run-local","text":"As you're developing changes to your services, copilot run local speeds up your iteration loop by enabling you to test changes to your code without the overhead of a deployment. To get started, you first need to deploy a version of your service by running copilot svc deploy . After you have your service deployed, you can start making modifications to your code. When you're ready to test your changes, run copilot run local and Copilot will do the following for both your primary container and any sidecars: Build or pull the image specified by image Get the values for secrets specified by secrets Get credentials for your current IAM user/role Run images from step 1 with variables , secrets from step 2, and IAM credentials from step 3 on your local machine Logs from your service are streamed to your terminal. When you're finished testing, type Ctrl-C and Copilot will clean up all of running containers before exiting!","title":"copilot run local"},{"location":"blogs/release-v130/#roll-back-deployments-with-ctrl-c","text":"While waiting for your service, job, or environment to deploy, you can now hit Ctrl-C to cancel the update. This will either rollback your stack to its previous configuration, or delete the stack if it was being deployed for the first time. If you hit 'Ctrl-C' a second time, the program will exit, but the stack rollback/deletion will continue. Ctrl-C is now enabled for copilot svc deploy , copilot job deploy , copilot env deploy and copilot deploy commands.","title":"Roll back deployments with Ctrl-C"},{"location":"blogs/release-v130/#deployment-actions","text":"Maybe you want to run a database migration before a workload deployment, and the workload's health check depends on the update. Or maybe you'd like your pipeline to execute some end-to-end or integration tests after a workload deployment. These actions are now possible with Copilot pipelines ! While Copilot has supported 'test_commands' for some time now, pre- and post-deployment actions extend pipeline functionality and flexibility. For test_commands , Copilot inlines a buildspec with your command strings into the pipeline Cloudformation template; for pre_deployments and post_deployments , Copilot reads the buildspec(s) in your local workspace. You control all the configuration for these actions right in your pipeline manifest . You may have multiple pre-deployment actions and multiple post-deployment actions; for each one, you must provide the path to the buildspec , relative to your project root, in the [pre_/post_]deployments.buildspec field. Copilot will generate a CodeBuild project for your action, deployed in the same region as the pipeline and app. Use Copilot commands\u2013such as copilot svc exec or copilot task run \u2013within your buildspec to access the VPC of the environment being deployed or deployed to; you may use the $COPILOT_APPLICATION_NAME and $COPILOT_ENVIRONMENT_NAME Copilot environment variables to reuse your buildspec file for multiple environments. You can even specify the order of actions within your pre-deployment and post-deployment groups by using the depends_on field; by default, the actions will run in parallel. post_deployments and test_commands are mutually exclusive. stages : - name : test require_approval : true pre_deployments : db_migration : # The name of this action. buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # The path to the buildspec. deployments : # Optional, ordering of deployments. orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # Optional, ordering of actions.","title":"Deployment actions"},{"location":"blogs/release-v130/#copilot-deploy-enhancements","text":"copilot deploy now supports initialization of workloads, and initialization and deployment of environments. You can now start from a repo containing only an app and manifests, and with a single command, deploy a working environment and service. You can also deploy environments before deploying your desired workload. For example, imagine you would like to clone and deploy a repository containing manifests for a \"prod\" environment and \"frontend\" and \"backend\" services. copilot deploy will now prompt you to initialize your workload and environment if necessary, ask you for credentials for the account in which you'd like to deploy the environment, then deploy it and the workload. $ git clone myrepo $ cd myrepo $ copilot app init myapp $ copilot deploy -n frontend -e prod To specify the profile and region where the environment will be deployed: $ copilot deploy --region us-west-2 --profile prod-profile -e prod --init-env To skip deploying the environment if it already exists: $ copilot deploy --deploy-env = false","title":"copilot deploy enhancements"},{"location":"blogs/release-v130/#use-detach-to-deploy-without-waiting","text":"Typically, after you run any deploy commands, Copilot prints the progress to your terminal and waits for the deployment to finish. Now, if you don't want Copilot to wait, you can use the --detach flag. Copilot will trigger the deployment and exit the program, without printing the progress or waiting for the deployment. The --detach flag is available for copilot svc deploy , copilot job deploy , copilot env deploy and copilot deploy commands.","title":"Use --detach to deploy without waiting"},{"location":"blogs/release-v130/#whats-next","text":"Download the new Copilot CLI version by following the link below and leave your feedback on GitHub or our Community Chat : Download the latest CLI version Try our Getting Started Guide Read full release notes on GitHub","title":"What\u2019s next?"},{"location":"blogs/release-v131/","text":"AWS Copilot v1.31: NLB enhancements, better task failure logs, copilot deploy enhancements Posted On: October 5, 2023 The AWS Copilot core team is announcing the Copilot v1.31 release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3k stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.31 brings big enhancements to help you develop more flexibly and efficiently: NLB enhancements : You can now add security groups to Copilot-managed network load balancers . NLBs also support the UDP protocol. See detailed section Better task failure logs : Copilot will show more descriptive information during deployments when tasks fail, allowing better troubleshooting. copilot deploy enhancements : You can now deploy multiple workloads at once, or deploy all local workloads with --all . Importing an ACM certificate for your Static Site : You can now bring your own ACM certificate for the Static Site service. See detailed section What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. NLB enhancements Copilot brings UDP traffic support with an update to your Network Load Balancer! The protocol your NLB uses is specified by the nlb.port field. nlb: port: 8080/udp Info NLB Security Group is a new AWS feature that lets you filter public traffic to your NLB, enhancing the security of your application. For more information, read this AWS blogpost . For Copilot to use this feature, your NetworkLoadBalancer and TargetGroup resources need to be recreated. With v1.31 this will only happen if you specify udp protocol. With v1.33 however, Copilot will make this change for all users. This means that if you don't use DNS aliases, then the NLB's domain name will change, and if you do use DNS alias, then the alias will start pointing to the new NLB that is enhanced with a security group. copilot deploy enhancements copilot deploy now supports deploying multiple workloads with one command. You can specify multiple workloads with the --name flag, use the new --all flag in conjunction with --init-wkld to initialize and deploy all local workloads, and you can now provide a \"deployment order\" tag when specifying service names. For example, if you have cloned a new repository which includes multiple workloads, you can initialize the environment and all services with one command. copilot deploy --init-env --deploy-env -e dev --all --init-wkld If you have a service which must be deployed before another--for example, there is worker service which subscribes to a topic exposed by a different service in the workspace--you can specify names and orders with --all . copilot deploy --all -n fe/1 -n worker/2 This will deploy fe , then worker , then the remaining services or jobs in the workspace. Better task failure logs Before Copilot v1.31, if you wanted to find out why your ECS tasks stopped, you'd have to navigate to AWS Console -> ECS -> Service -> Stopped Tasks -> Stopped Reason. With this enhancement, copilot [noun] deploy will now display the ECS task stopped reasons within your CloudFormation deployment progress tracker. Copilot will show the two most recent task failures during deployments of your Load Balanced Web Service, Backend Service and Worker Services. - An ECS service to run and maintain your tasks in the environment cluster Deployments Revision Rollout Desired Running Failed Pending PRIMARY 11 [in progress] 1 0 1 0 ACTIVE 8 [completed] 1 1 0 0 Latest 2 stopped tasks TaskId CurrentStatus DesiredStatus 6b1d6e32 DEPROVISIONING STOPPED 9802d212 STOPPED STOPPED \u2718 Latest 2 tasks stopped reason - [6b1d6e32,9802d212]: Essential container in task exited Troubleshoot task stopped reason 1. You can run `copilot svc logs --previous` to see the logs of the last stopped task. 2. You can visit this article: https://repost.aws/knowledge-center/ecs-task-stopped. Importing an ACM certificate for your Static Site Copilot now introduces a new field http.certificate in the Static Site manifest . You can specify with the ARN of any validated ACM certificate in us-east-1 as below: http : alias : example.com certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" Note that example.com must be the domain name or any subject alternative name of the certificate you are bringing in, and we'll use the imported certificate for your HTTPS traffic instead of creating a Copilot-managed one.","title":"Release v1.31"},{"location":"blogs/release-v131/#aws-copilot-v131-nlb-enhancements-better-task-failure-logs-copilot-deploy-enhancements","text":"Posted On: October 5, 2023 The AWS Copilot core team is announcing the Copilot v1.31 release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3k stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.31 brings big enhancements to help you develop more flexibly and efficiently: NLB enhancements : You can now add security groups to Copilot-managed network load balancers . NLBs also support the UDP protocol. See detailed section Better task failure logs : Copilot will show more descriptive information during deployments when tasks fail, allowing better troubleshooting. copilot deploy enhancements : You can now deploy multiple workloads at once, or deploy all local workloads with --all . Importing an ACM certificate for your Static Site : You can now bring your own ACM certificate for the Static Site service. See detailed section What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.31: NLB enhancements, better task failure logs, copilot deploy enhancements"},{"location":"blogs/release-v131/#nlb-enhancements","text":"Copilot brings UDP traffic support with an update to your Network Load Balancer! The protocol your NLB uses is specified by the nlb.port field. nlb: port: 8080/udp Info NLB Security Group is a new AWS feature that lets you filter public traffic to your NLB, enhancing the security of your application. For more information, read this AWS blogpost . For Copilot to use this feature, your NetworkLoadBalancer and TargetGroup resources need to be recreated. With v1.31 this will only happen if you specify udp protocol. With v1.33 however, Copilot will make this change for all users. This means that if you don't use DNS aliases, then the NLB's domain name will change, and if you do use DNS alias, then the alias will start pointing to the new NLB that is enhanced with a security group.","title":"NLB enhancements"},{"location":"blogs/release-v131/#copilot-deploy-enhancements","text":"copilot deploy now supports deploying multiple workloads with one command. You can specify multiple workloads with the --name flag, use the new --all flag in conjunction with --init-wkld to initialize and deploy all local workloads, and you can now provide a \"deployment order\" tag when specifying service names. For example, if you have cloned a new repository which includes multiple workloads, you can initialize the environment and all services with one command. copilot deploy --init-env --deploy-env -e dev --all --init-wkld If you have a service which must be deployed before another--for example, there is worker service which subscribes to a topic exposed by a different service in the workspace--you can specify names and orders with --all . copilot deploy --all -n fe/1 -n worker/2 This will deploy fe , then worker , then the remaining services or jobs in the workspace.","title":"copilot deploy enhancements"},{"location":"blogs/release-v131/#better-task-failure-logs","text":"Before Copilot v1.31, if you wanted to find out why your ECS tasks stopped, you'd have to navigate to AWS Console -> ECS -> Service -> Stopped Tasks -> Stopped Reason. With this enhancement, copilot [noun] deploy will now display the ECS task stopped reasons within your CloudFormation deployment progress tracker. Copilot will show the two most recent task failures during deployments of your Load Balanced Web Service, Backend Service and Worker Services. - An ECS service to run and maintain your tasks in the environment cluster Deployments Revision Rollout Desired Running Failed Pending PRIMARY 11 [in progress] 1 0 1 0 ACTIVE 8 [completed] 1 1 0 0 Latest 2 stopped tasks TaskId CurrentStatus DesiredStatus 6b1d6e32 DEPROVISIONING STOPPED 9802d212 STOPPED STOPPED \u2718 Latest 2 tasks stopped reason - [6b1d6e32,9802d212]: Essential container in task exited Troubleshoot task stopped reason 1. You can run `copilot svc logs --previous` to see the logs of the last stopped task. 2. You can visit this article: https://repost.aws/knowledge-center/ecs-task-stopped.","title":"Better task failure logs"},{"location":"blogs/release-v131/#importing-an-acm-certificate-for-your-static-site","text":"Copilot now introduces a new field http.certificate in the Static Site manifest . You can specify with the ARN of any validated ACM certificate in us-east-1 as below: http : alias : example.com certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" Note that example.com must be the domain name or any subject alternative name of the certificate you are bringing in, and we'll use the imported certificate for your HTTPS traffic instead of creating a Copilot-managed one.","title":"Importing an ACM certificate for your Static Site"},{"location":"blogs/release-v132/","text":"AWS Copilot v1.32: run local --proxy , run local --watch , imported ALB support Posted On: November 9, 2023 The AWS Copilot core team is announcing the Copilot v1.32 release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3,100 stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.32 brings big enhancements to help you develop more flexibly and efficiently: copilot run local --proxy : Proxy outbound traffic from your local containers to services and RDS instances in your environment. See detailed section copilot run local --watch : Automatically rebuilds your containers when you make changes to your code. See detailed section Importing ALBs : You can front your Load-Balanced Web Services with existing ALBs. See detailed section What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Proxy with copilot run local The new --proxy flag on copilot run local enhances your local development experience by making it possible for your local containers to talk to services deployed in your environment. For example, imagine you have an environment with two services, users and orders , that both have Service Connect enabled. Additionally, orders has an RDS addon deployed that it uses for storing data. You can now run copilot run local --proxy --name orders and your local orders containers will be able to reach: The users service, using its service connect URL (defaults to http://users:<port> ) orders 's RDS database, using any DB instance url (like app-env-orders-random-characters.us-west-2.rds.amazonaws.com:5432 ) or DB cluster URL. Watch flag for copilot run local The --watch flag watches your workspace and rebuilds your containers when you make changes to your code so you can develop continuously. This is extremely useful when used with --proxy , as it allows you to save the overhead time required to set up proxy each time you would rebuild your application! Imported ALBs Copilot now supports the new field http.alb in the Load-Balanced Web Service manifest . Rather than letting Copilot create a new Application Load Balancer in your environment to be shared among all load-balanced services, you may designate an existing public-facing ALB for a specific Load-Balanced Web Service (LBWS). Specify the ARN or name of an ALB from your VPC in your LBWS manifest: http : alb : [ name or ARN ] For imported ALBs, Copilot does not manage DNS-related resources like certificates.","title":"Release v1.32"},{"location":"blogs/release-v132/#aws-copilot-v132-run-local-proxy-run-local-watch-imported-alb-support","text":"Posted On: November 9, 2023 The AWS Copilot core team is announcing the Copilot v1.32 release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3,100 stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.32 brings big enhancements to help you develop more flexibly and efficiently: copilot run local --proxy : Proxy outbound traffic from your local containers to services and RDS instances in your environment. See detailed section copilot run local --watch : Automatically rebuilds your containers when you make changes to your code. See detailed section Importing ALBs : You can front your Load-Balanced Web Services with existing ALBs. See detailed section What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.32: run local --proxy, run local --watch, imported ALB support"},{"location":"blogs/release-v132/#proxy-with-copilot-run-local","text":"The new --proxy flag on copilot run local enhances your local development experience by making it possible for your local containers to talk to services deployed in your environment. For example, imagine you have an environment with two services, users and orders , that both have Service Connect enabled. Additionally, orders has an RDS addon deployed that it uses for storing data. You can now run copilot run local --proxy --name orders and your local orders containers will be able to reach: The users service, using its service connect URL (defaults to http://users:<port> ) orders 's RDS database, using any DB instance url (like app-env-orders-random-characters.us-west-2.rds.amazonaws.com:5432 ) or DB cluster URL.","title":"Proxy with copilot run local"},{"location":"blogs/release-v132/#watch-flag-for-copilot-run-local","text":"The --watch flag watches your workspace and rebuilds your containers when you make changes to your code so you can develop continuously. This is extremely useful when used with --proxy , as it allows you to save the overhead time required to set up proxy each time you would rebuild your application!","title":"Watch flag for copilot run local"},{"location":"blogs/release-v132/#imported-albs","text":"Copilot now supports the new field http.alb in the Load-Balanced Web Service manifest . Rather than letting Copilot create a new Application Load Balancer in your environment to be shared among all load-balanced services, you may designate an existing public-facing ALB for a specific Load-Balanced Web Service (LBWS). Specify the ARN or name of an ALB from your VPC in your LBWS manifest: http : alb : [ name or ARN ] For imported ALBs, Copilot does not manage DNS-related resources like certificates.","title":"Imported ALBs"},{"location":"blogs/release-v133/","text":"AWS Copilot v1.33: run local --use-task-role , and run local depends_on support Posted On: January 8, 2024 The AWS Copilot core team is announcing the Copilot v1.33 release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3,100 stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.33 brings big enhancements to help you develop more flexibly and efficiently: run local --use-task-role : Elevate your local testing experience with the ECS Task Role using the new --use-task-role flag. See detailed section run local depends_on support : Local run containers now respects depends_on in your service manifests. See detailed section What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot. Use ECS Task Role for copilot run local copilot run local now has a flag --use-task-role . When enabled, Copilot will retrieve the IAM permissions from your deployed service and inject them into the containers created by run local . This means that your containers will have the same permissions that they do on the cloud, enabling you to test more accurately. Container dependencies support for copilot run local copilot run local now respects the depends_on specified in the service manifest. For example: image: build: ./Dockerfile depends_on: nginx: start nginx: image: build: ./web/Dockerfile essential: true depends_on: startup: success startup: image: build: ./front/Dockerfile essential: false This means that your main container will start only after nginx sidecar container has started and nginx will start only after startup container is completed successfully.","title":"Release v1.33"},{"location":"blogs/release-v133/#aws-copilot-v133-run-local-use-task-role-and-run-local-depends_on-support","text":"Posted On: January 8, 2024 The AWS Copilot core team is announcing the Copilot v1.33 release. Our public \u0441ommunity \u0441hat has over 500 people participating, and our GitHub repository has over 3,100 stars on GitHub \ud83d\ude80. Thanks to every one of you who shows love and support for AWS Copilot. Copilot v1.33 brings big enhancements to help you develop more flexibly and efficiently: run local --use-task-role : Elevate your local testing experience with the ECS Task Role using the new --use-task-role flag. See detailed section run local depends_on support : Local run containers now respects depends_on in your service manifests. See detailed section What\u2019s AWS Copilot? The AWS Copilot CLI is a tool for developers to build, release, and operate production-ready applications on AWS. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. At the foundation of Copilot is AWS CloudFormation, which enables you to provision Infrastructure as Code. Copilot provides pre-defined CloudFormation templates and user-friendly workflows for different types of microservice architectures, enabling you to focus on developing your application, instead of writing deployment scripts. See the section Overview for a more detailed introduction to AWS Copilot.","title":"AWS Copilot v1.33: run local --use-task-role, and run local depends_on support"},{"location":"blogs/release-v133/#use-ecs-task-role-for-copilot-run-local","text":"copilot run local now has a flag --use-task-role . When enabled, Copilot will retrieve the IAM permissions from your deployed service and inject them into the containers created by run local . This means that your containers will have the same permissions that they do on the cloud, enabling you to test more accurately.","title":"Use ECS Task Role for copilot run local"},{"location":"blogs/release-v133/#container-dependencies-support-for-copilot-run-local","text":"copilot run local now respects the depends_on specified in the service manifest. For example: image: build: ./Dockerfile depends_on: nginx: start nginx: image: build: ./web/Dockerfile essential: true depends_on: startup: success startup: image: build: ./front/Dockerfile essential: false This means that your main container will start only after nginx sidecar container has started and nginx will start only after startup container is completed successfully.","title":"Container dependencies support for copilot run local"},{"location":"community/get-involved/","text":"Welcome to the AWS Copilot Community \u2764\ufe0f This is a place to share your [ applications, articles, videos ] and any other resources related to the AWS Copilot CLI \ud83d\udc69\u200d\u2708\ufe0f. You can get involved with the CLI by: Creating issues in the GitHub repository Joining the chat with fellow Copilots","title":"Get Involved"},{"location":"community/get-involved/#welcome-to-the-aws-copilot-community","text":"This is a place to share your [ applications, articles, videos ] and any other resources related to the AWS Copilot CLI \ud83d\udc69\u200d\u2708\ufe0f. You can get involved with the CLI by: Creating issues in the GitHub repository Joining the chat with fellow Copilots","title":"Welcome to the AWS Copilot Community \u2764\ufe0f"},{"location":"community/guides/","text":"Share your applications, videos, and blog posts with fellow Copilots! Blog posts Title Description Use AWS Graviton processors on AWS Fargate with Copilot by Jason Andrews Use Copilot to run containers on Fargate\u2019s serverless compute with Graviton2 processors and benefit from improved price performance. The AWS Copilot NowTo Guide \u2014 Introduction by Biju Krishnan In a series of blogs, Biju, who focuses on AI Solutions and AI Governance, shares their experience with deploying AI Verify as a two-tier application using Copilot. Scalable Cloud inference endpoint using ONNX and AWS Fargate by Rustem Feyzkhanov Machine Learning engineer Rustem Feyzkhanov couples the ease of Copilot with the flexibility of the Open Neural Network Exchange (ONNX) AI framework. Implementing a pub/sub architecture with AWS Copilot by Rafael Mosca AWS Territory Solutions Architect Rafael Mosca leverages Copilot to quickly and easily implement the pub-sub architecture of a sample e-commerce platform. Clear steps and diagrams make concepts easy to learn. Using Copilot to Deploy, Manage, and Secure Apps on ECS by @christophef Christophe demonstrates how to deploy, manage, and secure your apps in AWS ECS and how favorable it is for most software companies that want to concentrate on building amazing apps and don\u2019t want to spend time managing clusters, pipelines, etc. Deploy Containers using AWS Copilot by @piumsudhara Piumsudhara takes you through detailed steps for building and deploying containerized applications using AWS Copilot. DBT container on AWS ECS by using AWS Copilot CLI by @key.hui Check out how to pack the dbt container and use the Copilot CLI to deploy on ECS. How to set up AWS Copilot to build, release and operate containerized applications on ECS and Fargate using a CLI? by @workfall Check out how AWS Copilot supercharges your application by allowing you to set up infrastructure, build your application with many microservices, set up a pipeline to automate release and monitor the stack and application\u2019s status, and add-ons all from a single CLI. AWS Copilot \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30e2\u30fc\u30c9\u306e AWS App Runner \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f by @Tak1wa [Japanese] Check out how easy it is to use AWS Copilot to deploy an AWS App Runner private service, one that is accessible only from within your environment. AWS Copilot\u3067Focalboard\u3092\u305f\u3066\u3066\u307f\u308b by @__m_sakasa [Japanese] See how to build a Mattermost Focalboard , an open-source project management tool, using Copilot. Prefect Cloud based data pipelines using AWS Copilot on ECS by @Core27_ Core27 takes you through building and deploying a production-grade data stack on Amazon Elastic Container Service. AWS Copilot GitHub Actions by @ksivamuthu Sivamuthu Kumar is back again, this time setting up OpenID Connect to link AWS and GitHub Actions, then using GitHub Actions to install Copilot and deploy an app. Deploy Serverless Containerized NodeJs Apps on AWS ECS Fargate with AWS Copilot by @gaymitb Jaymit Bhoraniya takes you through deploying to AWS, first with basic config, then with a CI/CD pipeline. How to Use Copilot to Deploy Projects on ECS by Christin Itty This tutorial includes a demo repo with a script of Copilot commands, showing you how to launch an entire app (including an Aurora serverless cluster with a PostgreSQL engine) in just one command. AWS Copilot CLI \u3092\u4f7f\u3063\u3066\u8907\u6570\u74b0\u5883\u3067\u65e2\u5b58\u306e DynamoDB \u3092\u4f7f\u3046 by @hkford3 [Japanese] Hidekazu Karino walks us through the deployment of a service to two environments, leveraging an existing DynamoDB table, and setting up a CI/CD pipeline, all with Copilot. \u30ec\u30f3\u30c6\u30a3\u30aa\u306e\u672c\u756a\u74b0\u5883\u3092AWS Copilot/Fargate\u69cb\u6210\u306b\u5207\u308a\u66ff\u3048\u305f\u8a71 by the Rentio development team [Japanese] A real-life account of switching from Convox to Copilot, including the 'why's and the 'how's, what went well and what didn't. Deploy .NET 6 API to AWS App Runner using AWS Copilot CLI by @ksivamuthu Using Copilot and App Runner, Sivamuthu Kumar deploys a .NET API project. Container-to-Container Communication by @mikefiedler Mike takes us through a science experiment of sorts, a \"who will win\" type of battle, to determine if TCP or Unix sockets are better for inter-container communication. AWS Copilot \u3067 ECS(Fargate) \u306b Express(Node.js) \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b by Shoya Shiraki @morugu [Japanese] Follow along this blog post to build an Express Node.js app with Copilot. AWS Copilot \u2013 ECS by @ksivamuthu Here we have a three-part series devoted to Copilot! Sivamuthu Kumar demos launching a .NET coffeeshop app, exploring pipelines, storage, addons, and logs along the way. Deploying a Telegram Bot to AWS ECS with AWS Copilot by Christian Prado Ciokler Christian takes you through building a Node.js app, step-by-step, with Copilot on Docker Desktop Windows Subsystem for Linux (WSL) 2. Deploying a Containerized Web App with AWS Copilot by @edkruegerdata and Dylan Rossi Edward and Dylan start from the basics, including IAM account creation and AWS CLI installation. (Note: you'll also need to install AWS Copilot.) They demonstrate using Postman to test the deployed app. Pilot your containers like a boss with AWS Copilot! by @FlolightC Florian simplifies getting started with AWS Copilot by demoing deployment of a sample app from start to finish, including links to both required and optional resources. Use AWS Copilot CLI to deploy containers on an existing infrastructure - Tutorial by @dannysteenman Danny explains how to use your existing VPC and subnets with AWS Copilot to quickly set up a working container environment. Follow along as he deploys a Django app with an RDS Postgres database and Elasticache Redis cluster. Automatically deploying your container application with AWS Copilot by @nathankpeck Nathan shows how to set up a release pipeline with the CLI that builds, pushes, and deploys an application. Finally, he sets up integration tests for validation before releasing to production. Deploying containers with the AWS Copilot CLI by @maartenbruntink Maarten shows how to use the AWS Copilot CLI to deploy the sample Docker voting app , which showcases how to set up your own Redis and Postgres servers. In the second part , he automates the release process. AWS Copilot: an application-first CLI for containers on AWS by @efekarakus Efe walks through the design tenets of the CLI: why they were chosen, how they map to Copilot features, and the vision for how the CLI will evolve in the future. Introducing AWS Copilot by @nathankpeck Nathan explains how with the AWS Copilot CLI you can go from idea to implementation much faster, with the confidence that the infrastructure you have deployed has production-ready configuration. Videos Title Description Build, Operate, and Observe a Containerized Application on AWS Fargate by @nathankpeck AWS's indefatigable Nathan Peck is back! In this session for AWS Application Modernization Day, he champions containers and demonstrates the deployment of a load-balanced web service and a load-testing scheduled job. Using Jenkins and AWS Copilot CLI to Deploy to AWS App Runner by @DarinPope Darin, a developer advocate for CloudBees, uses AWS Copilot and a Jenkinsfile to deploy to AWS AppRunner. Deploy a Web App with AWS CoPilot by @edkruegerdata This three-part series includes \"Creating an Administrator User Group in AWS,\" \"Create an IAM Account on AWS,\" and \"Deploying the Web App.\" Container Day: Amazon ECS Edition-- Demo: deploy a modern application on AWS Fargate with ECS Copilot by @efekarakus and @realadamjkeller Efe goes beyond the basics, demoing how to grow an application ; he highlights the alias field, secrets and environment variables, addons, and more. Copilot\u2013 What AWS ECS and Fargate Container Management Should Have Been by @vfarcic Viktor lauds Copilot for its simplicity and ease of use in this clear, step-by-step demo. AWS Copilot CLI v1.8.0 Release Highlights by @realadamjkeller Adam walks through the features that shipped with version 1.8.0 of the AWS Copilot CLI, including alias , the svc status update, and container dependency. DevBeardOps with !Cobus & !Darko: Playing with Containers by @cobusbernard and @darkosubotica Learn alongside Cobus and Darko as they experiment with AWS Copilot, from installation to pipeline setup. Containers from the Couch series by @realadamjkeller , @brentContained , and guests Join Adam and Brent to learn about many of the existing features of AWS Copilot with fun demos. Watch as they set up a three-tier application with autoscaling ; create a continuous delivery pipeline with integration tests ; show how easy it is to 'exec' with Copilot ; and highlight ephemeral storage and scheduled job features. AWS Copilot and another 6 ways to easily deploy apps to AWS by Kirill Shirinkin Kirill Shirinkin explores ways to easily deploy a new product on AWS - including a new favorite one, AWS Copilot. AWS re:Invent 2020: AWS Copilot: Simplifying container development by @efekarakus Learn about the motivation behind AWS Copilot, get an overview of the existing commands and a demo of how to deploy a three-tier application. How to Deploy a .NET Application to Amazon Elastic Container Service (ECS) with AWS Copilot by @ignacioafuentes Get a demo on how to build and deploy a .NET application to Amazon ECS on AWS Fargate. AWS What's Next by @nathankpeck and @efekarakus Nathan and Efe discuss what makes AWS Copilot unique compared to other infrastructure provisioning tools and then demo an overview of the existing commands. Code samples Repository Description Key features Server Side Swift Guides Server Side Swift on AWS with Fargate, Vapor, and MongoDB Atlas deployed with Copilot Fargate, Vapor, MongoDB, API Gateway github.com/kcearns/fargate-node-example A sample Node application that includes a pipeline. Node, pipeline github.com/efekarakus/day2-with-copilot A REST API coffeeshop application that goes beyond the basics, demoed in the \"Container Day\" video , above. alias , secrets, DynamoDB, Redis github.com/bvtujo/copilot-wordpress A WordPress installation launched by AWS Copilot with step-by-step instructions and options for customization. EFS , MySQL RDS cluster, autoscaling #2378 Show-and-tell with sample templates for launching isolated tasks in private subnets. VPC Endpoints, custom environments github.com/copilot-example-voting-app , #1745 A voting application distributed over three ECS services created with AWS Copilot. Amazon Aurora PostgreSQL database, service discovery, autoscaling #1925 Show-and-tell explaining how you can do continuous deployments from branches with AWS Copilot pipelines. Branch-based deploys, AWS CodePipeline Workshops Title Description Explore the Foundations of AWS Containers Nathan Peck, a Senior Developer Advocate for ECS, walks you through an introduction to containers, using tools like AWS Copilot CLI, Amazon CloudWatch, and AWS App Runner. A sample repo allows you to focus on containerization, and there's even a bonus challenge for eager learners. Deploy .NET Apps with AWS Copilot This lab, part of the AWS Windows Workshop, guides you through creating a .NET 6 project, including deploying CI/CD pipelines. Plenty of screen shots help you see what's happening in the terminal, in VS Code, and on the console. Copilot Rocks This open-source, comprehensive, modular workshop lets you pick and choose from multiple mini-workshops, covering everything from installation to implementing pub/sub patterns. Step-by-step guides offer tips and tricks, clarify with useful diagrams, and delve into advanced patterns. (Source code is hosted here .) ECS Workshop In this workshop, we deploy a three-tier microservices application using the AWS Copilot CLI. (Optional accompanying video here .) Copilot Primer Workshop In this workshop, you will experience AWS Copilot CLI through the creation of a sample to-do list application. With AWS Copilot CLI, you initialize your application, create a development environment and deploy containers onto the environment. You can also deploy your containers from a pipeline.","title":"Guides and Resources"},{"location":"community/guides/#blog-posts","text":"Title Description Use AWS Graviton processors on AWS Fargate with Copilot by Jason Andrews Use Copilot to run containers on Fargate\u2019s serverless compute with Graviton2 processors and benefit from improved price performance. The AWS Copilot NowTo Guide \u2014 Introduction by Biju Krishnan In a series of blogs, Biju, who focuses on AI Solutions and AI Governance, shares their experience with deploying AI Verify as a two-tier application using Copilot. Scalable Cloud inference endpoint using ONNX and AWS Fargate by Rustem Feyzkhanov Machine Learning engineer Rustem Feyzkhanov couples the ease of Copilot with the flexibility of the Open Neural Network Exchange (ONNX) AI framework. Implementing a pub/sub architecture with AWS Copilot by Rafael Mosca AWS Territory Solutions Architect Rafael Mosca leverages Copilot to quickly and easily implement the pub-sub architecture of a sample e-commerce platform. Clear steps and diagrams make concepts easy to learn. Using Copilot to Deploy, Manage, and Secure Apps on ECS by @christophef Christophe demonstrates how to deploy, manage, and secure your apps in AWS ECS and how favorable it is for most software companies that want to concentrate on building amazing apps and don\u2019t want to spend time managing clusters, pipelines, etc. Deploy Containers using AWS Copilot by @piumsudhara Piumsudhara takes you through detailed steps for building and deploying containerized applications using AWS Copilot. DBT container on AWS ECS by using AWS Copilot CLI by @key.hui Check out how to pack the dbt container and use the Copilot CLI to deploy on ECS. How to set up AWS Copilot to build, release and operate containerized applications on ECS and Fargate using a CLI? by @workfall Check out how AWS Copilot supercharges your application by allowing you to set up infrastructure, build your application with many microservices, set up a pipeline to automate release and monitor the stack and application\u2019s status, and add-ons all from a single CLI. AWS Copilot \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30e2\u30fc\u30c9\u306e AWS App Runner \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f by @Tak1wa [Japanese] Check out how easy it is to use AWS Copilot to deploy an AWS App Runner private service, one that is accessible only from within your environment. AWS Copilot\u3067Focalboard\u3092\u305f\u3066\u3066\u307f\u308b by @__m_sakasa [Japanese] See how to build a Mattermost Focalboard , an open-source project management tool, using Copilot. Prefect Cloud based data pipelines using AWS Copilot on ECS by @Core27_ Core27 takes you through building and deploying a production-grade data stack on Amazon Elastic Container Service. AWS Copilot GitHub Actions by @ksivamuthu Sivamuthu Kumar is back again, this time setting up OpenID Connect to link AWS and GitHub Actions, then using GitHub Actions to install Copilot and deploy an app. Deploy Serverless Containerized NodeJs Apps on AWS ECS Fargate with AWS Copilot by @gaymitb Jaymit Bhoraniya takes you through deploying to AWS, first with basic config, then with a CI/CD pipeline. How to Use Copilot to Deploy Projects on ECS by Christin Itty This tutorial includes a demo repo with a script of Copilot commands, showing you how to launch an entire app (including an Aurora serverless cluster with a PostgreSQL engine) in just one command. AWS Copilot CLI \u3092\u4f7f\u3063\u3066\u8907\u6570\u74b0\u5883\u3067\u65e2\u5b58\u306e DynamoDB \u3092\u4f7f\u3046 by @hkford3 [Japanese] Hidekazu Karino walks us through the deployment of a service to two environments, leveraging an existing DynamoDB table, and setting up a CI/CD pipeline, all with Copilot. \u30ec\u30f3\u30c6\u30a3\u30aa\u306e\u672c\u756a\u74b0\u5883\u3092AWS Copilot/Fargate\u69cb\u6210\u306b\u5207\u308a\u66ff\u3048\u305f\u8a71 by the Rentio development team [Japanese] A real-life account of switching from Convox to Copilot, including the 'why's and the 'how's, what went well and what didn't. Deploy .NET 6 API to AWS App Runner using AWS Copilot CLI by @ksivamuthu Using Copilot and App Runner, Sivamuthu Kumar deploys a .NET API project. Container-to-Container Communication by @mikefiedler Mike takes us through a science experiment of sorts, a \"who will win\" type of battle, to determine if TCP or Unix sockets are better for inter-container communication. AWS Copilot \u3067 ECS(Fargate) \u306b Express(Node.js) \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b by Shoya Shiraki @morugu [Japanese] Follow along this blog post to build an Express Node.js app with Copilot. AWS Copilot \u2013 ECS by @ksivamuthu Here we have a three-part series devoted to Copilot! Sivamuthu Kumar demos launching a .NET coffeeshop app, exploring pipelines, storage, addons, and logs along the way. Deploying a Telegram Bot to AWS ECS with AWS Copilot by Christian Prado Ciokler Christian takes you through building a Node.js app, step-by-step, with Copilot on Docker Desktop Windows Subsystem for Linux (WSL) 2. Deploying a Containerized Web App with AWS Copilot by @edkruegerdata and Dylan Rossi Edward and Dylan start from the basics, including IAM account creation and AWS CLI installation. (Note: you'll also need to install AWS Copilot.) They demonstrate using Postman to test the deployed app. Pilot your containers like a boss with AWS Copilot! by @FlolightC Florian simplifies getting started with AWS Copilot by demoing deployment of a sample app from start to finish, including links to both required and optional resources. Use AWS Copilot CLI to deploy containers on an existing infrastructure - Tutorial by @dannysteenman Danny explains how to use your existing VPC and subnets with AWS Copilot to quickly set up a working container environment. Follow along as he deploys a Django app with an RDS Postgres database and Elasticache Redis cluster. Automatically deploying your container application with AWS Copilot by @nathankpeck Nathan shows how to set up a release pipeline with the CLI that builds, pushes, and deploys an application. Finally, he sets up integration tests for validation before releasing to production. Deploying containers with the AWS Copilot CLI by @maartenbruntink Maarten shows how to use the AWS Copilot CLI to deploy the sample Docker voting app , which showcases how to set up your own Redis and Postgres servers. In the second part , he automates the release process. AWS Copilot: an application-first CLI for containers on AWS by @efekarakus Efe walks through the design tenets of the CLI: why they were chosen, how they map to Copilot features, and the vision for how the CLI will evolve in the future. Introducing AWS Copilot by @nathankpeck Nathan explains how with the AWS Copilot CLI you can go from idea to implementation much faster, with the confidence that the infrastructure you have deployed has production-ready configuration.","title":"Blog posts"},{"location":"community/guides/#videos","text":"Title Description Build, Operate, and Observe a Containerized Application on AWS Fargate by @nathankpeck AWS's indefatigable Nathan Peck is back! In this session for AWS Application Modernization Day, he champions containers and demonstrates the deployment of a load-balanced web service and a load-testing scheduled job. Using Jenkins and AWS Copilot CLI to Deploy to AWS App Runner by @DarinPope Darin, a developer advocate for CloudBees, uses AWS Copilot and a Jenkinsfile to deploy to AWS AppRunner. Deploy a Web App with AWS CoPilot by @edkruegerdata This three-part series includes \"Creating an Administrator User Group in AWS,\" \"Create an IAM Account on AWS,\" and \"Deploying the Web App.\" Container Day: Amazon ECS Edition-- Demo: deploy a modern application on AWS Fargate with ECS Copilot by @efekarakus and @realadamjkeller Efe goes beyond the basics, demoing how to grow an application ; he highlights the alias field, secrets and environment variables, addons, and more. Copilot\u2013 What AWS ECS and Fargate Container Management Should Have Been by @vfarcic Viktor lauds Copilot for its simplicity and ease of use in this clear, step-by-step demo. AWS Copilot CLI v1.8.0 Release Highlights by @realadamjkeller Adam walks through the features that shipped with version 1.8.0 of the AWS Copilot CLI, including alias , the svc status update, and container dependency. DevBeardOps with !Cobus & !Darko: Playing with Containers by @cobusbernard and @darkosubotica Learn alongside Cobus and Darko as they experiment with AWS Copilot, from installation to pipeline setup. Containers from the Couch series by @realadamjkeller , @brentContained , and guests Join Adam and Brent to learn about many of the existing features of AWS Copilot with fun demos. Watch as they set up a three-tier application with autoscaling ; create a continuous delivery pipeline with integration tests ; show how easy it is to 'exec' with Copilot ; and highlight ephemeral storage and scheduled job features. AWS Copilot and another 6 ways to easily deploy apps to AWS by Kirill Shirinkin Kirill Shirinkin explores ways to easily deploy a new product on AWS - including a new favorite one, AWS Copilot. AWS re:Invent 2020: AWS Copilot: Simplifying container development by @efekarakus Learn about the motivation behind AWS Copilot, get an overview of the existing commands and a demo of how to deploy a three-tier application. How to Deploy a .NET Application to Amazon Elastic Container Service (ECS) with AWS Copilot by @ignacioafuentes Get a demo on how to build and deploy a .NET application to Amazon ECS on AWS Fargate. AWS What's Next by @nathankpeck and @efekarakus Nathan and Efe discuss what makes AWS Copilot unique compared to other infrastructure provisioning tools and then demo an overview of the existing commands.","title":"Videos"},{"location":"community/guides/#code-samples","text":"Repository Description Key features Server Side Swift Guides Server Side Swift on AWS with Fargate, Vapor, and MongoDB Atlas deployed with Copilot Fargate, Vapor, MongoDB, API Gateway github.com/kcearns/fargate-node-example A sample Node application that includes a pipeline. Node, pipeline github.com/efekarakus/day2-with-copilot A REST API coffeeshop application that goes beyond the basics, demoed in the \"Container Day\" video , above. alias , secrets, DynamoDB, Redis github.com/bvtujo/copilot-wordpress A WordPress installation launched by AWS Copilot with step-by-step instructions and options for customization. EFS , MySQL RDS cluster, autoscaling #2378 Show-and-tell with sample templates for launching isolated tasks in private subnets. VPC Endpoints, custom environments github.com/copilot-example-voting-app , #1745 A voting application distributed over three ECS services created with AWS Copilot. Amazon Aurora PostgreSQL database, service discovery, autoscaling #1925 Show-and-tell explaining how you can do continuous deployments from branches with AWS Copilot pipelines. Branch-based deploys, AWS CodePipeline","title":"Code samples"},{"location":"community/guides/#workshops","text":"Title Description Explore the Foundations of AWS Containers Nathan Peck, a Senior Developer Advocate for ECS, walks you through an introduction to containers, using tools like AWS Copilot CLI, Amazon CloudWatch, and AWS App Runner. A sample repo allows you to focus on containerization, and there's even a bonus challenge for eager learners. Deploy .NET Apps with AWS Copilot This lab, part of the AWS Windows Workshop, guides you through creating a .NET 6 project, including deploying CI/CD pipelines. Plenty of screen shots help you see what's happening in the terminal, in VS Code, and on the console. Copilot Rocks This open-source, comprehensive, modular workshop lets you pick and choose from multiple mini-workshops, covering everything from installation to implementing pub/sub patterns. Step-by-step guides offer tips and tricks, clarify with useful diagrams, and delve into advanced patterns. (Source code is hosted here .) ECS Workshop In this workshop, we deploy a three-tier microservices application using the AWS Copilot CLI. (Optional accompanying video here .) Copilot Primer Workshop In this workshop, you will experience AWS Copilot CLI through the creation of a sample to-do list application. With AWS Copilot CLI, you initialize your application, create a development environment and deploy containers onto the environment. You can also deploy your containers from a pipeline.","title":"Workshops"},{"location":"docs/credentials/","text":"AWS Copilot uses AWS credentials to access the AWS API, store and look up an application's metadata , and deploy and operate an application's workloads. You can learn more on how to configure AWS credentials in the AWS CLI's documentation . Application credentials Copilot uses the AWS credentials from the default credential provider chain to store and look up your application's metadata : which services and environments belong to it. Tip We recommend using a named profile to store your application's credentials. The most convenient way is having the [default] profile point to your application's credentials: # ~/.aws/credentials [default] aws_access_key_id = AKIAIOSFODNN7EXAMPLE aws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY # ~/.aws/config [default] region = us-west-2 Alternatively, you can set the AWS_PROFILE environment variable to point to a different named profile. For example, we can have a [my-app] profile that can be used for your Copilot application instead of the [default] profile. Note You cannot use the AWS account root user credentials for your application. Please first create an IAM user instead as described here . # ~/.aws/config [profile my-app] credential_process = /opt/bin/awscreds-custom --username helen region = us-west-2 # Then you can run your Copilot commands leveraging the alternative profile: $ export AWS_PROFILE = my-app $ copilot deploy Caution We do not recommend using the environment variables: AWS_ACCESS_KEY_ID , AWS_SECRET_ACCESS_KEY , AWS_SESSION_TOKEN directly to look up your application's metadata because if they're overridden or expired, Copilot will not be able to look up your services or environments. To learn more about all the supported config file settings: Configuration and credential file settings . Environment credentials Copilot environments can be created in AWS accounts and regions separate from your application's. While initializing an environment, Copilot will prompt you to enter temporary credentials or a named profile to create your environment: $ copilot env init Name: prod-iad Which credentials would you like to use to create prod-iad? > Enter temporary credentials > [ profile default ] > [ profile test ] > [ profile prod-iad ] > [ profile prod-pdx ] Unlike the Application credentials , the AWS credentials for an environment are only needed for creation or deletion. Therefore, it's safe to use the values from temporary environment variables. Copilot prompts or takes the credentials as flags because the default chain is reserved for your application credentials.","title":"Credentials"},{"location":"docs/credentials/#application-credentials","text":"Copilot uses the AWS credentials from the default credential provider chain to store and look up your application's metadata : which services and environments belong to it. Tip We recommend using a named profile to store your application's credentials. The most convenient way is having the [default] profile point to your application's credentials: # ~/.aws/credentials [default] aws_access_key_id = AKIAIOSFODNN7EXAMPLE aws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY # ~/.aws/config [default] region = us-west-2 Alternatively, you can set the AWS_PROFILE environment variable to point to a different named profile. For example, we can have a [my-app] profile that can be used for your Copilot application instead of the [default] profile. Note You cannot use the AWS account root user credentials for your application. Please first create an IAM user instead as described here . # ~/.aws/config [profile my-app] credential_process = /opt/bin/awscreds-custom --username helen region = us-west-2 # Then you can run your Copilot commands leveraging the alternative profile: $ export AWS_PROFILE = my-app $ copilot deploy Caution We do not recommend using the environment variables: AWS_ACCESS_KEY_ID , AWS_SECRET_ACCESS_KEY , AWS_SESSION_TOKEN directly to look up your application's metadata because if they're overridden or expired, Copilot will not be able to look up your services or environments. To learn more about all the supported config file settings: Configuration and credential file settings .","title":"Application credentials"},{"location":"docs/credentials/#environment-credentials","text":"Copilot environments can be created in AWS accounts and regions separate from your application's. While initializing an environment, Copilot will prompt you to enter temporary credentials or a named profile to create your environment: $ copilot env init Name: prod-iad Which credentials would you like to use to create prod-iad? > Enter temporary credentials > [ profile default ] > [ profile test ] > [ profile prod-iad ] > [ profile prod-pdx ] Unlike the Application credentials , the AWS credentials for an environment are only needed for creation or deletion. Therefore, it's safe to use the values from temporary environment variables. Copilot prompts or takes the credentials as flags because the default chain is reserved for your application credentials.","title":"Environment credentials"},{"location":"docs/overview/","text":"Welcome to the AWS Copilot CLI \ud83c\udf89 The Copilot CLI is a tool for developers to build, release, and operate production-ready containerized applications on AWS App Runner and Amazon ECS on AWS Fargate. From getting started, pushing to staging, and releasing to production, Copilot can help manage the entire lifecycle of your application development. Installing You can install AWS Copilot through Homebrew or by downloading the binaries directly. If you don't want to use Homebrew, you can install manually . $ brew install aws/tap/copilot-cli","title":"Overview"},{"location":"docs/overview/#installing","text":"You can install AWS Copilot through Homebrew or by downloading the binaries directly. If you don't want to use Homebrew, you can install manually . $ brew install aws/tap/copilot-cli","title":"Installing"},{"location":"docs/commands/app-delete/","text":"app delete $ copilot app delete [ flags ] What does it do? copilot app delete deletes all resources associated with an application. What are the flags? -h, --help help for delete --yes Skips confirmation prompt. Examples Force delete the application. $ copilot app delete --yes","title":"app delete"},{"location":"docs/commands/app-delete/#app-delete","text":"$ copilot app delete [ flags ]","title":"app delete"},{"location":"docs/commands/app-delete/#what-does-it-do","text":"copilot app delete deletes all resources associated with an application.","title":"What does it do?"},{"location":"docs/commands/app-delete/#what-are-the-flags","text":"-h, --help help for delete --yes Skips confirmation prompt.","title":"What are the flags?"},{"location":"docs/commands/app-delete/#examples","text":"Force delete the application. $ copilot app delete --yes","title":"Examples"},{"location":"docs/commands/app-init/","text":"app init $ copilot app init [ name ] [ flags ] What does it do? copilot app init creates a new application within the directory that will contain your service(s). After you answer the questions, the CLI creates AWS Identity and Access Management roles to manage the release infrastructure for your services. You'll also see a new sub-directory created under your working directory: copilot/ . The copilot directory will hold the manifest files and additional infrastructure for your services. Typically, you don't need to run app init ( init does all the same work) unless you want to use a custom domain name or AWS tags, or pass in an IAM policy for a permissions boundary. What are the flags? Like all commands in the Copilot CLI, if you don't provide required flags, we'll prompt you for all the information we need to get you going. You can skip the prompts by providing information via flags: --domain string Optional. Your existing custom domain name. -h, --help help for init --permissions-boundary Optional. The name or ARN of an existing IAM policy with which to set a permissions boundary for all roles generated within the application. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) The --domain flag allows you to specify a domain name registered with Amazon Route 53 in your app's account. This will allow all the services in your app to share the same domain name. You'll be able to access your services at: https://{svcName}.{envName}.{appName}.{domain} The --permissions-boundary flag allows you to indicate an existing IAM policy in your app's account. This policy name will become part of an ARN to add permissions boundaries to all Copilot-created IAM roles in your app. The --resource-tags flags allows you to add your custom tags to all the resources in your app. For example: copilot app init --resource-tags department=MyDept,team=MyTeam Examples Create a new application named \"my-app\". $ copilot app init my-app Create a new application with an existing domain name in Amazon Route53. $ copilot app init --domain example.com Create a new application with resource tags. $ copilot app init --resource-tags department = MyDept,team = MyTeam What does it look like?","title":"app init"},{"location":"docs/commands/app-init/#app-init","text":"$ copilot app init [ name ] [ flags ]","title":"app init"},{"location":"docs/commands/app-init/#what-does-it-do","text":"copilot app init creates a new application within the directory that will contain your service(s). After you answer the questions, the CLI creates AWS Identity and Access Management roles to manage the release infrastructure for your services. You'll also see a new sub-directory created under your working directory: copilot/ . The copilot directory will hold the manifest files and additional infrastructure for your services. Typically, you don't need to run app init ( init does all the same work) unless you want to use a custom domain name or AWS tags, or pass in an IAM policy for a permissions boundary.","title":"What does it do?"},{"location":"docs/commands/app-init/#what-are-the-flags","text":"Like all commands in the Copilot CLI, if you don't provide required flags, we'll prompt you for all the information we need to get you going. You can skip the prompts by providing information via flags: --domain string Optional. Your existing custom domain name. -h, --help help for init --permissions-boundary Optional. The name or ARN of an existing IAM policy with which to set a permissions boundary for all roles generated within the application. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) The --domain flag allows you to specify a domain name registered with Amazon Route 53 in your app's account. This will allow all the services in your app to share the same domain name. You'll be able to access your services at: https://{svcName}.{envName}.{appName}.{domain} The --permissions-boundary flag allows you to indicate an existing IAM policy in your app's account. This policy name will become part of an ARN to add permissions boundaries to all Copilot-created IAM roles in your app. The --resource-tags flags allows you to add your custom tags to all the resources in your app. For example: copilot app init --resource-tags department=MyDept,team=MyTeam","title":"What are the flags?"},{"location":"docs/commands/app-init/#examples","text":"Create a new application named \"my-app\". $ copilot app init my-app Create a new application with an existing domain name in Amazon Route53. $ copilot app init --domain example.com Create a new application with resource tags. $ copilot app init --resource-tags department = MyDept,team = MyTeam","title":"Examples"},{"location":"docs/commands/app-init/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/app-ls/","text":"app ls $ copilot app ls [ flags ] What does it do? copilot app ls lists all the Copilot applications in your account. What are the flags? -h, --help help for ls Examples List all the applications in your account and region. $ copilot app ls What does it look like?","title":"app ls"},{"location":"docs/commands/app-ls/#app-ls","text":"$ copilot app ls [ flags ]","title":"app ls"},{"location":"docs/commands/app-ls/#what-does-it-do","text":"copilot app ls lists all the Copilot applications in your account.","title":"What does it do?"},{"location":"docs/commands/app-ls/#what-are-the-flags","text":"-h, --help help for ls","title":"What are the flags?"},{"location":"docs/commands/app-ls/#examples","text":"List all the applications in your account and region. $ copilot app ls","title":"Examples"},{"location":"docs/commands/app-ls/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/app-show/","text":"app show $ copilot app show [ flags ] What does it do? copilot app show shows configuration, environments and services for an application. What are the flags? -h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the application. Examples Shows info about the application \"my-app\". $ copilot app show -n my-app What does it look like?","title":"app show"},{"location":"docs/commands/app-show/#app-show","text":"$ copilot app show [ flags ]","title":"app show"},{"location":"docs/commands/app-show/#what-does-it-do","text":"copilot app show shows configuration, environments and services for an application.","title":"What does it do?"},{"location":"docs/commands/app-show/#what-are-the-flags","text":"-h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the application.","title":"What are the flags?"},{"location":"docs/commands/app-show/#examples","text":"Shows info about the application \"my-app\". $ copilot app show -n my-app","title":"Examples"},{"location":"docs/commands/app-show/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/app-upgrade/","text":"app upgrade $ copilot app upgrade [ flags ] What does it do? copilot app upgrade upgrades the template of an application to the latest version. What are the flags? -h, --help help for upgrade -n, --name string Name of the application. Examples Upgrade the application \"my-app\" to the latest version $ copilot app upgrade -n my-app","title":"app upgrade"},{"location":"docs/commands/app-upgrade/#app-upgrade","text":"$ copilot app upgrade [ flags ]","title":"app upgrade"},{"location":"docs/commands/app-upgrade/#what-does-it-do","text":"copilot app upgrade upgrades the template of an application to the latest version.","title":"What does it do?"},{"location":"docs/commands/app-upgrade/#what-are-the-flags","text":"-h, --help help for upgrade -n, --name string Name of the application.","title":"What are the flags?"},{"location":"docs/commands/app-upgrade/#examples","text":"Upgrade the application \"my-app\" to the latest version $ copilot app upgrade -n my-app","title":"Examples"},{"location":"docs/commands/completion/","text":"completion $ copilot completion [ shell ] [ flags ] What does it do? copilot completion prints shell completion code for bash, zsh or fish. The code must be evaluated to provide interactive completion of commands. See the help menu for instructions on how to setup auto-completion for your respective shell. What are the flags? -h, --help help for completion Examples Install zsh completion. $ source < ( copilot completion zsh ) $ copilot completion zsh > \" ${ fpath [1] } /_copilot\" # to autoload on startup Install bash completion on macOS using homebrew. $ brew install bash-completion # if running 3.2 $ brew install bash-completion@2 # if running Bash 4.1+ $ copilot completion bash > /usr/local/etc/bash_completion.d Install bash completion on linux $ source < ( copilot completion bash ) $ copilot completion bash > copilot.sh $ sudo mv copilot.sh /etc/bash_completion.d/copilot Install fish completion on linux $ source < ( copilot completion fish ) $ copilot completion fish > ~/.config/fish/completions/copilot.fish","title":"completion"},{"location":"docs/commands/completion/#completion","text":"$ copilot completion [ shell ] [ flags ]","title":"completion"},{"location":"docs/commands/completion/#what-does-it-do","text":"copilot completion prints shell completion code for bash, zsh or fish. The code must be evaluated to provide interactive completion of commands. See the help menu for instructions on how to setup auto-completion for your respective shell.","title":"What does it do?"},{"location":"docs/commands/completion/#what-are-the-flags","text":"-h, --help help for completion","title":"What are the flags?"},{"location":"docs/commands/completion/#examples","text":"Install zsh completion. $ source < ( copilot completion zsh ) $ copilot completion zsh > \" ${ fpath [1] } /_copilot\" # to autoload on startup Install bash completion on macOS using homebrew. $ brew install bash-completion # if running 3.2 $ brew install bash-completion@2 # if running Bash 4.1+ $ copilot completion bash > /usr/local/etc/bash_completion.d Install bash completion on linux $ source < ( copilot completion bash ) $ copilot completion bash > copilot.sh $ sudo mv copilot.sh /etc/bash_completion.d/copilot Install fish completion on linux $ source < ( copilot completion fish ) $ copilot completion fish > ~/.config/fish/completions/copilot.fish","title":"Examples"},{"location":"docs/commands/deploy/","text":"copilot deploy $ copilot deploy What does it do? This command is used to get you from local manifests to deployed service and environment. It will check for deployed infrastructure and local manifests, help you initialize and deploy an environment, and deploy a workload. If a workload is uninitialized, --init-wkld will initialize the workload before deploying it. If the desired environment is uninitialized, you may initialize it with --init-env . The --deploy-env flag can be specified to skip environment deployment confirmation, or can be set to false ( --deploy-env=false ) to skip deploying the environment. The steps involved in copilot deploy are as follows: If your service does not exist, optionally initialize it. If the target environment does not exist, optionally initialize it with custom credentials. Optionally deploy the environment before service deployment. When image.build exists in the manifest: Build your local Dockerfile into an image Tag it with the value from --tag or the latest git sha (if you're in a git directory) Push the image to ECR Package your manifest file and addons into CloudFormation. Create / update your ECS task definition and job or service. What are the flags? --all Optional. Deploy all workloads with manifests in the current Copilot workspace. --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key for the environment account. --aws-secret-access-key string Optional. An AWS secret access key for the environment account. --aws-session-token string Optional. An AWS session token for temporary credentials. --deploy-env Deploy the target environment before deploying the workload. --detach Optional. Skip displaying CloudFormation deployment progress. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. Not available with the \"Static Site\" service type. -h, --help help for deploy --init-env Confirm initializing the target environment if it does not exist. --init-wkld Optional. When specified with --all, initialize all local workloads before deployment. -n, --name strings Names of the service or jobs to deploy, with an optional priority tag (e.g. fe/1, be/2, my-job/1). --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --profile string Name of the profile for the environment account. --region string Optional. An AWS region where the environment will be created. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info The --no-rollback flag is not recommended while deploying to a production environment as it may introduce service downtime. If the deployment fails when automatic stack rollback is disabled, you may be required to manually start the stack rollback of the stack via the AWS console or AWS CLI before the next deployment. Examples Deploys a service named \"frontend\" to a \"test\" environment. $ copilot deploy --name frontend --env test Deploys a job named \"mailer\" with additional resource tags to a \"prod\" environment. $ copilot deploy -n mailer -e prod --resource-tags source/revision = bb133e7,deployment/initiator = manual Initializes and deploys an environment named \"test\" in us-west-2 under the \"default\" profile with local manifest, then deploys a service named \"api\" $ copilot deploy --init-env --deploy-env --env test --name api --profile default --region us-west-2 Initializes and deploys a service named \"backend\" to a \"prod\" environment. $ copilot deploy --init-wkld --deploy-env = false --env prod --name backend Deploys all local, initialized workloads in no particular order. $ copilot deploy --all --env prod --name backend Deploys multiple workloads in a prescribed order (fe and worker, then be). $ copilot deploy -n fe/1 -n be/2 -n worker/1 Initializes and deploys all local workloads after (re)deploying the prod environment. $ copilot deploy --all --init-wkld --deploy-env -e prod","title":"deploy"},{"location":"docs/commands/deploy/#copilot-deploy","text":"$ copilot deploy","title":"copilot deploy"},{"location":"docs/commands/deploy/#what-does-it-do","text":"This command is used to get you from local manifests to deployed service and environment. It will check for deployed infrastructure and local manifests, help you initialize and deploy an environment, and deploy a workload. If a workload is uninitialized, --init-wkld will initialize the workload before deploying it. If the desired environment is uninitialized, you may initialize it with --init-env . The --deploy-env flag can be specified to skip environment deployment confirmation, or can be set to false ( --deploy-env=false ) to skip deploying the environment. The steps involved in copilot deploy are as follows: If your service does not exist, optionally initialize it. If the target environment does not exist, optionally initialize it with custom credentials. Optionally deploy the environment before service deployment. When image.build exists in the manifest: Build your local Dockerfile into an image Tag it with the value from --tag or the latest git sha (if you're in a git directory) Push the image to ECR Package your manifest file and addons into CloudFormation. Create / update your ECS task definition and job or service.","title":"What does it do?"},{"location":"docs/commands/deploy/#what-are-the-flags","text":"--all Optional. Deploy all workloads with manifests in the current Copilot workspace. --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key for the environment account. --aws-secret-access-key string Optional. An AWS secret access key for the environment account. --aws-session-token string Optional. An AWS session token for temporary credentials. --deploy-env Deploy the target environment before deploying the workload. --detach Optional. Skip displaying CloudFormation deployment progress. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. Not available with the \"Static Site\" service type. -h, --help help for deploy --init-env Confirm initializing the target environment if it does not exist. --init-wkld Optional. When specified with --all, initialize all local workloads before deployment. -n, --name strings Names of the service or jobs to deploy, with an optional priority tag (e.g. fe/1, be/2, my-job/1). --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --profile string Name of the profile for the environment account. --region string Optional. An AWS region where the environment will be created. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info The --no-rollback flag is not recommended while deploying to a production environment as it may introduce service downtime. If the deployment fails when automatic stack rollback is disabled, you may be required to manually start the stack rollback of the stack via the AWS console or AWS CLI before the next deployment.","title":"What are the flags?"},{"location":"docs/commands/deploy/#examples","text":"Deploys a service named \"frontend\" to a \"test\" environment. $ copilot deploy --name frontend --env test Deploys a job named \"mailer\" with additional resource tags to a \"prod\" environment. $ copilot deploy -n mailer -e prod --resource-tags source/revision = bb133e7,deployment/initiator = manual Initializes and deploys an environment named \"test\" in us-west-2 under the \"default\" profile with local manifest, then deploys a service named \"api\" $ copilot deploy --init-env --deploy-env --env test --name api --profile default --region us-west-2 Initializes and deploys a service named \"backend\" to a \"prod\" environment. $ copilot deploy --init-wkld --deploy-env = false --env prod --name backend Deploys all local, initialized workloads in no particular order. $ copilot deploy --all --env prod --name backend Deploys multiple workloads in a prescribed order (fe and worker, then be). $ copilot deploy -n fe/1 -n be/2 -n worker/1 Initializes and deploys all local workloads after (re)deploying the prod environment. $ copilot deploy --all --init-wkld --deploy-env -e prod","title":"Examples"},{"location":"docs/commands/docs/","text":"docs $ copilot docs [ flags ] What does it do? copilot docs open the copilot docs in your browser. What are the flags? -h, --help help for docs","title":"docs"},{"location":"docs/commands/docs/#docs","text":"$ copilot docs [ flags ]","title":"docs"},{"location":"docs/commands/docs/#what-does-it-do","text":"copilot docs open the copilot docs in your browser.","title":"What does it do?"},{"location":"docs/commands/docs/#what-are-the-flags","text":"-h, --help help for docs","title":"What are the flags?"},{"location":"docs/commands/env-delete/","text":"env delete $ copilot env delete [ flags ] What does it do? copilot env delete deletes an environment from your application. If there are running applications in your environment, you need to first run copilot svc delete . After you answer the questions, you should see that the AWS CloudFormation stack for your environment has been deleted. What are the flags? -h, --help help for delete -n, --name string Name of the environment. --yes Skips confirmation prompt. -a, --app string Name of the application. Examples Delete the \"test\" environment. $ copilot env delete --name test Delete the \"test\" environment without prompting. $ copilot env delete --name test --yes","title":"env delete"},{"location":"docs/commands/env-delete/#env-delete","text":"$ copilot env delete [ flags ]","title":"env delete"},{"location":"docs/commands/env-delete/#what-does-it-do","text":"copilot env delete deletes an environment from your application. If there are running applications in your environment, you need to first run copilot svc delete . After you answer the questions, you should see that the AWS CloudFormation stack for your environment has been deleted.","title":"What does it do?"},{"location":"docs/commands/env-delete/#what-are-the-flags","text":"-h, --help help for delete -n, --name string Name of the environment. --yes Skips confirmation prompt. -a, --app string Name of the application.","title":"What are the flags?"},{"location":"docs/commands/env-delete/#examples","text":"Delete the \"test\" environment. $ copilot env delete --name test Delete the \"test\" environment without prompting. $ copilot env delete --name test --yes","title":"Examples"},{"location":"docs/commands/env-deploy/","text":"env deploy added in v1.20.0 $ copilot env deploy What does it do? copilot env deploy takes the configurations in your environment manifest and deploys your environment infrastructure. What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. --force Optional. Force update the environment stack template. -h, --help help for deploy -n, --name string Name of the environment. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. Examples Use --diff to see what will be changed before making a deployment. $ copilot env deploy --name test --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled Continue with the deployment? (y/N) copilot env package --diff Alternatively, if you just wish to take a peek at the diff without potentially making a deployment, you can run copilot env package --diff , which will print the diff and exit.","title":"env deploy"},{"location":"docs/commands/env-deploy/#env-deploy-added-in-v1200","text":"$ copilot env deploy","title":"env deploy  added in v1.20.0 "},{"location":"docs/commands/env-deploy/#what-does-it-do","text":"copilot env deploy takes the configurations in your environment manifest and deploys your environment infrastructure.","title":"What does it do?"},{"location":"docs/commands/env-deploy/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. --force Optional. Force update the environment stack template. -h, --help help for deploy -n, --name string Name of the environment. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment.","title":"What are the flags?"},{"location":"docs/commands/env-deploy/#examples","text":"Use --diff to see what will be changed before making a deployment. $ copilot env deploy --name test --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled Continue with the deployment? (y/N) copilot env package --diff Alternatively, if you just wish to take a peek at the diff without potentially making a deployment, you can run copilot env package --diff , which will print the diff and exit.","title":"Examples"},{"location":"docs/commands/env-init/","text":"env init $ copilot env init [ flags ] What does it do? copilot env init creates a new environment where your services will live. After you answer the questions, the CLI creates the common infrastructure that's shared between your services such as a VPC, an Application Load Balancer, and an ECS Cluster. Additionally, you can customize your Copilot environment by either configuring the default environment resources or importing existing resources for your environment. You create environments using a named profile to specify which AWS account and region you'd like the environment to be in. What are the flags? Like all commands in the AWS Copilot CLI, if you don't provide required flags, we'll prompt you for all the information we need to get you going. You can skip the prompts by providing information via flags: Common Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key. --aws-secret-access-key string Optional. An AWS secret access key. --aws-session-token string Optional. An AWS session token for temporary credentials. --default-config Optional. Skip prompting and use default environment configuration. -n, --name string Name of the environment. --profile string Name of the profile. --region string Optional. An AWS region where the environment will be created. Import Existing Resources Flags --import-cert-arns strings Optional. Apply existing ACM certificates to the internet-facing load balancer. --import-private-subnets strings Optional. Use existing private subnet IDs. --import-public-subnets strings Optional. Use existing public subnet IDs. --import-vpc-id string Optional. Use an existing VPC ID. Configure Default Resources Flags --internal-alb-allow-vpc-ingress Optional. Allow internal ALB ingress from ports 80 and 443. --internal-alb-subnets strings Optional. Specify subnet IDs for an internal load balancer. By default, the load balancer will be placed in your private subnets. Cannot be specified with --default-config or any of the --override flags. --override-az-names strings Optional. Availability Zone names. (default 2 random AZs) --override-private-cidrs strings Optional. CIDR to use for private subnets. (default 10.0.2.0/24,10.0.3.0/24) --override-public-cidrs strings Optional. CIDR to use for public subnets. (default 10.0.0.0/24,10.0.1.0/24) --override-vpc-cidr ipNet Optional. Global CIDR to use for VPC. (default 10.0.0.0/16) Telemetry Flags --container-insights Optional. Enable CloudWatch Container Insights. Examples Creates a test environment using your \"default\" AWS profile and default configuration. $ copilot env init --name test --profile default --default-config Creates a prod-iad environment using your \"prod-admin\" AWS profile and enables CloudWatch Container Insights. $ copilot env init --name prod-iad --profile prod-admin --container-insights Creates an environment with imported VPC resources. $ copilot env init --import-vpc-id vpc-099c32d2b98cdcf47 \\ --import-public-subnets subnet-013e8b691862966cf,subnet-014661ebb7ab8681a \\ --import-private-subnets subnet-055fafef48fb3c547,subnet-00c9e76f288363e7f \\ --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 Creates an environment with overridden CIDRs and AZs. $ copilot env init --override-vpc-cidr 10 .1.0.0/16 \\ --override-az-names us-west-2b,us-west-2c \\ --override-public-cidrs 10 .1.0.0/24,10.1.1.0/24 \\ --override-private-cidrs 10 .1.2.0/24,10.1.3.0/24 What does it look like?","title":"env init"},{"location":"docs/commands/env-init/#env-init","text":"$ copilot env init [ flags ]","title":"env init"},{"location":"docs/commands/env-init/#what-does-it-do","text":"copilot env init creates a new environment where your services will live. After you answer the questions, the CLI creates the common infrastructure that's shared between your services such as a VPC, an Application Load Balancer, and an ECS Cluster. Additionally, you can customize your Copilot environment by either configuring the default environment resources or importing existing resources for your environment. You create environments using a named profile to specify which AWS account and region you'd like the environment to be in.","title":"What does it do?"},{"location":"docs/commands/env-init/#what-are-the-flags","text":"Like all commands in the AWS Copilot CLI, if you don't provide required flags, we'll prompt you for all the information we need to get you going. You can skip the prompts by providing information via flags: Common Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key. --aws-secret-access-key string Optional. An AWS secret access key. --aws-session-token string Optional. An AWS session token for temporary credentials. --default-config Optional. Skip prompting and use default environment configuration. -n, --name string Name of the environment. --profile string Name of the profile. --region string Optional. An AWS region where the environment will be created. Import Existing Resources Flags --import-cert-arns strings Optional. Apply existing ACM certificates to the internet-facing load balancer. --import-private-subnets strings Optional. Use existing private subnet IDs. --import-public-subnets strings Optional. Use existing public subnet IDs. --import-vpc-id string Optional. Use an existing VPC ID. Configure Default Resources Flags --internal-alb-allow-vpc-ingress Optional. Allow internal ALB ingress from ports 80 and 443. --internal-alb-subnets strings Optional. Specify subnet IDs for an internal load balancer. By default, the load balancer will be placed in your private subnets. Cannot be specified with --default-config or any of the --override flags. --override-az-names strings Optional. Availability Zone names. (default 2 random AZs) --override-private-cidrs strings Optional. CIDR to use for private subnets. (default 10.0.2.0/24,10.0.3.0/24) --override-public-cidrs strings Optional. CIDR to use for public subnets. (default 10.0.0.0/24,10.0.1.0/24) --override-vpc-cidr ipNet Optional. Global CIDR to use for VPC. (default 10.0.0.0/16) Telemetry Flags --container-insights Optional. Enable CloudWatch Container Insights.","title":"What are the flags?"},{"location":"docs/commands/env-init/#examples","text":"Creates a test environment using your \"default\" AWS profile and default configuration. $ copilot env init --name test --profile default --default-config Creates a prod-iad environment using your \"prod-admin\" AWS profile and enables CloudWatch Container Insights. $ copilot env init --name prod-iad --profile prod-admin --container-insights Creates an environment with imported VPC resources. $ copilot env init --import-vpc-id vpc-099c32d2b98cdcf47 \\ --import-public-subnets subnet-013e8b691862966cf,subnet-014661ebb7ab8681a \\ --import-private-subnets subnet-055fafef48fb3c547,subnet-00c9e76f288363e7f \\ --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 Creates an environment with overridden CIDRs and AZs. $ copilot env init --override-vpc-cidr 10 .1.0.0/16 \\ --override-az-names us-west-2b,us-west-2c \\ --override-public-cidrs 10 .1.0.0/24,10.1.1.0/24 \\ --override-private-cidrs 10 .1.2.0/24,10.1.3.0/24","title":"Examples"},{"location":"docs/commands/env-init/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/env-ls/","text":"env ls $ copilot env ls [ flags ] What does it do? copilot env ls lists all the environments in your application. What are the flags? -h, --help help for ls --json Optional. Output in JSON format. -a, --app string Name of the application. You can use the --json flag if you'd like to programmatically parse the results. Examples Lists all the environments for the frontend application. $ copilot env ls -a frontend What does it look like?","title":"env ls"},{"location":"docs/commands/env-ls/#env-ls","text":"$ copilot env ls [ flags ]","title":"env ls"},{"location":"docs/commands/env-ls/#what-does-it-do","text":"copilot env ls lists all the environments in your application.","title":"What does it do?"},{"location":"docs/commands/env-ls/#what-are-the-flags","text":"-h, --help help for ls --json Optional. Output in JSON format. -a, --app string Name of the application. You can use the --json flag if you'd like to programmatically parse the results.","title":"What are the flags?"},{"location":"docs/commands/env-ls/#examples","text":"Lists all the environments for the frontend application. $ copilot env ls -a frontend","title":"Examples"},{"location":"docs/commands/env-ls/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/env-override/","text":"copilot env override $ copilot env override What does it do? Scaffold Infrastructure as Code (IaC) extension files for environments. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to an environment's template. Learn more To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit . What are the flags? -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". Example Create a new Cloud Development Kit application to override environment templates. $ copilot env override --tool cdk What does it look like?","title":"env override"},{"location":"docs/commands/env-override/#copilot-env-override","text":"$ copilot env override","title":"copilot env override"},{"location":"docs/commands/env-override/#what-does-it-do","text":"Scaffold Infrastructure as Code (IaC) extension files for environments. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to an environment's template.","title":"What does it do?"},{"location":"docs/commands/env-override/#learn-more","text":"To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit .","title":"Learn more"},{"location":"docs/commands/env-override/#what-are-the-flags","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"What are the flags?"},{"location":"docs/commands/env-override/#example","text":"Create a new Cloud Development Kit application to override environment templates. $ copilot env override --tool cdk","title":"Example"},{"location":"docs/commands/env-override/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/env-package/","text":"env package $ copilot env package [ flags ] What does it do? copilot env package prints the CloudFormation stack template and configuration used to deploy an environment. What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. --force Optional. Force update the environment stack template. -h, --help help for package -n, --name string Name of the environment. --output-dir string Optional. Writes the stack template and template configuration to a directory. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration. Examples Print the CloudFormation template for the \"prod\" environment and upload custom resources. $ copilot env package -n prod --upload-assets Write the CloudFormation template and configuration to a \"infrastructure/\" sub-directory instead of stdout. $ copilot env package -n test --output-dir ./infrastructure --upload-assets $ ls ./infrastructure test.env.yml test.env.params.json Use --diff to print the diff and exit. $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"env package"},{"location":"docs/commands/env-package/#env-package","text":"$ copilot env package [ flags ]","title":"env package"},{"location":"docs/commands/env-package/#what-does-it-do","text":"copilot env package prints the CloudFormation stack template and configuration used to deploy an environment.","title":"What does it do?"},{"location":"docs/commands/env-package/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. --force Optional. Force update the environment stack template. -h, --help help for package -n, --name string Name of the environment. --output-dir string Optional. Writes the stack template and template configuration to a directory. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration.","title":"What are the flags?"},{"location":"docs/commands/env-package/#examples","text":"Print the CloudFormation template for the \"prod\" environment and upload custom resources. $ copilot env package -n prod --upload-assets Write the CloudFormation template and configuration to a \"infrastructure/\" sub-directory instead of stdout. $ copilot env package -n test --output-dir ./infrastructure --upload-assets $ ls ./infrastructure test.env.yml test.env.params.json Use --diff to print the diff and exit. $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"Examples"},{"location":"docs/commands/env-show/","text":"env show $ copilot env show [ flags ] What does it do? copilot env show displays information about a particular environment, including: The region and account the environment is in The services currently deployed in the environment The tags associated with that environment You can optionally pass in a --resources flag which will include the AWS resources associated specifically with the environment. What are the flags? -a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest Optional. Output the manifest file used for the deployment. -n, --name string Name of the environment. --resources Optional. Show the resources in your environment. You can use the --json flag if you'd like to programmatically parse the results. Examples Print configuration for the \"test\" environment. $ copilot env show -n test Print manifest file for deploying the \"prod\" environment. $ copilot env show -n prod --manifest","title":"env show"},{"location":"docs/commands/env-show/#env-show","text":"$ copilot env show [ flags ]","title":"env show"},{"location":"docs/commands/env-show/#what-does-it-do","text":"copilot env show displays information about a particular environment, including: The region and account the environment is in The services currently deployed in the environment The tags associated with that environment You can optionally pass in a --resources flag which will include the AWS resources associated specifically with the environment.","title":"What does it do?"},{"location":"docs/commands/env-show/#what-are-the-flags","text":"-a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest Optional. Output the manifest file used for the deployment. -n, --name string Name of the environment. --resources Optional. Show the resources in your environment. You can use the --json flag if you'd like to programmatically parse the results.","title":"What are the flags?"},{"location":"docs/commands/env-show/#examples","text":"Print configuration for the \"test\" environment. $ copilot env show -n test Print manifest file for deploying the \"prod\" environment. $ copilot env show -n prod --manifest","title":"Examples"},{"location":"docs/commands/init/","text":"init $ copilot init What does it do? copilot init is your starting point if you want to deploy your container app on AWS App Runner or Amazon ECS on AWS Fargate. Run it within a directory with your Dockerfile, and init will ask you questions about your application so we can get it up and running quickly. After you answer all the questions, copilot init will set up an ECR repository for you and ask you if you'd like to deploy. If you opt to deploy, it'll create a new test environment (complete with a networking stack and roles), build your Dockerfile, push it to Amazon ECR, and deploy your service or job. If you have an existing app, and want to add another service or job to that app, you can run copilot init - and you'll be prompted to select an existing app to add your service or job to. What are the flags? Like all commands in the Copilot CLI, if you don't provide required flags, we'll prompt you for all the information we need to get you going. You can skip the prompts by providing information via flags: -a, --app string Name of the application. --deploy Deploy your service or job to a \"test\" environment. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -n, --name string Name of the service or job. --port uint16 Optional. The port on which your service listens. --retries int Optional. The number of times to try restarting the job on a failure. --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\". -t, --type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Scheduled Job\".","title":"init"},{"location":"docs/commands/init/#init","text":"$ copilot init","title":"init"},{"location":"docs/commands/init/#what-does-it-do","text":"copilot init is your starting point if you want to deploy your container app on AWS App Runner or Amazon ECS on AWS Fargate. Run it within a directory with your Dockerfile, and init will ask you questions about your application so we can get it up and running quickly. After you answer all the questions, copilot init will set up an ECR repository for you and ask you if you'd like to deploy. If you opt to deploy, it'll create a new test environment (complete with a networking stack and roles), build your Dockerfile, push it to Amazon ECR, and deploy your service or job. If you have an existing app, and want to add another service or job to that app, you can run copilot init - and you'll be prompted to select an existing app to add your service or job to.","title":"What does it do?"},{"location":"docs/commands/init/#what-are-the-flags","text":"Like all commands in the Copilot CLI, if you don't provide required flags, we'll prompt you for all the information we need to get you going. You can skip the prompts by providing information via flags: -a, --app string Name of the application. --deploy Deploy your service or job to a \"test\" environment. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -n, --name string Name of the service or job. --port uint16 Optional. The port on which your service listens. --retries int Optional. The number of times to try restarting the job on a failure. --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\". -t, --type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Scheduled Job\".","title":"What are the flags?"},{"location":"docs/commands/job-delete/","text":"job delete $ copilot job delete [ flags ] What does it do? copilot job delete deletes all resources associated with your job in a particular environment. What are the flags? -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the job. --yes Skips confirmation prompt. Examples Delete the \"report-generator\" job from the my-app application. $ copilot job delete --name report-generator --app my-app Delete the \"report-generator\" job from just the prod environment. $ copilot job delete --name report-generator --env prod Delete the \"report-generator\" job from the my-app application from outside of the workspace. $ copilot job delete --name report-generator --app my-app Delete the \"report-generator\" job without the confirmation prompt. $ copilot job delete --name report-generator --yes","title":"job delete"},{"location":"docs/commands/job-delete/#job-delete","text":"$ copilot job delete [ flags ]","title":"job delete"},{"location":"docs/commands/job-delete/#what-does-it-do","text":"copilot job delete deletes all resources associated with your job in a particular environment.","title":"What does it do?"},{"location":"docs/commands/job-delete/#what-are-the-flags","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the job. --yes Skips confirmation prompt.","title":"What are the flags?"},{"location":"docs/commands/job-delete/#examples","text":"Delete the \"report-generator\" job from the my-app application. $ copilot job delete --name report-generator --app my-app Delete the \"report-generator\" job from just the prod environment. $ copilot job delete --name report-generator --env prod Delete the \"report-generator\" job from the my-app application from outside of the workspace. $ copilot job delete --name report-generator --app my-app Delete the \"report-generator\" job without the confirmation prompt. $ copilot job delete --name report-generator --yes","title":"Examples"},{"location":"docs/commands/job-deploy/","text":"job deploy $ copilot job deploy What does it do? job deploy takes your local code and configuration and deploys your job. The steps involved in job deploy are: When image.build exists in the manifest: Build your local Dockerfile into an image Tag it with the value from --tag or the latest git sha (if you're in a git directory) Push the image to ECR Package your manifest file and addons into CloudFormation Create / update your ECS task definition and job What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for deploy -n, --name string Name of the job. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info The --no-rollback flag is not recommended while deploying to a production environment as it may introduce service downtime. If the deployment fails when automatic stack rollback is disabled, you may be required to manually start the rollback of the stack via the AWS console or AWS CLI before the next deployment. Examples Deploys a job named \"report-gen\" to a \"test\" environment. $ copilot job deploy --name report-gen --env test Deploys a job with additional resource tags. $ copilot job deploy --resource-tags source/revision = bb133e7,deployment/initiator = manual ` Use --diff to see what will be changed before making a deployment. $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot job package --diff Alternatively, if you just wish to take a peek at the diff without potentially making a deployment, you can run copilot job package --diff , which will print the diff and exit.","title":"job deploy"},{"location":"docs/commands/job-deploy/#job-deploy","text":"$ copilot job deploy","title":"job deploy"},{"location":"docs/commands/job-deploy/#what-does-it-do","text":"job deploy takes your local code and configuration and deploys your job. The steps involved in job deploy are: When image.build exists in the manifest: Build your local Dockerfile into an image Tag it with the value from --tag or the latest git sha (if you're in a git directory) Push the image to ECR Package your manifest file and addons into CloudFormation Create / update your ECS task definition and job","title":"What does it do?"},{"location":"docs/commands/job-deploy/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for deploy -n, --name string Name of the job. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info The --no-rollback flag is not recommended while deploying to a production environment as it may introduce service downtime. If the deployment fails when automatic stack rollback is disabled, you may be required to manually start the rollback of the stack via the AWS console or AWS CLI before the next deployment.","title":"What are the flags?"},{"location":"docs/commands/job-deploy/#examples","text":"Deploys a job named \"report-gen\" to a \"test\" environment. $ copilot job deploy --name report-gen --env test Deploys a job with additional resource tags. $ copilot job deploy --resource-tags source/revision = bb133e7,deployment/initiator = manual ` Use --diff to see what will be changed before making a deployment. $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot job package --diff Alternatively, if you just wish to take a peek at the diff without potentially making a deployment, you can run copilot job package --diff , which will print the diff and exit.","title":"Examples"},{"location":"docs/commands/job-init/","text":"job init $ copilot job init What does it do? copilot job init creates a new job to run your code for you. After running this command, the CLI creates sub-directory with your app name in your local copilot directory where you'll find a manifest file . Feel free to update your manifest file to change the default configs for your job. The CLI also sets up an ECR repository with a policy for all environments to be able to pull from it. Then, your job gets registered to AWS System Manager Parameter Store so that the CLI can keep track of it for you. After that, if you already have an environment set up, you can run copilot job deploy to deploy your job in that environment. What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -t, --job-type string Type of job to create. Must be one of: \"Scheduled Job\". -n, --name string Name of the job. --retries int Optional. The number of times to try restarting the job on a failure. -s, --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\". Examples Creates a \"reaper\" scheduled task to run once per day. $ copilot job init --name reaper --dockerfile ./frontend/Dockerfile --schedule \"@daily\" Creates a \"report-generator\" scheduled task with retries. $ copilot job init --name report-generator --schedule \"@monthly\" --retries 3 --timeout 900s","title":"job init"},{"location":"docs/commands/job-init/#job-init","text":"$ copilot job init","title":"job init"},{"location":"docs/commands/job-init/#what-does-it-do","text":"copilot job init creates a new job to run your code for you. After running this command, the CLI creates sub-directory with your app name in your local copilot directory where you'll find a manifest file . Feel free to update your manifest file to change the default configs for your job. The CLI also sets up an ECR repository with a policy for all environments to be able to pull from it. Then, your job gets registered to AWS System Manager Parameter Store so that the CLI can keep track of it for you. After that, if you already have an environment set up, you can run copilot job deploy to deploy your job in that environment.","title":"What does it do?"},{"location":"docs/commands/job-init/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -t, --job-type string Type of job to create. Must be one of: \"Scheduled Job\". -n, --name string Name of the job. --retries int Optional. The number of times to try restarting the job on a failure. -s, --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\".","title":"What are the flags?"},{"location":"docs/commands/job-init/#examples","text":"Creates a \"reaper\" scheduled task to run once per day. $ copilot job init --name reaper --dockerfile ./frontend/Dockerfile --schedule \"@daily\" Creates a \"report-generator\" scheduled task with retries. $ copilot job init --name report-generator --schedule \"@monthly\" --retries 3 --timeout 900s","title":"Examples"},{"location":"docs/commands/job-logs/","text":"job logs $ copilot job logs What does it do? copilot job logs displays the logs of a deployed job. What are the flags? -a, --app string Name of the application. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --include-state-machine Optional. Include logs from the state machine executions. --json Optional. Output in JSON format. --last int Optional. The number of executions of the scheduled job for which logs should be shown. (default 1) --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. -n, --name string Name of the job. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs. Examples Displays logs of the job \"my-job\" in environment \"test\". $ copilot job logs -n my-job -e test Displays logs in the last hour. $ copilot job logs --since 1h Displays logs from the last 4 executions of the job. $ copilot job logs --last 4 Displays logs from specific task IDs $ copilot job logs --tasks 709c7ea,1de57fd Displays logs in real time. $ copilot job logs --follow Displays container logs and state machine execution logs from the last execution. $ copilot job logs --include-state-machine --last 1","title":"job logs"},{"location":"docs/commands/job-logs/#job-logs","text":"$ copilot job logs","title":"job logs"},{"location":"docs/commands/job-logs/#what-does-it-do","text":"copilot job logs displays the logs of a deployed job.","title":"What does it do?"},{"location":"docs/commands/job-logs/#what-are-the-flags","text":"-a, --app string Name of the application. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --include-state-machine Optional. Include logs from the state machine executions. --json Optional. Output in JSON format. --last int Optional. The number of executions of the scheduled job for which logs should be shown. (default 1) --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. -n, --name string Name of the job. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs.","title":"What are the flags?"},{"location":"docs/commands/job-logs/#examples","text":"Displays logs of the job \"my-job\" in environment \"test\". $ copilot job logs -n my-job -e test Displays logs in the last hour. $ copilot job logs --since 1h Displays logs from the last 4 executions of the job. $ copilot job logs --last 4 Displays logs from specific task IDs $ copilot job logs --tasks 709c7ea,1de57fd Displays logs in real time. $ copilot job logs --follow Displays container logs and state machine execution logs from the last execution. $ copilot job logs --include-state-machine --last 1","title":"Examples"},{"location":"docs/commands/job-ls/","text":"job ls $ copilot job ls What does it do? copilot job ls lists all the Copilot jobs for a particular application. What are the flags? -a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show jobs in the workspace. Example Lists all the jobs for the \"myapp\" application. $ copilot job ls --app myapp","title":"job ls"},{"location":"docs/commands/job-ls/#job-ls","text":"$ copilot job ls","title":"job ls"},{"location":"docs/commands/job-ls/#what-does-it-do","text":"copilot job ls lists all the Copilot jobs for a particular application.","title":"What does it do?"},{"location":"docs/commands/job-ls/#what-are-the-flags","text":"-a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show jobs in the workspace.","title":"What are the flags?"},{"location":"docs/commands/job-ls/#example","text":"Lists all the jobs for the \"myapp\" application. $ copilot job ls --app myapp","title":"Example"},{"location":"docs/commands/job-override/","text":"copilot job override $ copilot job override What does it do? Scaffold Infrastructure as Code (IaC) extension files for a job. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to the job's template. Learn more To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit . What are the flags? -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the job. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". Example Create a new Cloud Development Kit application to override the \"report\" job template. $ copilot job override -n report --tool cdk What does it look like?","title":"job override"},{"location":"docs/commands/job-override/#copilot-job-override","text":"$ copilot job override","title":"copilot job override"},{"location":"docs/commands/job-override/#what-does-it-do","text":"Scaffold Infrastructure as Code (IaC) extension files for a job. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to the job's template.","title":"What does it do?"},{"location":"docs/commands/job-override/#learn-more","text":"To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit .","title":"Learn more"},{"location":"docs/commands/job-override/#what-are-the-flags","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the job. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"What are the flags?"},{"location":"docs/commands/job-override/#example","text":"Create a new Cloud Development Kit application to override the \"report\" job template. $ copilot job override -n report --tool cdk","title":"Example"},{"location":"docs/commands/job-override/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/job-package/","text":"job package $ copilot job package What does it do? copilot job package produces the CloudFormation template(s) used to deploy a job to an environment. What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration. Examples Prints the CloudFormation template for the \"report-generator\" job parametrized for the \"test\" environment. $ copilot job package -n report-generator -e test Writes the CloudFormation stack and configuration to an \"infrastructure/\" sub-directory instead of printing. $ copilot job package -n report-generator -e test --output-dir ./infrastructure $ ls ./infrastructure report-generator-test.stack.yml report-generator-test.params.yml Use --diff to print the diff and exit. $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"job package"},{"location":"docs/commands/job-package/#job-package","text":"$ copilot job package","title":"job package"},{"location":"docs/commands/job-package/#what-does-it-do","text":"copilot job package produces the CloudFormation template(s) used to deploy a job to an environment.","title":"What does it do?"},{"location":"docs/commands/job-package/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration.","title":"What are the flags?"},{"location":"docs/commands/job-package/#examples","text":"Prints the CloudFormation template for the \"report-generator\" job parametrized for the \"test\" environment. $ copilot job package -n report-generator -e test Writes the CloudFormation stack and configuration to an \"infrastructure/\" sub-directory instead of printing. $ copilot job package -n report-generator -e test --output-dir ./infrastructure $ ls ./infrastructure report-generator-test.stack.yml report-generator-test.params.yml Use --diff to print the diff and exit. $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"Examples"},{"location":"docs/commands/job-run/","text":"job run $ copilot job run What does it do? copilot job run runs a scheduled job What are the flags? -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job. Examples Runs a job named \"report-gen\" in an application named \"report\" to a \"test\" environment $ copilot job run -a report -n report-gen -e test","title":"job run"},{"location":"docs/commands/job-run/#job-run","text":"$ copilot job run","title":"job run"},{"location":"docs/commands/job-run/#what-does-it-do","text":"copilot job run runs a scheduled job","title":"What does it do?"},{"location":"docs/commands/job-run/#what-are-the-flags","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job.","title":"What are the flags?"},{"location":"docs/commands/job-run/#examples","text":"Runs a job named \"report-gen\" in an application named \"report\" to a \"test\" environment $ copilot job run -a report -n report-gen -e test","title":"Examples"},{"location":"docs/commands/pipeline-delete/","text":"pipeline delete $ copilot pipeline delete [ flags ] What does it do? copilot pipeline delete deletes the pipeline associated with your workspace. What are the flags? -a, --app Name of the application. --delete-secret Deletes AWS Secrets Manager secret associated with a pipeline source repository. -h, --help help for delete -n, --name Name of the pipeline. --yes Skips confirmation prompt. Examples Delete the pipeline associated with your workspace. $ copilot pipeline delete","title":"pipeline delete"},{"location":"docs/commands/pipeline-delete/#pipeline-delete","text":"$ copilot pipeline delete [ flags ]","title":"pipeline delete"},{"location":"docs/commands/pipeline-delete/#what-does-it-do","text":"copilot pipeline delete deletes the pipeline associated with your workspace.","title":"What does it do?"},{"location":"docs/commands/pipeline-delete/#what-are-the-flags","text":"-a, --app Name of the application. --delete-secret Deletes AWS Secrets Manager secret associated with a pipeline source repository. -h, --help help for delete -n, --name Name of the pipeline. --yes Skips confirmation prompt.","title":"What are the flags?"},{"location":"docs/commands/pipeline-delete/#examples","text":"Delete the pipeline associated with your workspace. $ copilot pipeline delete","title":"Examples"},{"location":"docs/commands/pipeline-deploy/","text":"pipeline deploy $ copilot pipeline deploy [ flags ] What does it do? copilot pipeline deploy deploys a pipeline for the services in your workspace, using the environments associated with the application from a pipeline manifest. What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -h, --help help for deploy -n, --name string Name of the pipeline. --yes Skips confirmation prompt. Examples Deploys a pipeline for the services and jobs in your workspace. $ copilot pipeline deploy","title":"pipeline deploy"},{"location":"docs/commands/pipeline-deploy/#pipeline-deploy","text":"$ copilot pipeline deploy [ flags ]","title":"pipeline deploy"},{"location":"docs/commands/pipeline-deploy/#what-does-it-do","text":"copilot pipeline deploy deploys a pipeline for the services in your workspace, using the environments associated with the application from a pipeline manifest.","title":"What does it do?"},{"location":"docs/commands/pipeline-deploy/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -h, --help help for deploy -n, --name string Name of the pipeline. --yes Skips confirmation prompt.","title":"What are the flags?"},{"location":"docs/commands/pipeline-deploy/#examples","text":"Deploys a pipeline for the services and jobs in your workspace. $ copilot pipeline deploy","title":"Examples"},{"location":"docs/commands/pipeline-init/","text":"pipeline init $ copilot pipeline init [ flags ] What does it do? copilot pipeline init creates a pipeline manifest for the services in your workspace, using the environments associated with the application. What are the flags? -a, --app string Name of the application. -e, --environments strings Environments to add to the pipeline. -b, --git-branch string Branch used to trigger your pipeline. -h, --help help for init -n, --name string Name of the pipeline. -p, --pipeline-type string The type of pipeline. Must be either \"Workloads\" or \"Environments\". -u, --url string The repository URL to trigger your pipeline. Examples Create a pipeline for the services in your workspace. $ copilot pipeline init \\ --name frontend-main \\ --url https://github.com/gitHubUserName/frontend.git \\ --git-branch main \\ --environments \"test,prod\"","title":"pipeline init"},{"location":"docs/commands/pipeline-init/#pipeline-init","text":"$ copilot pipeline init [ flags ]","title":"pipeline init"},{"location":"docs/commands/pipeline-init/#what-does-it-do","text":"copilot pipeline init creates a pipeline manifest for the services in your workspace, using the environments associated with the application.","title":"What does it do?"},{"location":"docs/commands/pipeline-init/#what-are-the-flags","text":"-a, --app string Name of the application. -e, --environments strings Environments to add to the pipeline. -b, --git-branch string Branch used to trigger your pipeline. -h, --help help for init -n, --name string Name of the pipeline. -p, --pipeline-type string The type of pipeline. Must be either \"Workloads\" or \"Environments\". -u, --url string The repository URL to trigger your pipeline.","title":"What are the flags?"},{"location":"docs/commands/pipeline-init/#examples","text":"Create a pipeline for the services in your workspace. $ copilot pipeline init \\ --name frontend-main \\ --url https://github.com/gitHubUserName/frontend.git \\ --git-branch main \\ --environments \"test,prod\"","title":"Examples"},{"location":"docs/commands/pipeline-ls/","text":"pipeline ls $ copilot pipeline ls [ flags ] What does it do? copilot pipeline ls lists all the deployed pipelines in an application. What are the flags? -a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show pipelines in the workspace. Examples Lists all the pipelines for the \"phonetool\" application. $ copilot pipeline ls -a phonetool","title":"pipeline ls"},{"location":"docs/commands/pipeline-ls/#pipeline-ls","text":"$ copilot pipeline ls [ flags ]","title":"pipeline ls"},{"location":"docs/commands/pipeline-ls/#what-does-it-do","text":"copilot pipeline ls lists all the deployed pipelines in an application.","title":"What does it do?"},{"location":"docs/commands/pipeline-ls/#what-are-the-flags","text":"-a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show pipelines in the workspace.","title":"What are the flags?"},{"location":"docs/commands/pipeline-ls/#examples","text":"Lists all the pipelines for the \"phonetool\" application. $ copilot pipeline ls -a phonetool","title":"Examples"},{"location":"docs/commands/pipeline-override/","text":"copilot pipeline override $ copilot pipeline override What does it do? Scaffold Infrastructure as Code (IaC) extension files for a pipeline. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to an environment's template. Learn more To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit . What are the flags? -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Name of the pipeline. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". Example Create a new Cloud Development Kit application to override the \"myrepo-main\" pipeline template. $ copilot pipeline override -n myrepo-main --tool cdk What does it look like?","title":"pipeline override"},{"location":"docs/commands/pipeline-override/#copilot-pipeline-override","text":"$ copilot pipeline override","title":"copilot pipeline override"},{"location":"docs/commands/pipeline-override/#what-does-it-do","text":"Scaffold Infrastructure as Code (IaC) extension files for a pipeline. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to an environment's template.","title":"What does it do?"},{"location":"docs/commands/pipeline-override/#learn-more","text":"To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit .","title":"Learn more"},{"location":"docs/commands/pipeline-override/#what-are-the-flags","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Name of the pipeline. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"What are the flags?"},{"location":"docs/commands/pipeline-override/#example","text":"Create a new Cloud Development Kit application to override the \"myrepo-main\" pipeline template. $ copilot pipeline override -n myrepo-main --tool cdk","title":"Example"},{"location":"docs/commands/pipeline-override/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/pipeline-show/","text":"pipeline show $ copilot pipeline show [ flags ] What does it do? copilot pipeline show shows configuration information about a deployed pipeline for an application, including the account, region, and stages. What are the flags? -a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the pipeline. --resources Optional. Show the resources in your pipeline. Examples Shows info, including resources, about the pipeline \"myrepo-mybranch.\" $ copilot pipeline show --name myrepo-mybranch --resources What does it look like?","title":"pipeline show"},{"location":"docs/commands/pipeline-show/#pipeline-show","text":"$ copilot pipeline show [ flags ]","title":"pipeline show"},{"location":"docs/commands/pipeline-show/#what-does-it-do","text":"copilot pipeline show shows configuration information about a deployed pipeline for an application, including the account, region, and stages.","title":"What does it do?"},{"location":"docs/commands/pipeline-show/#what-are-the-flags","text":"-a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the pipeline. --resources Optional. Show the resources in your pipeline.","title":"What are the flags?"},{"location":"docs/commands/pipeline-show/#examples","text":"Shows info, including resources, about the pipeline \"myrepo-mybranch.\" $ copilot pipeline show --name myrepo-mybranch --resources","title":"Examples"},{"location":"docs/commands/pipeline-show/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/pipeline-status/","text":"pipeline status $ copilot pipeline status [ flags ] What does it do? copilot pipeline status shows the status of the stages in a deployed pipeline. What are the flags? -a, --app string Name of the application. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the pipeline. Examples Shows status of the pipeline \"my-repo-my-branch\". $ copilot pipeline status -n my-repo-my-branch What does it look like?","title":"pipeline status"},{"location":"docs/commands/pipeline-status/#pipeline-status","text":"$ copilot pipeline status [ flags ]","title":"pipeline status"},{"location":"docs/commands/pipeline-status/#what-does-it-do","text":"copilot pipeline status shows the status of the stages in a deployed pipeline.","title":"What does it do?"},{"location":"docs/commands/pipeline-status/#what-are-the-flags","text":"-a, --app string Name of the application. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the pipeline.","title":"What are the flags?"},{"location":"docs/commands/pipeline-status/#examples","text":"Shows status of the pipeline \"my-repo-my-branch\". $ copilot pipeline status -n my-repo-my-branch","title":"Examples"},{"location":"docs/commands/pipeline-status/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/run-local/","text":"run local $ copilot run local [ flags ] What does it do? copilot run local runs a workload locally. What are the flags? -a, --app string Name of the application. -e, --env string Name of the environment. --env-var-override stringToString Optional. Override environment variables passed to containers. Format: [container]:KEY=VALUE. Omit container name to apply to all containers. (default []) -h, --help help for run -n, --name string Name of the service or job. --port-override list Optional. Override ports exposed by service. Format: <host port>:<service port>. Example: --port-override 5000:80 binds localhost:5000 to the service's port 80. (default []) --proxy Optional. Proxy outbound requests to your environment's VPC. --proxy-network ipNet proxy-network (default 172.20.0.0/16) --watch Optional. Watch changes to local files and restart containers when updated. Examples Runs the service \"mysvc\" in environment \"test\" locally. $ copilot run local --name mysvc --env test","title":"run local"},{"location":"docs/commands/run-local/#run-local","text":"$ copilot run local [ flags ]","title":"run local"},{"location":"docs/commands/run-local/#what-does-it-do","text":"copilot run local runs a workload locally.","title":"What does it do?"},{"location":"docs/commands/run-local/#what-are-the-flags","text":"-a, --app string Name of the application. -e, --env string Name of the environment. --env-var-override stringToString Optional. Override environment variables passed to containers. Format: [container]:KEY=VALUE. Omit container name to apply to all containers. (default []) -h, --help help for run -n, --name string Name of the service or job. --port-override list Optional. Override ports exposed by service. Format: <host port>:<service port>. Example: --port-override 5000:80 binds localhost:5000 to the service's port 80. (default []) --proxy Optional. Proxy outbound requests to your environment's VPC. --proxy-network ipNet proxy-network (default 172.20.0.0/16) --watch Optional. Watch changes to local files and restart containers when updated.","title":"What are the flags?"},{"location":"docs/commands/run-local/#examples","text":"Runs the service \"mysvc\" in environment \"test\" locally. $ copilot run local --name mysvc --env test","title":"Examples"},{"location":"docs/commands/secret-init/","text":"secret init $ copilot secret init What does it do? copilot secret init creates or updates secrets as SecureString parameters in SSM Parameter Store for your application. A secret can have different values in each of your existing environments, and is accessible by your services or jobs from the same application and environment. What are the flags? -a, --app string Name of the application. --cli-input-yaml string Optional. A YAML file in which the secret values are specified. Mutually exclusive with the -n, --name and --values flags. -h, --help help for init -n, --name string The name of the secret. Mutually exclusive with the --cli-input-yaml flag. --overwrite Optional. Whether to overwrite an existing secret. --values stringToString Values of the secret in each environment. Specified as <environment>=<value> separated by commas. Mutually exclusive with the --cli-input-yaml flag. (default []) How can I use it? Create a secret with prompts. You will be prompted for the name of the secret, and its values in each of your existing environments. $ copilot secret init Create a secret named db_password in multiple environments. You will be prompted for the db_password 's values you want for each of your existing environments. $ copilot secret init --name db_password Create secrets from input.yml . For the format of the YAML file, please see below . $ copilot secret init --cli-input-yaml input.yml Info It is recommended that you specify your secret's values through our prompts (e.g. by running copilot secret init --name ) or from an input file by using the --cli-input-yaml flag. While the --values flag is a convenient way to specify secret values, your input may appear in your shell history as plaintext. What's next? Copilot will create SSM parameters named /copilot/<app name>/<env name>/secrets/<secret name> . Using the parameter names, you can then modify the secrets section in your service's or job's manifest to reference the secrets that were created. For example, suppose you have an application my-app , and you've created a secret db_host in your prod and dev environments. You can modify your service's manifest as follows: environments : prod : secrets : DB_PASSWORD : /copilot/my-app/prod/secrets/db_password dev : secrets : DB_PASSWORD : /copilot/my-app/dev/secrets/db_password Once you deploy this updated manifest, your service or job will be able to access the environment variable DB_PASSWORD . It will have the value of the SSM parameter /copilot/my-app/prod/secrets/db_password if the service/job is deployed in a prod environment, and /copilot/my-app/dev/secrets/db_password if it's deployed in a dev environment. This works because ECS Agent will resolve the SSM parameter when it starts up your task, and set the environment variable for you. How do I use the --cli-input-yaml flag? You can specify multiple secrets and their values in each of your existing environments in a file. Then you can use the file as the input to --cli-input-yaml flag. Copilot will read from the file and create or update the secrets accordingly. The YAML file should be formatted as follows: <secret A> : <env 1> : <the value of secret A in env 1> <env 2> : <the value of secret A in env 2> <env 3> : <the value of secret A in env 3> <secret B> : <env 1> : <the value of secret B in env 1> <env 2> : <the value of secret B in env 2> Here is an example input file that creates secrets db_host and db_password in dev , test and prod , and notification_email in dev and test environments. Note that notification_email won't be created for the prod environment since it doesn't have a value for prod . db_host : dev : dev.db.host.com test : test.db.host.com prod : prod.db.host.com db_password : dev : dev-db-pwd test : test-db-pwd prod : prod-db-pwd notification_email : dev : dev@email.com test : test@email.com","title":"secret init"},{"location":"docs/commands/secret-init/#secret-init","text":"$ copilot secret init","title":"secret init"},{"location":"docs/commands/secret-init/#what-does-it-do","text":"copilot secret init creates or updates secrets as SecureString parameters in SSM Parameter Store for your application. A secret can have different values in each of your existing environments, and is accessible by your services or jobs from the same application and environment.","title":"What does it do?"},{"location":"docs/commands/secret-init/#what-are-the-flags","text":"-a, --app string Name of the application. --cli-input-yaml string Optional. A YAML file in which the secret values are specified. Mutually exclusive with the -n, --name and --values flags. -h, --help help for init -n, --name string The name of the secret. Mutually exclusive with the --cli-input-yaml flag. --overwrite Optional. Whether to overwrite an existing secret. --values stringToString Values of the secret in each environment. Specified as <environment>=<value> separated by commas. Mutually exclusive with the --cli-input-yaml flag. (default [])","title":"What are the flags?"},{"location":"docs/commands/secret-init/#how-can-i-use-it","text":"Create a secret with prompts. You will be prompted for the name of the secret, and its values in each of your existing environments. $ copilot secret init Create a secret named db_password in multiple environments. You will be prompted for the db_password 's values you want for each of your existing environments. $ copilot secret init --name db_password Create secrets from input.yml . For the format of the YAML file, please see below . $ copilot secret init --cli-input-yaml input.yml Info It is recommended that you specify your secret's values through our prompts (e.g. by running copilot secret init --name ) or from an input file by using the --cli-input-yaml flag. While the --values flag is a convenient way to specify secret values, your input may appear in your shell history as plaintext.","title":"How can I use it?"},{"location":"docs/commands/secret-init/#whats-next","text":"Copilot will create SSM parameters named /copilot/<app name>/<env name>/secrets/<secret name> . Using the parameter names, you can then modify the secrets section in your service's or job's manifest to reference the secrets that were created. For example, suppose you have an application my-app , and you've created a secret db_host in your prod and dev environments. You can modify your service's manifest as follows: environments : prod : secrets : DB_PASSWORD : /copilot/my-app/prod/secrets/db_password dev : secrets : DB_PASSWORD : /copilot/my-app/dev/secrets/db_password Once you deploy this updated manifest, your service or job will be able to access the environment variable DB_PASSWORD . It will have the value of the SSM parameter /copilot/my-app/prod/secrets/db_password if the service/job is deployed in a prod environment, and /copilot/my-app/dev/secrets/db_password if it's deployed in a dev environment. This works because ECS Agent will resolve the SSM parameter when it starts up your task, and set the environment variable for you.","title":"What's next?"},{"location":"docs/commands/secret-init/#how-do-i-use-the-cli-input-yaml-flag","text":"You can specify multiple secrets and their values in each of your existing environments in a file. Then you can use the file as the input to --cli-input-yaml flag. Copilot will read from the file and create or update the secrets accordingly. The YAML file should be formatted as follows: <secret A> : <env 1> : <the value of secret A in env 1> <env 2> : <the value of secret A in env 2> <env 3> : <the value of secret A in env 3> <secret B> : <env 1> : <the value of secret B in env 1> <env 2> : <the value of secret B in env 2> Here is an example input file that creates secrets db_host and db_password in dev , test and prod , and notification_email in dev and test environments. Note that notification_email won't be created for the prod environment since it doesn't have a value for prod . db_host : dev : dev.db.host.com test : test.db.host.com prod : prod.db.host.com db_password : dev : dev-db-pwd test : test-db-pwd prod : prod-db-pwd notification_email : dev : dev@email.com test : test@email.com","title":"How do I use the --cli-input-yaml flag?"},{"location":"docs/commands/storage-init/","text":"storage init $ copilot storage init What does it do? copilot storage init creates new storage resources as addons. By default, Copilot follows the \"database-per-service\" pattern: only the service or job that you specify during storage init will have access to that storage resource. The storage is accessible from inside the service's containers via a friendly environment variable that holds the name of your storage resource or credential information for accessing the resource. However, each user has its own unique situation. If you do need your data storage to be shared among multiple service, you can modify the Copilot-generated CloudFormation template in order to achieve your goal. A storage resource can be created as a workload addon : it is attached to one of your services or jobs, and is deployed and deleted at the same time as the workload. For example, when you run copilot svc deploy --name api , the resource will be deployed along with \"api\" to the target environment. Alternatively, a storage resource can be created as an environment addon : it is attached to environments, and is deployed and deleted at the same time as an environment. For example, when you run copilot env deploy --name test , the resource will be deployed along with the \"test\" environment. You can specify either S3 , DynamoDB or Aurora as the resource type. What are the flags? Required Flags -l, --lifecycle string Whether the storage should be created and deleted at the same time as an workload or an environment. Must be one of: \"workload\" or \"environment\". -n, --name string Name of the storage resource to create. -t, --storage-type string Type of storage to add. Must be one of: \"DynamoDB\", \"S3\", \"Aurora\". -w, --workload string Name of the service/job that accesses the storage resource. DynamoDB Flags --lsi stringArray Optional. Attribute to use as an alternate sort key. May be specified up to 5 times. Must be of the format '<keyName>:<dataType>'. --no-lsi Optional. Don't ask about configuring alternate sort keys. --no-sort Optional. Skip configuring sort keys. --partition-key string Partition key for the DDB table. Must be of the format '<keyName>:<dataType>'. --sort-key string Optional. Sort key for the DDB table. Must be of the format '<keyName>:<dataType>'. Aurora Serverless Flags --engine string The database engine used in the cluster. Must be either \"MySQL\" or \"PostgreSQL\". --initial-db string The initial database to create in the cluster. --parameter-group string Optional. The name of the parameter group to associate with the cluster. --serverless-version string Optional. Aurora Serverless version. With \"environment\" lifecycle, use \"v2\". With \"workload\" lifecycle, use \"v1\" or \"v2\". (default \"v2\") Optional Flags --add-ingress-from string The workload that needs access to an environment storage resource. Must be specified with \"--name\" and \"--storage-type\". Can be specified with \"--engine\". Considerations when using Aurora Serverless v1 storage Aurora Serverless v1 is only supported for workload-level storage If you want to create an Aurora Serverless v1 with \"environment\" lifecycle, please see this example . How can I use it? Create an S3 bucket named \"my-bucket\" attached to the \"frontend\" service. $ copilot storage init -n my-bucket -t S3 -w frontend -l workload Create an environment S3 bucket named \"my-bucket\" fronted by the \"api\" service. $ copilot storage init \\ -t S3 -n my-bucket \\ -w api -l environment Create a basic DynamoDB table named \"my-table\" attached to the \"frontend\" service with a sort key specified. $ copilot storage init -t DynamoDB -n my-table \\ -w frontend -l workload \\ --partition-key Email:S \\ --sort-key UserId:N \\ --no-lsi Create a DynamoDB table with multiple alternate sort keys. $ copilot storage init -t DynamoDB -n my-table \\ -w frontend \\ --partition-key Email:S \\ --sort-key UserId:N \\ --lsi Points:N \\ --lsi Goodness:N Create an RDS Aurora Serverless v2 cluster using PostgreSQL as the database engine. $ copilot storage init \\ -n my-cluster -t Aurora -w frontend --engine PostgreSQL Create an RDS Aurora Serverless v1 cluster using MySQL as the database engine with testdb as initial database name. $ copilot storage init \\ -n my-cluster -t Aurora --serverless-version v1 -w frontend --engine MySQL --initial-db testdb What happens under the hood? Copilot writes a Cloudformation template specifying the S3 bucket, DDB table, or Aurora Serverless cluster to the addons dir. When you run copilot [svc/job/env] deploy , the CLI merges this template with all the other templates in the addons directory to create a nested stack associated with your service or environment. This nested stack describes all the additional resources you've associated with that service or the environment, and is deployed wherever your service or environment is deployed. Example scenarios S3 storage attached to a service $ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle workload This generates a CloudFormation template for an S3 bucket, attached to the \"fe\" service. $ copilot svc deploy --name fe --env test $ copilot svc deploy --name fe --env prod After running these commands, there will be two buckets deployed, one in the \"test\" env and one in the \"prod\" env, accessible only to the \"fe\" service in its respective environment. S3 storage attached to environments $ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle environment This generates a CloudFormation template for an S3 bucket that will be deployed and deleted at the same time as an environment. In addition, it will generate a CloudFormation template for the access policy that grants \"fe\" access to the \"bucket\" resource. $ copilot env deploy --name test $ copilot env deploy --name prod After running the commands, there will be two buckets deployed, one each in the \"test\" and \"prod\" environments. $ copilot svc deploy --name fe --env test $ copilot svc deploy --name fe --env prod The service \"fe\" will be deployed with the access policy that is generated. It is now able to access the S3 bucket in the respective environment.","title":"storage init"},{"location":"docs/commands/storage-init/#storage-init","text":"$ copilot storage init","title":"storage init"},{"location":"docs/commands/storage-init/#what-does-it-do","text":"copilot storage init creates new storage resources as addons. By default, Copilot follows the \"database-per-service\" pattern: only the service or job that you specify during storage init will have access to that storage resource. The storage is accessible from inside the service's containers via a friendly environment variable that holds the name of your storage resource or credential information for accessing the resource. However, each user has its own unique situation. If you do need your data storage to be shared among multiple service, you can modify the Copilot-generated CloudFormation template in order to achieve your goal. A storage resource can be created as a workload addon : it is attached to one of your services or jobs, and is deployed and deleted at the same time as the workload. For example, when you run copilot svc deploy --name api , the resource will be deployed along with \"api\" to the target environment. Alternatively, a storage resource can be created as an environment addon : it is attached to environments, and is deployed and deleted at the same time as an environment. For example, when you run copilot env deploy --name test , the resource will be deployed along with the \"test\" environment. You can specify either S3 , DynamoDB or Aurora as the resource type.","title":"What does it do?"},{"location":"docs/commands/storage-init/#what-are-the-flags","text":"Required Flags -l, --lifecycle string Whether the storage should be created and deleted at the same time as an workload or an environment. Must be one of: \"workload\" or \"environment\". -n, --name string Name of the storage resource to create. -t, --storage-type string Type of storage to add. Must be one of: \"DynamoDB\", \"S3\", \"Aurora\". -w, --workload string Name of the service/job that accesses the storage resource. DynamoDB Flags --lsi stringArray Optional. Attribute to use as an alternate sort key. May be specified up to 5 times. Must be of the format '<keyName>:<dataType>'. --no-lsi Optional. Don't ask about configuring alternate sort keys. --no-sort Optional. Skip configuring sort keys. --partition-key string Partition key for the DDB table. Must be of the format '<keyName>:<dataType>'. --sort-key string Optional. Sort key for the DDB table. Must be of the format '<keyName>:<dataType>'. Aurora Serverless Flags --engine string The database engine used in the cluster. Must be either \"MySQL\" or \"PostgreSQL\". --initial-db string The initial database to create in the cluster. --parameter-group string Optional. The name of the parameter group to associate with the cluster. --serverless-version string Optional. Aurora Serverless version. With \"environment\" lifecycle, use \"v2\". With \"workload\" lifecycle, use \"v1\" or \"v2\". (default \"v2\") Optional Flags --add-ingress-from string The workload that needs access to an environment storage resource. Must be specified with \"--name\" and \"--storage-type\". Can be specified with \"--engine\". Considerations when using Aurora Serverless v1 storage","title":"What are the flags?"},{"location":"docs/commands/storage-init/#aurora-serverless-v1-is-only-supported-for-workload-level-storage","text":"If you want to create an Aurora Serverless v1 with \"environment\" lifecycle, please see this example .","title":"Aurora Serverless v1 is only supported for workload-level storage"},{"location":"docs/commands/storage-init/#how-can-i-use-it","text":"Create an S3 bucket named \"my-bucket\" attached to the \"frontend\" service. $ copilot storage init -n my-bucket -t S3 -w frontend -l workload Create an environment S3 bucket named \"my-bucket\" fronted by the \"api\" service. $ copilot storage init \\ -t S3 -n my-bucket \\ -w api -l environment Create a basic DynamoDB table named \"my-table\" attached to the \"frontend\" service with a sort key specified. $ copilot storage init -t DynamoDB -n my-table \\ -w frontend -l workload \\ --partition-key Email:S \\ --sort-key UserId:N \\ --no-lsi Create a DynamoDB table with multiple alternate sort keys. $ copilot storage init -t DynamoDB -n my-table \\ -w frontend \\ --partition-key Email:S \\ --sort-key UserId:N \\ --lsi Points:N \\ --lsi Goodness:N Create an RDS Aurora Serverless v2 cluster using PostgreSQL as the database engine. $ copilot storage init \\ -n my-cluster -t Aurora -w frontend --engine PostgreSQL Create an RDS Aurora Serverless v1 cluster using MySQL as the database engine with testdb as initial database name. $ copilot storage init \\ -n my-cluster -t Aurora --serverless-version v1 -w frontend --engine MySQL --initial-db testdb","title":"How can I use it?"},{"location":"docs/commands/storage-init/#what-happens-under-the-hood","text":"Copilot writes a Cloudformation template specifying the S3 bucket, DDB table, or Aurora Serverless cluster to the addons dir. When you run copilot [svc/job/env] deploy , the CLI merges this template with all the other templates in the addons directory to create a nested stack associated with your service or environment. This nested stack describes all the additional resources you've associated with that service or the environment, and is deployed wherever your service or environment is deployed.","title":"What happens under the hood?"},{"location":"docs/commands/storage-init/#example-scenarios","text":"","title":"Example scenarios"},{"location":"docs/commands/storage-init/#s3-storage-attached-to-a-service","text":"$ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle workload This generates a CloudFormation template for an S3 bucket, attached to the \"fe\" service. $ copilot svc deploy --name fe --env test $ copilot svc deploy --name fe --env prod After running these commands, there will be two buckets deployed, one in the \"test\" env and one in the \"prod\" env, accessible only to the \"fe\" service in its respective environment.","title":"S3 storage attached to a service"},{"location":"docs/commands/storage-init/#s3-storage-attached-to-environments","text":"$ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle environment This generates a CloudFormation template for an S3 bucket that will be deployed and deleted at the same time as an environment. In addition, it will generate a CloudFormation template for the access policy that grants \"fe\" access to the \"bucket\" resource. $ copilot env deploy --name test $ copilot env deploy --name prod After running the commands, there will be two buckets deployed, one each in the \"test\" and \"prod\" environments. $ copilot svc deploy --name fe --env test $ copilot svc deploy --name fe --env prod The service \"fe\" will be deployed with the access policy that is generated. It is now able to access the S3 bucket in the respective environment.","title":"S3 storage attached to environments"},{"location":"docs/commands/svc-delete/","text":"svc delete $ copilot svc delete [ flags ] What does it do? copilot svc delete deletes all resources associated with your service in a particular environment. What are the flags? -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Skips confirmation prompt. Examples Force delete the application with environments \"test\" and \"prod\". $ copilot svc delete --name test --yes","title":"svc delete"},{"location":"docs/commands/svc-delete/#svc-delete","text":"$ copilot svc delete [ flags ]","title":"svc delete"},{"location":"docs/commands/svc-delete/#what-does-it-do","text":"copilot svc delete deletes all resources associated with your service in a particular environment.","title":"What does it do?"},{"location":"docs/commands/svc-delete/#what-are-the-flags","text":"-e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Skips confirmation prompt.","title":"What are the flags?"},{"location":"docs/commands/svc-delete/#examples","text":"Force delete the application with environments \"test\" and \"prod\". $ copilot svc delete --name test --yes","title":"Examples"},{"location":"docs/commands/svc-deploy/","text":"svc deploy $ copilot svc deploy What does it do? copilot svc deploy takes your local code and configuration and deploys it. The steps involved in service deploy are: When image.build exists in the manifest: Build your local Dockerfile into an image Tag it with the value from --tag or the latest git sha (if you're in a git directory) Push the image to ECR Package your manifest file and addons into CloudFormation Create / update your ECS task definition and service What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. -h, --help help for deploy -n, --name string Name of the service. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info The --no-rollback flag is not recommended while deploying to a production environment as it may introduce service downtime. If the deployment fails when automatic stack rollback is disabled, you may be required to manually start the stack rollback of the stack via the AWS console or AWS CLI before the next deployment. Examples Use --diff to see what will be changed before making a deployment. $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot svc package --diff Alternatively, if you just wish to take a peek at the diff without potentially making a deployment, you can run copilot svc package --diff , which will print the diff and exit.","title":"svc deploy"},{"location":"docs/commands/svc-deploy/#svc-deploy","text":"$ copilot svc deploy","title":"svc deploy"},{"location":"docs/commands/svc-deploy/#what-does-it-do","text":"copilot svc deploy takes your local code and configuration and deploys it. The steps involved in service deploy are: When image.build exists in the manifest: Build your local Dockerfile into an image Tag it with the value from --tag or the latest git sha (if you're in a git directory) Push the image to ECR Package your manifest file and addons into CloudFormation Create / update your ECS task definition and service","title":"What does it do?"},{"location":"docs/commands/svc-deploy/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. -h, --help help for deploy -n, --name string Name of the service. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info The --no-rollback flag is not recommended while deploying to a production environment as it may introduce service downtime. If the deployment fails when automatic stack rollback is disabled, you may be required to manually start the stack rollback of the stack via the AWS console or AWS CLI before the next deployment.","title":"What are the flags?"},{"location":"docs/commands/svc-deploy/#examples","text":"Use --diff to see what will be changed before making a deployment. $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot svc package --diff Alternatively, if you just wish to take a peek at the diff without potentially making a deployment, you can run copilot svc package --diff , which will print the diff and exit.","title":"Examples"},{"location":"docs/commands/svc-exec/","text":"svc exec $ copilot svc exec What does it do? copilot svc exec executes a command in a running container part of a service. What are the flags? -a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --container string Optional. The specific container you want to exec in. By default the first essential container will be used. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in. --yes Optional. Whether to update the Session Manager Plugin. Examples Start an interactive bash session with a task part of the \"frontend\" service. $ copilot svc exec -a my-app -e test -n frontend Runs the 'ls' command in the task prefixed with ID \"8c38184\" within the \"backend\" service. $ copilot svc exec -a my-app -e test --name backend --task-id 8c38184 --command \"ls\" What does it look like? Info Please make sure exec: true is set in your manifest before deploying the service. Please note that this will update the service's Fargate Platform Version to 1.4.0. Updating the Platform Version results in replacing your service which will result in downtime for your service. exec is not supported for Windows containers.","title":"svc exec"},{"location":"docs/commands/svc-exec/#svc-exec","text":"$ copilot svc exec","title":"svc exec"},{"location":"docs/commands/svc-exec/#what-does-it-do","text":"copilot svc exec executes a command in a running container part of a service.","title":"What does it do?"},{"location":"docs/commands/svc-exec/#what-are-the-flags","text":"-a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --container string Optional. The specific container you want to exec in. By default the first essential container will be used. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in. --yes Optional. Whether to update the Session Manager Plugin.","title":"What are the flags?"},{"location":"docs/commands/svc-exec/#examples","text":"Start an interactive bash session with a task part of the \"frontend\" service. $ copilot svc exec -a my-app -e test -n frontend Runs the 'ls' command in the task prefixed with ID \"8c38184\" within the \"backend\" service. $ copilot svc exec -a my-app -e test --name backend --task-id 8c38184 --command \"ls\"","title":"Examples"},{"location":"docs/commands/svc-exec/#what-does-it-look-like","text":"Info Please make sure exec: true is set in your manifest before deploying the service. Please note that this will update the service's Fargate Platform Version to 1.4.0. Updating the Platform Version results in replacing your service which will result in downtime for your service. exec is not supported for Windows containers.","title":"What does it look like?"},{"location":"docs/commands/svc-init/","text":"svc init $ copilot svc init What does it do? copilot svc init creates a new service to run your code for you. After running this command, the CLI creates sub-directory with your service name in your local copilot directory where you'll find a manifest file . Feel free to update your manifest file to change the default configs for your service. The CLI also sets up an ECR repository with a policy for all environments to be able to pull from it. Then, your service gets registered to AWS System Manager Parameter Store so that the CLI can keep track of it. After that, if you already have an environment set up, you can run copilot deploy to deploy your service in that environment. What are the flags? Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Cannot be specified with --image. -h, --help help for init -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --ingress-type string Required for a Request-Driven Web Service. Allowed source of traffic to your service. Must be one of Environment or Internet. -n, --name string Name of the service. --no-subscribe Optional. Turn off selection for adding subscriptions for worker services. --port uint16 The port on which your service listens. --sources stringArray List of relative paths to source directories or files. Must be specified with '--svc-type \"Static Site\"'. --subscribe-topics stringArray Optional. SNS topics to subscribe to from other services in your application. Must be of format '<svcName>:<topicName>'. -t, --svc-type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Worker Service\", \"Static Site\". To create a \"frontend\" load balanced web service you could run: $ copilot svc init --name frontend --svc-type \"Load Balanced Web Service\" --dockerfile ./frontend/Dockerfile What does it look like?","title":"svc init"},{"location":"docs/commands/svc-init/#svc-init","text":"$ copilot svc init","title":"svc init"},{"location":"docs/commands/svc-init/#what-does-it-do","text":"copilot svc init creates a new service to run your code for you. After running this command, the CLI creates sub-directory with your service name in your local copilot directory where you'll find a manifest file . Feel free to update your manifest file to change the default configs for your service. The CLI also sets up an ECR repository with a policy for all environments to be able to pull from it. Then, your service gets registered to AWS System Manager Parameter Store so that the CLI can keep track of it. After that, if you already have an environment set up, you can run copilot deploy to deploy your service in that environment.","title":"What does it do?"},{"location":"docs/commands/svc-init/#what-are-the-flags","text":"Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Cannot be specified with --image. -h, --help help for init -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --ingress-type string Required for a Request-Driven Web Service. Allowed source of traffic to your service. Must be one of Environment or Internet. -n, --name string Name of the service. --no-subscribe Optional. Turn off selection for adding subscriptions for worker services. --port uint16 The port on which your service listens. --sources stringArray List of relative paths to source directories or files. Must be specified with '--svc-type \"Static Site\"'. --subscribe-topics stringArray Optional. SNS topics to subscribe to from other services in your application. Must be of format '<svcName>:<topicName>'. -t, --svc-type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Worker Service\", \"Static Site\". To create a \"frontend\" load balanced web service you could run: $ copilot svc init --name frontend --svc-type \"Load Balanced Web Service\" --dockerfile ./frontend/Dockerfile","title":"What are the flags?"},{"location":"docs/commands/svc-init/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/svc-logs/","text":"svc logs $ copilot svc logs What does it do? copilot svc logs displays the logs of a deployed service. (Logs are not available for Static Site services.) What are the flags? -a, --app string Name of the application. (default \"testing-buildspec\") --container string Optional. Return only logs from a specific container. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --json Optional. Output in JSON format. --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. --log-group string Optional. Only return logs from specific log group. -n, --name string Name of the service. -p, --previous Optional. Print logs for the last stopped task if exists. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs. Examples Displays logs of the service \"my-svc\" in environment \"test\". $ copilot svc logs -n my-svc -e test Displays logs in the last hour. $ copilot svc logs --since 1h Displays logs from 2006-01-02T15:04:05 to 2006-01-02T15:05:05. $ copilot svc logs --start-time 2006 -01-02T15:04:05+00:00 --end-time 2006 -01-02T15:05:05+00:00","title":"svc logs"},{"location":"docs/commands/svc-logs/#svc-logs","text":"$ copilot svc logs","title":"svc logs"},{"location":"docs/commands/svc-logs/#what-does-it-do","text":"copilot svc logs displays the logs of a deployed service. (Logs are not available for Static Site services.)","title":"What does it do?"},{"location":"docs/commands/svc-logs/#what-are-the-flags","text":"-a, --app string Name of the application. (default \"testing-buildspec\") --container string Optional. Return only logs from a specific container. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --json Optional. Output in JSON format. --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. --log-group string Optional. Only return logs from specific log group. -n, --name string Name of the service. -p, --previous Optional. Print logs for the last stopped task if exists. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs.","title":"What are the flags?"},{"location":"docs/commands/svc-logs/#examples","text":"Displays logs of the service \"my-svc\" in environment \"test\". $ copilot svc logs -n my-svc -e test Displays logs in the last hour. $ copilot svc logs --since 1h Displays logs from 2006-01-02T15:04:05 to 2006-01-02T15:05:05. $ copilot svc logs --start-time 2006 -01-02T15:04:05+00:00 --end-time 2006 -01-02T15:05:05+00:00","title":"Examples"},{"location":"docs/commands/svc-ls/","text":"svc ls $ copilot svc ls What does it do? copilot svc ls lists all the Copilot services for a particular application. What are the flags? -a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show services in the workspace. What does it look like?","title":"svc ls"},{"location":"docs/commands/svc-ls/#svc-ls","text":"$ copilot svc ls","title":"svc ls"},{"location":"docs/commands/svc-ls/#what-does-it-do","text":"copilot svc ls lists all the Copilot services for a particular application.","title":"What does it do?"},{"location":"docs/commands/svc-ls/#what-are-the-flags","text":"-a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show services in the workspace.","title":"What are the flags?"},{"location":"docs/commands/svc-ls/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/svc-override/","text":"svc override $ copilot svc override What does it do? Scaffold Infrastructure as Code (IaC) extension files for a service. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to the service's template. Learn more To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit . What are the flags? -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the service. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". Example Create a new Cloud Development Kit application to override the \"frontend\" service template. $ copilot svc override -n frontend --tool cdk What does it look like?","title":"svc override"},{"location":"docs/commands/svc-override/#svc-override","text":"$ copilot svc override","title":"svc override"},{"location":"docs/commands/svc-override/#what-does-it-do","text":"Scaffold Infrastructure as Code (IaC) extension files for a service. The generated files allow you to extend and override the Copilot-generated AWS CloudFormation template. You can edit the files to change existing resource properties, and delete or add new resources to the service's template.","title":"What does it do?"},{"location":"docs/commands/svc-override/#learn-more","text":"To learn more, check out the guides for overriding with YAML Patches and the AWS Cloud Development Kit .","title":"Learn more"},{"location":"docs/commands/svc-override/#what-are-the-flags","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the service. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"What are the flags?"},{"location":"docs/commands/svc-override/#example","text":"Create a new Cloud Development Kit application to override the \"frontend\" service template. $ copilot svc override -n frontend --tool cdk","title":"Example"},{"location":"docs/commands/svc-override/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/svc-package/","text":"svc package $ copilot svc package What does it do? copilot svc package produces the CloudFormation template(s) used to deploy a service to an environment. What are the flags? --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the service. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The service's image tag. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration. Example Write the CloudFormation stack and configuration to a \"infrastructure/\" sub-directory instead of printing. $ copilot svc package -n frontend -e test --output-dir ./infrastructure $ ls ./infrastructure frontend.stack.yml frontend-test.config.yml Use --diff to print the diff and exit. $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"svc package"},{"location":"docs/commands/svc-package/#svc-package","text":"$ copilot svc package","title":"svc package"},{"location":"docs/commands/svc-package/#what-does-it-do","text":"copilot svc package produces the CloudFormation template(s) used to deploy a service to an environment.","title":"What does it do?"},{"location":"docs/commands/svc-package/#what-are-the-flags","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the service. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The service's image tag. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration.","title":"What are the flags?"},{"location":"docs/commands/svc-package/#example","text":"Write the CloudFormation stack and configuration to a \"infrastructure/\" sub-directory instead of printing. $ copilot svc package -n frontend -e test --output-dir ./infrastructure $ ls ./infrastructure frontend.stack.yml frontend-test.config.yml Use --diff to print the diff and exit. $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" The exit codes when using copilot [noun] package --diff 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"Example"},{"location":"docs/commands/svc-pause/","text":"svc pause $ copilot svc pause [ flags ] What does it do? Note svc pause is only supported by services of type \"Request-Driven Web Service\". copilot svc pause pauses the App Runner Service associated with your service within a specific environment. What are the flags? -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for pause -n, --name string Name of the service. --yes Skips confirmation prompt. Examples Pause running App Runner service \"my-svc\". $ copilot svc pause -n my-svc","title":"svc pause"},{"location":"docs/commands/svc-pause/#svc-pause","text":"$ copilot svc pause [ flags ]","title":"svc pause"},{"location":"docs/commands/svc-pause/#what-does-it-do","text":"Note svc pause is only supported by services of type \"Request-Driven Web Service\". copilot svc pause pauses the App Runner Service associated with your service within a specific environment.","title":"What does it do?"},{"location":"docs/commands/svc-pause/#what-are-the-flags","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for pause -n, --name string Name of the service. --yes Skips confirmation prompt.","title":"What are the flags?"},{"location":"docs/commands/svc-pause/#examples","text":"Pause running App Runner service \"my-svc\". $ copilot svc pause -n my-svc","title":"Examples"},{"location":"docs/commands/svc-resume/","text":"svc resume $ copilot svc resume [ flags ] What does it do? Note svc resume is only supported by services of type \"Request-Driven Web Service\". copilot svc resume resumes the App Runner Service associated with your service within a specific environment. What are the flags? -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for resume -n, --name string Name of the service. Examples Resume paused App Runner service \"my-svc\". $ copilot svc resume -n my-svc","title":"svc resume"},{"location":"docs/commands/svc-resume/#svc-resume","text":"$ copilot svc resume [ flags ]","title":"svc resume"},{"location":"docs/commands/svc-resume/#what-does-it-do","text":"Note svc resume is only supported by services of type \"Request-Driven Web Service\". copilot svc resume resumes the App Runner Service associated with your service within a specific environment.","title":"What does it do?"},{"location":"docs/commands/svc-resume/#what-are-the-flags","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for resume -n, --name string Name of the service.","title":"What are the flags?"},{"location":"docs/commands/svc-resume/#examples","text":"Resume paused App Runner service \"my-svc\". $ copilot svc resume -n my-svc","title":"Examples"},{"location":"docs/commands/svc-show/","text":"svc show $ copilot svc show What does it do? copilot svc show shows info about a deployed service. Depending on the service type, output may include endpoints, configuration, variables, and/or associated S3 objects per environment. What are the flags? -a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest string Optional. Name of the environment in which the service was deployed; output the manifest file used for that deployment. -n, --name string Name of the service. --resources Optional. Show the resources in your service. Examples Print service configuration in deployed environments. $ copilot svc show -n api Print manifest file used for deploying service \"api\" in the \"prod\" environment. $ copilot svc show -n api --manifest prod What does it look like?","title":"svc show"},{"location":"docs/commands/svc-show/#svc-show","text":"$ copilot svc show","title":"svc show"},{"location":"docs/commands/svc-show/#what-does-it-do","text":"copilot svc show shows info about a deployed service. Depending on the service type, output may include endpoints, configuration, variables, and/or associated S3 objects per environment.","title":"What does it do?"},{"location":"docs/commands/svc-show/#what-are-the-flags","text":"-a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest string Optional. Name of the environment in which the service was deployed; output the manifest file used for that deployment. -n, --name string Name of the service. --resources Optional. Show the resources in your service.","title":"What are the flags?"},{"location":"docs/commands/svc-show/#examples","text":"Print service configuration in deployed environments. $ copilot svc show -n api Print manifest file used for deploying service \"api\" in the \"prod\" environment. $ copilot svc show -n api --manifest prod","title":"Examples"},{"location":"docs/commands/svc-show/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/svc-status/","text":"svc status $ copilot svc status What does it do? copilot svc status shows the health status of a deployed service. Depending on the service type, output may include service, task, and associated alarm statuses; logs; or S3 bucket data. What are the flags? -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the service. What does it look like?","title":"svc status"},{"location":"docs/commands/svc-status/#svc-status","text":"$ copilot svc status","title":"svc status"},{"location":"docs/commands/svc-status/#what-does-it-do","text":"copilot svc status shows the health status of a deployed service. Depending on the service type, output may include service, task, and associated alarm statuses; logs; or S3 bucket data.","title":"What does it do?"},{"location":"docs/commands/svc-status/#what-are-the-flags","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the service.","title":"What are the flags?"},{"location":"docs/commands/svc-status/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/commands/task-delete/","text":"task delete $ copilot task delete What does it do? copilot task delete stops running instances of the task, and deletes associated resources. Info Tasks created with versions of Copilot earlier than v1.2.0 cannot be stopped by copilot task delete . Customers using tasks launched with earlier versions should manually stop any running tasks via the ECS console after running the command. What are the flags? -a, --app string Name of the application. --default Optional. Delete a task which was launched in the default cluster and subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Optional. Skips confirmation prompt. Example Delete the \"test\" task from the default cluster. $ copilot task delete --name test --default Delete the \"db-migrate\" task from the prod environment. $ copilot task delete --name db-migrate --env prod Delete the \"test\" task without confirmation prompt. $ copilot task delete --name test --yes","title":"task delete"},{"location":"docs/commands/task-delete/#task-delete","text":"$ copilot task delete","title":"task delete"},{"location":"docs/commands/task-delete/#what-does-it-do","text":"copilot task delete stops running instances of the task, and deletes associated resources. Info Tasks created with versions of Copilot earlier than v1.2.0 cannot be stopped by copilot task delete . Customers using tasks launched with earlier versions should manually stop any running tasks via the ECS console after running the command.","title":"What does it do?"},{"location":"docs/commands/task-delete/#what-are-the-flags","text":"-a, --app string Name of the application. --default Optional. Delete a task which was launched in the default cluster and subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Optional. Skips confirmation prompt.","title":"What are the flags?"},{"location":"docs/commands/task-delete/#example","text":"Delete the \"test\" task from the default cluster. $ copilot task delete --name test --default Delete the \"db-migrate\" task from the prod environment. $ copilot task delete --name db-migrate --env prod Delete the \"test\" task without confirmation prompt. $ copilot task delete --name test --yes","title":"Example"},{"location":"docs/commands/task-exec/","text":"task exec $ copilot task exec What does it do? copilot task exec executes a command in a running container part of a task. What are the flags? -a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --default Optional. Execute commands in running tasks in default cluster and default subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in. Examples Start an interactive bash session with a task in task group \"db-migrate\" in the \"test\" environment under the current workspace. $ copilot task exec -e test -n db-migrate Runs the 'cat progress.csv' command in the task prefixed with ID \"1848c38\" part of the \"db-migrate\" task group. $ copilot task exec --name db-migrate --task-id 1848c38 --command \"cat progress.csv\" Start an interactive bash session with a task prefixed with ID \"38c3818\" in the default cluster. $ copilot task exec --default --task-id 38c3818 Info copilot task exec cannot be performed without certain task role permissions. If you are using existing task role to run the tasks, please make sure it has the following permissions in order to make copilot task exec work. { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Action\" : [ \"ssmmessages:CreateControlChannel\" , \"ssmmessages:OpenControlChannel\" , \"ssmmessages:CreateDataChannel\" , \"ssmmessages:OpenDataChannel\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" }, { \"Action\" : [ \"logs:CreateLogStream\" , \"logs:DescribeLogGroups\" , \"logs:DescribeLogStreams\" , \"logs:PutLogEvents\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" } ] }","title":"task exec"},{"location":"docs/commands/task-exec/#task-exec","text":"$ copilot task exec","title":"task exec"},{"location":"docs/commands/task-exec/#what-does-it-do","text":"copilot task exec executes a command in a running container part of a task.","title":"What does it do?"},{"location":"docs/commands/task-exec/#what-are-the-flags","text":"-a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --default Optional. Execute commands in running tasks in default cluster and default subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in.","title":"What are the flags?"},{"location":"docs/commands/task-exec/#examples","text":"Start an interactive bash session with a task in task group \"db-migrate\" in the \"test\" environment under the current workspace. $ copilot task exec -e test -n db-migrate Runs the 'cat progress.csv' command in the task prefixed with ID \"1848c38\" part of the \"db-migrate\" task group. $ copilot task exec --name db-migrate --task-id 1848c38 --command \"cat progress.csv\" Start an interactive bash session with a task prefixed with ID \"38c3818\" in the default cluster. $ copilot task exec --default --task-id 38c3818 Info copilot task exec cannot be performed without certain task role permissions. If you are using existing task role to run the tasks, please make sure it has the following permissions in order to make copilot task exec work. { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Action\" : [ \"ssmmessages:CreateControlChannel\" , \"ssmmessages:OpenControlChannel\" , \"ssmmessages:CreateDataChannel\" , \"ssmmessages:OpenDataChannel\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" }, { \"Action\" : [ \"logs:CreateLogStream\" , \"logs:DescribeLogGroups\" , \"logs:DescribeLogStreams\" , \"logs:PutLogEvents\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" } ] }","title":"Examples"},{"location":"docs/commands/task-run/","text":"task run $ copilot task run What does it do? copilot task run deploys and runs one-off tasks. Generally, the steps involved in task run are: Create an ECR repository and a log group for your task Build and push the image to ECR Create or update your ECS task definition Run and wait for the tasks to start If the tasks exit with a non-zero exit code, then forward the exit code. Info Tasks with the same group name share the same set of resources, including the CloudFormation stack, ECR repository, CloudWatch log group and task definition. If the tasks are deployed to a Copilot environment (i.e. by specifying --env ), only public subnets that are created by that environment will be used. If you are using the --default flag and get an error saying there's no default cluster, run aws ecs create-cluster and then re-run the Copilot command. What are the flags? Name Flags -n, --task-group-name string Optional. The group name of the task. Tasks with the same group name share the same set of resources. (default directory name) Build Flags --build-context string Path to the Docker build context. Cannot be specified with --image. --dockerfile string Path to the Dockerfile. Cannot be specified with --image. (default \"Dockerfile\") -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --tag string Optional. The container image tag in addition to \"latest\". Placement Flags --app string Optional. Name of the application. Cannot be specified with --default, --subnets or --security-groups. --cluster string Optional. The short name or full ARN of the cluster to run the task in. Cannot be specified with --app, --env or --default. --default Optional. Run tasks in default cluster and default subnets. Cannot be specified with --app, --env or --subnets. --env string Optional. Name of the environment. Cannot be specified with --default, --subnets or --security-groups. --security-groups strings Optional. Additional security group IDs for the task to use. Can be specified multiple times. --subnets strings Optional. The subnet IDs for the task to use. Can be specified multiple times. Cannot be specified with --app, --env or --default. Task Configuration Flags --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when 'secrets' flag is specified --command string Optional. The command that is passed to \"docker run\" to override the default command. --count int Optional. The number of tasks to set up. (default 1) --cpu int Optional. The number of CPU units to reserve for each task. (default 256) --entrypoint string Optional. The entrypoint that is passed to \"docker run\" to override the default entrypoint. --env-file string Optional. A path to an environment variable (.env) file with each line being of the form of VARIABLE=VALUE. Values specified with --env-vars take precedence over --env-file. --env-vars stringToString Optional. Environment variables specified by key=value separated by commas. (default []) --execution-role string Optional. The ARN of the role that grants the container agent permission to make AWS API calls. --memory int Optional. The amount of memory to reserve in MiB for each task. (default 512) --platform-arch string Optional. Architecture of the task. Must be specified along with 'platform-os'. --platform-os string Optional. Operating system of the task. Must be specified along with 'platform-arch'. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --secrets stringToString Optional. Secrets to inject into the container. Specified by key=value separated by commas. (default []). For secrets stored in AWS Parameter Store you can either specify names or ARNs. For the secrets stored in AWS Secrets Manager you need to specify ARNs. --task-role string Optional. The ARN of the role for the task to use. Utility Flags --follow Optional. Specifies if the logs should be streamed. --generate-cmd string Optional. Generate a command with a pre-filled value for each flag. To use it for an ECS service, specify --generate-cmd <cluster name>/<service name>. Alternatively, if the service or job is created with Copilot, specify --generate-cmd <application>/<environment>/<service or job name>. Cannot be specified with any other flags. --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when '--secret' flag is specified Examples Run a task using your local Dockerfile and display log streams after the task is running. You will be prompted to specify an environment for the tasks to run in. $ copilot task run --follow Run a task named \"db-migrate\" in the \"test\" environment under the current workspace. $ copilot task run -n db-migrate --env test --follow Run 4 tasks with 2GB memory, an existing image, and a custom task role. $ copilot task run --count 4 --memory 2048 --image = rds-migrate --task-role migrate-role --follow Run a task with environment variables. $ copilot task run --env-vars name = myName,user = myUser Run a task using the current workspace with specific subnets and security groups. $ copilot task run --subnets subnet-123,subnet-456 --security-groups sg-123,sg-456 Run a task with a command. $ copilot task run --command \"python migrate-script.py\" Run a Windows task with the minimum cpu and memory values. $ copilot task run --platform-os WINDOWS_SERVER_2019_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 Run a Windows 2022 task with the minimum cpu and memory values. $ copilot task run --platform-os WINDOWS_SERVER_2022_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 Run a task with a secret from AWS Secrets Manager injected into the container. $ copilot task run --secrets AuroraSecret = arn:aws:secretsmanager:us-east-1:535307839111:secret:AuroraSecret","title":"task run"},{"location":"docs/commands/task-run/#task-run","text":"$ copilot task run","title":"task run"},{"location":"docs/commands/task-run/#what-does-it-do","text":"copilot task run deploys and runs one-off tasks. Generally, the steps involved in task run are: Create an ECR repository and a log group for your task Build and push the image to ECR Create or update your ECS task definition Run and wait for the tasks to start If the tasks exit with a non-zero exit code, then forward the exit code. Info Tasks with the same group name share the same set of resources, including the CloudFormation stack, ECR repository, CloudWatch log group and task definition. If the tasks are deployed to a Copilot environment (i.e. by specifying --env ), only public subnets that are created by that environment will be used. If you are using the --default flag and get an error saying there's no default cluster, run aws ecs create-cluster and then re-run the Copilot command.","title":"What does it do?"},{"location":"docs/commands/task-run/#what-are-the-flags","text":"Name Flags -n, --task-group-name string Optional. The group name of the task. Tasks with the same group name share the same set of resources. (default directory name) Build Flags --build-context string Path to the Docker build context. Cannot be specified with --image. --dockerfile string Path to the Dockerfile. Cannot be specified with --image. (default \"Dockerfile\") -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --tag string Optional. The container image tag in addition to \"latest\". Placement Flags --app string Optional. Name of the application. Cannot be specified with --default, --subnets or --security-groups. --cluster string Optional. The short name or full ARN of the cluster to run the task in. Cannot be specified with --app, --env or --default. --default Optional. Run tasks in default cluster and default subnets. Cannot be specified with --app, --env or --subnets. --env string Optional. Name of the environment. Cannot be specified with --default, --subnets or --security-groups. --security-groups strings Optional. Additional security group IDs for the task to use. Can be specified multiple times. --subnets strings Optional. The subnet IDs for the task to use. Can be specified multiple times. Cannot be specified with --app, --env or --default. Task Configuration Flags --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when 'secrets' flag is specified --command string Optional. The command that is passed to \"docker run\" to override the default command. --count int Optional. The number of tasks to set up. (default 1) --cpu int Optional. The number of CPU units to reserve for each task. (default 256) --entrypoint string Optional. The entrypoint that is passed to \"docker run\" to override the default entrypoint. --env-file string Optional. A path to an environment variable (.env) file with each line being of the form of VARIABLE=VALUE. Values specified with --env-vars take precedence over --env-file. --env-vars stringToString Optional. Environment variables specified by key=value separated by commas. (default []) --execution-role string Optional. The ARN of the role that grants the container agent permission to make AWS API calls. --memory int Optional. The amount of memory to reserve in MiB for each task. (default 512) --platform-arch string Optional. Architecture of the task. Must be specified along with 'platform-os'. --platform-os string Optional. Operating system of the task. Must be specified along with 'platform-arch'. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --secrets stringToString Optional. Secrets to inject into the container. Specified by key=value separated by commas. (default []). For secrets stored in AWS Parameter Store you can either specify names or ARNs. For the secrets stored in AWS Secrets Manager you need to specify ARNs. --task-role string Optional. The ARN of the role for the task to use. Utility Flags --follow Optional. Specifies if the logs should be streamed. --generate-cmd string Optional. Generate a command with a pre-filled value for each flag. To use it for an ECS service, specify --generate-cmd <cluster name>/<service name>. Alternatively, if the service or job is created with Copilot, specify --generate-cmd <application>/<environment>/<service or job name>. Cannot be specified with any other flags. --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when '--secret' flag is specified","title":"What are the flags?"},{"location":"docs/commands/task-run/#examples","text":"Run a task using your local Dockerfile and display log streams after the task is running. You will be prompted to specify an environment for the tasks to run in. $ copilot task run --follow Run a task named \"db-migrate\" in the \"test\" environment under the current workspace. $ copilot task run -n db-migrate --env test --follow Run 4 tasks with 2GB memory, an existing image, and a custom task role. $ copilot task run --count 4 --memory 2048 --image = rds-migrate --task-role migrate-role --follow Run a task with environment variables. $ copilot task run --env-vars name = myName,user = myUser Run a task using the current workspace with specific subnets and security groups. $ copilot task run --subnets subnet-123,subnet-456 --security-groups sg-123,sg-456 Run a task with a command. $ copilot task run --command \"python migrate-script.py\" Run a Windows task with the minimum cpu and memory values. $ copilot task run --platform-os WINDOWS_SERVER_2019_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 Run a Windows 2022 task with the minimum cpu and memory values. $ copilot task run --platform-os WINDOWS_SERVER_2022_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 Run a task with a secret from AWS Secrets Manager injected into the container. $ copilot task run --secrets AuroraSecret = arn:aws:secretsmanager:us-east-1:535307839111:secret:AuroraSecret","title":"Examples"},{"location":"docs/commands/version/","text":"version $ copilot version [ flags ] What does it do? copilot version prints the version of the CLI along with the target operating system it was built for. What are the flags? -h, --help help for version","title":"version"},{"location":"docs/commands/version/#version","text":"$ copilot version [ flags ]","title":"version"},{"location":"docs/commands/version/#what-does-it-do","text":"copilot version prints the version of the CLI along with the target operating system it was built for.","title":"What does it do?"},{"location":"docs/commands/version/#what-are-the-flags","text":"-h, --help help for version","title":"What are the flags?"},{"location":"docs/concepts/applications/","text":"An application is a group of related services, environments, and pipelines. Whether you have one service that does everything or a constellation of micro-services, Copilot organizes the service(s), and the environments into which they can be deployed, into an \"application.\" Let's walk through an example. We want to build a voting app which needs to collect votes and aggregate the results. To set up our vote app with two services, we can run copilot init twice. The first time we run copilot init , we'll be asked what we should call the application this service will belong to. Since we're trying to build a voting system, we can call our application \"vote\" and our first service \"collector\". The next time we run init , we'll be asked if we want to add our new service to the existing \u201cvote\u201d app, and we\u2019ll name the new service \"aggregator\". Your application configuration (which services and environments belong to it) is stored in your AWS account, so any other users in your account will be able to develop on the \u201cvote\" app as well. This means that you can have a teammate work on one service while you develop the other. Creating an App Attention If you have an existing copilot/ directory that you created for other purposes, you may find Copilot creating files in that directory. If this happens, you can make an empty directory also named copilot/ closer to your working directory. Copilot will use this empty directory instead. To set up an application, you can just run copilot init . You'll be asked if you want to set up an app or choose an existing app. copilot init Once you've created an application, Copilot stores that application in SSM Parameter store in your AWS account. The account used to set up your application is known as the \"application account\". This is where your app's configuration lives, and anyone who has access to this account can use this app. All resources created within this application will be tagged with the copilot-app aws resource tag . This helps you know which app resources in your account belong to. The name of your application has to be unique within your account (even across region). Additional App Configurations You can also provide more granular configuration for your application by running copilot app init . This includes options to: Tag all application, service and environment resources with an additional set of aws resource tags Use a custom domain name for Load Balanced services Pass in an existing IAM policy with which to set a permissions boundary for all roles created within the application. $ copilot app init \\ --domain my-awesome-app.aws \\ --resource-tags department = MyDept,team = MyTeam \\ --permissions-boundary my-pb-policy App Infrastructure While the bulk of the infrastructure Copilot provisions is specific to an environment and service, there are some application-wide resources as well. ECR Repositories ECR Repositories are regional resources which store your service images. Each service has its own ECR Repository per region in your app. In the above diagram, the app has several environments spread across three regions. Each of those regions has its own ECR repository for every service in your app. In this case, there are three services. Every time you add a service, we create an ECR Repository in every region. We do this to maintain region isolation (if one region goes down, environments in other region won't be affected) and to reduce cross-region data transfer costs. These ECR Repositories all live within your app's account (not the environment accounts) - and have policies which allow your environment accounts to pull from them. Release Infrastructure For every region represented in your app, we create a KMS Key and an S3 bucket. These resources are used by CodePipeline to enable cross-region and cross-account deployments. All pipelines in your app share these same resources. Similar to the ECR Repositories, the S3 bucket and KMS keys have policies which allow for all of your environments, even in other accounts, to read encrypted deployment artifacts. This makes your cross-account, cross-region CodePipelines possible. Digging into your App Now that we've set up an app, we can check on it using Copilot. Below are a few common ways to check in on your app. What applications are in my account? To see all the apps in your current account and region you can run copilot app ls . $ copilot app ls vote ecs-kudos What's in my application? Running copilot app show will show you a summary of your application, including all the services and environments in your app. $ copilot app show About Name vote Version v1.1.0 URI vote-app.aws Environments Name AccountID Region ---- --------- ------ test 000000000000 us-east-1 Workloads Name Type Environments ---- ---- ------------ collector Load Balanced Web Service prod aggregator Backend Service test, prod Pipelines Name ----","title":"Applications"},{"location":"docs/concepts/applications/#creating-an-app","text":"Attention If you have an existing copilot/ directory that you created for other purposes, you may find Copilot creating files in that directory. If this happens, you can make an empty directory also named copilot/ closer to your working directory. Copilot will use this empty directory instead. To set up an application, you can just run copilot init . You'll be asked if you want to set up an app or choose an existing app. copilot init Once you've created an application, Copilot stores that application in SSM Parameter store in your AWS account. The account used to set up your application is known as the \"application account\". This is where your app's configuration lives, and anyone who has access to this account can use this app. All resources created within this application will be tagged with the copilot-app aws resource tag . This helps you know which app resources in your account belong to. The name of your application has to be unique within your account (even across region).","title":"Creating an App"},{"location":"docs/concepts/applications/#additional-app-configurations","text":"You can also provide more granular configuration for your application by running copilot app init . This includes options to: Tag all application, service and environment resources with an additional set of aws resource tags Use a custom domain name for Load Balanced services Pass in an existing IAM policy with which to set a permissions boundary for all roles created within the application. $ copilot app init \\ --domain my-awesome-app.aws \\ --resource-tags department = MyDept,team = MyTeam \\ --permissions-boundary my-pb-policy","title":"Additional App Configurations"},{"location":"docs/concepts/applications/#app-infrastructure","text":"While the bulk of the infrastructure Copilot provisions is specific to an environment and service, there are some application-wide resources as well.","title":"App Infrastructure"},{"location":"docs/concepts/applications/#ecr-repositories","text":"ECR Repositories are regional resources which store your service images. Each service has its own ECR Repository per region in your app. In the above diagram, the app has several environments spread across three regions. Each of those regions has its own ECR repository for every service in your app. In this case, there are three services. Every time you add a service, we create an ECR Repository in every region. We do this to maintain region isolation (if one region goes down, environments in other region won't be affected) and to reduce cross-region data transfer costs. These ECR Repositories all live within your app's account (not the environment accounts) - and have policies which allow your environment accounts to pull from them.","title":"ECR Repositories"},{"location":"docs/concepts/applications/#release-infrastructure","text":"For every region represented in your app, we create a KMS Key and an S3 bucket. These resources are used by CodePipeline to enable cross-region and cross-account deployments. All pipelines in your app share these same resources. Similar to the ECR Repositories, the S3 bucket and KMS keys have policies which allow for all of your environments, even in other accounts, to read encrypted deployment artifacts. This makes your cross-account, cross-region CodePipelines possible.","title":"Release Infrastructure"},{"location":"docs/concepts/applications/#digging-into-your-app","text":"Now that we've set up an app, we can check on it using Copilot. Below are a few common ways to check in on your app.","title":"Digging into your App"},{"location":"docs/concepts/applications/#what-applications-are-in-my-account","text":"To see all the apps in your current account and region you can run copilot app ls . $ copilot app ls vote ecs-kudos","title":"What applications are in my account?"},{"location":"docs/concepts/applications/#whats-in-my-application","text":"Running copilot app show will show you a summary of your application, including all the services and environments in your app. $ copilot app show About Name vote Version v1.1.0 URI vote-app.aws Environments Name AccountID Region ---- --------- ------ test 000000000000 us-east-1 Workloads Name Type Environments ---- ---- ------------ collector Load Balanced Web Service prod aggregator Backend Service test, prod Pipelines Name ----","title":"What's in my application?"},{"location":"docs/concepts/environments/","text":"When you first run copilot init , you're asked if you want to create a test environment. This test environment contains all the AWS resources to provision a secure network (VPC, subnets, security groups, and more), as well as other resources that are meant to be shared between multiple services like an Application Load Balancer or an ECS Cluster. When you deploy your service into your test environment, your service will use the test environment's network and resources. Your application can have multiple environments, and each will have its own networking and shared resources infrastructure. While Copilot creates a test environment for you when you get started, it's common to create a new, separate environment for production. This production environment will be completely independent from the test environment, with its own networking stack and its own copy of services. By having both a test environment and a production environment, you can deploy changes to your test environment, validate them, then promote them to the production environment. In the diagram below we have an application called MyApp with two services, API and Backend . Those two services are deployed to the two environments, test and prod . You can see that in the test environment, both services are running only one container while the prod services have more containers running. Services can use different configurations depending on the environment they're deployed in. For more, check out the using environment variables guide. Creating an Environment To create a new environment in your app, you can run copilot env init from within your workspace. Copilot will ask you what you want to name this environment and what profile you'd like to use to bootstrap the environment. These profiles are AWS named profiles which are associated with a particular account and region. When you select one of these profiles, your environment will be created in whichever account and region that profile is associated with. $ copilot env init After you run copilot env init , you can watch as Copilot sets up the two IAM roles that are essential in updating and managing the environment. If the environment was created with a different AWS account than the app, the environment will be linked back to the application account; this allows actors in the application account to manage the environment, even without access to the environment account. Copilot creates an env manifest at copilot/environments/[env name]/manifest.yml . Deploying an Environment If you'd like, you may configure your environment by making changes to your env manifest before deploying it: $ copilot env deploy In this step, Copilot creates your environment infrastructure resources, like an ECS cluster, a security group, and a private DNS namespace. After deployment, you can modify your env manifest and redeploy by simply running copilot env deploy again. Deploying a Service When you first create a new environment, no services are deployed to it. To deploy a service run copilot deploy from that service's directory, and you'll be prompted to select which environment to deploy to. Environment Infrastructure VPC and Networking Each environment gets its own multi-AZ VPC. Your VPC is the network boundary of your environment, allowing the traffic you expect in and out, and blocking the rest. The VPCs Copilot creates are spread across two availability zones, with each AZ getting a public and private subnet, following AWS best practices . Your services are launched by default in the public subnets while limiting ingress to only other services in your environment for security. Tasks are placed in public subnets to help manage costs by allowing egress to the internet without requiring a NAT gateway. Workload subnet placement can be modified using the network.vpc.placement field in the manifest. Load Balancers and DNS If you set up a Load Balanced Web Service or Backend Service with the http field in its manifest, Copilot will set up an Application Load Balancer to be shared among all load-balanced services within that environment. Load Balanced Web Services' ALBs are internet-facing, while Backend Services' are internal. Your load balancer is allowed to communicate with other Copilot services in your VPC. Optionally, when you set up an application, you can provide a domain name that you own and is registered in Route 53. If you provide a domain name, each time you spin up an environment, Copilot will create a subdomain environment-name.app-name.your-domain.com, provision an ACM cert, and bind it to your Application Load Balancer so it can use HTTPS. An internal ALB is created when a Backend Service with http configured in its manifest is deployed in an environment. For an HTTPS endpoint, use the --import-cert-arns flag when running copilot env init and import a VPC with only private subnets. For more on internal ALBs, go here . If you already have an ALB in your VPC and would like to use it instead of letting Copilot create one, specify that ALB by name or ARN in your Load-Balanced Web Service's (for internet-facing ALBs) or Backend Service's (for internal ALBs) manifest before deploying it to the environment: http : path : '/' alb : [ name or ARN ] Your imported ALB will be associated with only that service (and any others that similarly import it), rather than shared among all load-balanced services in the environment. Customize your Environment You can import your existing environment resources or configure the default ones by using flags with commands or by changing your env manifest . If you want to customize more types of resources than are currently configurable, feel free to bring your use cases and cut an issue! For more, see our custom environment resources page. Digging into your Environment Now that we've spun up an environment, we can check on it using Copilot. Below are a few common ways to check in on your environment. What environments are part of my app? To see all the environments in your application you can run copilot env ls . $ copilot env ls test production What's in your environment? Running copilot env show will show you a summary of your environment. Here's an example of the output you might see for our test environment. This output includes the account and region the environment is in, the services deployed to that environment, and the tag that all resources created in this environment will have. You can also provide an optional --resources flag to see all AWS resources associated with this environment. $ copilot env show --name test About Name test Region us-west-2 Account ID 693652174720 Workloads Name Type ---- ---- api Load Balanced Web Service backend Backend Service Tags Key Value --- ----- copilot-application my-app copilot-environment test","title":"Environments"},{"location":"docs/concepts/environments/#creating-an-environment","text":"To create a new environment in your app, you can run copilot env init from within your workspace. Copilot will ask you what you want to name this environment and what profile you'd like to use to bootstrap the environment. These profiles are AWS named profiles which are associated with a particular account and region. When you select one of these profiles, your environment will be created in whichever account and region that profile is associated with. $ copilot env init After you run copilot env init , you can watch as Copilot sets up the two IAM roles that are essential in updating and managing the environment. If the environment was created with a different AWS account than the app, the environment will be linked back to the application account; this allows actors in the application account to manage the environment, even without access to the environment account. Copilot creates an env manifest at copilot/environments/[env name]/manifest.yml .","title":"Creating an Environment"},{"location":"docs/concepts/environments/#deploying-an-environment","text":"If you'd like, you may configure your environment by making changes to your env manifest before deploying it: $ copilot env deploy In this step, Copilot creates your environment infrastructure resources, like an ECS cluster, a security group, and a private DNS namespace. After deployment, you can modify your env manifest and redeploy by simply running copilot env deploy again.","title":"Deploying an Environment"},{"location":"docs/concepts/environments/#deploying-a-service","text":"When you first create a new environment, no services are deployed to it. To deploy a service run copilot deploy from that service's directory, and you'll be prompted to select which environment to deploy to.","title":"Deploying a Service"},{"location":"docs/concepts/environments/#environment-infrastructure","text":"","title":"Environment Infrastructure"},{"location":"docs/concepts/environments/#vpc-and-networking","text":"Each environment gets its own multi-AZ VPC. Your VPC is the network boundary of your environment, allowing the traffic you expect in and out, and blocking the rest. The VPCs Copilot creates are spread across two availability zones, with each AZ getting a public and private subnet, following AWS best practices . Your services are launched by default in the public subnets while limiting ingress to only other services in your environment for security. Tasks are placed in public subnets to help manage costs by allowing egress to the internet without requiring a NAT gateway. Workload subnet placement can be modified using the network.vpc.placement field in the manifest.","title":"VPC and Networking"},{"location":"docs/concepts/environments/#load-balancers-and-dns","text":"If you set up a Load Balanced Web Service or Backend Service with the http field in its manifest, Copilot will set up an Application Load Balancer to be shared among all load-balanced services within that environment. Load Balanced Web Services' ALBs are internet-facing, while Backend Services' are internal. Your load balancer is allowed to communicate with other Copilot services in your VPC. Optionally, when you set up an application, you can provide a domain name that you own and is registered in Route 53. If you provide a domain name, each time you spin up an environment, Copilot will create a subdomain environment-name.app-name.your-domain.com, provision an ACM cert, and bind it to your Application Load Balancer so it can use HTTPS. An internal ALB is created when a Backend Service with http configured in its manifest is deployed in an environment. For an HTTPS endpoint, use the --import-cert-arns flag when running copilot env init and import a VPC with only private subnets. For more on internal ALBs, go here . If you already have an ALB in your VPC and would like to use it instead of letting Copilot create one, specify that ALB by name or ARN in your Load-Balanced Web Service's (for internet-facing ALBs) or Backend Service's (for internal ALBs) manifest before deploying it to the environment: http : path : '/' alb : [ name or ARN ] Your imported ALB will be associated with only that service (and any others that similarly import it), rather than shared among all load-balanced services in the environment.","title":"Load Balancers and DNS"},{"location":"docs/concepts/environments/#customize-your-environment","text":"You can import your existing environment resources or configure the default ones by using flags with commands or by changing your env manifest . If you want to customize more types of resources than are currently configurable, feel free to bring your use cases and cut an issue! For more, see our custom environment resources page.","title":"Customize your Environment"},{"location":"docs/concepts/environments/#digging-into-your-environment","text":"Now that we've spun up an environment, we can check on it using Copilot. Below are a few common ways to check in on your environment.","title":"Digging into your Environment"},{"location":"docs/concepts/environments/#what-environments-are-part-of-my-app","text":"To see all the environments in your application you can run copilot env ls . $ copilot env ls test production","title":"What environments are part of my app?"},{"location":"docs/concepts/environments/#whats-in-your-environment","text":"Running copilot env show will show you a summary of your environment. Here's an example of the output you might see for our test environment. This output includes the account and region the environment is in, the services deployed to that environment, and the tag that all resources created in this environment will have. You can also provide an optional --resources flag to see all AWS resources associated with this environment. $ copilot env show --name test About Name test Region us-west-2 Account ID 693652174720 Workloads Name Type ---- ---- api Load Balanced Web Service backend Backend Service Tags Key Value --- ----- copilot-application my-app copilot-environment test","title":"What's in your environment?"},{"location":"docs/concepts/jobs/","text":"Jobs are Amazon ECS tasks that are triggered by an event. Currently, Copilot supports only \"Scheduled Jobs\". These are tasks that can be triggered either on a fixed schedule or periodically by providing a rate. Creating a Job The easiest way to create a job is to run the init command from the same directory as your Dockerfile. $ copilot init Once you select which application the job should be part of, Copilot will ask you the type of job you'd like to create. Currently, Copilot only supports \"Scheduled Job\". Config and the Manifest After you've run copilot init , the CLI will create a file called manifest.yml in the copilot/[job name]/ directory. The scheduled job manifest is a simple declarative file that contains the most common configuration for a task that's triggered by a scheduled event. For example, you can configure when you'd like to trigger the job, the container size, the timeout for the task, as well as how many times to retry in case of failures. Deploying a Job Once you've configured your manifest file to satisfy your requirements, you can deploy the changes with the deploy command: $ copilot deploy Running this command will: Build your image locally Push to your job's ECR repository Convert the manifest file to a CloudFormation template Package any additional infrastructure into the CloudFormation template Deploy your resources Other Job-Related Options Say you want to give a new job a test spin or want to invoke it for some other reason. Use the job run command: $ copilot job run If you'd like to temporarily disable your job without deleting it entirely, set the schedule to none in your manifest : on : schedule : \"none\" To print out the CloudFormation template for a configured job, run job package : $ copilot job package What's in a Job? Since Copilot uses CloudFormation under the hood, all the resources created are visible and tagged by Copilot. Scheduled Jobs are composed of an AmazonECS Task Definition, Task Role, Task Execution Role, a Step Function State Machine for retrying on failures, and finally an Event Rule to trigger the state machine. Where Are My Job's Logs? Checking your job logs is easy as well. Running copilot job logs will show the most recent logs of your job. You can follow your logs live with the --follow flag, which will display logs from any new invocation of your job after you run the command. $ copilot job logs copilot/myjob/37236ed Doing some work copilot/myjob/37236ed Did some work copilot/myjob/37236ed Exited... copilot/myjob/123e300 Doing some work copilot/myjob/123e300 Did some work copilot/myjob/123e300 Did some additional work copilot/myjob/123e300 Exited","title":"Jobs"},{"location":"docs/concepts/jobs/#creating-a-job","text":"The easiest way to create a job is to run the init command from the same directory as your Dockerfile. $ copilot init Once you select which application the job should be part of, Copilot will ask you the type of job you'd like to create. Currently, Copilot only supports \"Scheduled Job\".","title":"Creating a Job"},{"location":"docs/concepts/jobs/#config-and-the-manifest","text":"After you've run copilot init , the CLI will create a file called manifest.yml in the copilot/[job name]/ directory. The scheduled job manifest is a simple declarative file that contains the most common configuration for a task that's triggered by a scheduled event. For example, you can configure when you'd like to trigger the job, the container size, the timeout for the task, as well as how many times to retry in case of failures.","title":"Config and the Manifest"},{"location":"docs/concepts/jobs/#deploying-a-job","text":"Once you've configured your manifest file to satisfy your requirements, you can deploy the changes with the deploy command: $ copilot deploy Running this command will: Build your image locally Push to your job's ECR repository Convert the manifest file to a CloudFormation template Package any additional infrastructure into the CloudFormation template Deploy your resources","title":"Deploying a Job"},{"location":"docs/concepts/jobs/#other-job-related-options","text":"Say you want to give a new job a test spin or want to invoke it for some other reason. Use the job run command: $ copilot job run If you'd like to temporarily disable your job without deleting it entirely, set the schedule to none in your manifest : on : schedule : \"none\" To print out the CloudFormation template for a configured job, run job package : $ copilot job package","title":"Other Job-Related Options"},{"location":"docs/concepts/jobs/#whats-in-a-job","text":"Since Copilot uses CloudFormation under the hood, all the resources created are visible and tagged by Copilot. Scheduled Jobs are composed of an AmazonECS Task Definition, Task Role, Task Execution Role, a Step Function State Machine for retrying on failures, and finally an Event Rule to trigger the state machine.","title":"What's in a Job?"},{"location":"docs/concepts/jobs/#where-are-my-jobs-logs","text":"Checking your job logs is easy as well. Running copilot job logs will show the most recent logs of your job. You can follow your logs live with the --follow flag, which will display logs from any new invocation of your job after you run the command. $ copilot job logs copilot/myjob/37236ed Doing some work copilot/myjob/37236ed Did some work copilot/myjob/37236ed Exited... copilot/myjob/123e300 Doing some work copilot/myjob/123e300 Did some work copilot/myjob/123e300 Did some additional work copilot/myjob/123e300 Exited","title":"Where Are My Job's Logs?"},{"location":"docs/concepts/overview/","text":"Concepts Copilot makes it super easy to set up and deploy your containers on AWS - but getting started is only the first step of the journey. What happens when you want to have one copy of your service running only for testing and another copy serving production traffic? What happens when you want to add another service? How do you manage deploying to all of these services? Copilot wants to help you with all of these things so let's jump into some of Copilot's core concepts to understand how they can help. Applications An Application is a collection of services and environments. When you get started with Copilot, the first thing you'll be asked to do is choose an application name. This can be a high level description of the product you're trying to build. An example might be an application named \"chat\" which has two services \"frontend\" and \"api\" . These two services could then be deployed to a \"test\" and \"production\" environment. Environments Rumor has it, there are people out there that can write perfect code on the first go without any bugs. While we tip our hats to those folks, we believe it's important to be able to test new code on a non-customer facing version of your service before promoting to production. In Copilot we do this by using environments . Each environment can have its own version of a service running allowing you to create a \"test\" and \"production\" environment. You can deploy your service to the test environment, make sure everything looks good, then deploy to your production environment. Since each environment is independent, if you deploy a bug to your test environment, customers using a service deployed to your production environment will be fine. Until now we've been talking about just one service, but what happens when you want to add another service? Perhaps you want to add a backend service to complement your frontend service. Each environment contains a set of resources shared between all the deployed services - these resources include the network (VPC, Subnets, Security Groups, etc...), the ECS Cluster, and the load balancer. If you deploy both your frontend and backend service to your test environment, both services will share the same network and cluster. Services A service is your code and all of the supporting infrastructure needed to get it up and running on AWS. When you first get started setting up a service, Copilot will ask you what type of service you want to create. The type of service determines the infrastructure that'll be created to support your code. If you want your code to serve traffic from the internet, for example, Copilot can set up an Application Load Balancer and an Amazon ECS Service running on AWS Fargate. Once you've told Copilot what type of service you're building, Copilot will take care of building your code's Dockerfile and storing the images securely in an Amazon ECR repository. Copilot will also create a simple file called the manifest which contains all the knobs and toggles for your service. This includes things like how much memory and CPU should be allocated to each copy of your service, how many copies of your service you want running, and more. Jobs Jobs are ephemeral Amazon ECS tasks that are triggered by an event. Once their work is done, the task terminates. Just like services, Copilot will ask you all the necessary information to quickly get going with a scheduled task on AWS. The manifest file can always be used to adjust the configuration and provide more advanced settings. Pipelines Now that you've got an application with a few services deployed to a couple of environments, staying on top of those deployments can become tricky. Copilot can help by setting up a release pipeline that deploys your service whenever you push to your git repository. (At this time, Copilot supports GitHub, Bitbucket, and CodeCommit repositories.) When a push is detected, your pipeline will build your service, push the image to ECR, and deploy to your environments. A common pattern is to set up a pipeline for a particular service that deploys to a test environment, runs automated testing, then deploys to the production environment.","title":"Overview"},{"location":"docs/concepts/overview/#concepts","text":"Copilot makes it super easy to set up and deploy your containers on AWS - but getting started is only the first step of the journey. What happens when you want to have one copy of your service running only for testing and another copy serving production traffic? What happens when you want to add another service? How do you manage deploying to all of these services? Copilot wants to help you with all of these things so let's jump into some of Copilot's core concepts to understand how they can help.","title":"Concepts"},{"location":"docs/concepts/overview/#applications","text":"An Application is a collection of services and environments. When you get started with Copilot, the first thing you'll be asked to do is choose an application name. This can be a high level description of the product you're trying to build. An example might be an application named \"chat\" which has two services \"frontend\" and \"api\" . These two services could then be deployed to a \"test\" and \"production\" environment.","title":"Applications"},{"location":"docs/concepts/overview/#environments","text":"Rumor has it, there are people out there that can write perfect code on the first go without any bugs. While we tip our hats to those folks, we believe it's important to be able to test new code on a non-customer facing version of your service before promoting to production. In Copilot we do this by using environments . Each environment can have its own version of a service running allowing you to create a \"test\" and \"production\" environment. You can deploy your service to the test environment, make sure everything looks good, then deploy to your production environment. Since each environment is independent, if you deploy a bug to your test environment, customers using a service deployed to your production environment will be fine. Until now we've been talking about just one service, but what happens when you want to add another service? Perhaps you want to add a backend service to complement your frontend service. Each environment contains a set of resources shared between all the deployed services - these resources include the network (VPC, Subnets, Security Groups, etc...), the ECS Cluster, and the load balancer. If you deploy both your frontend and backend service to your test environment, both services will share the same network and cluster.","title":"Environments"},{"location":"docs/concepts/overview/#services","text":"A service is your code and all of the supporting infrastructure needed to get it up and running on AWS. When you first get started setting up a service, Copilot will ask you what type of service you want to create. The type of service determines the infrastructure that'll be created to support your code. If you want your code to serve traffic from the internet, for example, Copilot can set up an Application Load Balancer and an Amazon ECS Service running on AWS Fargate. Once you've told Copilot what type of service you're building, Copilot will take care of building your code's Dockerfile and storing the images securely in an Amazon ECR repository. Copilot will also create a simple file called the manifest which contains all the knobs and toggles for your service. This includes things like how much memory and CPU should be allocated to each copy of your service, how many copies of your service you want running, and more.","title":"Services"},{"location":"docs/concepts/overview/#jobs","text":"Jobs are ephemeral Amazon ECS tasks that are triggered by an event. Once their work is done, the task terminates. Just like services, Copilot will ask you all the necessary information to quickly get going with a scheduled task on AWS. The manifest file can always be used to adjust the configuration and provide more advanced settings.","title":"Jobs"},{"location":"docs/concepts/overview/#pipelines","text":"Now that you've got an application with a few services deployed to a couple of environments, staying on top of those deployments can become tricky. Copilot can help by setting up a release pipeline that deploys your service whenever you push to your git repository. (At this time, Copilot supports GitHub, Bitbucket, and CodeCommit repositories.) When a push is detected, your pipeline will build your service, push the image to ECR, and deploy to your environments. A common pattern is to set up a pipeline for a particular service that deploys to a test environment, runs automated testing, then deploys to the production environment.","title":"Pipelines"},{"location":"docs/concepts/pipelines/","text":"Having an automated release process is one of the most important parts of software delivery, so Copilot wants to make setting up that process as easy as possible \ud83d\ude80. In this section, we'll talk about using Copilot to set up a CodePipeline that automatically builds your service code when you push to your GitHub, Bitbucket or AWS CodeCommit repository, deploys to your environments, and runs automated testing. Attention AWS CodePipeline is not supported for services with Windows as the OS Family. CodePipeline uses Linux-based AWS CodeBuild for the 'build' stage, so for now, Copilot pipelines cannot build Windows containers. Why? We won't get too philosophical about releasing software, but what's the point of having a release pipeline? With copilot deploy you can deploy your service directly from your computer to Amazon ECS on AWS Fargate, so why add a middleman? That's a great question. For some apps, manually using deploy is enough, but as your release process gets more complicated (as you add more environments or add automated testing, for example) you want to offload the boring work of repeatedly orchestrating that process to a service. With two services, each having two environments (test and production, say), running integration tests after you deploy to your test environment becomes surprisingly cumbersome to do by hand. Using an automated release tool like CodePipeline helps make your release manageable. Even if your release isn't particularly complicated, knowing that you can just git push to deploy your change always feels a little magical \ud83c\udf08. Pipeline Structure Copilot can set up a CodePipeline for you with a few commands - but before we jump into that, let's talk a little bit about the structure of the pipeline we'll be generating. Our pipeline will have the following basic structure: Source Stage - when you push to a configured GitHub, Bitbucket, or CodeCommit repository branch, a new pipeline execution is triggered. Build Stage - after your source code is pulled from your repository host, your service's container image is built and published to every environment's ECR repository and any input files, such as addons templates, lambda function zip files, and environment variable files , are uploaded to S3. Deploy Stages - after your code is built, you can deploy to any or all of your environments, with optional manual approvals, pre- and post-deployment actions, and/or test commands. Once you've set up a CodePipeline using Copilot, all you'll have to do is push to your GitHub, Bitbucket, or CodeCommit repository, and CodePipeline will orchestrate the deployments. Want to learn more about CodePipeline? Check out their getting started docs . Creating a Pipeline in 3 Steps Creating a Pipeline requires only three steps: Preparing the pipeline structure. Committing and pushing the files generated in the copilot/ directory. Creating the actual CodePipeline. Follow the three steps below, from your workspace root: $ copilot pipeline init $ git add copilot/ && git commit -m \"Adding pipeline artifacts\" && git push $ copilot pipeline deploy Note You need to have initiated at least one workload (service or job) before running pipeline deploy , so that your pipeline has something to deploy to your environments. \u2728 And you'll have a new pipeline configured in your application account . Want to understand a little bit more what's going on? Read on! Setting Up a Pipeline, Step By Step Step 1: Configuring Your Pipeline Pipeline configurations are created at a workspace level. If your workspace has a single service, then your pipeline will be triggered only for that service. However, if you have multiple services in a workspace, then the pipeline will build all the services in the workspace. To start setting up a pipeline, cd into your app's workspace and run: copilot pipeline init This won't create your pipeline, but it will create some local files under copilot/pipelines that will be used when creating your pipeline. Pipeline name : We suggest naming your pipeline [repository name]-[branch name] (press 'Enter' when asked, to accept the default name). This will distinguish it from your other pipelines, should you create multiple, and works well if you follow a pipeline-per-branch workflow. Pipeline type : You may select either 'Workloads' or ' Environments '; this determines what your pipeline deploys when triggered. Release order : You'll be prompted for environments you want to deploy or deploy to \u2013 select them based on the order you want them to be deployed in your pipeline (deployments happen one environment at a time). You may, for example, want to deploy to your test environment first, and then your prod environment. Tracking repository : After you've selected the environments you want to deploy or deploy to, you'll be prompted to select which repository you want your CodePipeline to track. This is the repository that, when pushed to, will trigger a pipeline execution. (If the repository you're interested in doesn't show up, you can pass it in using the --url flag.) Tracking branch : After you've selected the repository, Copilot will designate your current local branch as the branch your pipeline will follow. This can be changed in Step 2. Step 2: Updating the Pipeline Manifest (optional) Just like your service has a simple manifest file, so does your pipeline. After you run pipeline init , two files are created: manifest.yml and buildspec.yml , both in a new copilot/pipelines/[your pipeline name] directory. If you poke in, you'll see that the manifest.yml looks something like this (for a service called \"api-frontend\" with two environments, \"test\" and \"prod\"): # The manifest for the \"demo-api-frontend-main\" pipeline. # This YAML file defines your pipeline: the source repository it tracks and the order of the environments to deploy to. # For more info: https://aws.github.io/copilot-cli/docs/manifest/pipeline/ # The name of the pipeline. name : demo-api-frontend-main # The version of the schema used in this template. version : 1 # This section defines your source, changes to which trigger your pipeline. source : # The name of the provider that is used to store the source artifacts. # (i.e. GitHub, Bitbucket, CodeCommit) provider : GitHub # Additional properties that further specify the location of the artifacts. properties : branch : main repository : https://github.com/kohidave/demo-api-frontend # Optional: specify the name of an existing CodeStar Connections connection. # connection_name: a-connection # This section defines the order of the environments your pipeline will deploy to. stages : - # The name of the environment. name : test test_commands : - make test - echo \"woo! Tests passed\" - # The name of the environment. name : prod # requires_approval: true You can see every available configuration option for manifest.yml on the pipeline manifest page. There are 3 main parts of this file: the name field, which is the name of your pipeline, the source section, which details the repository and branch to track, and the stages section, which lists the environments you want this pipeline to deploy or deploy to. You can update this anytime, but you must commit and push the changed files and run copilot pipeline deploy afterward. Typically, you'll update this file to change which environments to deploy or deploy workloads to, specify the order of deployments, add actions for the pipeline to run before or after deployment, or change the branch to track. You also may add a manual approval step before deployment or commands to run tests (see Customization ). If you are using CodeStar Connections to connect to your repository and would like to utilize an existing connection rather than let Copilot generate one for you, you may add the connection name here. Step 3: Updating the Buildspec (optional) Along with manifest.yml , the pipeline init command also generated a buildspec.yml file in the copilot/pipelines/[your pipeline name] directory. This contains the instructions for building and publishing your service. If you want to run any additional commands besides docker build , such as unit tests or style checkers, feel free to add them to the buildspec's build phase. When this buildspec runs, it pulls down the version of Copilot which was used when you ran pipeline init , to ensure backwards compatibility. Alternatively, you may bring your own buildspec for CodeBuild to run. Indicate its location in your manifest.yml file . build : buildspec : Step 4: Pushing New Files to Your Repository Now that your manifest.yml , buildspec.yml , and .workspace files have been created, add them to your repository. These files in your copilot/ directory are required for your pipeline's build stage to run successfully. Step 5: Creating Your Pipeline Here's the fun part! Run: copilot pipeline deploy This parses your manifest.yml , creates a CodePipeline in the same account and region as your application and kicks off a pipeline execution. Log into the AWS Console to watch your pipeline go, or run copilot pipeline status to check in on its execution. Info If you have selected a GitHub or Bitbucket repository, Copilot will help you connect to your source code with CodeStar Connections . You will need to install the AWS authentication app on your third-party account and update the connection status. Copilot and the AWS Management Console will guide you through these steps. Step 6: Manage Copilot Version for Your Pipeline (optional) After creating your pipeline, you can manage the version of Copilot used by your pipeline by updating the following lines of your buildspec.yml to the latest version: ... # Download the copilot linux binary. - wget -q https://ecs-cli-v2-release.s3.amazonaws.com/copilot-linux-v1.16.0 - mv ./copilot-linux-v1.16.0 ./copilot-linux ... Customization Manual approval To add an approval step, set the require_approval field to 'true'. No pre-deployment or deployment actions will run without manual intervention via the CodePipeline console. Pre- and Post-deployment Actions As of v1.30.0 , you can insert actions into your pipeline, before and/or after each workload or environment deployment. Add these database migration, testing, or other actions right into your pipeline manifest. stages : - name : test require_approval : true pre_deployments : db_migration : # The name of this action. buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # The path to the buildspec. deployments : # Optional, ordering of deployments. orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # Optional, ordering of actions. In the buildspec manifest field, add the path, relative to your project root, of your buildspec file . The Copilot environment variables $COPILOT_APPLICATION_NAME and $COPILOT_ENVIRONMENT_NAME are available for use within these buildspecs. You may specify the run order of the actions using the depends_on subfield, just like you would to indicate your desired order of deployments . Info The CodeBuild projects generated for pre- and post-deployments and test commands are deployed in the same region as the pipeline and app. To access the VPC of the environment being deployed or deployed to, use Copilot commands in your pre-/post-deployment action buildspec or directly in your test commands. Ordering The deployments field enables you to specify the deployment order of workloads or environments (depending on the type of pipeline). If this is not specified, deployments run in parallel. (See this blog post for more info.) Testing If your post-deployment testing requires only a handful of commands and doesn't necessarily warrant wiring up a separate buildspec, utilize the test_commands field. Warning The post_deployments and test_commands fields within a stage are mutually exclusive. Pre-deployments, post-deployments, and test commands generate CodeBuild projects with the aws/codebuild/amazonlinux2-x86_64-standard:5.0 image, so most commands from Amazon Linux 2 (including make ) are available for use. Are your tests configured to run inside a Docker container? Copilot's test commands CodeBuild project supports Docker, so docker build commands are available as well. In the example below, the pipeline will run the make test command (in your source code directory) and only promote the change to the prod stage if that command exits successfully. name : demo-api-frontend-main version : 1 source : provider : GitHub properties : branch : main repository : https://github.com/kohidave/demo-api-frontend stages : - name : test # A change will only deploy to the production stage if the # make test and echo commands exit successfully. test_commands : - make test - echo \"woo! Tests passed\" - name : prod Info AWS's own Nathan Peck provides a great example of a Copilot pipeline, paying special attention to test_commands : https://aws.amazon.com/blogs/containers/automatically-deploying-your-container-application-with-aws-copilot/ Pipeline Overrides If all of these options for custom configuration still don't give you the pipeline you'd like, you can use Copilot's \"break the glass\" solution, pipeline overrides , with the CDK or YAML to change the pipeline's CloudFormation template.","title":"Pipelines"},{"location":"docs/concepts/pipelines/#why","text":"We won't get too philosophical about releasing software, but what's the point of having a release pipeline? With copilot deploy you can deploy your service directly from your computer to Amazon ECS on AWS Fargate, so why add a middleman? That's a great question. For some apps, manually using deploy is enough, but as your release process gets more complicated (as you add more environments or add automated testing, for example) you want to offload the boring work of repeatedly orchestrating that process to a service. With two services, each having two environments (test and production, say), running integration tests after you deploy to your test environment becomes surprisingly cumbersome to do by hand. Using an automated release tool like CodePipeline helps make your release manageable. Even if your release isn't particularly complicated, knowing that you can just git push to deploy your change always feels a little magical \ud83c\udf08.","title":"Why?"},{"location":"docs/concepts/pipelines/#pipeline-structure","text":"Copilot can set up a CodePipeline for you with a few commands - but before we jump into that, let's talk a little bit about the structure of the pipeline we'll be generating. Our pipeline will have the following basic structure: Source Stage - when you push to a configured GitHub, Bitbucket, or CodeCommit repository branch, a new pipeline execution is triggered. Build Stage - after your source code is pulled from your repository host, your service's container image is built and published to every environment's ECR repository and any input files, such as addons templates, lambda function zip files, and environment variable files , are uploaded to S3. Deploy Stages - after your code is built, you can deploy to any or all of your environments, with optional manual approvals, pre- and post-deployment actions, and/or test commands. Once you've set up a CodePipeline using Copilot, all you'll have to do is push to your GitHub, Bitbucket, or CodeCommit repository, and CodePipeline will orchestrate the deployments. Want to learn more about CodePipeline? Check out their getting started docs .","title":"Pipeline Structure"},{"location":"docs/concepts/pipelines/#creating-a-pipeline-in-3-steps","text":"Creating a Pipeline requires only three steps: Preparing the pipeline structure. Committing and pushing the files generated in the copilot/ directory. Creating the actual CodePipeline. Follow the three steps below, from your workspace root: $ copilot pipeline init $ git add copilot/ && git commit -m \"Adding pipeline artifacts\" && git push $ copilot pipeline deploy Note You need to have initiated at least one workload (service or job) before running pipeline deploy , so that your pipeline has something to deploy to your environments. \u2728 And you'll have a new pipeline configured in your application account . Want to understand a little bit more what's going on? Read on!","title":"Creating a Pipeline in 3 Steps"},{"location":"docs/concepts/pipelines/#setting-up-a-pipeline-step-by-step","text":"","title":"Setting Up a Pipeline, Step By Step"},{"location":"docs/concepts/pipelines/#step-1-configuring-your-pipeline","text":"Pipeline configurations are created at a workspace level. If your workspace has a single service, then your pipeline will be triggered only for that service. However, if you have multiple services in a workspace, then the pipeline will build all the services in the workspace. To start setting up a pipeline, cd into your app's workspace and run: copilot pipeline init This won't create your pipeline, but it will create some local files under copilot/pipelines that will be used when creating your pipeline. Pipeline name : We suggest naming your pipeline [repository name]-[branch name] (press 'Enter' when asked, to accept the default name). This will distinguish it from your other pipelines, should you create multiple, and works well if you follow a pipeline-per-branch workflow. Pipeline type : You may select either 'Workloads' or ' Environments '; this determines what your pipeline deploys when triggered. Release order : You'll be prompted for environments you want to deploy or deploy to \u2013 select them based on the order you want them to be deployed in your pipeline (deployments happen one environment at a time). You may, for example, want to deploy to your test environment first, and then your prod environment. Tracking repository : After you've selected the environments you want to deploy or deploy to, you'll be prompted to select which repository you want your CodePipeline to track. This is the repository that, when pushed to, will trigger a pipeline execution. (If the repository you're interested in doesn't show up, you can pass it in using the --url flag.) Tracking branch : After you've selected the repository, Copilot will designate your current local branch as the branch your pipeline will follow. This can be changed in Step 2.","title":"Step 1: Configuring Your Pipeline"},{"location":"docs/concepts/pipelines/#step-2-updating-the-pipeline-manifest-optional","text":"Just like your service has a simple manifest file, so does your pipeline. After you run pipeline init , two files are created: manifest.yml and buildspec.yml , both in a new copilot/pipelines/[your pipeline name] directory. If you poke in, you'll see that the manifest.yml looks something like this (for a service called \"api-frontend\" with two environments, \"test\" and \"prod\"): # The manifest for the \"demo-api-frontend-main\" pipeline. # This YAML file defines your pipeline: the source repository it tracks and the order of the environments to deploy to. # For more info: https://aws.github.io/copilot-cli/docs/manifest/pipeline/ # The name of the pipeline. name : demo-api-frontend-main # The version of the schema used in this template. version : 1 # This section defines your source, changes to which trigger your pipeline. source : # The name of the provider that is used to store the source artifacts. # (i.e. GitHub, Bitbucket, CodeCommit) provider : GitHub # Additional properties that further specify the location of the artifacts. properties : branch : main repository : https://github.com/kohidave/demo-api-frontend # Optional: specify the name of an existing CodeStar Connections connection. # connection_name: a-connection # This section defines the order of the environments your pipeline will deploy to. stages : - # The name of the environment. name : test test_commands : - make test - echo \"woo! Tests passed\" - # The name of the environment. name : prod # requires_approval: true You can see every available configuration option for manifest.yml on the pipeline manifest page. There are 3 main parts of this file: the name field, which is the name of your pipeline, the source section, which details the repository and branch to track, and the stages section, which lists the environments you want this pipeline to deploy or deploy to. You can update this anytime, but you must commit and push the changed files and run copilot pipeline deploy afterward. Typically, you'll update this file to change which environments to deploy or deploy workloads to, specify the order of deployments, add actions for the pipeline to run before or after deployment, or change the branch to track. You also may add a manual approval step before deployment or commands to run tests (see Customization ). If you are using CodeStar Connections to connect to your repository and would like to utilize an existing connection rather than let Copilot generate one for you, you may add the connection name here.","title":"Step 2: Updating the Pipeline Manifest (optional)"},{"location":"docs/concepts/pipelines/#step-3-updating-the-buildspec-optional","text":"Along with manifest.yml , the pipeline init command also generated a buildspec.yml file in the copilot/pipelines/[your pipeline name] directory. This contains the instructions for building and publishing your service. If you want to run any additional commands besides docker build , such as unit tests or style checkers, feel free to add them to the buildspec's build phase. When this buildspec runs, it pulls down the version of Copilot which was used when you ran pipeline init , to ensure backwards compatibility. Alternatively, you may bring your own buildspec for CodeBuild to run. Indicate its location in your manifest.yml file . build : buildspec :","title":"Step 3: Updating the Buildspec (optional)"},{"location":"docs/concepts/pipelines/#step-4-pushing-new-files-to-your-repository","text":"Now that your manifest.yml , buildspec.yml , and .workspace files have been created, add them to your repository. These files in your copilot/ directory are required for your pipeline's build stage to run successfully.","title":"Step 4: Pushing New Files to Your Repository"},{"location":"docs/concepts/pipelines/#step-5-creating-your-pipeline","text":"Here's the fun part! Run: copilot pipeline deploy This parses your manifest.yml , creates a CodePipeline in the same account and region as your application and kicks off a pipeline execution. Log into the AWS Console to watch your pipeline go, or run copilot pipeline status to check in on its execution. Info If you have selected a GitHub or Bitbucket repository, Copilot will help you connect to your source code with CodeStar Connections . You will need to install the AWS authentication app on your third-party account and update the connection status. Copilot and the AWS Management Console will guide you through these steps.","title":"Step 5: Creating Your Pipeline"},{"location":"docs/concepts/pipelines/#step-6-manage-copilot-version-for-your-pipeline-optional","text":"After creating your pipeline, you can manage the version of Copilot used by your pipeline by updating the following lines of your buildspec.yml to the latest version: ... # Download the copilot linux binary. - wget -q https://ecs-cli-v2-release.s3.amazonaws.com/copilot-linux-v1.16.0 - mv ./copilot-linux-v1.16.0 ./copilot-linux ...","title":"Step 6: Manage Copilot Version for Your Pipeline (optional)"},{"location":"docs/concepts/pipelines/#customization","text":"","title":"Customization"},{"location":"docs/concepts/pipelines/#manual-approval","text":"To add an approval step, set the require_approval field to 'true'. No pre-deployment or deployment actions will run without manual intervention via the CodePipeline console.","title":"Manual approval"},{"location":"docs/concepts/pipelines/#pre-and-post-deployment-actions","text":"As of v1.30.0 , you can insert actions into your pipeline, before and/or after each workload or environment deployment. Add these database migration, testing, or other actions right into your pipeline manifest. stages : - name : test require_approval : true pre_deployments : db_migration : # The name of this action. buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # The path to the buildspec. deployments : # Optional, ordering of deployments. orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # Optional, ordering of actions. In the buildspec manifest field, add the path, relative to your project root, of your buildspec file . The Copilot environment variables $COPILOT_APPLICATION_NAME and $COPILOT_ENVIRONMENT_NAME are available for use within these buildspecs. You may specify the run order of the actions using the depends_on subfield, just like you would to indicate your desired order of deployments . Info The CodeBuild projects generated for pre- and post-deployments and test commands are deployed in the same region as the pipeline and app. To access the VPC of the environment being deployed or deployed to, use Copilot commands in your pre-/post-deployment action buildspec or directly in your test commands.","title":"Pre- and Post-deployment Actions"},{"location":"docs/concepts/pipelines/#ordering","text":"The deployments field enables you to specify the deployment order of workloads or environments (depending on the type of pipeline). If this is not specified, deployments run in parallel. (See this blog post for more info.)","title":"Ordering"},{"location":"docs/concepts/pipelines/#testing","text":"If your post-deployment testing requires only a handful of commands and doesn't necessarily warrant wiring up a separate buildspec, utilize the test_commands field. Warning The post_deployments and test_commands fields within a stage are mutually exclusive. Pre-deployments, post-deployments, and test commands generate CodeBuild projects with the aws/codebuild/amazonlinux2-x86_64-standard:5.0 image, so most commands from Amazon Linux 2 (including make ) are available for use. Are your tests configured to run inside a Docker container? Copilot's test commands CodeBuild project supports Docker, so docker build commands are available as well. In the example below, the pipeline will run the make test command (in your source code directory) and only promote the change to the prod stage if that command exits successfully. name : demo-api-frontend-main version : 1 source : provider : GitHub properties : branch : main repository : https://github.com/kohidave/demo-api-frontend stages : - name : test # A change will only deploy to the production stage if the # make test and echo commands exit successfully. test_commands : - make test - echo \"woo! Tests passed\" - name : prod Info AWS's own Nathan Peck provides a great example of a Copilot pipeline, paying special attention to test_commands : https://aws.amazon.com/blogs/containers/automatically-deploying-your-container-application-with-aws-copilot/","title":"Testing"},{"location":"docs/concepts/pipelines/#pipeline-overrides","text":"If all of these options for custom configuration still don't give you the pipeline you'd like, you can use Copilot's \"break the glass\" solution, pipeline overrides , with the CDK or YAML to change the pipeline's CloudFormation template.","title":"Pipeline Overrides"},{"location":"docs/concepts/services/","text":"One of the awesome things about containers is that once you've written your code, running it locally is as easy as typing docker run . Copilot makes running those same containers on AWS as easy as typing copilot init . Copilot will build your image, push it to Amazon ECR and set up all the infrastructure to run your service in a scalable and secure way. Creating a Service Creating a service to run your containers on AWS can be done in a few ways. The easiest way is by running the init command from the same directory as your Dockerfile. $ copilot init You'll be asked which application you want this service to be a part of (or asked to create an application if there isn't one). Copilot will then ask about the type of service you're trying to build. After selecting a service type, Copilot will detect any health checks or exposed ports from your Dockerfile and ask if you'd like to deploy. Choosing a Service Type We mentioned before that Copilot will set up all the infrastructure your service needs to run. But how does it know what kind of infrastructure to use? When you're setting up a service, Copilot will ask you about what kind of service you want to build. Internet-facing services If you want your service to serve public internet traffic, you have three options: \"Request-Driven Web Service\" will provision an AWS App Runner Service to run your service. \"Static Site\" will provision a dedicated CloudFront distribution and S3 bucket for your static website. \"Load Balanced Web Service\" will provision an Application Load Balancer, a Network Load Balancer or both, along with security groups, an ECS service on Fargate to run your service. Request-Driven Web Service An AWS App Runner service that autoscales your instances based on incoming traffic and scales down to a baseline instance when there's no traffic. This option is more cost-effective for HTTP services with sudden bursts in request volumes or low request volumes. Unlike ECS, App Runner services are not connected by default to a VPC. In order to route egress traffic through a VPC, you can configure the network field in the manifest. Static Site An Amazon CloudFront distribution-served, S3-hosted static website. Copilot uploads your static assets into a new S3 bucket configured for static website hosting. Caching with the CloudFront Content Delivery Network (CDN) optimizes cost and speed. With each redeployment, the previous cache is invalidated. Load Balanced Web Service An ECS Service running tasks on Fargate with an Application Load Balancer, a Network Load Balancer or both, as ingress. This option is suitable for HTTP or TCP services with steady request volumes that need to access resources in a VPC or require advanced configuration. Note that a Copilot-managed Application Load Balancer is an environment-level resource, and is shared by all Load Balanced Web Services within the environment. As of v1.32.0, you have the option to import an existing ALB at the service level by specifying it in your workload manifest . To learn more, go here . In contrast, a Network Load Balancer is a service-level resource, and hence is not shared across services. Below is a diagram for a Load Balanced Web Service that involves an Application Load Balancer only. Backend Service If you want a service that can't be accessed externally, but only from other services within your application, you can create a Backend Service . Copilot will provision an ECS Service running on AWS Fargate, but won't set up any internet-facing endpoints. Load balancing is available for Backend Services. To learn about creating internal load balancers, go here . Worker Service Worker Services allow you to implement asynchronous service-to-service communication with pub/sub architectures . Your microservices in your application can publish events to Amazon SNS topics that can then be consumed by a \"Worker Service\". A Worker Service is composed of: One or more Amazon SQS queues to process notifications published to the topics, as well as dead-letter queues to handle failures. An Amazon ECS service on AWS Fargate that has permission to poll the SQS queues and process the messages asynchronously. Config and the Manifest After you've run copilot init you might have noticed that Copilot created a file called manifest.yml in the copilot/[service name]/ directory. This manifest file contains common configuration options for your service. While the exact set of options depends on the type of service you're running, common ones include the resources allocated to your service (like memory and CPU), health checks, and environment variables. Let's take a look at the manifest for a Load Balanced Web Service called front-end . name : front-end type : Load Balanced Web Service image : # Path to your service's Dockerfile. build : ./Dockerfile # Port exposed through your container to route traffic to it. port : 8080 http : # Requests to this path will be forwarded to your service. # To match all requests you can use the \"/\" path. path : '/' # You can specify a custom health check path. The default is \"/\" # healthcheck: '/' # Number of CPU units for the task. cpu : 256 # Amount of memory in MiB used by the task. memory : 512 # Number of tasks that should be running in your service. count : 1 # Optional fields for more advanced use-cases. # variables : # Pass environment variables as key value pairs. LOG_LEVEL : info #secrets: # Pass secrets from AWS Systems Manager (SSM) Parameter Store. # GITHUB_TOKEN: GH_SECRET_TOKEN # The key is the name of the environment variable, # the value is the name of the SSM parameter. # You can override any of the values defined above by environment. environments : prod : count : 2 # Number of tasks to run for the \"prod\" environment. To learn about the specification of manifest files, see the manifest page. Deploying a Service Once you've set up your service, you can deploy it (and any changes to your manifest) by running the deploy command: $ copilot deploy Running this command will: Build your image locally Push to your service's ECR repository Convert your manifest file to CloudFormation Package any additional infrastructure into CloudFormation Deploy your updated service and resources to CloudFormation If you have multiple environments, you'll be prompted to select which environment you want to deploy to. Digging into your Service Now that we've got a service up and running, we can check on it using Copilot. Below are a few common ways to check in on your deployed service. What's in your service? Running copilot svc show will show you a summary of your service. Here's an example of the output you might see for a Load Balanced Web Service . This output includes the configuration of your service for each environment, any rollback alarms you have configured, all the endpoints for your service, and the environment variables and secrets passed into your service. You can also provide an optional --resources flag to see all AWS resources associated with your service. $ copilot svc show About Application my-app Name front-end Type Load Balanced Web Service Configurations Environment Tasks CPU (vCPU) Memory (MiB) Port ----------- ----- ---------- ------------ ---- test 1 0.25 512 80 Rollback Alarms Name Environment Description ---- ----------- ----------- my-app-test-front-end-CopilotRol test Roll back ECS service if CPU utilizat lbackCPUAlarm ion is greater than or equal to 50% t wice in 3 minutes. Routes Environment URL ----------- --- test http://my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.my-app.local:8080 test Service Discovery Variables Name Container Environment Value ---- --------- ----------- ----- COPILOT_APPLICATION_NAME front-end test my-app COPILOT_ENVIRONMENT_NAME \" test test COPILOT_LB_DNS \" test my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com COPILOT_SERVICE_DISCOVERY_ENDPOINT \" test test.my-app.local COPILOT_SERVICE_NAME \" test front-end Secrets Name Container Environment Value ---- --------- ----------- ----- GITHUB_WEBHOOK_SECRET front-end test parameter/GH_WEBHOOK_SECRET The output of copilot svc show varies depending on your service type. For example, the summary for a Static Site includes a tree representation of your S3 bucket's contents. % copilot svc show Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg What's your service status? Often it's handy to be able to check on the status of your service. Are all the instances of my service healthy? Are there any alarms firing? To do that, you can run copilot svc status to get a summary of your service's status. $ copilot svc status Service: front-end Task Summary Running \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 desired tasks are running Health \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes HTTP health checks \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes container health checks Tasks ID Status Revision Started At Cont. Health HTTP Health -- ------ -------- ---------- ------------ ----------- 37236ed3 RUNNING 9 12 minutes ago HEALTHY HEALTHY Alarms Name Type Condition Last Updated Health ---- ---- --------- ------------ ------ TargetTracking-service/my-app- Auto Scaling CPUUtilization > 70.00 for 3 d 5 minutes ago OK test-Cluster-0jTKWTNBKviF/my-a atapoints within 3 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmHigh-f0f31c7b-74 61-415c-9dfd-81b983cbe0df TargetTracking-service/my-app- Auto Scaling CPUUtilization < 63.00 for 15 5 minutes ago ALARM test-Cluster-0jTKWTNBKviF/my-a datapoints within 15 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmLow-698f9f17-6c0 c-4db1-8f1d-e23de97f5459 Just like with copilot svc show , the output of copilot svc status varies with service type. For instance, a Request-Driven Web Service 's output includes system logs, and a Static Site 's output includes the S3 bucket's object count and size. Where are my service logs? Checking your service logs is easy as well. Running copilot svc logs will show the most recent logs of your service. You can follow your logs live with the --follow flag. $ copilot svc logs 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! Info Logs are not available for Static Site services.","title":"Services"},{"location":"docs/concepts/services/#creating-a-service","text":"Creating a service to run your containers on AWS can be done in a few ways. The easiest way is by running the init command from the same directory as your Dockerfile. $ copilot init You'll be asked which application you want this service to be a part of (or asked to create an application if there isn't one). Copilot will then ask about the type of service you're trying to build. After selecting a service type, Copilot will detect any health checks or exposed ports from your Dockerfile and ask if you'd like to deploy.","title":"Creating a Service"},{"location":"docs/concepts/services/#choosing-a-service-type","text":"We mentioned before that Copilot will set up all the infrastructure your service needs to run. But how does it know what kind of infrastructure to use? When you're setting up a service, Copilot will ask you about what kind of service you want to build.","title":"Choosing a Service Type"},{"location":"docs/concepts/services/#internet-facing-services","text":"If you want your service to serve public internet traffic, you have three options: \"Request-Driven Web Service\" will provision an AWS App Runner Service to run your service. \"Static Site\" will provision a dedicated CloudFront distribution and S3 bucket for your static website. \"Load Balanced Web Service\" will provision an Application Load Balancer, a Network Load Balancer or both, along with security groups, an ECS service on Fargate to run your service.","title":"Internet-facing services"},{"location":"docs/concepts/services/#request-driven-web-service","text":"An AWS App Runner service that autoscales your instances based on incoming traffic and scales down to a baseline instance when there's no traffic. This option is more cost-effective for HTTP services with sudden bursts in request volumes or low request volumes. Unlike ECS, App Runner services are not connected by default to a VPC. In order to route egress traffic through a VPC, you can configure the network field in the manifest.","title":"Request-Driven Web Service"},{"location":"docs/concepts/services/#static-site","text":"An Amazon CloudFront distribution-served, S3-hosted static website. Copilot uploads your static assets into a new S3 bucket configured for static website hosting. Caching with the CloudFront Content Delivery Network (CDN) optimizes cost and speed. With each redeployment, the previous cache is invalidated.","title":"Static Site"},{"location":"docs/concepts/services/#load-balanced-web-service","text":"An ECS Service running tasks on Fargate with an Application Load Balancer, a Network Load Balancer or both, as ingress. This option is suitable for HTTP or TCP services with steady request volumes that need to access resources in a VPC or require advanced configuration. Note that a Copilot-managed Application Load Balancer is an environment-level resource, and is shared by all Load Balanced Web Services within the environment. As of v1.32.0, you have the option to import an existing ALB at the service level by specifying it in your workload manifest . To learn more, go here . In contrast, a Network Load Balancer is a service-level resource, and hence is not shared across services. Below is a diagram for a Load Balanced Web Service that involves an Application Load Balancer only.","title":"Load Balanced Web Service"},{"location":"docs/concepts/services/#backend-service","text":"If you want a service that can't be accessed externally, but only from other services within your application, you can create a Backend Service . Copilot will provision an ECS Service running on AWS Fargate, but won't set up any internet-facing endpoints. Load balancing is available for Backend Services. To learn about creating internal load balancers, go here .","title":"Backend Service"},{"location":"docs/concepts/services/#worker-service","text":"Worker Services allow you to implement asynchronous service-to-service communication with pub/sub architectures . Your microservices in your application can publish events to Amazon SNS topics that can then be consumed by a \"Worker Service\". A Worker Service is composed of: One or more Amazon SQS queues to process notifications published to the topics, as well as dead-letter queues to handle failures. An Amazon ECS service on AWS Fargate that has permission to poll the SQS queues and process the messages asynchronously.","title":"Worker Service"},{"location":"docs/concepts/services/#config-and-the-manifest","text":"After you've run copilot init you might have noticed that Copilot created a file called manifest.yml in the copilot/[service name]/ directory. This manifest file contains common configuration options for your service. While the exact set of options depends on the type of service you're running, common ones include the resources allocated to your service (like memory and CPU), health checks, and environment variables. Let's take a look at the manifest for a Load Balanced Web Service called front-end . name : front-end type : Load Balanced Web Service image : # Path to your service's Dockerfile. build : ./Dockerfile # Port exposed through your container to route traffic to it. port : 8080 http : # Requests to this path will be forwarded to your service. # To match all requests you can use the \"/\" path. path : '/' # You can specify a custom health check path. The default is \"/\" # healthcheck: '/' # Number of CPU units for the task. cpu : 256 # Amount of memory in MiB used by the task. memory : 512 # Number of tasks that should be running in your service. count : 1 # Optional fields for more advanced use-cases. # variables : # Pass environment variables as key value pairs. LOG_LEVEL : info #secrets: # Pass secrets from AWS Systems Manager (SSM) Parameter Store. # GITHUB_TOKEN: GH_SECRET_TOKEN # The key is the name of the environment variable, # the value is the name of the SSM parameter. # You can override any of the values defined above by environment. environments : prod : count : 2 # Number of tasks to run for the \"prod\" environment. To learn about the specification of manifest files, see the manifest page.","title":"Config and the Manifest"},{"location":"docs/concepts/services/#deploying-a-service","text":"Once you've set up your service, you can deploy it (and any changes to your manifest) by running the deploy command: $ copilot deploy Running this command will: Build your image locally Push to your service's ECR repository Convert your manifest file to CloudFormation Package any additional infrastructure into CloudFormation Deploy your updated service and resources to CloudFormation If you have multiple environments, you'll be prompted to select which environment you want to deploy to.","title":"Deploying a Service"},{"location":"docs/concepts/services/#digging-into-your-service","text":"Now that we've got a service up and running, we can check on it using Copilot. Below are a few common ways to check in on your deployed service.","title":"Digging into your Service"},{"location":"docs/concepts/services/#whats-in-your-service","text":"Running copilot svc show will show you a summary of your service. Here's an example of the output you might see for a Load Balanced Web Service . This output includes the configuration of your service for each environment, any rollback alarms you have configured, all the endpoints for your service, and the environment variables and secrets passed into your service. You can also provide an optional --resources flag to see all AWS resources associated with your service. $ copilot svc show About Application my-app Name front-end Type Load Balanced Web Service Configurations Environment Tasks CPU (vCPU) Memory (MiB) Port ----------- ----- ---------- ------------ ---- test 1 0.25 512 80 Rollback Alarms Name Environment Description ---- ----------- ----------- my-app-test-front-end-CopilotRol test Roll back ECS service if CPU utilizat lbackCPUAlarm ion is greater than or equal to 50% t wice in 3 minutes. Routes Environment URL ----------- --- test http://my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.my-app.local:8080 test Service Discovery Variables Name Container Environment Value ---- --------- ----------- ----- COPILOT_APPLICATION_NAME front-end test my-app COPILOT_ENVIRONMENT_NAME \" test test COPILOT_LB_DNS \" test my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com COPILOT_SERVICE_DISCOVERY_ENDPOINT \" test test.my-app.local COPILOT_SERVICE_NAME \" test front-end Secrets Name Container Environment Value ---- --------- ----------- ----- GITHUB_WEBHOOK_SECRET front-end test parameter/GH_WEBHOOK_SECRET The output of copilot svc show varies depending on your service type. For example, the summary for a Static Site includes a tree representation of your S3 bucket's contents. % copilot svc show Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg","title":"What's in your service?"},{"location":"docs/concepts/services/#whats-your-service-status","text":"Often it's handy to be able to check on the status of your service. Are all the instances of my service healthy? Are there any alarms firing? To do that, you can run copilot svc status to get a summary of your service's status. $ copilot svc status Service: front-end Task Summary Running \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 desired tasks are running Health \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes HTTP health checks \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes container health checks Tasks ID Status Revision Started At Cont. Health HTTP Health -- ------ -------- ---------- ------------ ----------- 37236ed3 RUNNING 9 12 minutes ago HEALTHY HEALTHY Alarms Name Type Condition Last Updated Health ---- ---- --------- ------------ ------ TargetTracking-service/my-app- Auto Scaling CPUUtilization > 70.00 for 3 d 5 minutes ago OK test-Cluster-0jTKWTNBKviF/my-a atapoints within 3 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmHigh-f0f31c7b-74 61-415c-9dfd-81b983cbe0df TargetTracking-service/my-app- Auto Scaling CPUUtilization < 63.00 for 15 5 minutes ago ALARM test-Cluster-0jTKWTNBKviF/my-a datapoints within 15 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmLow-698f9f17-6c0 c-4db1-8f1d-e23de97f5459 Just like with copilot svc show , the output of copilot svc status varies with service type. For instance, a Request-Driven Web Service 's output includes system logs, and a Static Site 's output includes the S3 bucket's object count and size.","title":"What's your service status?"},{"location":"docs/concepts/services/#where-are-my-service-logs","text":"Checking your service logs is easy as well. Running copilot svc logs will show the most recent logs of your service. You can follow your logs live with the --follow flag. $ copilot svc logs 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! Info Logs are not available for Static Site services.","title":"Where are my service logs?"},{"location":"docs/developing/content-delivery/","text":"Global Content Delivery Copilot supports a Content Delivery Network through Amazon CloudFront. This resource is managed by Copilot at the environment level, allowing users to leverage CloudFront through the environment manifest . CloudFront infrastructure with Copilot When Copilot creates a CloudFront distribution , it creates the distribution to be the new entry point to the application instead of the Application Load Balancer. This allows CloudFront to route your traffic to the load balancer faster via the edge locations deployed around the globe. How do I use CloudFront with my existing application? Starting with Copilot v1.20, copilot env init creates an environment manifest file. In this manifest, you can specify the value cdn: true and then run copilot env deploy to enable a basic CloudFront distribution. Sample CloudFront distribution manifest setups Basic Imported Certificates cdn : true http : public : security_groups : ingress : restrict_to : cdn : true cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd http : certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-bldz-0an1-afki-p7ll1myafd - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/56654321-cv8f-adf3-j7gd-adf876af95 How do I enable HTTPS traffic with CloudFront? When using HTTPS with CloudFront, specify your certificates in the cdn.certificate field of the environment manifest, just as you would in the http.certificates field for a Load Balancer. Unlike for a Load Balancer, you can import only one certificate. Because of this, we recommend that you create a new certificate (in the us-east-1 region) with CNAME records to validate each alias that your services use in that environment. Info CloudFront only supports certificates imported in the us-east-1 region. Info Importing a certificate for CloudFront adds an extra permission to your Environment Manager Role, allowing Copilot to use the DescribeCertificate API call . You can also let Copilot manage the certificates for you by specifying --domain when you create your application. When doing this, you must specify http.alias for all your services deployed in the CloudFront-enabled environment. With both of these setups, Copilot will provision CloudFront to use the SSL/TLS Certificate , which allows it to validate the viewer certificate, enabling an HTTPS connection. What is ingress restriction? You can restrict incoming traffic to come from a certain source. For CloudFront, Copilot uses an AWS managed prefix list to restrict allowed traffic to a set of CIDR IP addresses associated with CloudFront edge locations. When you specify restrict_to.cdn: true , your Public Load Balancer is no longer publicly accessible, and can only be accessed through the CloudFront distribution, guarding against security threats to your services. How do I use CloudFront to terminate TLS? Attention Disable HTTP to HTTPS redirection for your Load Balanced Web Services. Run svc deploy individually to redeploy all the Load Balanced Web Services before enabling CloudFront TLS termination. Once all your Load Balanced Web Services no longer redirect HTTP to HTTPS, you can safely enable CloudFront TLS termination in the env manifest and run env deploy . You can optionally use CloudFront for TLS termination by configuring the env manifest as cdn : terminate_tls : true And traffic from CloudFront \u2192 Application Load Balancer (ALB) \u2192 ECS will be HTTP only. This brings the benefit of terminating TLS at a geographically closer endpoint to the end user for faster TLS handshakes. How do I use CloudFront with an S3 bucket? You can optionally have CloudFront work with an Amazon S3 bucket for faster static content delivery by configuring cdn.static_assets in the env manifest. Use an existing S3 bucket Attention For security concerns, we suggest that you use a private S3 bucket so that all public access is blocked by default. The env manifest example below illustrates how to use an existing S3 bucket for CloudFront: Sample env manifest setup for using an existing S3 bucket with CloudFront cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* Note that static_assets.location is the DNS domain name of the S3 bucket (for example, EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com ). If you are not using an alias of the app-associated root domain , remember to create an A-record for your alias pointing to the CloudFront domain name. After getting the environment deployed using the env manifest, you need to update the bucket policy of your S3 bucket (if it is a private one), so that CloudFront can access it. Example S3 bucket policy that grants read-only access to CloudFront { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::EXAMPLE-BUCKET/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } } How do I use CloudFront to serve a static website? Use the copilot init or copilot svc init command to create a Static Site workload . After you select files to upload, Copilot will provision a separate, dedicated CloudFront distribution, as well as an S3 bucket with your assets. With each redeployment, Copilot will invalidate the existing cache for more dynamic development.","title":"Content Delivery"},{"location":"docs/developing/content-delivery/#global-content-delivery","text":"Copilot supports a Content Delivery Network through Amazon CloudFront. This resource is managed by Copilot at the environment level, allowing users to leverage CloudFront through the environment manifest .","title":"Global Content Delivery"},{"location":"docs/developing/content-delivery/#cloudfront-infrastructure-with-copilot","text":"When Copilot creates a CloudFront distribution , it creates the distribution to be the new entry point to the application instead of the Application Load Balancer. This allows CloudFront to route your traffic to the load balancer faster via the edge locations deployed around the globe.","title":"CloudFront infrastructure with Copilot"},{"location":"docs/developing/content-delivery/#how-do-i-use-cloudfront-with-my-existing-application","text":"Starting with Copilot v1.20, copilot env init creates an environment manifest file. In this manifest, you can specify the value cdn: true and then run copilot env deploy to enable a basic CloudFront distribution. Sample CloudFront distribution manifest setups Basic Imported Certificates cdn : true http : public : security_groups : ingress : restrict_to : cdn : true cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd http : certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-bldz-0an1-afki-p7ll1myafd - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/56654321-cv8f-adf3-j7gd-adf876af95","title":"How do I use CloudFront with my existing application?"},{"location":"docs/developing/content-delivery/#how-do-i-enable-https-traffic-with-cloudfront","text":"When using HTTPS with CloudFront, specify your certificates in the cdn.certificate field of the environment manifest, just as you would in the http.certificates field for a Load Balancer. Unlike for a Load Balancer, you can import only one certificate. Because of this, we recommend that you create a new certificate (in the us-east-1 region) with CNAME records to validate each alias that your services use in that environment. Info CloudFront only supports certificates imported in the us-east-1 region. Info Importing a certificate for CloudFront adds an extra permission to your Environment Manager Role, allowing Copilot to use the DescribeCertificate API call . You can also let Copilot manage the certificates for you by specifying --domain when you create your application. When doing this, you must specify http.alias for all your services deployed in the CloudFront-enabled environment. With both of these setups, Copilot will provision CloudFront to use the SSL/TLS Certificate , which allows it to validate the viewer certificate, enabling an HTTPS connection.","title":"How do I enable HTTPS traffic with CloudFront?"},{"location":"docs/developing/content-delivery/#what-is-ingress-restriction","text":"You can restrict incoming traffic to come from a certain source. For CloudFront, Copilot uses an AWS managed prefix list to restrict allowed traffic to a set of CIDR IP addresses associated with CloudFront edge locations. When you specify restrict_to.cdn: true , your Public Load Balancer is no longer publicly accessible, and can only be accessed through the CloudFront distribution, guarding against security threats to your services.","title":"What is ingress restriction?"},{"location":"docs/developing/content-delivery/#how-do-i-use-cloudfront-to-terminate-tls","text":"Attention Disable HTTP to HTTPS redirection for your Load Balanced Web Services. Run svc deploy individually to redeploy all the Load Balanced Web Services before enabling CloudFront TLS termination. Once all your Load Balanced Web Services no longer redirect HTTP to HTTPS, you can safely enable CloudFront TLS termination in the env manifest and run env deploy . You can optionally use CloudFront for TLS termination by configuring the env manifest as cdn : terminate_tls : true And traffic from CloudFront \u2192 Application Load Balancer (ALB) \u2192 ECS will be HTTP only. This brings the benefit of terminating TLS at a geographically closer endpoint to the end user for faster TLS handshakes.","title":"How do I use CloudFront to terminate TLS?"},{"location":"docs/developing/content-delivery/#how-do-i-use-cloudfront-with-an-s3-bucket","text":"You can optionally have CloudFront work with an Amazon S3 bucket for faster static content delivery by configuring cdn.static_assets in the env manifest.","title":"How do I use CloudFront with an S3 bucket?"},{"location":"docs/developing/content-delivery/#use-an-existing-s3-bucket","text":"Attention For security concerns, we suggest that you use a private S3 bucket so that all public access is blocked by default. The env manifest example below illustrates how to use an existing S3 bucket for CloudFront: Sample env manifest setup for using an existing S3 bucket with CloudFront cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* Note that static_assets.location is the DNS domain name of the S3 bucket (for example, EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com ). If you are not using an alias of the app-associated root domain , remember to create an A-record for your alias pointing to the CloudFront domain name. After getting the environment deployed using the env manifest, you need to update the bucket policy of your S3 bucket (if it is a private one), so that CloudFront can access it. Example S3 bucket policy that grants read-only access to CloudFront { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::EXAMPLE-BUCKET/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } }","title":"Use an existing S3 bucket"},{"location":"docs/developing/content-delivery/#how-do-i-use-cloudfront-to-serve-a-static-website","text":"Use the copilot init or copilot svc init command to create a Static Site workload . After you select files to upload, Copilot will provision a separate, dedicated CloudFront distribution, as well as an S3 bucket with your assets. With each redeployment, Copilot will invalidate the existing cache for more dynamic development.","title":"How do I use CloudFront to serve a static website?"},{"location":"docs/developing/custom-environment-resources/","text":"Custom Environment Resources Importing existing resources When creating a new environment with Copilot, you are given the option to import existing VPC resources. (Use flags with env init or the guided experience, shown below.) $ copilot env init What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. Yes, but I' d like configure the default resources ( CIDR ranges ) . > No, I ' d like to import existing resources ( VPC, subnets ) . You may use the import feature to bring a VPC with two public and two private subnets, only two public subnets and no private subnets (such as a default VPC), or only two private subnets and no public subnets for your workloads that are not internet-facing. (For more details on the resources you'll need for isolated networks, go here .) Modifying Copilot's default resources When you select the default configuration, Copilot follows AWS best practices and creates a VPC with two public and two private subnets, with one of each type in one of two Availability Zones. If you require additional availability zones or need to modify the CIDR ranges, you can opt in to modify these settings: $ copilot env init --container-insights What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. > Yes, but I' d like configure the default resources ( CIDR ranges ) . No, I ' d like to import existing resources ( VPC, subnets ) . What VPC CIDR would you like to use? [ ? for help ] ( 10 .0.0.0/16 ) Which availability zones would you like to use? [ Use arrows to move, space to select , type to filter, ? for more help ] [ x ] us-west-2a [ x ] us-west-2b > [ x ] us-west-2c [ ] us-west-2d What CIDR would you like to use for your public subnets? [ ? for help ] ( 10 .0.0.0/24,10.0.1.0/24 ) 10 .0.0.0/24,10.0.1.0/24,10.0.2.0/24 What CIDR would you like to use for your private subnets? [ ? for help ] ( 10 .0.2.0/24,10.0.3.0/24 ) 10 .0.3.0/24,10.0.4.0/24,10.0.5.0/24 Considerations If you are importing an existing VPC, we recommend following Security best practices for your VPC and the Security & Filtering section from the Amazon VPC FAQs . If you are using a private hosted zone, you must set enableDnsHostname and enableDnsSupport to true. To deploy internet-facing workloads in private subnets , your VPC will need a NAT gateway .","title":"Custom Environment Resources"},{"location":"docs/developing/custom-environment-resources/#custom-environment-resources","text":"","title":"Custom Environment Resources"},{"location":"docs/developing/custom-environment-resources/#importing-existing-resources","text":"When creating a new environment with Copilot, you are given the option to import existing VPC resources. (Use flags with env init or the guided experience, shown below.) $ copilot env init What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. Yes, but I' d like configure the default resources ( CIDR ranges ) . > No, I ' d like to import existing resources ( VPC, subnets ) . You may use the import feature to bring a VPC with two public and two private subnets, only two public subnets and no private subnets (such as a default VPC), or only two private subnets and no public subnets for your workloads that are not internet-facing. (For more details on the resources you'll need for isolated networks, go here .)","title":"Importing existing resources"},{"location":"docs/developing/custom-environment-resources/#modifying-copilots-default-resources","text":"When you select the default configuration, Copilot follows AWS best practices and creates a VPC with two public and two private subnets, with one of each type in one of two Availability Zones. If you require additional availability zones or need to modify the CIDR ranges, you can opt in to modify these settings: $ copilot env init --container-insights What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. > Yes, but I' d like configure the default resources ( CIDR ranges ) . No, I ' d like to import existing resources ( VPC, subnets ) . What VPC CIDR would you like to use? [ ? for help ] ( 10 .0.0.0/16 ) Which availability zones would you like to use? [ Use arrows to move, space to select , type to filter, ? for more help ] [ x ] us-west-2a [ x ] us-west-2b > [ x ] us-west-2c [ ] us-west-2d What CIDR would you like to use for your public subnets? [ ? for help ] ( 10 .0.0.0/24,10.0.1.0/24 ) 10 .0.0.0/24,10.0.1.0/24,10.0.2.0/24 What CIDR would you like to use for your private subnets? [ ? for help ] ( 10 .0.2.0/24,10.0.3.0/24 ) 10 .0.3.0/24,10.0.4.0/24,10.0.5.0/24","title":"Modifying Copilot's default resources"},{"location":"docs/developing/custom-environment-resources/#considerations","text":"If you are importing an existing VPC, we recommend following Security best practices for your VPC and the Security & Filtering section from the Amazon VPC FAQs . If you are using a private hosted zone, you must set enableDnsHostname and enableDnsSupport to true. To deploy internet-facing workloads in private subnets , your VPC will need a NAT gateway .","title":"Considerations"},{"location":"docs/developing/domain/","text":"Domain Load Balanced Web Service In Copilot, there are two ways to use custom domains for your Load Balanced Web Service: Use --domain when creating an application to associate a Route 53 domain in the same account. Use the http.[public/private].certificates field in an environment manifest to import your validated ACM certificates into the environment. Attention Today, a Route 53 domain name can only be associated when running copilot app init . If you'd like to update your application with a domain ( #3045 ), you'll need to run copilot app delete to remove the old one before creating a new one with --domain to associate a new domain. Use app-associated root domain As mentioned in the Application Guide , you can configure the domain name of your app when running copilot app init --domain . Default domain name for your service After deploying your Load Balanced Web Services , by default you can access them publicly via ${SvcName}.${EnvName}.${AppName}.${DomainName} if you are using an Application Load Balancer, or ${SvcName}-nlb.${EnvName}.${AppName}.${DomainName} if you are using a Network Load Balancer. For example, https://kudo.test.coolapp.example.aws or kudo-nlb.test.coolapp.example.aws:443 . Customized domain alias If you don't like the default domain name Copilot assigns to your service, you can set a custom alias for your service by editing your manifest's alias section. The following snippet sets an alias to your service. # in copilot/{service name}/manifest.yml http : path : '/' alias : example.aws Similarly, if your service is using a Network Load Balancer, you can specify: nlb : port : 443/tls alias : example-v1.aws However, since we delegate responsibility for the subdomain to Route 53 , the alias you specify must follow one of the following Copilot-enabled patterns: {domain} , such as example.aws {subdomain}.{domain} , such as v1.example.aws {appName}.{domain} , such as coolapp.example.aws {subdomain}.{appName}.{domain} , such as v1.coolapp.example.aws {envName}.{appName}.{domain} , such as test.coolapp.example.aws {subdomain}.{envName}.{appName}.{domain} , such as v1.test.coolapp.example.aws What happens under the hood? Under the hood, Copilot creates a hosted zone in your app account for the new app subdomain ${AppName}.${DomainName} creates another hosted zone in your env account for the new env subdomain ${EnvName}.${AppName}.${DomainName} creates and validates an ACM certificate for the env subdomain associates the certificate with: Your HTTPS listener and redirects HTTP traffic to HTTPS, if the alias is used for the Application Load Balancer ( http.alias ) Your network load balancer's TLS listener, if the alias is for nlb.alias and TLS termination is enabled. creates an optional A record for your alias What does it look like? Use domain in your existing validated certificates If you'd like more granular control over the generated ACM certificate, or if the default alias options aren't flexible enough, you can import validated ACM certificates that include the alias to your environment. In the environment manifest , specify http.[public/private].certificates : type : Environment http : public : certificates : - arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 Then, in your service's manifest, you can: Specify the ID of the hosted zone into which Copilot should insert the A record: # in copilot/{service name}/manifest.yml http : path : '/' alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 Alternatively, deploy the service without the hosted_zone field, then manually add the DNS name of the Application Load Balancer (ALB) created in that environment as an A record where your alias domain is hosted. We have an example of Option 2 in our blog posts. Request-Driven Web Service You can also add a custom domain for your request-driven web service. Similar to Load Balanced Web Service, you can do so by modifying the alias field in your manifest: # in copilot/{service name}/manifest.yml http : path : '/' alias : web.example.aws Likewise, your application should have been associated with the domain (e.g. example.aws ) in order for your Request-Driven Web Service to use it. Info For now, we support only one-level subdomains such as web.example.aws . Environment-level domains (e.g. web.${envName}.${appName}.example.aws ), application-level domains (e.g. web.${appName}.example.aws ), or root domains (i.e. example.aws ) are not supported yet. This also means that your subdomain shouldn't collide with your application name. Under the hood, Copilot: associates the domain with your app runner service creates the domain record as well as the validation records in your root domain's hosted zone","title":"Domain"},{"location":"docs/developing/domain/#domain","text":"","title":"Domain"},{"location":"docs/developing/domain/#load-balanced-web-service","text":"In Copilot, there are two ways to use custom domains for your Load Balanced Web Service: Use --domain when creating an application to associate a Route 53 domain in the same account. Use the http.[public/private].certificates field in an environment manifest to import your validated ACM certificates into the environment. Attention Today, a Route 53 domain name can only be associated when running copilot app init . If you'd like to update your application with a domain ( #3045 ), you'll need to run copilot app delete to remove the old one before creating a new one with --domain to associate a new domain.","title":"Load Balanced Web Service"},{"location":"docs/developing/domain/#use-app-associated-root-domain","text":"As mentioned in the Application Guide , you can configure the domain name of your app when running copilot app init --domain . Default domain name for your service After deploying your Load Balanced Web Services , by default you can access them publicly via ${SvcName}.${EnvName}.${AppName}.${DomainName} if you are using an Application Load Balancer, or ${SvcName}-nlb.${EnvName}.${AppName}.${DomainName} if you are using a Network Load Balancer. For example, https://kudo.test.coolapp.example.aws or kudo-nlb.test.coolapp.example.aws:443 .","title":"Use app-associated root domain"},{"location":"docs/developing/domain/#customized-domain-alias","text":"If you don't like the default domain name Copilot assigns to your service, you can set a custom alias for your service by editing your manifest's alias section. The following snippet sets an alias to your service. # in copilot/{service name}/manifest.yml http : path : '/' alias : example.aws Similarly, if your service is using a Network Load Balancer, you can specify: nlb : port : 443/tls alias : example-v1.aws However, since we delegate responsibility for the subdomain to Route 53 , the alias you specify must follow one of the following Copilot-enabled patterns: {domain} , such as example.aws {subdomain}.{domain} , such as v1.example.aws {appName}.{domain} , such as coolapp.example.aws {subdomain}.{appName}.{domain} , such as v1.coolapp.example.aws {envName}.{appName}.{domain} , such as test.coolapp.example.aws {subdomain}.{envName}.{appName}.{domain} , such as v1.test.coolapp.example.aws","title":"Customized domain alias"},{"location":"docs/developing/domain/#what-happens-under-the-hood","text":"Under the hood, Copilot creates a hosted zone in your app account for the new app subdomain ${AppName}.${DomainName} creates another hosted zone in your env account for the new env subdomain ${EnvName}.${AppName}.${DomainName} creates and validates an ACM certificate for the env subdomain associates the certificate with: Your HTTPS listener and redirects HTTP traffic to HTTPS, if the alias is used for the Application Load Balancer ( http.alias ) Your network load balancer's TLS listener, if the alias is for nlb.alias and TLS termination is enabled. creates an optional A record for your alias","title":"What happens under the hood?"},{"location":"docs/developing/domain/#what-does-it-look-like","text":"","title":"What does it look like?"},{"location":"docs/developing/domain/#use-domain-in-your-existing-validated-certificates","text":"If you'd like more granular control over the generated ACM certificate, or if the default alias options aren't flexible enough, you can import validated ACM certificates that include the alias to your environment. In the environment manifest , specify http.[public/private].certificates : type : Environment http : public : certificates : - arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 Then, in your service's manifest, you can: Specify the ID of the hosted zone into which Copilot should insert the A record: # in copilot/{service name}/manifest.yml http : path : '/' alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 Alternatively, deploy the service without the hosted_zone field, then manually add the DNS name of the Application Load Balancer (ALB) created in that environment as an A record where your alias domain is hosted. We have an example of Option 2 in our blog posts.","title":"Use domain in your existing validated certificates"},{"location":"docs/developing/domain/#request-driven-web-service","text":"You can also add a custom domain for your request-driven web service. Similar to Load Balanced Web Service, you can do so by modifying the alias field in your manifest: # in copilot/{service name}/manifest.yml http : path : '/' alias : web.example.aws Likewise, your application should have been associated with the domain (e.g. example.aws ) in order for your Request-Driven Web Service to use it. Info For now, we support only one-level subdomains such as web.example.aws . Environment-level domains (e.g. web.${envName}.${appName}.example.aws ), application-level domains (e.g. web.${appName}.example.aws ), or root domains (i.e. example.aws ) are not supported yet. This also means that your subdomain shouldn't collide with your application name. Under the hood, Copilot: associates the domain with your app runner service creates the domain record as well as the validation records in your root domain's hosted zone","title":"Request-Driven Web Service"},{"location":"docs/developing/environment-variables/","text":"Environment Variables Environment variables are variables that are available to your service, based on the environment they're running in. Your service can reference them without having to define them. Environment variables are useful for when you want to pass in data to your service that's specific to a particular environment. For example, your test database name versus your production database name. Accessing environment variables is usually simply based on the language you're using. Here are some examples of getting an environment variable called DATABASE_NAME in a few different languages. Go dbName := os . Getenv ( \"DATABASE_NAME\" ) Javascript var dbName = process . env . DATABASE_NAME ; Python database_name = os . getenv ( 'DATABASE_NAME' ) What are the Default Environment Variables? By default, the AWS Copilot CLI passes in some default environment variables for your service to use. COPILOT_APPLICATION_NAME - this is the name of the application this service is running in. COPILOT_ENVIRONMENT_NAME - this is the name of the environment the service is running in (test vs prod, for example) COPILOT_SERVICE_NAME - this is the name of the current service. COPILOT_LB_DNS - this is the DNS name of the Load Balancer (if it exists) such as kudos-Publi-MC2WNHAIOAVS-588300247.us-west-2.elb.amazonaws.com . Note: if you're using a custom domain name, this value will still be the Load Balancer's DNS name. COPILOT_SERVICE_DISCOVERY_ENDPOINT - this is the endpoint to add after a service name to talk to another service in your environment via service discovery. The value is {env name}.{app name}.local . For more information about service discovery, check out our Service Discovery guide . How do I add my own Environment Variables? Adding your own environment variable is easy. You can add them directly to your manifest in the variables section. The following snippet will pass a environment variable called LOG_LEVEL to your service, with the value set to debug . # in copilot/{service name}/manifest.yml variables : LOG_LEVEL : debug You can also pass in a specific value for an environment variable based on the environment. We'll follow the same example as above, by setting the log level, but overriding the value to be info in our production environment. Changes to your manifest take effect when you deploy them, so changing them locally is safe. # in copilot/{service name}/manifest.yml variables : LOG_LEVEL : debug environments : production : variables : LOG_LEVEL : info Here's a quick guide showing you how to add environment variables to your app by editing the manifest \ud83d\udc47 Additionally, if you want to add environment variables in bulk, you can list them in an env file . And then specify its path (from the root of the workspace) in the env_file field of your manifest . You may specify an env file at the root of your workspace for the main container, in any sidecar container definition, or under the logging field to pass an environment file to the Firelens sidecar container. # in copilot/{service name}/manifest.yml env_file : log.env And in log.env we could have #This is a comment and will be ignored LOG_LEVEL=debug LOG_INFO=all In a sidecar definition: sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 In the logging container: logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env How do I know the name of my DynamoDB table, S3 bucket, RDS database, etc? When using the Copilot CLI to provision additional AWS resources such as DynamoDB tables, S3 buckets, databases, etc., any output values will be passed in as environment variables to your app. For more information, check out the additional resources guide .","title":"Container Environment Variables"},{"location":"docs/developing/environment-variables/#environment-variables","text":"Environment variables are variables that are available to your service, based on the environment they're running in. Your service can reference them without having to define them. Environment variables are useful for when you want to pass in data to your service that's specific to a particular environment. For example, your test database name versus your production database name. Accessing environment variables is usually simply based on the language you're using. Here are some examples of getting an environment variable called DATABASE_NAME in a few different languages. Go dbName := os . Getenv ( \"DATABASE_NAME\" ) Javascript var dbName = process . env . DATABASE_NAME ; Python database_name = os . getenv ( 'DATABASE_NAME' )","title":"Environment Variables"},{"location":"docs/developing/environment-variables/#what-are-the-default-environment-variables","text":"By default, the AWS Copilot CLI passes in some default environment variables for your service to use. COPILOT_APPLICATION_NAME - this is the name of the application this service is running in. COPILOT_ENVIRONMENT_NAME - this is the name of the environment the service is running in (test vs prod, for example) COPILOT_SERVICE_NAME - this is the name of the current service. COPILOT_LB_DNS - this is the DNS name of the Load Balancer (if it exists) such as kudos-Publi-MC2WNHAIOAVS-588300247.us-west-2.elb.amazonaws.com . Note: if you're using a custom domain name, this value will still be the Load Balancer's DNS name. COPILOT_SERVICE_DISCOVERY_ENDPOINT - this is the endpoint to add after a service name to talk to another service in your environment via service discovery. The value is {env name}.{app name}.local . For more information about service discovery, check out our Service Discovery guide .","title":"What are the Default Environment Variables?"},{"location":"docs/developing/environment-variables/#how-do-i-add-my-own-environment-variables","text":"Adding your own environment variable is easy. You can add them directly to your manifest in the variables section. The following snippet will pass a environment variable called LOG_LEVEL to your service, with the value set to debug . # in copilot/{service name}/manifest.yml variables : LOG_LEVEL : debug You can also pass in a specific value for an environment variable based on the environment. We'll follow the same example as above, by setting the log level, but overriding the value to be info in our production environment. Changes to your manifest take effect when you deploy them, so changing them locally is safe. # in copilot/{service name}/manifest.yml variables : LOG_LEVEL : debug environments : production : variables : LOG_LEVEL : info Here's a quick guide showing you how to add environment variables to your app by editing the manifest \ud83d\udc47 Additionally, if you want to add environment variables in bulk, you can list them in an env file . And then specify its path (from the root of the workspace) in the env_file field of your manifest . You may specify an env file at the root of your workspace for the main container, in any sidecar container definition, or under the logging field to pass an environment file to the Firelens sidecar container. # in copilot/{service name}/manifest.yml env_file : log.env And in log.env we could have #This is a comment and will be ignored LOG_LEVEL=debug LOG_INFO=all In a sidecar definition: sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 In the logging container: logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env","title":"How do I add my own Environment Variables?"},{"location":"docs/developing/environment-variables/#how-do-i-know-the-name-of-my-dynamodb-table-s3-bucket-rds-database-etc","text":"When using the Copilot CLI to provision additional AWS resources such as DynamoDB tables, S3 buckets, databases, etc., any output values will be passed in as environment variables to your app. For more information, check out the additional resources guide .","title":"How do I know the name of my DynamoDB table, S3 bucket, RDS database, etc?"},{"location":"docs/developing/internal-albs/","text":"Internal Application Load Balancers By default, the ALBs created for environments with Load Balanced Web Services are internet-facing . To create an internal load balancer whose nodes have only private IP addresses, you'll need to configure a few things in your environment and workload. Environment The internal load balancer is an environment-level resource, to be shared among other permitted services. To enable HTTPS for your load balancer, modify the environment manifest to import the ARNs of your existing certificates. If there are no certificates applied to the load balancer, Copilot will associate the load balancer with the http://{env name}.{app name}.internal endpoint and the individual services are reachable at http://{service name}.{env name}.{app name}.internal . // To reach the \"api\" service behind the internal load balancer endpoint := fmt . Sprintf ( \"http://api.%s.%s.internal\" , os . Getenv ( \"COPILOT_ENVIRONMENT_NAME\" ), os . Getenv ( \"COPILOT_APPLICATION_NAME\" )) resp , err := http . Get ( endpoint ) Service The only service type that you can place behind an internal load balancer is a Backend Service . To tell Copilot to generate an internal ALB in the environment in which you deploy this service, add the http field to your Backend Service's workload manifest: # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private If you have an existing internal ALB in the VPC to which your service will be deployed, you may import it per Backend Service by specifying it in your manifest before deployment: http : path : '/' alb : [ name or ARN ] Advanced Configuration Subnet Placement You can specify exactly which private subnets your internal ALB is placed in. When you run copilot env init , use the --internal-alb-subnets flag to pass in the IDs of the subnets in which you'd like the ALB to be placed. Aliases, Health Checks, and More The http field for Backend Services has all the subfields and capabilities that Load Balanced Web Services's http field has. http : path : '/' healthcheck : path : '/_healthcheck' port : 8080 success_codes : '200,301' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 45s deregistration_delay : 5s stickiness : false allowed_source_ips : [ \"10.24.34.0/23\" ] alias : example.com For alias , you may 1. bring your own existing private hosted zone(s), or 2. add your own alias record(s) after deployment, independently of Copilot. You may add a single alias: http : alias : example.com hosted_zone : HostedZoneID1 or multiple aliases that share a hosted zone: http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 or multiple aliases, some of which use the top-level hosted zone: http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2","title":"Internal Load Balancers"},{"location":"docs/developing/internal-albs/#internal-application-load-balancers","text":"By default, the ALBs created for environments with Load Balanced Web Services are internet-facing . To create an internal load balancer whose nodes have only private IP addresses, you'll need to configure a few things in your environment and workload.","title":"Internal Application Load Balancers"},{"location":"docs/developing/internal-albs/#environment","text":"The internal load balancer is an environment-level resource, to be shared among other permitted services. To enable HTTPS for your load balancer, modify the environment manifest to import the ARNs of your existing certificates. If there are no certificates applied to the load balancer, Copilot will associate the load balancer with the http://{env name}.{app name}.internal endpoint and the individual services are reachable at http://{service name}.{env name}.{app name}.internal . // To reach the \"api\" service behind the internal load balancer endpoint := fmt . Sprintf ( \"http://api.%s.%s.internal\" , os . Getenv ( \"COPILOT_ENVIRONMENT_NAME\" ), os . Getenv ( \"COPILOT_APPLICATION_NAME\" )) resp , err := http . Get ( endpoint )","title":"Environment"},{"location":"docs/developing/internal-albs/#service","text":"The only service type that you can place behind an internal load balancer is a Backend Service . To tell Copilot to generate an internal ALB in the environment in which you deploy this service, add the http field to your Backend Service's workload manifest: # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private If you have an existing internal ALB in the VPC to which your service will be deployed, you may import it per Backend Service by specifying it in your manifest before deployment: http : path : '/' alb : [ name or ARN ]","title":"Service"},{"location":"docs/developing/internal-albs/#advanced-configuration","text":"","title":"Advanced Configuration"},{"location":"docs/developing/internal-albs/#subnet-placement","text":"You can specify exactly which private subnets your internal ALB is placed in. When you run copilot env init , use the --internal-alb-subnets flag to pass in the IDs of the subnets in which you'd like the ALB to be placed.","title":"Subnet Placement"},{"location":"docs/developing/internal-albs/#aliases-health-checks-and-more","text":"The http field for Backend Services has all the subfields and capabilities that Load Balanced Web Services's http field has. http : path : '/' healthcheck : path : '/_healthcheck' port : 8080 success_codes : '200,301' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 45s deregistration_delay : 5s stickiness : false allowed_source_ips : [ \"10.24.34.0/23\" ] alias : example.com For alias , you may 1. bring your own existing private hosted zone(s), or 2. add your own alias record(s) after deployment, independently of Copilot. You may add a single alias: http : alias : example.com hosted_zone : HostedZoneID1 or multiple aliases that share a hosted zone: http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 or multiple aliases, some of which use the top-level hosted zone: http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2","title":"Aliases, Health Checks, and More"},{"location":"docs/developing/manifest-env-var/","text":"Environment Variables in the Manifest Shell environment variables It\u2019s possible to use environment variables in your shell to populate values in your manifest files: image : location : id.dkr.ecr.zone.amazonaws.com/project-name:${TAG} Suppose the shell has TAG=version01 , the manifest example will be resolved as image : location : id.dkr.ecr.zone.amazonaws.com/project-name:version01 When Copilot defines the container, it will use the image located at id.dkr.ecr.zone.amazonaws.com/project-name and with tag version01 . It is also possible to interpolate Array of Strings , from environment variables in your manifest files: network : vpc : security_groups : ${SECURITY_GROUPS} Suppose the shell has SECURITY_GROUPS=[\"sg-06b511534b8fa8bbb\",\"sg-06b511534b8fa8bbb\",\"sg-0e921ad50faae7777\"] , the manifest example will be resolved as network : vpc : security_groups : - sg-06b511534b8fa8bbb - sg-06b511534b8fa8bbb - sg-0e921ad50faae7777 Info At this moment, you can only substitute shell environment variables for fields that accept strings, including String (e.g., image.location ), Array of Strings (e.g., entrypoint ), or Map where the value type is String or Array of Strings (e.g., secrets ). Predefined variables Predefined variables are reserved variables that will be resolved by Copilot when interpreting the manifest. Currently, available predefined environment variables include: COPILOT_APPLICATION_NAME COPILOT_ENVIRONMENT_NAME secrets : DB_PASSWORD : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password Copilot will substitute ${COPILOT_APPLICATION_NAME} and ${COPILOT_ENVIRONMENT_NAME} with the names of the application and the environment where the workload is deployed. For example, when you run $ copilot svc deploy --app my-app --env test to deploy the service to the test environment in your my-app application, Copilot will resolve /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password to /copilot/my-app/test/secrets/db_password . (For more information of secret injection, see here ). Escaping If variable substitution is undesired, add a leading backslash: command : echo hello \\${name} # or command: \"echo \\\\${name}\" variable : name : world In this case Copilot will not attempt to substitute ${name} with the value of the environment variable name .","title":"Manifest Environment Variables"},{"location":"docs/developing/manifest-env-var/#environment-variables-in-the-manifest","text":"","title":"Environment Variables in the Manifest"},{"location":"docs/developing/manifest-env-var/#shell-environment-variables","text":"It\u2019s possible to use environment variables in your shell to populate values in your manifest files: image : location : id.dkr.ecr.zone.amazonaws.com/project-name:${TAG} Suppose the shell has TAG=version01 , the manifest example will be resolved as image : location : id.dkr.ecr.zone.amazonaws.com/project-name:version01 When Copilot defines the container, it will use the image located at id.dkr.ecr.zone.amazonaws.com/project-name and with tag version01 . It is also possible to interpolate Array of Strings , from environment variables in your manifest files: network : vpc : security_groups : ${SECURITY_GROUPS} Suppose the shell has SECURITY_GROUPS=[\"sg-06b511534b8fa8bbb\",\"sg-06b511534b8fa8bbb\",\"sg-0e921ad50faae7777\"] , the manifest example will be resolved as network : vpc : security_groups : - sg-06b511534b8fa8bbb - sg-06b511534b8fa8bbb - sg-0e921ad50faae7777 Info At this moment, you can only substitute shell environment variables for fields that accept strings, including String (e.g., image.location ), Array of Strings (e.g., entrypoint ), or Map where the value type is String or Array of Strings (e.g., secrets ).","title":"Shell environment variables"},{"location":"docs/developing/manifest-env-var/#predefined-variables","text":"Predefined variables are reserved variables that will be resolved by Copilot when interpreting the manifest. Currently, available predefined environment variables include: COPILOT_APPLICATION_NAME COPILOT_ENVIRONMENT_NAME secrets : DB_PASSWORD : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password Copilot will substitute ${COPILOT_APPLICATION_NAME} and ${COPILOT_ENVIRONMENT_NAME} with the names of the application and the environment where the workload is deployed. For example, when you run $ copilot svc deploy --app my-app --env test to deploy the service to the test environment in your my-app application, Copilot will resolve /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password to /copilot/my-app/test/secrets/db_password . (For more information of secret injection, see here ).","title":"Predefined variables"},{"location":"docs/developing/manifest-env-var/#escaping","text":"If variable substitution is undesired, add a leading backslash: command : echo hello \\${name} # or command: \"echo \\\\${name}\" variable : name : world In this case Copilot will not attempt to substitute ${name} with the value of the environment variable name .","title":"Escaping"},{"location":"docs/developing/observability/","text":"Observability Getting Started Copilot can configure trace collection for services by setting the following in a manifest: observability : tracing : awsxray For Request-Driven Web Services , Copilot will enable App Runner's baked-in tracing configuration . For Load-Balanced Web Services , Backend Services , and Worker Services , Copilot will deploy the AWS OpenTelemetry Collector as a sidecar . Instrumenting Your Service Instrumenting your service to send telemetry data is done through language specific SDKs . Examples are provided in OpenTelemetry's documentation for each supported language. You can also view documentation and examples provided by AWS Distro for OpenTelemetry . Example Application This is a small Express.js service with instrumentation configured for all of its endpoints. To get started, install the required depedencies: npm install express \\ @opentelemetry/api \\ @opentelemetry/sdk-trace-node \\ @opentelemetry/auto-instrumentations-node \\ @opentelemetry/exporter-trace-otlp-grpc \\ @opentelemetry/id-generator-aws-xray \\ @opentelemetry/propagator-aws-xray Then, save the following to tracer.js : tracer.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 const { BatchSpanProcessor } = require ( \"@opentelemetry/sdk-trace-base\" ); const { Resource } = require ( \"@opentelemetry/resources\" ); const { trace } = require ( \"@opentelemetry/api\" ); const { AWSXRayIdGenerator } = require ( \"@opentelemetry/id-generator-aws-xray\" ); const { SemanticResourceAttributes } = require ( \"@opentelemetry/semantic-conventions\" ); const { NodeTracerProvider } = require ( \"@opentelemetry/sdk-trace-node\" ); const { AWSXRayPropagator } = require ( \"@opentelemetry/propagator-aws-xray\" ); const { OTLPTraceExporter } = require ( \"@opentelemetry/exporter-trace-otlp-grpc\" ); const { getNodeAutoInstrumentations } = require ( \"@opentelemetry/auto-instrumentations-node\" ); module . exports = ( serviceName ) => { const tracerConfig = { idGenerator : new AWSXRayIdGenerator (), instrumentations : [ getNodeAutoInstrumentations ()], resource : Resource . default (). merge ( new Resource ({ [ SemanticResourceAttributes . SERVICE_NAME ] : serviceName , }) ), }; const tracerProvider = new NodeTracerProvider ( tracerConfig ); const otlpExporter = new OTLPTraceExporter (); tracerProvider . addSpanProcessor ( new BatchSpanProcessor ( otlpExporter )); tracerProvider . register ({ propagator : new AWSXRayPropagator (), }); return trace . getTracer ( \"example-instrumentation\" ); }; tracer.js exports a function that returns a tracer configured to automatically export traces from an Express.js server using OpenTelemetry Protocol . We'll use this function in app.js , passing in a service name, copilot-observability . app.js 1 2 3 4 5 6 7 8 9 10 11 12 'use strict' ; const tracer = require ( './tracer' )( 'copilot-observability' ); const app = require ( \"express\" )(); const port = 8080 ; app . get ( \"/\" , ( req , res ) => { res . send ( \"Hello World\" ); }); app . listen ( port , () => { console . log ( `Listening for requests on http://localhost: ${ port } ` ); }); Now, if you deploy this service using Copilot and enable observability in the manifest, you'll be able to see traces generated by this service! Including Trace Logs Attention This section is not applicable to Request-Driven Web Services Because Copilot configures the ECS resource detector on the collector, traces generated by your service will include the log group your service is logging to. If you include the trace ID in your logs, logs associated with a trace will show up along with the trace in X-Ray. This can be helpful for understanding and debugging a trace. X-Ray formats their trace IDs a little differently than OpenTelemetry , so you'll need a function like this to take an OpenTelemetry trace ID and format it for X-Ray: function getXRayTraceId ( span ) { const id = span . spanContext (). traceId ; if ( id . length < 9 ) { return id ; } return \"1-\" + id . substring ( 0 , 8 ) + \"-\" + id . substring ( 8 ); } Then, you can include the X-Ray trace ID in your logs like so: console . log ( \"[%s] A useful log message\" , getXRayTraceId ( span )); Viewing Traces in CloudWatch After you have instrumented your service and deployed it using Copilot, you're ready to view traces from your service! Depending on how you've instrumented your service, you will likely need to send a few requests to it before traces will appear in the AWS console. First, open the CloudWatch console, and click on X-Ray traces/Service map in the menu. Here you can see a visual map of services interacting: Next, you can view details of a specific trace by clicking on X-Ray traces/Traces in the menu and selecting a trace from the list. In this example, you can see a service, js-copilot-observability , running some internal Express.js middleware, and then using the AWS SDK for Javascript to call s3:listBuckets :","title":"Observability"},{"location":"docs/developing/observability/#observability","text":"","title":"Observability"},{"location":"docs/developing/observability/#getting-started","text":"Copilot can configure trace collection for services by setting the following in a manifest: observability : tracing : awsxray For Request-Driven Web Services , Copilot will enable App Runner's baked-in tracing configuration . For Load-Balanced Web Services , Backend Services , and Worker Services , Copilot will deploy the AWS OpenTelemetry Collector as a sidecar .","title":"Getting Started"},{"location":"docs/developing/observability/#instrumenting-your-service","text":"Instrumenting your service to send telemetry data is done through language specific SDKs . Examples are provided in OpenTelemetry's documentation for each supported language. You can also view documentation and examples provided by AWS Distro for OpenTelemetry .","title":"Instrumenting Your Service"},{"location":"docs/developing/observability/#example-application","text":"This is a small Express.js service with instrumentation configured for all of its endpoints. To get started, install the required depedencies: npm install express \\ @opentelemetry/api \\ @opentelemetry/sdk-trace-node \\ @opentelemetry/auto-instrumentations-node \\ @opentelemetry/exporter-trace-otlp-grpc \\ @opentelemetry/id-generator-aws-xray \\ @opentelemetry/propagator-aws-xray Then, save the following to tracer.js : tracer.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 const { BatchSpanProcessor } = require ( \"@opentelemetry/sdk-trace-base\" ); const { Resource } = require ( \"@opentelemetry/resources\" ); const { trace } = require ( \"@opentelemetry/api\" ); const { AWSXRayIdGenerator } = require ( \"@opentelemetry/id-generator-aws-xray\" ); const { SemanticResourceAttributes } = require ( \"@opentelemetry/semantic-conventions\" ); const { NodeTracerProvider } = require ( \"@opentelemetry/sdk-trace-node\" ); const { AWSXRayPropagator } = require ( \"@opentelemetry/propagator-aws-xray\" ); const { OTLPTraceExporter } = require ( \"@opentelemetry/exporter-trace-otlp-grpc\" ); const { getNodeAutoInstrumentations } = require ( \"@opentelemetry/auto-instrumentations-node\" ); module . exports = ( serviceName ) => { const tracerConfig = { idGenerator : new AWSXRayIdGenerator (), instrumentations : [ getNodeAutoInstrumentations ()], resource : Resource . default (). merge ( new Resource ({ [ SemanticResourceAttributes . SERVICE_NAME ] : serviceName , }) ), }; const tracerProvider = new NodeTracerProvider ( tracerConfig ); const otlpExporter = new OTLPTraceExporter (); tracerProvider . addSpanProcessor ( new BatchSpanProcessor ( otlpExporter )); tracerProvider . register ({ propagator : new AWSXRayPropagator (), }); return trace . getTracer ( \"example-instrumentation\" ); }; tracer.js exports a function that returns a tracer configured to automatically export traces from an Express.js server using OpenTelemetry Protocol . We'll use this function in app.js , passing in a service name, copilot-observability . app.js 1 2 3 4 5 6 7 8 9 10 11 12 'use strict' ; const tracer = require ( './tracer' )( 'copilot-observability' ); const app = require ( \"express\" )(); const port = 8080 ; app . get ( \"/\" , ( req , res ) => { res . send ( \"Hello World\" ); }); app . listen ( port , () => { console . log ( `Listening for requests on http://localhost: ${ port } ` ); }); Now, if you deploy this service using Copilot and enable observability in the manifest, you'll be able to see traces generated by this service!","title":"Example Application"},{"location":"docs/developing/observability/#including-trace-logs","text":"Attention This section is not applicable to Request-Driven Web Services Because Copilot configures the ECS resource detector on the collector, traces generated by your service will include the log group your service is logging to. If you include the trace ID in your logs, logs associated with a trace will show up along with the trace in X-Ray. This can be helpful for understanding and debugging a trace. X-Ray formats their trace IDs a little differently than OpenTelemetry , so you'll need a function like this to take an OpenTelemetry trace ID and format it for X-Ray: function getXRayTraceId ( span ) { const id = span . spanContext (). traceId ; if ( id . length < 9 ) { return id ; } return \"1-\" + id . substring ( 0 , 8 ) + \"-\" + id . substring ( 8 ); } Then, you can include the X-Ray trace ID in your logs like so: console . log ( \"[%s] A useful log message\" , getXRayTraceId ( span ));","title":"Including Trace Logs"},{"location":"docs/developing/observability/#viewing-traces-in-cloudwatch","text":"After you have instrumented your service and deployed it using Copilot, you're ready to view traces from your service! Depending on how you've instrumented your service, you will likely need to send a few requests to it before traces will appear in the AWS console. First, open the CloudWatch console, and click on X-Ray traces/Service map in the menu. Here you can see a visual map of services interacting: Next, you can view details of a specific trace by clicking on X-Ray traces/Traces in the menu and selecting a trace from the list. In this example, you can see a service, js-copilot-observability , running some internal Express.js middleware, and then using the AWS SDK for Javascript to call s3:listBuckets :","title":"Viewing Traces in CloudWatch"},{"location":"docs/developing/publish-subscribe/","text":"Publish/Subscribe Architectures Copilot Worker Services take advantage of the publish field common to all service and job types to allow customers to easily create publish/subscribe logic for passing messages between services. A common pattern in AWS is the combination of SNS and SQS to deliver and process messages. SNS is a robust message delivery system which can send messages to a variety of subscribed endpoints with guarantees about message delivery. SQS is a message queue to allow asynchronous processing of messages. Queues can be populated by one or more SNS topics or AWS EventBridge event filters. The combination of these two services effectively decouples the sending and receipt of messages, meaning publishers don't have to care what queues are actually subscribed to their topics, and worker service code doesn't have to care where the messages come from. Sending Messages from a Publisher To allow an existing service to publish messages to SNS, simply set the publish field in its manifest. We suggest using a name for the topic that describes its function. # manifest.yml for api service name : api type : Backend Service publish : topics : - name : ordersTopic This will create an SNS topic and set a resource policy on the topic to allow SQS queues in your AWS account to create subscriptions. Copilot also injects the ARNs of any SNS topics into your container under the environment variable COPILOT_SNS_TOPIC_ARNS . The JSON string is of the format: { \"firstTopicName\" : \"arn:aws:sns:us-east-1:123456789012:firstTopic\" , \"secondTopicName\" : \"arn:aws:sns:us-east-1:123456789012:secondTopic\" , } Javascript Example Once the publishing service has been deployed, you can send messages to SNS via the AWS SDK for SNS. const { SNSClient , PublishCommand } = require ( \"@aws-sdk/client-sns\" ); const client = new SNSClient ({ region : \"us-west-2\" }); const { ordersTopic } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ); const out = await client . send ( new PublishCommand ({ Message : \"hello\" , TopicArn : ordersTopic , })); Subscribing to a topic with a Worker Service To subscribe to an existing SNS topic with a worker service, you'll need to edit the worker service's manifest. Using the subscribe field in the manifest, you can define subscriptions to existing SNS topics exposed by other services in your environment. In this example, we'll use the ordersTopic topic which the api service from the last section exposed. We'll also customize the worker service's queue to enable a dead-letter queue. The tries field tells SQS how many times to try redelivering a failed message before sending it to the DLQ for further inspection. name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 Copilot will create a subscription between this worker service's queue and the ordersTopic topic from the api service. It will also inject the queue URI into the service container under the environment variable COPILOT_QUEUE_URI . If you specify one or more topic-specific queues, you can access those queue URIs via the COPILOT_TOPIC_QUEUE_URIS variable. This variable is a JSON map from a unique identifier for the topic-specific queue to its URI. For example, a worker service with a topic-specific queue for the orders topic from the merchant service and a FIFO topic transactions from the merchant service will have the following JSON structure. // COPILOT_TOPIC_QUEUE_URIS { \"merchantOrdersEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" , \"merchantTransactionsfifoEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" } Javascript Example The central business logic of a worker service's container involves pulling messages from the queue. To do this with the AWS SDK, you can use the SQS Clients for your language of choice. In Javascript, the logic for pulling, processing, and deleting messages from the queue would look like the following code snipped. const { SQSClient , ReceiveMessageCommand , DeleteMessageCommand } = require ( \"@aws-sdk/client-sqs\" ); const client = new SQSClient ({ region : \"us-west-2\" }); const out = await client . send ( new ReceiveMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , WaitTimeSeconds : 10 , })); console . log ( `results: ${ JSON . stringify ( out ) } ` ); if ( out . Messages === undefined || out . Messages . length === 0 ) { return ; } // Process the message here. await client . send ( new DeleteMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , ReceiptHandle : out . Messages [ 0 ]. ReceiptHandle , }));","title":"Publish/Subscribe"},{"location":"docs/developing/publish-subscribe/#publishsubscribe-architectures","text":"Copilot Worker Services take advantage of the publish field common to all service and job types to allow customers to easily create publish/subscribe logic for passing messages between services. A common pattern in AWS is the combination of SNS and SQS to deliver and process messages. SNS is a robust message delivery system which can send messages to a variety of subscribed endpoints with guarantees about message delivery. SQS is a message queue to allow asynchronous processing of messages. Queues can be populated by one or more SNS topics or AWS EventBridge event filters. The combination of these two services effectively decouples the sending and receipt of messages, meaning publishers don't have to care what queues are actually subscribed to their topics, and worker service code doesn't have to care where the messages come from.","title":"Publish/Subscribe Architectures"},{"location":"docs/developing/publish-subscribe/#sending-messages-from-a-publisher","text":"To allow an existing service to publish messages to SNS, simply set the publish field in its manifest. We suggest using a name for the topic that describes its function. # manifest.yml for api service name : api type : Backend Service publish : topics : - name : ordersTopic This will create an SNS topic and set a resource policy on the topic to allow SQS queues in your AWS account to create subscriptions. Copilot also injects the ARNs of any SNS topics into your container under the environment variable COPILOT_SNS_TOPIC_ARNS . The JSON string is of the format: { \"firstTopicName\" : \"arn:aws:sns:us-east-1:123456789012:firstTopic\" , \"secondTopicName\" : \"arn:aws:sns:us-east-1:123456789012:secondTopic\" , }","title":"Sending Messages from a Publisher"},{"location":"docs/developing/publish-subscribe/#javascript-example","text":"Once the publishing service has been deployed, you can send messages to SNS via the AWS SDK for SNS. const { SNSClient , PublishCommand } = require ( \"@aws-sdk/client-sns\" ); const client = new SNSClient ({ region : \"us-west-2\" }); const { ordersTopic } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ); const out = await client . send ( new PublishCommand ({ Message : \"hello\" , TopicArn : ordersTopic , }));","title":"Javascript Example"},{"location":"docs/developing/publish-subscribe/#subscribing-to-a-topic-with-a-worker-service","text":"To subscribe to an existing SNS topic with a worker service, you'll need to edit the worker service's manifest. Using the subscribe field in the manifest, you can define subscriptions to existing SNS topics exposed by other services in your environment. In this example, we'll use the ordersTopic topic which the api service from the last section exposed. We'll also customize the worker service's queue to enable a dead-letter queue. The tries field tells SQS how many times to try redelivering a failed message before sending it to the DLQ for further inspection. name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 Copilot will create a subscription between this worker service's queue and the ordersTopic topic from the api service. It will also inject the queue URI into the service container under the environment variable COPILOT_QUEUE_URI . If you specify one or more topic-specific queues, you can access those queue URIs via the COPILOT_TOPIC_QUEUE_URIS variable. This variable is a JSON map from a unique identifier for the topic-specific queue to its URI. For example, a worker service with a topic-specific queue for the orders topic from the merchant service and a FIFO topic transactions from the merchant service will have the following JSON structure. // COPILOT_TOPIC_QUEUE_URIS { \"merchantOrdersEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" , \"merchantTransactionsfifoEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" }","title":"Subscribing to a topic with a Worker Service"},{"location":"docs/developing/publish-subscribe/#javascript-example_1","text":"The central business logic of a worker service's container involves pulling messages from the queue. To do this with the AWS SDK, you can use the SQS Clients for your language of choice. In Javascript, the logic for pulling, processing, and deleting messages from the queue would look like the following code snipped. const { SQSClient , ReceiveMessageCommand , DeleteMessageCommand } = require ( \"@aws-sdk/client-sqs\" ); const client = new SQSClient ({ region : \"us-west-2\" }); const out = await client . send ( new ReceiveMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , WaitTimeSeconds : 10 , })); console . log ( `results: ${ JSON . stringify ( out ) } ` ); if ( out . Messages === undefined || out . Messages . length === 0 ) { return ; } // Process the message here. await client . send ( new DeleteMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , ReceiptHandle : out . Messages [ 0 ]. ReceiptHandle , }));","title":"Javascript Example"},{"location":"docs/developing/secrets/","text":"Secrets Secrets are sensitive bits of information like OAuth tokens, secret keys or API keys - information that you need in your application code, but shouldn't commit to your source code. In the AWS Copilot CLI, secrets are passed in as environment variables (read more about developing with environment variables ), but they're treated differently due to their sensitive nature. How do I add Secrets? Adding secrets requires you to store your secret in AWS Systems Manager Parameter Store (SSM) or in AWS Secrets Manager , then add a reference to the secret in your manifest . You can easily create a secret in SSM as a SecureString using copilot secret init ! Bring Your Own Secrets In SSM If you want to bring your own secrets, be sure to add two tags to your secrets: Key Value copilot-application Application name from which you want to access the secret copilot-environment Environment name from which you want to access the secret Copilot requires the copilot-application and copilot-environment tags to limit access to this secret. Suppose you have a (properly tagged!) SSM parameter named GH_WEBHOOK_SECRET with value secretvalue1234 . You can modify your manifest file to pass in this value: secrets : GITHUB_WEBHOOK_SECRET : GH_WEBHOOK_SECRET Once you deploy this updated manifest, your service or job will be able to access the environment variable GITHUB_WEBHOOK_SECRET , which will have the value of the SSM parameter GH_WEBHOOK_SECRET , secretvalue1234 . This works because ECS Agent will resolve the SSM parameter when it starts up your task, and set the environment variable for you. In Secrets Manager Similar to SSM, first ensure that your Secrets Manager secret has the copilot-application and copilot-environment tags. Suppose you have a Secrets Manager secret with the following configuration: Field Value Name mysql ARN arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL Value {\"engine\": \"mysql\",\"username\": \"user1\",\"password\": \"i29wwX!%9wFV\",\"host\": \"my-database-endpoint.us-east-1.rds.amazonaws.com\",\"dbname\": \"myDatabase\",\"port\": \"3306\" } Tags copilot-application=demo , copilot-environment=test You can modify your manifest file with: secrets : # Option 1. Referring to the secret by name. DB : secretsmanager : 'mysql' # You can refer to a specific key in the JSON blob. DB_PASSWORD : secretsmanager : 'mysql:password::' # Option 2. Alternatively, you can refer to the secret by ARN. DB : \"'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL'\"","title":"Secrets"},{"location":"docs/developing/secrets/#secrets","text":"Secrets are sensitive bits of information like OAuth tokens, secret keys or API keys - information that you need in your application code, but shouldn't commit to your source code. In the AWS Copilot CLI, secrets are passed in as environment variables (read more about developing with environment variables ), but they're treated differently due to their sensitive nature.","title":"Secrets"},{"location":"docs/developing/secrets/#how-do-i-add-secrets","text":"Adding secrets requires you to store your secret in AWS Systems Manager Parameter Store (SSM) or in AWS Secrets Manager , then add a reference to the secret in your manifest . You can easily create a secret in SSM as a SecureString using copilot secret init !","title":"How do I add Secrets?"},{"location":"docs/developing/secrets/#bring-your-own-secrets","text":"","title":"Bring Your Own Secrets"},{"location":"docs/developing/secrets/#in-ssm","text":"If you want to bring your own secrets, be sure to add two tags to your secrets: Key Value copilot-application Application name from which you want to access the secret copilot-environment Environment name from which you want to access the secret Copilot requires the copilot-application and copilot-environment tags to limit access to this secret. Suppose you have a (properly tagged!) SSM parameter named GH_WEBHOOK_SECRET with value secretvalue1234 . You can modify your manifest file to pass in this value: secrets : GITHUB_WEBHOOK_SECRET : GH_WEBHOOK_SECRET Once you deploy this updated manifest, your service or job will be able to access the environment variable GITHUB_WEBHOOK_SECRET , which will have the value of the SSM parameter GH_WEBHOOK_SECRET , secretvalue1234 . This works because ECS Agent will resolve the SSM parameter when it starts up your task, and set the environment variable for you.","title":"In SSM"},{"location":"docs/developing/secrets/#in-secrets-manager","text":"Similar to SSM, first ensure that your Secrets Manager secret has the copilot-application and copilot-environment tags. Suppose you have a Secrets Manager secret with the following configuration: Field Value Name mysql ARN arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL Value {\"engine\": \"mysql\",\"username\": \"user1\",\"password\": \"i29wwX!%9wFV\",\"host\": \"my-database-endpoint.us-east-1.rds.amazonaws.com\",\"dbname\": \"myDatabase\",\"port\": \"3306\" } Tags copilot-application=demo , copilot-environment=test You can modify your manifest file with: secrets : # Option 1. Referring to the secret by name. DB : secretsmanager : 'mysql' # You can refer to a specific key in the JSON blob. DB_PASSWORD : secretsmanager : 'mysql:password::' # Option 2. Alternatively, you can refer to the secret by ARN. DB : \"'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL'\"","title":"In Secrets Manager"},{"location":"docs/developing/sidecars/","text":"Sidecars Sidecars are additional containers that run along side the main container. They are usually used to perform peripheral tasks such as logging, configuration, or proxying requests. Attention Sidecars are not supported for Request-Driven Web Services. Attention If your main container is using a Windows image, FireLens , AWS X-Ray , and AWS App Mesh are not supported. Please check if your sidecar container supports Windows. AWS also provides some plugin options that can be seamlessly incorporated with your ECS service, including but not limited to FireLens , AWS X-Ray , and AWS App Mesh . If you have defined an EFS volume for your main container through the storage field in the manifest, you can also mount that volume in any sidecar containers you have defined. How to add sidecars with Copilot? There are two ways of adding sidecars using the Copilot manifest: by specifying general sidecars or by using sidecar patterns . General sidecars You'll need to provide the URL for the sidecar image. Optionally, you can specify the port you'd like to expose and the credential parameter for private registry . port Integer Port of the container to expose (optional). image String or Map Image URL for the sidecar container (required). image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. essential Bool Whether the sidecar container is an essential container (optional, default true). credentialsParameter String ARN of the secret containing the private repository credentials (optional). variables Map Environment variables for the sidecar container (optional) secrets Map Secrets to expose to the sidecar container (optional) env_file String The path to a file from the root of your workspace containing the environment variables to pass to the sidecar container. For more information about the environment variable file, see Considerations for specifying environment variable files . mount_points Array of Maps Mount paths for EFS volumes specified at the service level (optional). mount_points. source_volume String Source volume to mount in this sidecar (required). mount_points. path String The path inside the sidecar container at which to mount the volume (required). mount_points. read_only Boolean Whether to allow the sidecar read-only access to the volume (default true). labels Map Docker labels to apply to this container (optional). depends_on Map Container dependencies to apply to this container (optional). entrypoint String or Array of Strings Override the default entrypoint in the sidecar. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings Override the default command in the sidecar. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ] healthcheck Map Optional configuration for sidecar container health checks. healthcheck. command Array of Strings The command to run to determine if the sidecar container is healthy. The string array can start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell. healthcheck. interval Duration Time period between health checks, in seconds. Default is 10s. healthcheck. retries Integer Number of times to retry before container is deemed unhealthy. Default is 2. healthcheck. timeout Duration How long to wait before considering the health check failed, in seconds. Default is 5s. healthcheck. start_period Duration Length of grace period for containers to bootstrap before failed health checks count towards the maximum number of retries. Default is 0s. Example Sidecars with environment overrides Similar to other service/job manifest fields, sidecars configurations can be overridden per-environment via the environments field. Below is an example that configures the value for the DD_APM_ENABLED environment variable of the datadog sidecar, based on whether it is dev environment: name : api type : Load Balanced Web Service sidecars : datadog : port : 80 image : build : src/reverseproxy/Dockerfile variables : DD_APM_ENABLED : true environments : dev : sidecars : datadog : variables : DD_APM_ENABLED : false nginx sidecar container Below is an example of specifying the nginx sidecar container in a load balanced web service manifest. name : api type : Load Balanced Web Service image : build : api/Dockerfile port : 3000 http : path : 'api' healthcheck : '/api/health-check' # Target container for Load Balancer is our sidecar 'nginx', instead of the service container. target_container : 'nginx' cpu : 256 memory : 512 count : 1 sidecars : nginx : port : 80 image : build : src/reverseproxy/Dockerfile variables : NGINX_PORT : 80 EFS volume in both the service and sidecar container storage : volumes : myEFSVolume : path : '/etc/mount1' read_only : false efs : id : fs-1234567 sidecars : nginx : port : 80 image : 1234567890.dkr.ecr.us-west-2.amazonaws.com/reverse-proxy:revision_1 variables : NGINX_PORT : 80 mount_points : - source_volume : myEFSVolume path : '/etc/mount1' AWS Distro for OpenTelemetry sidecar Below is an example of running the AWS Distro for OpenTelemetry sidecar with a custom configuration. The example custom configuration will not only collect X-Ray trace data, but also ship ECS metrics to a third party. The example will require an SSM secret and additional IAM permissions. To use the OpenTelemetry sidecar, first, create a valid configuration file . Next, check the size of the configuration file. A standard parameter is limited to 4KB . If the configuration file is larger than 4K, an advanced SSM parameter must be used. If an advanced parameter is required, it will need to be created and tagged manually. If the configuration fits within a standard parameter, create an SSM secret using the secret init . The YAML document below can be used as-is with New Relic after updating the API key written as \"YOUR-API-KEY-HERE\". In the example YAML, the inclusion of empty keys is deliberate. The sidecar will use the collector defaults for those keys. receivers : awsxray : transport : udp awsecscontainermetrics : processors : batch : exporters : awsxray : region : us-west-2 otlp : endpoint : otlp.nr-data.net:4317 headers : api-key : YOUR-API-KEY-HERE service : pipelines : traces : receivers : [ awsxray ] processors : [ batch ] exporters : [ awsxray ] metrics : receivers : [ awsecscontainermetrics ] exporters : [ otlp ] Writing X-Ray traces needs additional IAM permissions as shown below. Include this in addons according to the published documentation Resources : XrayWritePolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : CopyOfAWSXRayDaemonWriteAccess Effect : Allow Action : - xray:PutTraceSegments - xray:PutTelemetryRecords - xray:GetSamplingRules - xray:GetSamplingTargets - xray:GetSamplingStatisticSummaries Resource : \"*\" Outputs : XrayAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref XrayWritePolicy The configuration for the OpenTelemetry collector will be passed into the sidecar as an environment variable. sidecars : otel_sidecar : image : 'public.ecr.aws/aws-observability/aws-otel-collector:latest' secrets : AOT_CONFIG_CONTENT : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/otel_config Sidecar patterns Sidecar patterns are predefined Copilot sidecar configurations. For now, the only supported pattern is FireLens, but we'll add more in the future! # In the manifest. logging : # The Fluent Bit image. (Optional, we'll use \"public.ecr.aws/aws-observability/aws-for-fluent-bit:stable\" by default) image : <image URL> # The configuration options to send to the FireLens log driver. (Optional) destination : <config key> : <config value> # Whether to include ECS metadata in logs. (Optional, default to true) enableMetadata : <true|false> # Secret to pass to the log configuration. (Optional) secretOptions : <key> : <value> # The full config file path in your custom Fluent Bit image. (Optional) configFilePath : <config file path> # Environment variables for the sidecar container. (Optional) variables : <key> : <value> # Secrets to expose to the sidecar container. (Optional) secrets : <key> : <value> For example: logging : destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/sidecar-test-hello log_stream_prefix : copilot/ You might need to add necessary permissions to the task role so that FireLens can forward your data. You can add permissions by specifying them in your addons . For example: Resources : FireLensPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Effect : Allow Action : - logs:CreateLogStream - logs:CreateLogGroup - logs:DescribeLogStreams - logs:PutLogEvents Resource : \"<resource ARN>\" Outputs : FireLensPolicyArn : Description : An addon ManagedPolicy gets used by the ECS task role Value : !Ref FireLensPolicy Info Since the FireLens log driver can route your main container's logs to various destinations, the svc logs command can track them only when they are sent to the log group we create for your Copilot service in CloudWatch.","title":"Sidecars"},{"location":"docs/developing/sidecars/#sidecars","text":"Sidecars are additional containers that run along side the main container. They are usually used to perform peripheral tasks such as logging, configuration, or proxying requests. Attention Sidecars are not supported for Request-Driven Web Services. Attention If your main container is using a Windows image, FireLens , AWS X-Ray , and AWS App Mesh are not supported. Please check if your sidecar container supports Windows. AWS also provides some plugin options that can be seamlessly incorporated with your ECS service, including but not limited to FireLens , AWS X-Ray , and AWS App Mesh . If you have defined an EFS volume for your main container through the storage field in the manifest, you can also mount that volume in any sidecar containers you have defined.","title":"Sidecars"},{"location":"docs/developing/sidecars/#how-to-add-sidecars-with-copilot","text":"There are two ways of adding sidecars using the Copilot manifest: by specifying general sidecars or by using sidecar patterns .","title":"How to add sidecars with Copilot?"},{"location":"docs/developing/sidecars/#general-sidecars","text":"You'll need to provide the URL for the sidecar image. Optionally, you can specify the port you'd like to expose and the credential parameter for private registry . port Integer Port of the container to expose (optional). image String or Map Image URL for the sidecar container (required). image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. essential Bool Whether the sidecar container is an essential container (optional, default true). credentialsParameter String ARN of the secret containing the private repository credentials (optional). variables Map Environment variables for the sidecar container (optional) secrets Map Secrets to expose to the sidecar container (optional) env_file String The path to a file from the root of your workspace containing the environment variables to pass to the sidecar container. For more information about the environment variable file, see Considerations for specifying environment variable files . mount_points Array of Maps Mount paths for EFS volumes specified at the service level (optional). mount_points. source_volume String Source volume to mount in this sidecar (required). mount_points. path String The path inside the sidecar container at which to mount the volume (required). mount_points. read_only Boolean Whether to allow the sidecar read-only access to the volume (default true). labels Map Docker labels to apply to this container (optional). depends_on Map Container dependencies to apply to this container (optional). entrypoint String or Array of Strings Override the default entrypoint in the sidecar. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings Override the default command in the sidecar. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ] healthcheck Map Optional configuration for sidecar container health checks. healthcheck. command Array of Strings The command to run to determine if the sidecar container is healthy. The string array can start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell. healthcheck. interval Duration Time period between health checks, in seconds. Default is 10s. healthcheck. retries Integer Number of times to retry before container is deemed unhealthy. Default is 2. healthcheck. timeout Duration How long to wait before considering the health check failed, in seconds. Default is 5s. healthcheck. start_period Duration Length of grace period for containers to bootstrap before failed health checks count towards the maximum number of retries. Default is 0s.","title":"General sidecars"},{"location":"docs/developing/sidecars/#example","text":"","title":"Example"},{"location":"docs/developing/sidecars/#sidecars-with-environment-overrides","text":"Similar to other service/job manifest fields, sidecars configurations can be overridden per-environment via the environments field. Below is an example that configures the value for the DD_APM_ENABLED environment variable of the datadog sidecar, based on whether it is dev environment: name : api type : Load Balanced Web Service sidecars : datadog : port : 80 image : build : src/reverseproxy/Dockerfile variables : DD_APM_ENABLED : true environments : dev : sidecars : datadog : variables : DD_APM_ENABLED : false","title":"Sidecars with environment overrides"},{"location":"docs/developing/sidecars/#nginx-sidecar-container","text":"Below is an example of specifying the nginx sidecar container in a load balanced web service manifest. name : api type : Load Balanced Web Service image : build : api/Dockerfile port : 3000 http : path : 'api' healthcheck : '/api/health-check' # Target container for Load Balancer is our sidecar 'nginx', instead of the service container. target_container : 'nginx' cpu : 256 memory : 512 count : 1 sidecars : nginx : port : 80 image : build : src/reverseproxy/Dockerfile variables : NGINX_PORT : 80","title":"nginx sidecar container"},{"location":"docs/developing/sidecars/#efs-volume-in-both-the-service-and-sidecar-container","text":"storage : volumes : myEFSVolume : path : '/etc/mount1' read_only : false efs : id : fs-1234567 sidecars : nginx : port : 80 image : 1234567890.dkr.ecr.us-west-2.amazonaws.com/reverse-proxy:revision_1 variables : NGINX_PORT : 80 mount_points : - source_volume : myEFSVolume path : '/etc/mount1'","title":"EFS volume in both the service and sidecar container"},{"location":"docs/developing/sidecars/#aws-distro-for-opentelemetry-sidecar","text":"Below is an example of running the AWS Distro for OpenTelemetry sidecar with a custom configuration. The example custom configuration will not only collect X-Ray trace data, but also ship ECS metrics to a third party. The example will require an SSM secret and additional IAM permissions. To use the OpenTelemetry sidecar, first, create a valid configuration file . Next, check the size of the configuration file. A standard parameter is limited to 4KB . If the configuration file is larger than 4K, an advanced SSM parameter must be used. If an advanced parameter is required, it will need to be created and tagged manually. If the configuration fits within a standard parameter, create an SSM secret using the secret init . The YAML document below can be used as-is with New Relic after updating the API key written as \"YOUR-API-KEY-HERE\". In the example YAML, the inclusion of empty keys is deliberate. The sidecar will use the collector defaults for those keys. receivers : awsxray : transport : udp awsecscontainermetrics : processors : batch : exporters : awsxray : region : us-west-2 otlp : endpoint : otlp.nr-data.net:4317 headers : api-key : YOUR-API-KEY-HERE service : pipelines : traces : receivers : [ awsxray ] processors : [ batch ] exporters : [ awsxray ] metrics : receivers : [ awsecscontainermetrics ] exporters : [ otlp ] Writing X-Ray traces needs additional IAM permissions as shown below. Include this in addons according to the published documentation Resources : XrayWritePolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : CopyOfAWSXRayDaemonWriteAccess Effect : Allow Action : - xray:PutTraceSegments - xray:PutTelemetryRecords - xray:GetSamplingRules - xray:GetSamplingTargets - xray:GetSamplingStatisticSummaries Resource : \"*\" Outputs : XrayAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref XrayWritePolicy The configuration for the OpenTelemetry collector will be passed into the sidecar as an environment variable. sidecars : otel_sidecar : image : 'public.ecr.aws/aws-observability/aws-otel-collector:latest' secrets : AOT_CONFIG_CONTENT : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/otel_config","title":"AWS Distro for OpenTelemetry sidecar"},{"location":"docs/developing/sidecars/#sidecar-patterns","text":"Sidecar patterns are predefined Copilot sidecar configurations. For now, the only supported pattern is FireLens, but we'll add more in the future! # In the manifest. logging : # The Fluent Bit image. (Optional, we'll use \"public.ecr.aws/aws-observability/aws-for-fluent-bit:stable\" by default) image : <image URL> # The configuration options to send to the FireLens log driver. (Optional) destination : <config key> : <config value> # Whether to include ECS metadata in logs. (Optional, default to true) enableMetadata : <true|false> # Secret to pass to the log configuration. (Optional) secretOptions : <key> : <value> # The full config file path in your custom Fluent Bit image. (Optional) configFilePath : <config file path> # Environment variables for the sidecar container. (Optional) variables : <key> : <value> # Secrets to expose to the sidecar container. (Optional) secrets : <key> : <value> For example: logging : destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/sidecar-test-hello log_stream_prefix : copilot/ You might need to add necessary permissions to the task role so that FireLens can forward your data. You can add permissions by specifying them in your addons . For example: Resources : FireLensPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Effect : Allow Action : - logs:CreateLogStream - logs:CreateLogGroup - logs:DescribeLogStreams - logs:PutLogEvents Resource : \"<resource ARN>\" Outputs : FireLensPolicyArn : Description : An addon ManagedPolicy gets used by the ECS task role Value : !Ref FireLensPolicy Info Since the FireLens log driver can route your main container's logs to various destinations, the svc logs command can track them only when they are sent to the log group we create for your Copilot service in CloudWatch.","title":"Sidecar patterns"},{"location":"docs/developing/storage/","text":"Storage There are two ways to add persistence to Copilot workloads: using copilot storage init to create databases and S3 buckets; and attaching an existing EFS filesystem using the storage field in the manifest. Database and Artifacts To add a database or S3 bucket to your service, job, or environment, simply run copilot storage init . # For a guided experience. $ copilot storage init -t S3 # To create a bucket named \"my-bucket\" that is accessible by the \"api\" service, and is deployed and deleted with \"api\" . $ copilot storage init -n my-bucket -t S3 -w api -l workload The above command will create the Cloudformation template for an S3 bucket in the addons directory for the \"api\" service. The next time you run copilot deploy -n api , the bucket will be created, permission to access it will be added to the api task role, and the name of the bucket will be injected into the api container under the environment variable MY_BUCKET_NAME . Info All names are converted into SCREAMING_SNAKE_CASE based on their use of hyphens or underscores. You can view the environment variables for a given service by running copilot svc show . You can also create a DynamoDB table using copilot storage init . For example, to create the Cloudformation template for a table with a sort key and a local secondary index, you could run the following command: # For a guided experience. $ copilot storage init -t DynamoDB # Or skip the prompts by providing flags. $ copilot storage init -n users -t DynamoDB -w api -l workload --partition-key id:N --sort-key email:S --lsi post-count:N This will create a DynamoDB table called ${app}-${env}-${svc}-users . Its partition key will be id , a Number attribute; its sort key will be email , a String attribute; and it will have a local secondary index (essentially an alternate sort key) on the Number attribute post-count . It is also possible to create an RDS Aurora Serverless v2 cluster using copilot storage init . # For a guided experience. $ copilot storage init -t Aurora # Or skip the prompts by providing flags. $ copilot storage init -n my-cluster -t Aurora -w api -l workload --engine PostgreSQL --initial-db my_db This will create an RDS Aurora Serverless v2 cluster that uses PostgreSQL engine with a database named my_db . An environment variable named MYCLUSTER_SECRET is injected into your workload as a JSON string. The fields are 'host' , 'port' , 'dbname' , 'username' , 'password' , 'dbClusterIdentifier' and 'engine' . Environment storage The -l flag is short for --lifecycle . In the examples above, the value to the -l flag is workload . This means that the storage resources will be created as a service addon or a job addon. The storage will be deployed when you run copilot [svc/job] deploy , and will be deleted when you run copilot [svc/job] delete . Alternatively, if you want your storage to persist even after you delete the service or the job, you can create an environment storage resource. An environment storage resource is created as an environment addon: it is deployed when you run copilot env deploy , and isn't deleted until you run copilot env delete . File Systems There are two ways to use an EFS file system with Copilot: using managed EFS, and importing your own filesystem. Attention EFS is not supported for Windows-based services. Managed EFS The easiest way to get started using EFS for service- or job-level storage is via Copilot's built-in managed EFS capability. To get started, simply enable the efs key in the manifest under your volume's name. name : frontend storage : volumes : myManagedEFSVolume : efs : true path : /var/efs read_only : false This manifest will result in an EFS volume being created at the environment level, with an Access Point and dedicated directory at the path /frontend in the EFS filesystem created specifically for your service. Your container will be able to access this directory and all its subdirectories at the /var/efs path in its own filesystem. The /frontend directory and EFS filesystem will persist until you delete your environment. The use of an access point for each service ensures that no two services can access each other's data. You can also customize the UID and GID used for the access point by specifying the uid and gid fields in advanced EFS configuration. If you do not specify a UID or GID, Copilot picks a pseudorandom UID and GID for the access point based on the CRC32 checksum of the service's name. storage : volumes : myManagedEFSVolume : efs : uid : 1000 gid : 10000 path : /var/efs read_only : false uid and gid may not be specified with any other advanced EFS configuration. Under the Hood When you enable managed EFS, Copilot creates the following resources at the environment level: An EFS file system . Mount targets in each of your environment's private subnets Security group rules allowing the Environment Security Group to access the mount targets. At the service level, Copilot creates: An EFS Access Point . The Access Point refers to a directory created by CFN named after the service or job you wish to use EFS with. You can see the environment-level resources created by calling copilot env show --json --resources and parsing the output with your favorite command line JSON processor. For example: > copilot env show -n test --json --resources | jq '.resources[] | select( .type | contains(\"EFS\") )' Advanced Use Cases Hydrating a Managed EFS Volume Sometimes, you may wish to populate the created EFS volume with data before your service begins accepting traffic. There are several ways you can do this, depending on your main container's requirements and whether it requires this data for startup. Using a Sidecar You can mount the created EFS volume in a sidecar using the mount_points field, and use your sidecar's COMMAND or ENTRYPOINT directives to copy data from the sidecar's filesystem or pull data down from S3 or another cloud service. If you mark the sidecar as nonessential with essential:false , it will start, do its work, and exit as the service containers come up and stabilize. This may not be suitable for workloads which depend on the correct data being present in the EFS volume. Using copilot svc exec For workloads where data must be present prior to your task containers coming up, we recommend using a placeholder container first. For example, deploy your frontend service with the following values in the manifest: name : frontend type : Load Balanced Web Service image : location : amazon/amazon-ecs-sample exec : true storage : volumes : myVolume : efs : true path : /var/efs read_only : false Then, when your service is stable, run: $ copilot svc exec This will open an interactive shell from which you can add packages like curl or wget , download data from the internet, create a directory structure, etc. Info This method of configuring containers is not recommended for production environments; containers are ephemeral and if you wish for a piece of software to be present in your service containers, be sure to add it using the RUN directive in a Dockerfile. When you have populated the directory, modify your manifest to remove the exec directive and update the build field to your desired Docker build config or image location. name : frontend type : Load Balanced Web Service image : build : ./Dockerfile storage : volumes : myVolume : efs : true path : /var/efs read_only : false External EFS Mounting an externally-managed EFS volume in Copilot tasks requires two things: That you create an EFS file system in the desired environment's region. That you create an EFS Mount Target using the Copilot environment security group in each subnet of your environment. When those prerequisites are satisfied, you can enable EFS storage using simple syntax in your manifest. You'll need the filesystem ID and, if using, the access point configuration for the filesystem. Info You can only use a given EFS file system in a single environment at a time. Mount targets are limited to one per availability zone; therefore, you must delete any existing mount targets before bringing the file system to Copilot if you have used it in another VPC. Manifest Syntax The simplest possible EFS volume can be specified with the following syntax: storage : volumes : myEFSVolume : # This is a variable key and can be set to an arbitrary string. path : '/etc/mount1' efs : id : fs-1234567 This will create a read-only mounted volume in your service's or job's container using the filesystem fs-1234567 . If mount targets are not created in the subnets of the environment, the task will fail to launch. Full syntax for external EFS volumes follows. storage : volumes : <volume name> : path : <mount path> # Required. The path inside the container. read_only : <boolean> # Default: true efs : id : <filesystem ID> # Required. root_dir : <filesystem root> # Optional. Defaults to \"/\". Must not be # specified if using access points. auth : iam : <boolean> # Optional. Whether to use IAM authorization when # mounting this filesystem. access_point_id : <access point ID> # Optional. The ID of the EFS Access Point # to use when mounting this filesystem. uid : <uint32> # Optional. UID for managed EFS access point. gid : <uint32> # Optional. GID for managed EFS access point. Cannot be specified # with `id`, `root_dir`, or `auth`. Creating Mount Targets There are several ways to create mount targets for an existing EFS filesystem: using the AWS CLI and using CloudFormation . With the AWS CLI To create mount targets for an existing filesystem, you'll need the ID of that filesystem. a Copilot environment deployed in the same account and region. To retrieve the filesystem ID, you can use the AWS CLI: $ EFS_FILESYSTEMS = $( aws efs describe-file-systems | \\ jq '.FileSystems[] | {ID: .FileSystemId, CreationTime: .CreationTime, Size: .SizeInBytes.Value}' ) If you echo this variable you should be able to find which filesystem you need. Assign it to the variable $EFS_ID and continue. You'll also need the public subnets of the Copilot environment and the Environment Security Group. This jq command will filter the output of the describe-stacks call down to simply the desired output value. Info The filesystem you use MUST be in the same region as your Copilot environment! $ SUBNETS = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq '.Stacks[] | .Outputs[] | select(.OutputKey == \"PublicSubnets\") | .OutputValue' ) $ SUBNET1 = $( echo $SUBNETS | jq -r 'split(\",\") | .[0]' ) $ SUBNET2 = $( echo $SUBNETS | jq -r 'split(\",\") | .[1]' ) $ ENV_SG = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq -r '.Stacks[] | .Outputs[] | select(.OutputKey == \"EnvironmentSecurityGroup\") | .OutputValue' ) Once you have these, create the mount targets. $ MOUNT_TARGET_1_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_1 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) $ MOUNT_TARGET_2_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_2 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) Once you've done this, you can specify the storage configuration in the manifest as above. Cleanup Delete the mount targets using the AWS CLI. $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_1 $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_2 CloudFormation Here's an example of how you might create the appropriate EFS infrastructure for an external file system using a CloudFormation stack. After creating an environment, deploy the following CloudFormation template into the same account and region as the environment. Place the following CloudFormation template into a file called efs.yml . Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Resources : EFSFileSystem : Metadata : 'aws:copilot:description' : 'An EFS File System for persistent backing storage for tasks and services' Type : AWS::EFS::FileSystem Properties : PerformanceMode : generalPurpose ThroughputMode : bursting Encrypted : true MountTargetPublicSubnet1 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 0 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" MountTargetPublicSubnet2 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 1 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" Outputs : EFSVolumeID : Value : !Ref EFSFileSystem Export : Name : !Sub ${App}-${Env}-FilesystemID Then run: $ aws cloudformation deploy --stack-name efs-cfn \\ --template-file ecs.yml --parameter-overrides App=${YOUR_APP} Env=${YOUR_ENV} This will create an EFS file system and the mount targets your tasks need using outputs from the Copilot environment stack. To get the EFS filesystem ID, you can run a describe-stacks call: $ aws cloudformation describe-stacks --stack-name efs-cfn | \\ jq -r '.Stacks[] | .Outputs[] | .OutputValue' Then, in the manifest of the service which you would like to have access to the EFS filesystem, add the following configuration. storage : volumes : copilotVolume : # This is a variable key and can be set to arbitrary strings. path : '/etc/mount1' read_only : true # Set to false if your service needs write access. efs : id : <your filesystem ID> Finally, run copilot svc deploy to reconfigure your service to mount the filesystem at /etc/mount1 . Cleanup To clean this up, remove the storage configuration from the manifest and redeploy the service: $ copilot svc deploy Then, delete the stack. $ aws cloudformation delete-stack --stack-name efs-cfn","title":"Storage"},{"location":"docs/developing/storage/#storage","text":"There are two ways to add persistence to Copilot workloads: using copilot storage init to create databases and S3 buckets; and attaching an existing EFS filesystem using the storage field in the manifest.","title":"Storage"},{"location":"docs/developing/storage/#database-and-artifacts","text":"To add a database or S3 bucket to your service, job, or environment, simply run copilot storage init . # For a guided experience. $ copilot storage init -t S3 # To create a bucket named \"my-bucket\" that is accessible by the \"api\" service, and is deployed and deleted with \"api\" . $ copilot storage init -n my-bucket -t S3 -w api -l workload The above command will create the Cloudformation template for an S3 bucket in the addons directory for the \"api\" service. The next time you run copilot deploy -n api , the bucket will be created, permission to access it will be added to the api task role, and the name of the bucket will be injected into the api container under the environment variable MY_BUCKET_NAME . Info All names are converted into SCREAMING_SNAKE_CASE based on their use of hyphens or underscores. You can view the environment variables for a given service by running copilot svc show . You can also create a DynamoDB table using copilot storage init . For example, to create the Cloudformation template for a table with a sort key and a local secondary index, you could run the following command: # For a guided experience. $ copilot storage init -t DynamoDB # Or skip the prompts by providing flags. $ copilot storage init -n users -t DynamoDB -w api -l workload --partition-key id:N --sort-key email:S --lsi post-count:N This will create a DynamoDB table called ${app}-${env}-${svc}-users . Its partition key will be id , a Number attribute; its sort key will be email , a String attribute; and it will have a local secondary index (essentially an alternate sort key) on the Number attribute post-count . It is also possible to create an RDS Aurora Serverless v2 cluster using copilot storage init . # For a guided experience. $ copilot storage init -t Aurora # Or skip the prompts by providing flags. $ copilot storage init -n my-cluster -t Aurora -w api -l workload --engine PostgreSQL --initial-db my_db This will create an RDS Aurora Serverless v2 cluster that uses PostgreSQL engine with a database named my_db . An environment variable named MYCLUSTER_SECRET is injected into your workload as a JSON string. The fields are 'host' , 'port' , 'dbname' , 'username' , 'password' , 'dbClusterIdentifier' and 'engine' .","title":"Database and Artifacts"},{"location":"docs/developing/storage/#environment-storage","text":"The -l flag is short for --lifecycle . In the examples above, the value to the -l flag is workload . This means that the storage resources will be created as a service addon or a job addon. The storage will be deployed when you run copilot [svc/job] deploy , and will be deleted when you run copilot [svc/job] delete . Alternatively, if you want your storage to persist even after you delete the service or the job, you can create an environment storage resource. An environment storage resource is created as an environment addon: it is deployed when you run copilot env deploy , and isn't deleted until you run copilot env delete .","title":"Environment storage"},{"location":"docs/developing/storage/#file-systems","text":"There are two ways to use an EFS file system with Copilot: using managed EFS, and importing your own filesystem. Attention EFS is not supported for Windows-based services.","title":"File Systems"},{"location":"docs/developing/storage/#managed-efs","text":"The easiest way to get started using EFS for service- or job-level storage is via Copilot's built-in managed EFS capability. To get started, simply enable the efs key in the manifest under your volume's name. name : frontend storage : volumes : myManagedEFSVolume : efs : true path : /var/efs read_only : false This manifest will result in an EFS volume being created at the environment level, with an Access Point and dedicated directory at the path /frontend in the EFS filesystem created specifically for your service. Your container will be able to access this directory and all its subdirectories at the /var/efs path in its own filesystem. The /frontend directory and EFS filesystem will persist until you delete your environment. The use of an access point for each service ensures that no two services can access each other's data. You can also customize the UID and GID used for the access point by specifying the uid and gid fields in advanced EFS configuration. If you do not specify a UID or GID, Copilot picks a pseudorandom UID and GID for the access point based on the CRC32 checksum of the service's name. storage : volumes : myManagedEFSVolume : efs : uid : 1000 gid : 10000 path : /var/efs read_only : false uid and gid may not be specified with any other advanced EFS configuration.","title":"Managed EFS"},{"location":"docs/developing/storage/#under-the-hood","text":"When you enable managed EFS, Copilot creates the following resources at the environment level: An EFS file system . Mount targets in each of your environment's private subnets Security group rules allowing the Environment Security Group to access the mount targets. At the service level, Copilot creates: An EFS Access Point . The Access Point refers to a directory created by CFN named after the service or job you wish to use EFS with. You can see the environment-level resources created by calling copilot env show --json --resources and parsing the output with your favorite command line JSON processor. For example: > copilot env show -n test --json --resources | jq '.resources[] | select( .type | contains(\"EFS\") )'","title":"Under the Hood"},{"location":"docs/developing/storage/#advanced-use-cases","text":"","title":"Advanced Use Cases"},{"location":"docs/developing/storage/#hydrating-a-managed-efs-volume","text":"Sometimes, you may wish to populate the created EFS volume with data before your service begins accepting traffic. There are several ways you can do this, depending on your main container's requirements and whether it requires this data for startup.","title":"Hydrating a Managed EFS Volume"},{"location":"docs/developing/storage/#using-a-sidecar","text":"You can mount the created EFS volume in a sidecar using the mount_points field, and use your sidecar's COMMAND or ENTRYPOINT directives to copy data from the sidecar's filesystem or pull data down from S3 or another cloud service. If you mark the sidecar as nonessential with essential:false , it will start, do its work, and exit as the service containers come up and stabilize. This may not be suitable for workloads which depend on the correct data being present in the EFS volume.","title":"Using a Sidecar"},{"location":"docs/developing/storage/#using-copilot-svc-exec","text":"For workloads where data must be present prior to your task containers coming up, we recommend using a placeholder container first. For example, deploy your frontend service with the following values in the manifest: name : frontend type : Load Balanced Web Service image : location : amazon/amazon-ecs-sample exec : true storage : volumes : myVolume : efs : true path : /var/efs read_only : false Then, when your service is stable, run: $ copilot svc exec This will open an interactive shell from which you can add packages like curl or wget , download data from the internet, create a directory structure, etc. Info This method of configuring containers is not recommended for production environments; containers are ephemeral and if you wish for a piece of software to be present in your service containers, be sure to add it using the RUN directive in a Dockerfile. When you have populated the directory, modify your manifest to remove the exec directive and update the build field to your desired Docker build config or image location. name : frontend type : Load Balanced Web Service image : build : ./Dockerfile storage : volumes : myVolume : efs : true path : /var/efs read_only : false","title":"Using copilot svc exec"},{"location":"docs/developing/storage/#external-efs","text":"Mounting an externally-managed EFS volume in Copilot tasks requires two things: That you create an EFS file system in the desired environment's region. That you create an EFS Mount Target using the Copilot environment security group in each subnet of your environment. When those prerequisites are satisfied, you can enable EFS storage using simple syntax in your manifest. You'll need the filesystem ID and, if using, the access point configuration for the filesystem. Info You can only use a given EFS file system in a single environment at a time. Mount targets are limited to one per availability zone; therefore, you must delete any existing mount targets before bringing the file system to Copilot if you have used it in another VPC.","title":"External EFS"},{"location":"docs/developing/storage/#manifest-syntax","text":"The simplest possible EFS volume can be specified with the following syntax: storage : volumes : myEFSVolume : # This is a variable key and can be set to an arbitrary string. path : '/etc/mount1' efs : id : fs-1234567 This will create a read-only mounted volume in your service's or job's container using the filesystem fs-1234567 . If mount targets are not created in the subnets of the environment, the task will fail to launch. Full syntax for external EFS volumes follows. storage : volumes : <volume name> : path : <mount path> # Required. The path inside the container. read_only : <boolean> # Default: true efs : id : <filesystem ID> # Required. root_dir : <filesystem root> # Optional. Defaults to \"/\". Must not be # specified if using access points. auth : iam : <boolean> # Optional. Whether to use IAM authorization when # mounting this filesystem. access_point_id : <access point ID> # Optional. The ID of the EFS Access Point # to use when mounting this filesystem. uid : <uint32> # Optional. UID for managed EFS access point. gid : <uint32> # Optional. GID for managed EFS access point. Cannot be specified # with `id`, `root_dir`, or `auth`.","title":"Manifest Syntax"},{"location":"docs/developing/storage/#creating-mount-targets","text":"There are several ways to create mount targets for an existing EFS filesystem: using the AWS CLI and using CloudFormation .","title":"Creating Mount Targets"},{"location":"docs/developing/storage/#with-the-aws-cli","text":"To create mount targets for an existing filesystem, you'll need the ID of that filesystem. a Copilot environment deployed in the same account and region. To retrieve the filesystem ID, you can use the AWS CLI: $ EFS_FILESYSTEMS = $( aws efs describe-file-systems | \\ jq '.FileSystems[] | {ID: .FileSystemId, CreationTime: .CreationTime, Size: .SizeInBytes.Value}' ) If you echo this variable you should be able to find which filesystem you need. Assign it to the variable $EFS_ID and continue. You'll also need the public subnets of the Copilot environment and the Environment Security Group. This jq command will filter the output of the describe-stacks call down to simply the desired output value. Info The filesystem you use MUST be in the same region as your Copilot environment! $ SUBNETS = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq '.Stacks[] | .Outputs[] | select(.OutputKey == \"PublicSubnets\") | .OutputValue' ) $ SUBNET1 = $( echo $SUBNETS | jq -r 'split(\",\") | .[0]' ) $ SUBNET2 = $( echo $SUBNETS | jq -r 'split(\",\") | .[1]' ) $ ENV_SG = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq -r '.Stacks[] | .Outputs[] | select(.OutputKey == \"EnvironmentSecurityGroup\") | .OutputValue' ) Once you have these, create the mount targets. $ MOUNT_TARGET_1_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_1 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) $ MOUNT_TARGET_2_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_2 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) Once you've done this, you can specify the storage configuration in the manifest as above.","title":"With the AWS CLI"},{"location":"docs/developing/storage/#cleanup","text":"Delete the mount targets using the AWS CLI. $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_1 $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_2","title":"Cleanup"},{"location":"docs/developing/storage/#cloudformation","text":"Here's an example of how you might create the appropriate EFS infrastructure for an external file system using a CloudFormation stack. After creating an environment, deploy the following CloudFormation template into the same account and region as the environment. Place the following CloudFormation template into a file called efs.yml . Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Resources : EFSFileSystem : Metadata : 'aws:copilot:description' : 'An EFS File System for persistent backing storage for tasks and services' Type : AWS::EFS::FileSystem Properties : PerformanceMode : generalPurpose ThroughputMode : bursting Encrypted : true MountTargetPublicSubnet1 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 0 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" MountTargetPublicSubnet2 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 1 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" Outputs : EFSVolumeID : Value : !Ref EFSFileSystem Export : Name : !Sub ${App}-${Env}-FilesystemID Then run: $ aws cloudformation deploy --stack-name efs-cfn \\ --template-file ecs.yml --parameter-overrides App=${YOUR_APP} Env=${YOUR_ENV} This will create an EFS file system and the mount targets your tasks need using outputs from the Copilot environment stack. To get the EFS filesystem ID, you can run a describe-stacks call: $ aws cloudformation describe-stacks --stack-name efs-cfn | \\ jq -r '.Stacks[] | .Outputs[] | .OutputValue' Then, in the manifest of the service which you would like to have access to the EFS filesystem, add the following configuration. storage : volumes : copilotVolume : # This is a variable key and can be set to arbitrary strings. path : '/etc/mount1' read_only : true # Set to false if your service needs write access. efs : id : <your filesystem ID> Finally, run copilot svc deploy to reconfigure your service to mount the filesystem at /etc/mount1 .","title":"CloudFormation"},{"location":"docs/developing/storage/#cleanup_1","text":"To clean this up, remove the storage configuration from the manifest and redeploy the service: $ copilot svc deploy Then, delete the stack. $ aws cloudformation delete-stack --stack-name efs-cfn","title":"Cleanup"},{"location":"docs/developing/svc-to-svc-communication/","text":"Service-to-Service Communication Service Connect added in v1.24.0 ECS Service Connect enables a client service to connect to its downstream services in a load-balanced and resilient fashion. Furthermore, it simplifies the way of exposing a service to its clients by specifying friendly aliases. With Service Connect in Copilot, each service you create is given the following private alias by default: http://<your service name> . Attention Service Connect is not yet supported for Request-Driven Web Services . How do I use Service Connect? Imagine we have an app called kudos and two services: api and front-end , deployed in the same environment. In order to use Service Connect, both services' manifests need to have: Sample Service Connect manifest setups Basic Custom Alias network : connect : true # Defaults to \"false\" network : connect : alias : frontend.local After deploying both services, they should be able to talk to each other using the default Service Connect endpoint, which is the same as its service name. For example, front-end service can simply call http://api . // Calling the \"api\" service from the \"front-end\" service. resp , err := http . Get ( \"http://api/\" ) Upgrading from Service Discovery Prior to v1.24, Copilot enabled private service-to-service communication with Service Discovery . If you are already using Service Discovery and want to avoid any code changes, you can configure network.connect.alias field so that the Service Connect uses the same alias as Service Discovery. And if both the service and its client have Service Connect enabled, they'll connect via Service Connect instead of Service Discovery. For example, in the manifest of the api service we have network : connect : alias : ${COPILOT_SERVICE_NAME}.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.local and front-end also has the same setting. Then, they can keep using the same endpoint to make API calls via Service Connect instead of Service Discovery to leverage the benefits of load balancing and additional resiliency. Service Discovery Service Discovery is a way of letting services discover and connect with each other. Typically, services can only talk to each other if they expose a public endpoint - and even then, requests will have to go over the internet. With ECS Service Discovery , each service you create is given a private address and DNS name - meaning each service can talk to another without ever leaving the local network (VPC) and without exposing a public endpoint. How do I use Service Discovery? Service Discovery is enabled for all services set up using the Copilot CLI. We'll show you how to use it by using an example. Imagine we have the same kudos app with two services: api and front-end . In this example we'll imagine our front-end service is deployed in the test environment, has a public endpoint and wants to call our api service using its service discovery endpoint. // Calling our api service from the front-end service using Service Discovery func ServiceDiscoveryGet ( w http . ResponseWriter , req * http . Request , ps httprouter . Params ) { endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) resp , err := http . Get ( endpoint /* http://api.test.kudos.local/some-request */ ) if err != nil { http . Error ( w , err . Error (), http . StatusInternalServerError ) return } defer resp . Body . Close () body , _ := ioutil . ReadAll ( resp . Body ) w . WriteHeader ( http . StatusOK ) w . Write ( body ) } The important part is that our front-end service is making a request to our api service through a special endpoint: endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) COPILOT_SERVICE_DISCOVERY_ENDPOINT is a special environment variable that the Copilot CLI sets for you when it creates your service. It's of the format {env name}.{app name}.local - so in this case in our kudos app, when deployed in the test environment, the request would be to http://api.test.kudos.local/some-request . Since our api service is running on port 80, we're not specifying the port in the URL. However, if it was running on another port, say 8080, we'd need to include the port in the request, as well http://api.test.kudos.local:8080/some-request . When our front-end makes this request, the endpoint api.test.kudos.local resolves to a private IP address and is routed privately within your VPC. Legacy Environments and Service Discovery Prior to Copilot v1.9.0, the service discovery namespace used the format {app name}.local , without including the environment. This limitation made it impossible to deploy multiple environments in the same VPC. Any environments created with Copilot v1.9.0 and newer can share a VPC with any other environment. When your environments are upgraded, Copilot will honor the service discovery namespace that the environment was created with. That means that endpoints for your services will not change. Any new environments created with Copilot v1.9.0 and above will use the {env name}.{app name}.local format for service discovery, and can share VPCs with older environments.","title":"Service-to-Service Communication"},{"location":"docs/developing/svc-to-svc-communication/#service-to-service-communication","text":"","title":"Service-to-Service Communication"},{"location":"docs/developing/svc-to-svc-communication/#service-connect-added-in-v1240","text":"ECS Service Connect enables a client service to connect to its downstream services in a load-balanced and resilient fashion. Furthermore, it simplifies the way of exposing a service to its clients by specifying friendly aliases. With Service Connect in Copilot, each service you create is given the following private alias by default: http://<your service name> . Attention Service Connect is not yet supported for Request-Driven Web Services .","title":"Service Connect  added in v1.24.0 "},{"location":"docs/developing/svc-to-svc-communication/#how-do-i-use-service-connect","text":"Imagine we have an app called kudos and two services: api and front-end , deployed in the same environment. In order to use Service Connect, both services' manifests need to have: Sample Service Connect manifest setups Basic Custom Alias network : connect : true # Defaults to \"false\" network : connect : alias : frontend.local After deploying both services, they should be able to talk to each other using the default Service Connect endpoint, which is the same as its service name. For example, front-end service can simply call http://api . // Calling the \"api\" service from the \"front-end\" service. resp , err := http . Get ( \"http://api/\" )","title":"How do I use Service Connect?"},{"location":"docs/developing/svc-to-svc-communication/#upgrading-from-service-discovery","text":"Prior to v1.24, Copilot enabled private service-to-service communication with Service Discovery . If you are already using Service Discovery and want to avoid any code changes, you can configure network.connect.alias field so that the Service Connect uses the same alias as Service Discovery. And if both the service and its client have Service Connect enabled, they'll connect via Service Connect instead of Service Discovery. For example, in the manifest of the api service we have network : connect : alias : ${COPILOT_SERVICE_NAME}.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.local and front-end also has the same setting. Then, they can keep using the same endpoint to make API calls via Service Connect instead of Service Discovery to leverage the benefits of load balancing and additional resiliency.","title":"Upgrading from Service Discovery"},{"location":"docs/developing/svc-to-svc-communication/#service-discovery","text":"Service Discovery is a way of letting services discover and connect with each other. Typically, services can only talk to each other if they expose a public endpoint - and even then, requests will have to go over the internet. With ECS Service Discovery , each service you create is given a private address and DNS name - meaning each service can talk to another without ever leaving the local network (VPC) and without exposing a public endpoint.","title":"Service Discovery"},{"location":"docs/developing/svc-to-svc-communication/#how-do-i-use-service-discovery","text":"Service Discovery is enabled for all services set up using the Copilot CLI. We'll show you how to use it by using an example. Imagine we have the same kudos app with two services: api and front-end . In this example we'll imagine our front-end service is deployed in the test environment, has a public endpoint and wants to call our api service using its service discovery endpoint. // Calling our api service from the front-end service using Service Discovery func ServiceDiscoveryGet ( w http . ResponseWriter , req * http . Request , ps httprouter . Params ) { endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) resp , err := http . Get ( endpoint /* http://api.test.kudos.local/some-request */ ) if err != nil { http . Error ( w , err . Error (), http . StatusInternalServerError ) return } defer resp . Body . Close () body , _ := ioutil . ReadAll ( resp . Body ) w . WriteHeader ( http . StatusOK ) w . Write ( body ) } The important part is that our front-end service is making a request to our api service through a special endpoint: endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) COPILOT_SERVICE_DISCOVERY_ENDPOINT is a special environment variable that the Copilot CLI sets for you when it creates your service. It's of the format {env name}.{app name}.local - so in this case in our kudos app, when deployed in the test environment, the request would be to http://api.test.kudos.local/some-request . Since our api service is running on port 80, we're not specifying the port in the URL. However, if it was running on another port, say 8080, we'd need to include the port in the request, as well http://api.test.kudos.local:8080/some-request . When our front-end makes this request, the endpoint api.test.kudos.local resolves to a private IP address and is routed privately within your VPC.","title":"How do I use Service Discovery?"},{"location":"docs/developing/svc-to-svc-communication/#legacy-environments-and-service-discovery","text":"Prior to Copilot v1.9.0, the service discovery namespace used the format {app name}.local , without including the environment. This limitation made it impossible to deploy multiple environments in the same VPC. Any environments created with Copilot v1.9.0 and newer can share a VPC with any other environment. When your environments are upgraded, Copilot will honor the service discovery namespace that the environment was created with. That means that endpoints for your services will not change. Any new environments created with Copilot v1.9.0 and above will use the {env name}.{app name}.local format for service discovery, and can share VPCs with older environments.","title":"Legacy Environments and Service Discovery"},{"location":"docs/developing/addons/environment/","text":"Modeling Additional Environment Resources with AWS CloudFormation Additional AWS resources, referred to as \"addons\" in the CLI, are any additional AWS services that a service or environment manifest does not integrate by default. For example, an addon can be a DynamoDB table, an S3 bucket, or an RDS Aurora Serverless cluster that your service needs to read or write to. You can define additional resources for a workload (such as a Load Balanced Web Service or a Scheduled Job ). The lifecycle of workload addons will be managed by the workload and will be deleted once the workload is deleted. Alternatively, you can define additional shareable resource for an environment. Environment addons won't be deleted unless the environment is deleted. This page documents how to create environment-level addons. For workload-level addons, visit Modeling Additional Workload Resources with AWS CloudFormation . How do I add an S3 bucket, a DDB Table, or an Aurora Serverless cluster? Copilot provides the following commands to help you create certain kinds of addons: storage init will create a DynamoDB table, an S3 bucket, or an Aurora Serverless cluster. You can run copilot storage init from your workspace and be guided through some questions to help you set up these resources. How to add other resources? For other types of addons, you can add your own custom CloudFormation templates: You can store the custom templates in your workspace under copilot/environments/addons directory. When running copilot env deploy , the custom addons template will be deployed along with your environment stack. Sample workspace layout with environment addons . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 environments \u251c\u2500\u2500 addons # Store environment addons. \u2502 \u2514\u2500\u2500 mys3.yaml \u251c\u2500\u2500 dev \u2514\u2500\u2500 prod What does an addon template look like? An environment addon template can be any valid CloudFormation template that satisfies the following: Includes at least one Resource . The Parameters section includes App , Env . you can customize your resource properties with Conditions or Mappings . We recommend following Amazon IAM best practices while defining AWS Managed Policies for the additional resources, including: Grant least privilege to the policies defined in your addons/ directory. Use policy conditions for extra security to restrict your policies to access only the resources defined in your addons/ directory. Writing the Parameters section There are a few parameters that Copilot requires you to define in your templates. Parameters : App : Type : String Env : Type : String Customizing the Parameters section If you'd like to define parameters in addition to the ones required by Copilot, you can do so with a addons.parameters.yml file. . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # Add this file under your addons/ directory. In your template file, add the additional parameters under the Parameters section. In your addons.parameters.yml , define the values of those additional parameters. They can refer to values from your environment stack. Examples: Customize addon parameters # In \"environments/addons/my-addon.yml\" Parameters : # Required parameters by AWS Copilot. App : Type : String Env : Type : String # Additional parameters defined in addons.parameters.yml ClusterName : Type : String # In \"environments/addons/addons.parameters.yml\" Parameters : ClusterName : !Ref Cluster Writing the Conditions and the Mappings sections Often, you want to configure your addon resources differently depending on certain conditions. For example, you could conditionally configure your DB resource's capacity depending on whether it is deploying to a production or a test environment. To do so, you can use the Conditions section and the Mappings section. Examples: Configure addons conditionally Using Mappings Using Conditions Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ] Writing the Outputs section You can use the Outputs section to define any values that can be consumed by other resources; for example, a service, a CloudFormation stack, etc. Environment addon: Connecting to your workloads A value from an environment addon can be referenced by a workload addon or a workload manifest. To do so, you should first export the value from the environment addon using the Outputs section. Example: Export values from environment addons Outputs : MyTableARN : Value : !GetAtt ServiceTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN # This value can be consumed by a workload manifest or a workload addon. MyTableName : Value : !Ref ServiceTable Export : Name : !Sub ${App}-${Env}-MyTableName It is important that you add the Export block. Otherwise, your workload stack or your workload addons won't be able to access the value. You will use Export.Name to reference the value from your workload-level resources. Consideration: Namespace your Export.Name You can specify any name you like for Export.Name . That is, it doesn't have to be prefixed with !Sub ${App}-${Env} ; it can simply be MyTableName . However, within an AWS region, the Export.Name must be unique. That is, you can't have two exports named MyTableName in us-east-1 . Therefore, we recommend you to namespace your exports with ${App} and ${Env} to decrease the chance of name collision. In addition, this makes it clear which application and environment the value is managed under. With the namespace, for example, say your application's name is \"my-app\" , and you deployed the addons with environment test , then the final export name would be rendered to my-app-test-MyTableName . Referencing from a workload addon In your workload addons, you can reference a value from your environment addons, as long as that value is exported. To do so, use the Fn::ImportValue function with that value's export name to import it from an environment addon. Example: An IAM policy to access an environment-level DynamoDB table Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: Scope down the permissions in your real application. This is done so that this example isn't too long! Resource : Fn::ImportValue : # <- We import the table ARN from the environment addons. !Sub ${App}-${Env}-MyTableARN # <- The export name that we used. Referencing from a workload manifest You can also reference a value from your environment addons in a workload manifest for variables , secrets and security_groups , as long as that value is exported. To do so, use from_cfn fields in workload manifests with that value's export name. Examples: using from_cfn Inject an environment variable Inject a secret Attach a security group name : db-front type : Backend Service variables : MY_TABLE_NAME : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyTableName name : db-front type : Backend Service secrets : MY_CLUSTER_CREDS : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterSecret name : db-front type : Backend Service security_groups : - from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterAllowedSecurityGroup Examples Environment Addons Walk-through See our v1.25.0 blog post for a detailed walk-through!","title":"Additional Environment Resources"},{"location":"docs/developing/addons/environment/#modeling-additional-environment-resources-with-aws-cloudformation","text":"Additional AWS resources, referred to as \"addons\" in the CLI, are any additional AWS services that a service or environment manifest does not integrate by default. For example, an addon can be a DynamoDB table, an S3 bucket, or an RDS Aurora Serverless cluster that your service needs to read or write to. You can define additional resources for a workload (such as a Load Balanced Web Service or a Scheduled Job ). The lifecycle of workload addons will be managed by the workload and will be deleted once the workload is deleted. Alternatively, you can define additional shareable resource for an environment. Environment addons won't be deleted unless the environment is deleted. This page documents how to create environment-level addons. For workload-level addons, visit Modeling Additional Workload Resources with AWS CloudFormation .","title":"Modeling Additional Environment Resources with AWS CloudFormation"},{"location":"docs/developing/addons/environment/#how-do-i-add-an-s3-bucket-a-ddb-table-or-an-aurora-serverless-cluster","text":"Copilot provides the following commands to help you create certain kinds of addons: storage init will create a DynamoDB table, an S3 bucket, or an Aurora Serverless cluster. You can run copilot storage init from your workspace and be guided through some questions to help you set up these resources.","title":"How do I add an S3 bucket, a DDB Table, or an Aurora Serverless cluster?"},{"location":"docs/developing/addons/environment/#how-to-add-other-resources","text":"For other types of addons, you can add your own custom CloudFormation templates: You can store the custom templates in your workspace under copilot/environments/addons directory. When running copilot env deploy , the custom addons template will be deployed along with your environment stack. Sample workspace layout with environment addons . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 environments \u251c\u2500\u2500 addons # Store environment addons. \u2502 \u2514\u2500\u2500 mys3.yaml \u251c\u2500\u2500 dev \u2514\u2500\u2500 prod","title":"How to add other resources?"},{"location":"docs/developing/addons/environment/#what-does-an-addon-template-look-like","text":"An environment addon template can be any valid CloudFormation template that satisfies the following: Includes at least one Resource . The Parameters section includes App , Env . you can customize your resource properties with Conditions or Mappings . We recommend following Amazon IAM best practices while defining AWS Managed Policies for the additional resources, including: Grant least privilege to the policies defined in your addons/ directory. Use policy conditions for extra security to restrict your policies to access only the resources defined in your addons/ directory.","title":"What does an addon template look like?"},{"location":"docs/developing/addons/environment/#writing-the-parameters-section","text":"There are a few parameters that Copilot requires you to define in your templates. Parameters : App : Type : String Env : Type : String","title":"Writing the Parameters section"},{"location":"docs/developing/addons/environment/#customizing-the-parameters-section","text":"If you'd like to define parameters in addition to the ones required by Copilot, you can do so with a addons.parameters.yml file. . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # Add this file under your addons/ directory. In your template file, add the additional parameters under the Parameters section. In your addons.parameters.yml , define the values of those additional parameters. They can refer to values from your environment stack. Examples: Customize addon parameters # In \"environments/addons/my-addon.yml\" Parameters : # Required parameters by AWS Copilot. App : Type : String Env : Type : String # Additional parameters defined in addons.parameters.yml ClusterName : Type : String # In \"environments/addons/addons.parameters.yml\" Parameters : ClusterName : !Ref Cluster","title":"Customizing the Parameters section"},{"location":"docs/developing/addons/environment/#writing-the-conditions-and-the-mappings-sections","text":"Often, you want to configure your addon resources differently depending on certain conditions. For example, you could conditionally configure your DB resource's capacity depending on whether it is deploying to a production or a test environment. To do so, you can use the Conditions section and the Mappings section. Examples: Configure addons conditionally Using Mappings Using Conditions Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ]","title":"Writing the Conditions and the Mappings sections"},{"location":"docs/developing/addons/environment/#writing-the-outputs-section","text":"You can use the Outputs section to define any values that can be consumed by other resources; for example, a service, a CloudFormation stack, etc.","title":"Writing the Outputs section"},{"location":"docs/developing/addons/environment/#environment-addon-connecting-to-your-workloads","text":"A value from an environment addon can be referenced by a workload addon or a workload manifest. To do so, you should first export the value from the environment addon using the Outputs section. Example: Export values from environment addons Outputs : MyTableARN : Value : !GetAtt ServiceTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN # This value can be consumed by a workload manifest or a workload addon. MyTableName : Value : !Ref ServiceTable Export : Name : !Sub ${App}-${Env}-MyTableName It is important that you add the Export block. Otherwise, your workload stack or your workload addons won't be able to access the value. You will use Export.Name to reference the value from your workload-level resources. Consideration: Namespace your Export.Name You can specify any name you like for Export.Name . That is, it doesn't have to be prefixed with !Sub ${App}-${Env} ; it can simply be MyTableName . However, within an AWS region, the Export.Name must be unique. That is, you can't have two exports named MyTableName in us-east-1 . Therefore, we recommend you to namespace your exports with ${App} and ${Env} to decrease the chance of name collision. In addition, this makes it clear which application and environment the value is managed under. With the namespace, for example, say your application's name is \"my-app\" , and you deployed the addons with environment test , then the final export name would be rendered to my-app-test-MyTableName .","title":"Environment addon: Connecting to your workloads"},{"location":"docs/developing/addons/environment/#referencing-from-a-workload-addon","text":"In your workload addons, you can reference a value from your environment addons, as long as that value is exported. To do so, use the Fn::ImportValue function with that value's export name to import it from an environment addon. Example: An IAM policy to access an environment-level DynamoDB table Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: Scope down the permissions in your real application. This is done so that this example isn't too long! Resource : Fn::ImportValue : # <- We import the table ARN from the environment addons. !Sub ${App}-${Env}-MyTableARN # <- The export name that we used.","title":"Referencing from a workload addon"},{"location":"docs/developing/addons/environment/#referencing-from-a-workload-manifest","text":"You can also reference a value from your environment addons in a workload manifest for variables , secrets and security_groups , as long as that value is exported. To do so, use from_cfn fields in workload manifests with that value's export name. Examples: using from_cfn Inject an environment variable Inject a secret Attach a security group name : db-front type : Backend Service variables : MY_TABLE_NAME : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyTableName name : db-front type : Backend Service secrets : MY_CLUSTER_CREDS : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterSecret name : db-front type : Backend Service security_groups : - from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterAllowedSecurityGroup","title":"Referencing from a workload manifest"},{"location":"docs/developing/addons/environment/#examples","text":"","title":"Examples"},{"location":"docs/developing/addons/environment/#environment-addons-walk-through","text":"See our v1.25.0 blog post for a detailed walk-through!","title":"Environment Addons Walk-through"},{"location":"docs/developing/addons/package/","text":"Uploading Local Artifacts added in v1.21.0 Copilot supports uploading local files referenced from your addon templates to S3, and replacing the relevant resource properties with the uploaded S3 location. On copilot svc deploy or copilot svc package --upload-assets , certain fields on supported resources will be updated with a S3 location before the addons template is sent to CloudFormation. Your templates on disk will not be modified. To see the full list of resources that are supported, take a look at the AWS CLI documentation . This feature can be used to deploy local Lambda functions stored in the same repo as another Copilot service. For example, to deploy a javascript Lambda function alongside a copilot service, you can add this resource to your addon template : Example Lambda Function copilot/service-name/addons/lambda.yml lambdas/example/index.js ExampleFunction : Type : AWS::Lambda::Function Properties : Code : lambdas/example/ Handler : \"index.handler\" Timeout : 900 MemorySize : 512 Role : !GetAtt \"ExampleFunctionRole.Arn\" Runtime : nodejs20.x exports . handler = function ( event , context ) { console . log ( 'example event:' , event ); context . succeed ( 'success!' ); }; On copilot svc deploy , the lambdas/example directory will be zipped and uploaded to S3, and the Code property will be updated to: Code : S3Bucket : copilotBucket S3Key : hashOfLambdasExampleZip before the addon template is uploaded and deployed by Copilot. If you specify a file, the file is directly uploaded to S3. If you specify a folder, the folder will be zipped before being uploaded to S3. For some resources that require a zip (e.g., AWS::Serverless::Function ), a file will be zipped before upload as well. File paths are considered relative to the parent of the copilot/ directory in your repo. For the above example, the folder structure would look like: . \u251c\u2500\u2500 copilot \u2502 \u2514\u2500\u2500 example-service \u2502 \u251c\u2500\u2500 addons \u2502 \u2502 \u2514\u2500\u2500 lambda.yml \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 lambdas \u2514\u2500\u2500 example \u2514\u2500\u2500 index.js Absolute paths are supported as well, though they may not work as well across multiple machines. Example: DynamoDB Stream Processing Lambda This example will walk through creating an Amazon Dynamo DB table with a lambda function connected to process events from the table's stream . This architecture could be useful if you have a service that needs to minimize latency on storing data, but can kick off a separate process that takes longer to process the data. Prerequisites A deployed copilot service Steps Generate a DynamoDB table addon for your service by running copilot storage init (More info here! ) Add the StreamSpecification property to the generated AWS::DynamoDB::Table resource: copilot/service-name/addons/ddb.yml StreamSpecification : StreamViewType : NEW_AND_OLD_IMAGES Add a Lambda function, IAM Role, and Lambda event stream mapping resource, making sure to give access to the DynamoDB table stream in the IAM Role: copilot/service-name/addons/ddb.yml recordProcessor : Type : AWS::Lambda::Function Properties : Code : lambdas/record-processor/ # local path to the record processor lambda Handler : \"index.handler\" Timeout : 60 MemorySize : 512 Role : !GetAtt \"recordProcessorRole.Arn\" Runtime : nodejs20.x recordProcessorRole : Type : AWS::IAM::Role Properties : AssumeRolePolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Principal : Service : - lambda.amazonaws.com Action : - sts:AssumeRole Path : / ManagedPolicyArns : - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole Policies : - PolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Action : - dynamodb:DescribeStream - dynamodb:GetRecords - dynamodb:GetShardIterator - dynamodb:ListStreams # replace <table> with the generated table's resource name Resource : !Sub ${<table>.Arn}/stream/* tableStreamMappingToRecordProcessor : Type : AWS::Lambda::EventSourceMapping Properties : FunctionName : !Ref recordProcessor EventSourceArn : !GetAtt <table>.StreamArn # replace <table> here too BatchSize : 1 StartingPosition : LATEST Write your lambda function: lambdas/record-processor/index.js \"use strict\" ; const AWS = require ( 'aws-sdk' ); exports . handler = async function ( event , context ) { for ( const record of event ? . Records ) { if ( record ? . eventName != \"INSERT\" ) { continue ; } // process new records const item = AWS . DynamoDB . Converter . unmarshall ( record ? . dynamodb ? . NewImage ); console . log ( \"processing item\" , item ); } }; Run copilot svc deploy to deploy your lambda function!\ud83c\udf89 As your service adds records to the table, the lambda function will be triggered and can process new records.","title":"Uploading Local Artifacts"},{"location":"docs/developing/addons/package/#uploading-local-artifacts-added-in-v1210","text":"Copilot supports uploading local files referenced from your addon templates to S3, and replacing the relevant resource properties with the uploaded S3 location. On copilot svc deploy or copilot svc package --upload-assets , certain fields on supported resources will be updated with a S3 location before the addons template is sent to CloudFormation. Your templates on disk will not be modified. To see the full list of resources that are supported, take a look at the AWS CLI documentation . This feature can be used to deploy local Lambda functions stored in the same repo as another Copilot service. For example, to deploy a javascript Lambda function alongside a copilot service, you can add this resource to your addon template : Example Lambda Function copilot/service-name/addons/lambda.yml lambdas/example/index.js ExampleFunction : Type : AWS::Lambda::Function Properties : Code : lambdas/example/ Handler : \"index.handler\" Timeout : 900 MemorySize : 512 Role : !GetAtt \"ExampleFunctionRole.Arn\" Runtime : nodejs20.x exports . handler = function ( event , context ) { console . log ( 'example event:' , event ); context . succeed ( 'success!' ); }; On copilot svc deploy , the lambdas/example directory will be zipped and uploaded to S3, and the Code property will be updated to: Code : S3Bucket : copilotBucket S3Key : hashOfLambdasExampleZip before the addon template is uploaded and deployed by Copilot. If you specify a file, the file is directly uploaded to S3. If you specify a folder, the folder will be zipped before being uploaded to S3. For some resources that require a zip (e.g., AWS::Serverless::Function ), a file will be zipped before upload as well. File paths are considered relative to the parent of the copilot/ directory in your repo. For the above example, the folder structure would look like: . \u251c\u2500\u2500 copilot \u2502 \u2514\u2500\u2500 example-service \u2502 \u251c\u2500\u2500 addons \u2502 \u2502 \u2514\u2500\u2500 lambda.yml \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 lambdas \u2514\u2500\u2500 example \u2514\u2500\u2500 index.js Absolute paths are supported as well, though they may not work as well across multiple machines.","title":"Uploading Local Artifacts  added in v1.21.0 "},{"location":"docs/developing/addons/package/#example-dynamodb-stream-processing-lambda","text":"This example will walk through creating an Amazon Dynamo DB table with a lambda function connected to process events from the table's stream . This architecture could be useful if you have a service that needs to minimize latency on storing data, but can kick off a separate process that takes longer to process the data.","title":"Example: DynamoDB Stream Processing Lambda"},{"location":"docs/developing/addons/package/#prerequisites","text":"A deployed copilot service","title":"Prerequisites"},{"location":"docs/developing/addons/package/#steps","text":"Generate a DynamoDB table addon for your service by running copilot storage init (More info here! ) Add the StreamSpecification property to the generated AWS::DynamoDB::Table resource: copilot/service-name/addons/ddb.yml StreamSpecification : StreamViewType : NEW_AND_OLD_IMAGES Add a Lambda function, IAM Role, and Lambda event stream mapping resource, making sure to give access to the DynamoDB table stream in the IAM Role: copilot/service-name/addons/ddb.yml recordProcessor : Type : AWS::Lambda::Function Properties : Code : lambdas/record-processor/ # local path to the record processor lambda Handler : \"index.handler\" Timeout : 60 MemorySize : 512 Role : !GetAtt \"recordProcessorRole.Arn\" Runtime : nodejs20.x recordProcessorRole : Type : AWS::IAM::Role Properties : AssumeRolePolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Principal : Service : - lambda.amazonaws.com Action : - sts:AssumeRole Path : / ManagedPolicyArns : - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole Policies : - PolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Action : - dynamodb:DescribeStream - dynamodb:GetRecords - dynamodb:GetShardIterator - dynamodb:ListStreams # replace <table> with the generated table's resource name Resource : !Sub ${<table>.Arn}/stream/* tableStreamMappingToRecordProcessor : Type : AWS::Lambda::EventSourceMapping Properties : FunctionName : !Ref recordProcessor EventSourceArn : !GetAtt <table>.StreamArn # replace <table> here too BatchSize : 1 StartingPosition : LATEST Write your lambda function: lambdas/record-processor/index.js \"use strict\" ; const AWS = require ( 'aws-sdk' ); exports . handler = async function ( event , context ) { for ( const record of event ? . Records ) { if ( record ? . eventName != \"INSERT\" ) { continue ; } // process new records const item = AWS . DynamoDB . Converter . unmarshall ( record ? . dynamodb ? . NewImage ); console . log ( \"processing item\" , item ); } }; Run copilot svc deploy to deploy your lambda function!\ud83c\udf89 As your service adds records to the table, the lambda function will be triggered and can process new records.","title":"Steps"},{"location":"docs/developing/addons/workload/","text":"Modeling Additional Workload Resources with AWS CloudFormation Additional AWS resources, referred to as \"addons\" in the CLI, are any additional AWS services that a service or environment manifest does not integrate by default. For example, an addon can be a DynamoDB table, an S3 bucket, or an RDS Aurora Serverless cluster that your service needs to read or write to. You can define additional resources for a workload (such as a Load Balanced Web Service or a Scheduled Job ). The lifecycle of workload addons will be managed by the workload and will be deleted once the workload is deleted. Alternatively, you can define additional shareable resource for an environment. Environment addons won't be deleted unless the environment is deleted. This page documents how to create workload-level addons. For environment-level addons, visit Modeling Additional Environment Resources with AWS CloudFormation . How do I add an S3 bucket, a DDB Table, or an Aurora Serverless cluster? Copilot provides the following commands to help you create certain kinds of addons: storage init will create a DynamoDB table, an S3 bucket, or an Aurora Serverless cluster. You can run copilot storage init from your workspace and be guided through some questions to help you set up these resources. How to add other resources? For other types of addons, you can add your own custom CloudFormation templates: You can store the custom templates in your workspace under copilot/<workload>/addons directory. When running copilot [svc/job] deploy , the custom addons template will be deployed along with your workload stack. Sample workspace layout with workload addons . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 webhook \u251c\u2500\u2500 addons # Store addons associated with the service \"webhook\". \u2502 \u2514\u2500\u2500 mytable-ddb.yaml \u2514\u2500\u2500 manifest.yaml What does an addon template look like? A workload addon template can be any valid CloudFormation template that satisfies the following: Include at least one Resource . The Parameters section must include App , Env , Name . you can customize your resource properties with Conditions or Mappings . We recommend following Amazon IAM best practices while defining AWS Managed Policies for the additional resources, including: Grant least privilege to the policies defined in your addons/ directory. Use policy conditions for extra security to restrict your policies to access only the resources defined in your addons/ directory. Writing the Parameters section There are a few parameters that Copilot requires you to define in your templates. Parameters : App : Type : String Env : Type : String Name : Type : String Customizing the Parameters section If you'd like to define parameters in addition to the ones required by Copilot, you can do so with a addons.parameters.yml file. . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # Add this file under your addons/ directory. In your template file, add the additional parameters under the Parameters section. In your addons.parameters.yml , define the values of those additional parameters. They can refer to values from your workload stack. Examples: Customize addon parameters # In \"webhook/addons/my-addon.yml\" Parameters : # Required parameters by AWS Copilot. App : Type : String Env : Type : String Name : Type : String # Additional parameters defined in addons.parameters.yml ServiceName : Type : String # In \"webhook/addons/addons.parameters.yml\" Parameters : ServiceName : !GetAtt Service.Name Writing the Conditions and the Mappings sections Often, you want to configure your addon resources differently depending on certain conditions. For example, you could conditionally configure your DB resource's capacity depending on whether it is deploying to a production or a test environment. To do so, you can use the Conditions section and the Mappings section. Examples: Configure addons conditionally Using Mappings Using Conditions Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ] Writing the Outputs section You can use the Outputs section to define any values that can be consumed by other resources; for example, a service, a CloudFormation stack, etc. Workload addons: Connecting to your workloads Here are several possible ways to access addon Resources from your ECS task or App Runner instance: If you need to add additional policies to your ECS task role or App Runner instance role, you can define an IAM ManagedPolicy addon resource in your template that holds the additional permissions, and then output it. The permission will be injected into your task or instance role. If you need to add a security group to your ECS service, you can define a Security Group in your template, and then add it as an Output . The security group will be automatically attached to your ECS service. If you'd like to inject a secret to your ECS task, you can define a Secret in your template, and then add it as an Output . The secret will be injected into your container and can be accessed as an environment variable in capital SNAKE_CASE. If you'd like to inject any resource value as an environment variable, you can create an Output to your ECS tasks. It will be injected into your container and may be accessed as an environment variable in capital SNAKE_CASE. Examples A Workload Addon Template For A DynamoDB Table Here is an example template for a workload-level DynamoDB table addon: # You can use any of these parameters to create conditions or mappings in your template. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : # Create your resource here, such as an AWS::DynamoDB::Table: # MyTable: # Type: AWS::DynamoDB::Table # Properties: # ... # 1. In addition to your resource, if you need to access the resource from your ECS task # then you need to create an AWS::IAM::ManagedPolicy that holds the permissions for your resource. # # For example, below is a sample policy for MyTable: MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:BatchGet* - dynamodb:DescribeStream - dynamodb:DescribeTable - dynamodb:Get* - dynamodb:Query - dynamodb:Scan - dynamodb:BatchWrite* - dynamodb:Create* - dynamodb:Delete* - dynamodb:Update* - dynamodb:PutItem Resource : !Sub ${ MyTable.Arn} Outputs : # 1. You need to output the IAM ManagedPolicy so that Copilot can add it as a managed policy to your ECS task role. MyTableAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref MyTableAccessPolicy # 2. If you want to inject a property of your resource as an environment variable to your ECS task, # then you need to define an output for it. # # For example, the output MyTableName will be injected in capital snake case, MY_TABLE_NAME, to your task. MyTableName : Description : \"The name of this DynamoDB.\" Value : !Ref MyTable","title":"Additional Workload Resources"},{"location":"docs/developing/addons/workload/#modeling-additional-workload-resources-with-aws-cloudformation","text":"Additional AWS resources, referred to as \"addons\" in the CLI, are any additional AWS services that a service or environment manifest does not integrate by default. For example, an addon can be a DynamoDB table, an S3 bucket, or an RDS Aurora Serverless cluster that your service needs to read or write to. You can define additional resources for a workload (such as a Load Balanced Web Service or a Scheduled Job ). The lifecycle of workload addons will be managed by the workload and will be deleted once the workload is deleted. Alternatively, you can define additional shareable resource for an environment. Environment addons won't be deleted unless the environment is deleted. This page documents how to create workload-level addons. For environment-level addons, visit Modeling Additional Environment Resources with AWS CloudFormation .","title":"Modeling Additional Workload Resources with AWS CloudFormation"},{"location":"docs/developing/addons/workload/#how-do-i-add-an-s3-bucket-a-ddb-table-or-an-aurora-serverless-cluster","text":"Copilot provides the following commands to help you create certain kinds of addons: storage init will create a DynamoDB table, an S3 bucket, or an Aurora Serverless cluster. You can run copilot storage init from your workspace and be guided through some questions to help you set up these resources.","title":"How do I add an S3 bucket, a DDB Table, or an Aurora Serverless cluster?"},{"location":"docs/developing/addons/workload/#how-to-add-other-resources","text":"For other types of addons, you can add your own custom CloudFormation templates: You can store the custom templates in your workspace under copilot/<workload>/addons directory. When running copilot [svc/job] deploy , the custom addons template will be deployed along with your workload stack. Sample workspace layout with workload addons . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 webhook \u251c\u2500\u2500 addons # Store addons associated with the service \"webhook\". \u2502 \u2514\u2500\u2500 mytable-ddb.yaml \u2514\u2500\u2500 manifest.yaml","title":"How to add other resources?"},{"location":"docs/developing/addons/workload/#what-does-an-addon-template-look-like","text":"A workload addon template can be any valid CloudFormation template that satisfies the following: Include at least one Resource . The Parameters section must include App , Env , Name . you can customize your resource properties with Conditions or Mappings . We recommend following Amazon IAM best practices while defining AWS Managed Policies for the additional resources, including: Grant least privilege to the policies defined in your addons/ directory. Use policy conditions for extra security to restrict your policies to access only the resources defined in your addons/ directory.","title":"What does an addon template look like?"},{"location":"docs/developing/addons/workload/#writing-the-parameters-section","text":"There are a few parameters that Copilot requires you to define in your templates. Parameters : App : Type : String Env : Type : String Name : Type : String","title":"Writing the Parameters section"},{"location":"docs/developing/addons/workload/#customizing-the-parameters-section","text":"If you'd like to define parameters in addition to the ones required by Copilot, you can do so with a addons.parameters.yml file. . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # Add this file under your addons/ directory. In your template file, add the additional parameters under the Parameters section. In your addons.parameters.yml , define the values of those additional parameters. They can refer to values from your workload stack. Examples: Customize addon parameters # In \"webhook/addons/my-addon.yml\" Parameters : # Required parameters by AWS Copilot. App : Type : String Env : Type : String Name : Type : String # Additional parameters defined in addons.parameters.yml ServiceName : Type : String # In \"webhook/addons/addons.parameters.yml\" Parameters : ServiceName : !GetAtt Service.Name","title":"Customizing the Parameters section"},{"location":"docs/developing/addons/workload/#writing-the-conditions-and-the-mappings-sections","text":"Often, you want to configure your addon resources differently depending on certain conditions. For example, you could conditionally configure your DB resource's capacity depending on whether it is deploying to a production or a test environment. To do so, you can use the Conditions section and the Mappings section. Examples: Configure addons conditionally Using Mappings Using Conditions Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ]","title":"Writing the Conditions and the Mappings sections"},{"location":"docs/developing/addons/workload/#writing-the-outputs-section","text":"You can use the Outputs section to define any values that can be consumed by other resources; for example, a service, a CloudFormation stack, etc.","title":"Writing the Outputs section"},{"location":"docs/developing/addons/workload/#workload-addons-connecting-to-your-workloads","text":"Here are several possible ways to access addon Resources from your ECS task or App Runner instance: If you need to add additional policies to your ECS task role or App Runner instance role, you can define an IAM ManagedPolicy addon resource in your template that holds the additional permissions, and then output it. The permission will be injected into your task or instance role. If you need to add a security group to your ECS service, you can define a Security Group in your template, and then add it as an Output . The security group will be automatically attached to your ECS service. If you'd like to inject a secret to your ECS task, you can define a Secret in your template, and then add it as an Output . The secret will be injected into your container and can be accessed as an environment variable in capital SNAKE_CASE. If you'd like to inject any resource value as an environment variable, you can create an Output to your ECS tasks. It will be injected into your container and may be accessed as an environment variable in capital SNAKE_CASE.","title":"Workload addons: Connecting to your workloads"},{"location":"docs/developing/addons/workload/#examples","text":"","title":"Examples"},{"location":"docs/developing/addons/workload/#a-workload-addon-template-for-a-dynamodb-table","text":"Here is an example template for a workload-level DynamoDB table addon: # You can use any of these parameters to create conditions or mappings in your template. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : # Create your resource here, such as an AWS::DynamoDB::Table: # MyTable: # Type: AWS::DynamoDB::Table # Properties: # ... # 1. In addition to your resource, if you need to access the resource from your ECS task # then you need to create an AWS::IAM::ManagedPolicy that holds the permissions for your resource. # # For example, below is a sample policy for MyTable: MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:BatchGet* - dynamodb:DescribeStream - dynamodb:DescribeTable - dynamodb:Get* - dynamodb:Query - dynamodb:Scan - dynamodb:BatchWrite* - dynamodb:Create* - dynamodb:Delete* - dynamodb:Update* - dynamodb:PutItem Resource : !Sub ${ MyTable.Arn} Outputs : # 1. You need to output the IAM ManagedPolicy so that Copilot can add it as a managed policy to your ECS task role. MyTableAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref MyTableAccessPolicy # 2. If you want to inject a property of your resource as an environment variable to your ECS task, # then you need to define an output for it. # # For example, the output MyTableName will be injected in capital snake case, MY_TABLE_NAME, to your task. MyTableName : Description : \"The name of this DynamoDB.\" Value : !Ref MyTable","title":"A Workload Addon Template For A DynamoDB Table"},{"location":"docs/developing/overrides/cdk/","text":"CDK Overrides Attention Overriding CloudFormation templates is an advanced feature which can cause your stacks to not deploy successfully. Please use with caution! Copilot generates CloudFormation templates using configuration specified in the manifest . However, not all CloudFormation properties are configurable in the manifest. For example, you might want to configure the Ulimits for your workload container, but the property is not exposed in manifests. Overrides with yamlpatch or cdk allow you to add, delete, or replace any property or resource in a CloudFormation template. When should I use CDK overrides over YAML patch? Both options are a \"break the glass\" mechanism to access and configure functionality that is not surfaced by Copilot manifests . We recommend using the AWS Cloud Development Kit (CDK) overrides over YAML patches if you'd like to leverage the expressive power of a programming language. The CDK allows you to make safe and powerful modifications to your CloudFormation template. How to get started You can extend your CloudFormation template with the CDK by running the copilot [noun] override command. For example, you can run copilot svc override to update the template of a Load Balanced Web Service. The command will generate a new CDK application under the copilot/[name]/override directory with the following structure: . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json You can get started by editing the stack.ts file. For example, if you decided to override the ECS service properties with copilot svc override , the following stack.ts file will be generated for you to modify: import * as cdk from 'aws-cdk-lib' ; import { aws_ecs as ecs } from 'aws-cdk-lib' ; export class TransformedStack extends cdk . Stack { constructor ( scope : cdk.App , id : string , props? : cdk.StackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yaml' ), }); this . appName = template . getParameter ( 'AppName' ). valueAsString ; this . envName = template . getParameter ( 'EnvName' ). valueAsString ; this . transformService (); } // TODO: implement me. transformService () { const service = this . template . getResource ( \"Service\" ) as ecs . CfnService ; throw new error ( \"not implemented\" ); } } How does it work? As can be seen in the above stack.ts file, Copilot will use the cloudformation_include module provided by the CDK to help author transformations. This library is the CDK\u2019s recommendation from their \"Import or migrate an existing AWS CloudFormation template\" guide. It enables accessing the resources not surfaced by the Copilot manifest as L1 constructs . The CfnInclude object is initialized from the hidden .build/in.yaml CloudFormation template. This is how Copilot and the CDK communicate. Copilot writes the manifest-generated CloudFormation template under the .build/ directory, which then gets parsed by the cloudformation_include library into a CDK construct. Every time you run copilot [noun] package or copilot [noun] deploy , Copilot will first generate the CloudFormation template from the manifest file, and then pass it down to your CDK application to override properties. We highly recommend using the --diff flag with the package or deploy command to first visualize your CDK changes before a deployment. Examples The following example modifies the nlb resource of a Load Balanced Web Service to assign Elastic IP addresses to the Network Load Balancer. In this example, you can view how to: Delete a resource property. Create new resources. Modify a property of an existing resource. View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } The following example showcases how you can add a property for only a particular environment, such as a production environment: View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_iam as iam } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformEnvironmentManagerRole (); } transformEnvironmentManagerRole () { const environmentManagerRole = this . template . getResource ( \"EnvironmentManagerRole\" ) as iam . CfnRole ; if ( this . envName === \"prod\" ) { let assumeRolePolicy = environmentManagerRole . assumeRolePolicyDocument let statements = assumeRolePolicy . Statement statements . push ({ \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"ec2.amazonaws.com\" }, \"Action\" : \"sts:AssumeRole\" }) } } } The following example showcases how you can delete a resource, the Copilot-created default log group that holds service logs. View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; // Deletes the default log group resource. this . template . node . tryRemoveChild ( \"LogGroup\" ) } }","title":"CDK Overrides"},{"location":"docs/developing/overrides/cdk/#cdk-overrides","text":"Attention Overriding CloudFormation templates is an advanced feature which can cause your stacks to not deploy successfully. Please use with caution! Copilot generates CloudFormation templates using configuration specified in the manifest . However, not all CloudFormation properties are configurable in the manifest. For example, you might want to configure the Ulimits for your workload container, but the property is not exposed in manifests. Overrides with yamlpatch or cdk allow you to add, delete, or replace any property or resource in a CloudFormation template.","title":"CDK Overrides"},{"location":"docs/developing/overrides/cdk/#when-should-i-use-cdk-overrides-over-yaml-patch","text":"Both options are a \"break the glass\" mechanism to access and configure functionality that is not surfaced by Copilot manifests . We recommend using the AWS Cloud Development Kit (CDK) overrides over YAML patches if you'd like to leverage the expressive power of a programming language. The CDK allows you to make safe and powerful modifications to your CloudFormation template.","title":"When should I use CDK overrides over YAML patch?"},{"location":"docs/developing/overrides/cdk/#how-to-get-started","text":"You can extend your CloudFormation template with the CDK by running the copilot [noun] override command. For example, you can run copilot svc override to update the template of a Load Balanced Web Service. The command will generate a new CDK application under the copilot/[name]/override directory with the following structure: . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json You can get started by editing the stack.ts file. For example, if you decided to override the ECS service properties with copilot svc override , the following stack.ts file will be generated for you to modify: import * as cdk from 'aws-cdk-lib' ; import { aws_ecs as ecs } from 'aws-cdk-lib' ; export class TransformedStack extends cdk . Stack { constructor ( scope : cdk.App , id : string , props? : cdk.StackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yaml' ), }); this . appName = template . getParameter ( 'AppName' ). valueAsString ; this . envName = template . getParameter ( 'EnvName' ). valueAsString ; this . transformService (); } // TODO: implement me. transformService () { const service = this . template . getResource ( \"Service\" ) as ecs . CfnService ; throw new error ( \"not implemented\" ); } }","title":"How to get started"},{"location":"docs/developing/overrides/cdk/#how-does-it-work","text":"As can be seen in the above stack.ts file, Copilot will use the cloudformation_include module provided by the CDK to help author transformations. This library is the CDK\u2019s recommendation from their \"Import or migrate an existing AWS CloudFormation template\" guide. It enables accessing the resources not surfaced by the Copilot manifest as L1 constructs . The CfnInclude object is initialized from the hidden .build/in.yaml CloudFormation template. This is how Copilot and the CDK communicate. Copilot writes the manifest-generated CloudFormation template under the .build/ directory, which then gets parsed by the cloudformation_include library into a CDK construct. Every time you run copilot [noun] package or copilot [noun] deploy , Copilot will first generate the CloudFormation template from the manifest file, and then pass it down to your CDK application to override properties. We highly recommend using the --diff flag with the package or deploy command to first visualize your CDK changes before a deployment.","title":"How does it work?"},{"location":"docs/developing/overrides/cdk/#examples","text":"The following example modifies the nlb resource of a Load Balanced Web Service to assign Elastic IP addresses to the Network Load Balancer. In this example, you can view how to: Delete a resource property. Create new resources. Modify a property of an existing resource. View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } The following example showcases how you can add a property for only a particular environment, such as a production environment: View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_iam as iam } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformEnvironmentManagerRole (); } transformEnvironmentManagerRole () { const environmentManagerRole = this . template . getResource ( \"EnvironmentManagerRole\" ) as iam . CfnRole ; if ( this . envName === \"prod\" ) { let assumeRolePolicy = environmentManagerRole . assumeRolePolicyDocument let statements = assumeRolePolicy . Statement statements . push ({ \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"ec2.amazonaws.com\" }, \"Action\" : \"sts:AssumeRole\" }) } } } The following example showcases how you can delete a resource, the Copilot-created default log group that holds service logs. View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; // Deletes the default log group resource. this . template . node . tryRemoveChild ( \"LogGroup\" ) } }","title":"Examples"},{"location":"docs/developing/overrides/taskdef-overrides/","text":"Task Definition Overrides Attention Task definition overrides is deprecated. We recommend using YAML patch overrides instead, as it allows you to edit the entire CloudFormation template and supports the remove operation. Copilot generates CloudFormation templates using configuration specified in the manifest . However, there are fields that are not configurable in the manifest. For example, You might want to configure the Ulimits for your workload container, but it is not exposed in our manifest. You can configure additional ECS Task Definition settings by specifying taskdef_overrides rules, which will be applied to the CloudFormation template that Copilot generates out of the manifest. How to specify override rules? For each override rule, you need to specify a path of the CloudFormation resource field you want to override, and a value of that field. The following is an example valid taskdef_overrides field that can be applied to a manifest file: taskdef_overrides : - path : ContainerDefinitions[0].Cpu value : 512 - path : ContainerDefinitions[0].Memory value : 1024 Each rule is applied sequentially to the CloudFormation template. The resulting CloudFormation template becomes the target of the next rule. Evaluation continues until all rules are successfully applied or an error is encountered. Path Evaluation The path field is a '.' character separated path to a target Task Definition field under Properties in CloudFormation . Copilot recursively inserts fields if they don't exist in the CloudFormation template. For example: if a rule has the path A.B[-].C ( B and C don't exist), Copilot will insert the field B and C . A concrete example can be found below . If the target path specifies a member that already exists, that member's value is replaced. To append a new member to a list field such as Ulimits you can use the special character - : Ulimits[-] . Attention The following fields in the task definition are not allowed to be modified. Family ContainerDefinitions[ ].Name Testing In order to ensure that your override rules behave as expected, we recommend running copilot svc package or copilot job package to preview the generated CloudFormation template. Examples Add Ulimits to the main container taskdef_overrides : - path : ContainerDefinitions[0].Ulimits[-] value : Name : \"cpu\" SoftLimit : 1024 HardLimit : 2048 Expose an extra UDP port taskdef_overrides : - path : \"ContainerDefinitions[0].PortMappings[-].ContainerPort\" value : 2056 # PortMappings[1] gets the port mapping added by the previous rule, since by default Copilot creates a port mapping. - path : \"ContainerDefinitions[0].PortMappings[1].Protocol\" value : \"udp\" Give read-only access to the root file system taskdef_overrides : - path : \"ContainerDefinitions[0].ReadonlyRootFilesystem\" value : true","title":"Task Definition Overrides"},{"location":"docs/developing/overrides/taskdef-overrides/#task-definition-overrides","text":"Attention Task definition overrides is deprecated. We recommend using YAML patch overrides instead, as it allows you to edit the entire CloudFormation template and supports the remove operation. Copilot generates CloudFormation templates using configuration specified in the manifest . However, there are fields that are not configurable in the manifest. For example, You might want to configure the Ulimits for your workload container, but it is not exposed in our manifest. You can configure additional ECS Task Definition settings by specifying taskdef_overrides rules, which will be applied to the CloudFormation template that Copilot generates out of the manifest.","title":"Task Definition Overrides"},{"location":"docs/developing/overrides/taskdef-overrides/#how-to-specify-override-rules","text":"For each override rule, you need to specify a path of the CloudFormation resource field you want to override, and a value of that field. The following is an example valid taskdef_overrides field that can be applied to a manifest file: taskdef_overrides : - path : ContainerDefinitions[0].Cpu value : 512 - path : ContainerDefinitions[0].Memory value : 1024 Each rule is applied sequentially to the CloudFormation template. The resulting CloudFormation template becomes the target of the next rule. Evaluation continues until all rules are successfully applied or an error is encountered.","title":"How to specify override rules?"},{"location":"docs/developing/overrides/taskdef-overrides/#path-evaluation","text":"The path field is a '.' character separated path to a target Task Definition field under Properties in CloudFormation . Copilot recursively inserts fields if they don't exist in the CloudFormation template. For example: if a rule has the path A.B[-].C ( B and C don't exist), Copilot will insert the field B and C . A concrete example can be found below . If the target path specifies a member that already exists, that member's value is replaced. To append a new member to a list field such as Ulimits you can use the special character - : Ulimits[-] . Attention The following fields in the task definition are not allowed to be modified. Family ContainerDefinitions[ ].Name","title":"Path Evaluation"},{"location":"docs/developing/overrides/taskdef-overrides/#testing","text":"In order to ensure that your override rules behave as expected, we recommend running copilot svc package or copilot job package to preview the generated CloudFormation template.","title":"Testing"},{"location":"docs/developing/overrides/taskdef-overrides/#examples","text":"","title":"Examples"},{"location":"docs/developing/overrides/taskdef-overrides/#add-ulimits-to-the-main-container","text":"taskdef_overrides : - path : ContainerDefinitions[0].Ulimits[-] value : Name : \"cpu\" SoftLimit : 1024 HardLimit : 2048","title":"Add Ulimits to the main container"},{"location":"docs/developing/overrides/taskdef-overrides/#expose-an-extra-udp-port","text":"taskdef_overrides : - path : \"ContainerDefinitions[0].PortMappings[-].ContainerPort\" value : 2056 # PortMappings[1] gets the port mapping added by the previous rule, since by default Copilot creates a port mapping. - path : \"ContainerDefinitions[0].PortMappings[1].Protocol\" value : \"udp\"","title":"Expose an extra UDP port"},{"location":"docs/developing/overrides/taskdef-overrides/#give-read-only-access-to-the-root-file-system","text":"taskdef_overrides : - path : \"ContainerDefinitions[0].ReadonlyRootFilesystem\" value : true","title":"Give read-only access to the root file system"},{"location":"docs/developing/overrides/yamlpatch/","text":"YAML Patch Overrides Attention Overriding CloudFormation templates is an advanced feature which can cause your stacks to not deploy successfully. Please use with caution! Copilot generates CloudFormation templates using configuration specified in the manifest . However, not all CloudFormation properties are configurable in the manifest. For example, you might want to configure the Ulimits for your workload container, but the property is not exposed in manifests. Overrides with yamlpatch or cdk allow you to add, delete, or replace any property or resource in a CloudFormation template. When should I use YAML Patch over CDK overrides? Both options are a \"break the glass\" mechanism to access and configure functionality that is not surfaced by Copilot manifests . We recommend using YAML patch over the AWS Cloud Development Kit (CDK) overrides if 1) you do not want to have a dependency on any other tooling and framework (such as Node.js and the CDK ), or 2) you have to write only a handful modifications. How to get started You can extend your CloudFormation template with YAML patches by running the copilot [noun] override command. For example, you can run copilot svc override to update the template of a Load Balanced Web Service. The command will generate a sample cfn.patches.yml file under the copilot/[name]/overrides directory. How does it work? The syntax of cfn.patches.yml conforms to RFC6902: JSON Patch . Currently, the CLI supports three operations: add , remove , and replace . Here is a sample cfn.patches.yml file: - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool Each patch is applied sequentially to the CloudFormation template. The resulting template becomes the target of the next patch. Evaluation continues until all patches are successfully applied or an error is encountered. Path evaluation The path field of a patch conforms to the RFC6901: JSON Pointer syntax. Each path value is separated by the / character and evaluation stops once the target CloudFormation property is reached. If the target path is an array, the reference token must be either: characters comprised of digits starting at 0. exactly the single character - when the operation is add , to append to the array. Additional Examples To add a new property to an existing resource: - op : add path : /Resources/LogGroup/Properties/Tags value : - Key : keyname Value : value1 To add a new property in a specific index of an array: - op : add path : /Resources/TaskDefinition/Properties/ContainerDefinitions/0/EnvironmentFiles/0 value : arn:aws:s3:::bucket_name/key_name To add a new element at the end of an array: - op : add path : /Resources/TaskRole/Properties/Policies/- value : PolicyName : DynamoDBReader PolicyDocument : Version : \"2012-10-17\" Statement : - Effect : Allow Action : - dynamodb:Get* Resource : '*' To replace an existing property's value: - op : replace path : /Resources/LogGroup/Properties/RetentionInDays value : 60 To delete an element from an array, you must reference the exact index: - op : remove path : /Resources/ExecutionRole/Properties/Policies/0/PolicyDocument/Statement/1/Action/0 To delete an entire resource: - op : remove path : /Resources/ExecutionRole","title":"YAML Patch Overrides"},{"location":"docs/developing/overrides/yamlpatch/#yaml-patch-overrides","text":"Attention Overriding CloudFormation templates is an advanced feature which can cause your stacks to not deploy successfully. Please use with caution! Copilot generates CloudFormation templates using configuration specified in the manifest . However, not all CloudFormation properties are configurable in the manifest. For example, you might want to configure the Ulimits for your workload container, but the property is not exposed in manifests. Overrides with yamlpatch or cdk allow you to add, delete, or replace any property or resource in a CloudFormation template.","title":"YAML Patch Overrides"},{"location":"docs/developing/overrides/yamlpatch/#when-should-i-use-yaml-patch-over-cdk-overrides","text":"Both options are a \"break the glass\" mechanism to access and configure functionality that is not surfaced by Copilot manifests . We recommend using YAML patch over the AWS Cloud Development Kit (CDK) overrides if 1) you do not want to have a dependency on any other tooling and framework (such as Node.js and the CDK ), or 2) you have to write only a handful modifications.","title":"When should I use YAML Patch over CDK overrides?"},{"location":"docs/developing/overrides/yamlpatch/#how-to-get-started","text":"You can extend your CloudFormation template with YAML patches by running the copilot [noun] override command. For example, you can run copilot svc override to update the template of a Load Balanced Web Service. The command will generate a sample cfn.patches.yml file under the copilot/[name]/overrides directory.","title":"How to get started"},{"location":"docs/developing/overrides/yamlpatch/#how-does-it-work","text":"The syntax of cfn.patches.yml conforms to RFC6902: JSON Patch . Currently, the CLI supports three operations: add , remove , and replace . Here is a sample cfn.patches.yml file: - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool Each patch is applied sequentially to the CloudFormation template. The resulting template becomes the target of the next patch. Evaluation continues until all patches are successfully applied or an error is encountered.","title":"How does it work?"},{"location":"docs/developing/overrides/yamlpatch/#path-evaluation","text":"The path field of a patch conforms to the RFC6901: JSON Pointer syntax. Each path value is separated by the / character and evaluation stops once the target CloudFormation property is reached. If the target path is an array, the reference token must be either: characters comprised of digits starting at 0. exactly the single character - when the operation is add , to append to the array.","title":"Path evaluation"},{"location":"docs/developing/overrides/yamlpatch/#additional-examples","text":"To add a new property to an existing resource: - op : add path : /Resources/LogGroup/Properties/Tags value : - Key : keyname Value : value1 To add a new property in a specific index of an array: - op : add path : /Resources/TaskDefinition/Properties/ContainerDefinitions/0/EnvironmentFiles/0 value : arn:aws:s3:::bucket_name/key_name To add a new element at the end of an array: - op : add path : /Resources/TaskRole/Properties/Policies/- value : PolicyName : DynamoDBReader PolicyDocument : Version : \"2012-10-17\" Statement : - Effect : Allow Action : - dynamodb:Get* Resource : '*' To replace an existing property's value: - op : replace path : /Resources/LogGroup/Properties/RetentionInDays value : 60 To delete an element from an array, you must reference the exact index: - op : remove path : /Resources/ExecutionRole/Properties/Policies/0/PolicyDocument/Statement/1/Action/0 To delete an entire resource: - op : remove path : /Resources/ExecutionRole","title":"Additional Examples"},{"location":"docs/getting-started/first-app-tutorial/","text":"AWS Copilot makes it easy to deploy your containers to AWS in just a few steps. In this tutorial we\u2019re going to do just that - we\u2019re going to deploy a sample front end service that you can visit in your browser. While we\u2019ll be using a sample static website in this example, you can use AWS Copilot to build and deploy any container app with a Dockerfile. After we get your service all set up, we\u2019ll show you how to delete the resources Copilot created to avoid charges. Sound fun? Let\u2019s do it! Step 1: Download & Configure AWS Copilot You\u2019ll need a few things to use AWS Copilot - the AWS Copilot binary, AWS CLI, Docker Desktop (needs to be running) and AWS credentials. Follow our instructions here on how to set up and configure all these tools. Make sure that you have a default profile! Run aws configure to set one up! Step 2: Download some code to deploy In this example, we\u2019ll be using a sample app that\u2019s just a simple static website - but if you already have something you\u2019d like to deploy, just open your terminal and cd into your Dockerfile\u2019s directory. Otherwise you can just clone our sample repository. In your terminal, copy and paste this code. This will clone our sample app and change directories to it. $ git clone https://github.com/aws-samples/aws-copilot-sample-service example $ cd example Step 3: Set up our app Now this is where the fun starts! We have our service code and our Dockerfile and we want to get it deployed to AWS. Let\u2019s have AWS Copilot help us do just that! Attention If you have an existing copilot/ directory that you created for other purposes, you may find Copilot creating files in that directory. If this happens, you can make an empty directory also named copilot/ closer to your working directory. Copilot will use this empty directory instead. From within your code directory run: $ copilot init Step 4: Answer a few questions The next thing we\u2019re going to do is answer a few questions from Copilot. Copilot will use these questions to help us choose the best AWS infrastructure for your service. There\u2019s only a few so let\u2019s go through them: \u201cWhat would you like to name your application\u201d - an application is a collection of services. In this example we\u2019ll only have one service in our app, but if you wanted to have a multi-service app, Copilot makes that easy. Let\u2019s call this app example-app . \u201cWhich service type best represents your service's architecture?\u201d - Copilot is asking us what we want our service to do - do we want it to service traffic? Do we want it to be a private backend service? For us, we want our app to be accessible from the web, so let's hit 'Enter' to select Load Balanced Web Service . \u201cWhat do you want to name this Load Balanced Web Service?\u201d - now what should we call our service in our app? Be as creative as you want - but I recommend naming this service front-end . \u201cWhich Dockerfile would you like to use for front-end?\u201d - go ahead and choose the default Dockerfile here. This is the service that Copilot will build and deploy for you. Once you choose your Dockerfile, Copilot will start setting up the AWS infrastructure to manage your service. Step 5: Deploy your service Once Copilot finishes setting up the infrastructure to manage your app, you\u2019ll be asked if you want to deploy your service to a test environment type yes. Now we can wait a few minutes \u23f3 while Copilot sets up all the resources needed to run your service. After all the infrastructure for your service is set up, Copilot will build your image and push it to Amazon ECR, and start deploying to Amazon ECS on AWS Fargate. After your deployment completes, your service will be up and running and Copilot will print a link to the URL \ud83c\udf89! Step 6: Clean up Now that you've deployed your service, let's go ahead and run copilot app delete - this will delete all the resources Copilot set up for your application, including your ECS Service and the ECR Repository. To delete everything run: $ copilot app delete Congratulations! Congratulations! You have learned how to use AWS Copilot to set up your container application, deploy it to Amazon ECS on AWS Fargate, and delete it. AWS Copilot is a command line tool that helps you develop, release and operate your container apps on AWS. We hope you had fun deploying your app. Ready to dive deeper into AWS Copilot and learn how to build and manage production ready container apps on AWS? Check out the Developing section in the sidebar.","title":"Deploy your first application"},{"location":"docs/getting-started/first-app-tutorial/#step-1-download-configure-aws-copilot","text":"You\u2019ll need a few things to use AWS Copilot - the AWS Copilot binary, AWS CLI, Docker Desktop (needs to be running) and AWS credentials. Follow our instructions here on how to set up and configure all these tools. Make sure that you have a default profile! Run aws configure to set one up!","title":"Step 1: Download &amp; Configure AWS Copilot"},{"location":"docs/getting-started/first-app-tutorial/#step-2-download-some-code-to-deploy","text":"In this example, we\u2019ll be using a sample app that\u2019s just a simple static website - but if you already have something you\u2019d like to deploy, just open your terminal and cd into your Dockerfile\u2019s directory. Otherwise you can just clone our sample repository. In your terminal, copy and paste this code. This will clone our sample app and change directories to it. $ git clone https://github.com/aws-samples/aws-copilot-sample-service example $ cd example","title":"Step 2: Download some code to deploy"},{"location":"docs/getting-started/first-app-tutorial/#step-3-set-up-our-app","text":"Now this is where the fun starts! We have our service code and our Dockerfile and we want to get it deployed to AWS. Let\u2019s have AWS Copilot help us do just that! Attention If you have an existing copilot/ directory that you created for other purposes, you may find Copilot creating files in that directory. If this happens, you can make an empty directory also named copilot/ closer to your working directory. Copilot will use this empty directory instead. From within your code directory run: $ copilot init","title":"Step 3: Set up our app"},{"location":"docs/getting-started/first-app-tutorial/#step-4-answer-a-few-questions","text":"The next thing we\u2019re going to do is answer a few questions from Copilot. Copilot will use these questions to help us choose the best AWS infrastructure for your service. There\u2019s only a few so let\u2019s go through them: \u201cWhat would you like to name your application\u201d - an application is a collection of services. In this example we\u2019ll only have one service in our app, but if you wanted to have a multi-service app, Copilot makes that easy. Let\u2019s call this app example-app . \u201cWhich service type best represents your service's architecture?\u201d - Copilot is asking us what we want our service to do - do we want it to service traffic? Do we want it to be a private backend service? For us, we want our app to be accessible from the web, so let's hit 'Enter' to select Load Balanced Web Service . \u201cWhat do you want to name this Load Balanced Web Service?\u201d - now what should we call our service in our app? Be as creative as you want - but I recommend naming this service front-end . \u201cWhich Dockerfile would you like to use for front-end?\u201d - go ahead and choose the default Dockerfile here. This is the service that Copilot will build and deploy for you. Once you choose your Dockerfile, Copilot will start setting up the AWS infrastructure to manage your service.","title":"Step 4: Answer a few questions"},{"location":"docs/getting-started/first-app-tutorial/#step-5-deploy-your-service","text":"Once Copilot finishes setting up the infrastructure to manage your app, you\u2019ll be asked if you want to deploy your service to a test environment type yes. Now we can wait a few minutes \u23f3 while Copilot sets up all the resources needed to run your service. After all the infrastructure for your service is set up, Copilot will build your image and push it to Amazon ECR, and start deploying to Amazon ECS on AWS Fargate. After your deployment completes, your service will be up and running and Copilot will print a link to the URL \ud83c\udf89!","title":"Step 5: Deploy your service"},{"location":"docs/getting-started/first-app-tutorial/#step-6-clean-up","text":"Now that you've deployed your service, let's go ahead and run copilot app delete - this will delete all the resources Copilot set up for your application, including your ECS Service and the ECR Repository. To delete everything run: $ copilot app delete","title":"Step 6: Clean up"},{"location":"docs/getting-started/first-app-tutorial/#congratulations","text":"Congratulations! You have learned how to use AWS Copilot to set up your container application, deploy it to Amazon ECS on AWS Fargate, and delete it. AWS Copilot is a command line tool that helps you develop, release and operate your container apps on AWS. We hope you had fun deploying your app. Ready to dive deeper into AWS Copilot and learn how to build and manage production ready container apps on AWS? Check out the Developing section in the sidebar.","title":"Congratulations!"},{"location":"docs/getting-started/install/","text":"You can install AWS Copilot through Homebrew or by downloading the binaries directly. Homebrew \ud83c\udf7b brew install aws/tap/copilot-cli Are you using Rosetta on a Mac machine with Apple silicon? If your homebrew was installed with Rosetta , then the brew install will install the amd64 build. If this is not what you want, please either reinstall homebrew without Rosetta, or use the manual installation option below. Manually Copy and paste the command into your terminal. macOS Linux x86 (64-bit) Linux (ARM) Windows Command to install curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help Command to install curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help Command to install curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux-arm64 && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help Command to install Invoke-WebRequest -OutFile 'C:\\Program Files\\copilot.exe' https://github.com/aws/copilot-cli/releases/latest/download/copilot-windows.exe Tip Please use the Windows Terminal to have the best user experience. If you encounter permissions issues, ensure that you are running your terminal as an administrator. Info To download a specific version, replace \"latest\" with the specific version. For example, to download v0.6.0 on macOS, type: curl -Lo copilot https://github.com/aws/copilot-cli/releases/download/v0.6.0/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help","title":"Install Copilot"},{"location":"docs/getting-started/install/#homebrew","text":"brew install aws/tap/copilot-cli Are you using Rosetta on a Mac machine with Apple silicon? If your homebrew was installed with Rosetta , then the brew install will install the amd64 build. If this is not what you want, please either reinstall homebrew without Rosetta, or use the manual installation option below.","title":"Homebrew \ud83c\udf7b"},{"location":"docs/getting-started/install/#manually","text":"Copy and paste the command into your terminal. macOS Linux x86 (64-bit) Linux (ARM) Windows Command to install curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help Command to install curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help Command to install curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux-arm64 && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help Command to install Invoke-WebRequest -OutFile 'C:\\Program Files\\copilot.exe' https://github.com/aws/copilot-cli/releases/latest/download/copilot-windows.exe Tip Please use the Windows Terminal to have the best user experience. If you encounter permissions issues, ensure that you are running your terminal as an administrator. Info To download a specific version, replace \"latest\" with the specific version. For example, to download v0.6.0 on macOS, type: curl -Lo copilot https://github.com/aws/copilot-cli/releases/download/v0.6.0/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help","title":"Manually"},{"location":"docs/getting-started/verify/","text":"The AWS Copilot CLI executables are cryptographically signed using PGP signatures. The PGP signatures can be used to verify the validity of the AWS Copilot CLI executable. Use the following steps to verify the signatures using the GnuPG tool. Download and install GnuPG. For more information, see the GnuPG website . For macOS, we recommend using Homebrew. Install Homebrew using the instructions from their website. For more information, see Homebrew . After Homebrew is installed, use the following command from your macOS terminal. brew install gnupg For Linux systems, install gpg using the package manager on your flavor of Linux. For Windows systems, download and use the Windows simple installer from the GnuPG website. For more information, see GnuPG Download . Retrieve the Amazon ECS PGP public key. You can use a command to do this or manually create the key and then import it. Option 1: Retrieve the key with the following command. gpg --keyserver hkps://keyserver.ubuntu.com --recv BCE9D9A42D51784F Notes on key servers (optional) Some alternative key servers are: hkps://keys.openpgp.org hkps://pgp.mit.edu To switch to a different key server, verify the stored-key using this command first: gpg --keyserver ${KEYSERVER} --verbose --import-options show-only --recv BCE9D9A42D51784F . Option 2: Create a file with the following contents of the Amazon ECS PGP public key and then import it. -----BEGIN PGP PUBLIC KEY BLOCK----- Version: GnuPG v2 mQINBFq1SasBEADliGcT1NVJ1ydfN8DqebYYe9ne3dt6jqKFmKowLmm6LLGJe7HU jGtqhCWRDkN+qPpHqdArRgDZAtn2pXY5fEipHgar4CP8QgRnRMO2fl74lmavr4Vg 7K/KH8VHlq2uRw32/B94XLEgRbGTMdWFdKuxoPCttBQaMj3LGn6Pe+6xVWRkChQu BoQAhjBQ+bEm0kNy0LjNgjNlnL3UMAG56t8E3LANIgGgEnpNsB1UwfWluPoGZoTx N+6pHBJrKIL/1v/ETU4FXpYw2zvhWNahxeNRnoYj3uycHkeliCrw4kj0+skizBgO 2K7oVX8Oc3j5+ZilhL/qDLXmUCb2az5cMM1mOoF8EKX5HaNuq1KfwJxqXE6NNIcO lFTrT7QwD5fMNld3FanLgv/ZnIrsSaqJOL6zRSq8O4LN1OWBVbndExk2Kr+5kFxn 5lBPgfPgRj5hQ+KTHMa9Y8Z7yUc64BJiN6F9Nl7FJuSsfqbdkvRLsQRbcBG9qxX3 rJAEhieJzVMEUNl+EgeCkxj5xuSkNU7zw2c3hQZqEcrADLV+hvFJktOz9Gm6xzbq lTnWWCz4xrIWtuEBA2qE+MlDheVd78a3gIsEaSTfQq0osYXaQbvlnSWOoc1y/5Zb zizHTJIhLtUyls9WisP2s0emeHZicVMfW61EgPrJAiupgc7kyZvFt4YwfwARAQAB tCRBbWF6b24gRUNTIDxlY3Mtc2VjdXJpdHlAYW1hem9uLmNvbT6JAhwEEAECAAYF AlrjL0YACgkQHivRXs0TaQrg1g/+JppwPqHnlVPmv7lessB8I5UqZeD6p6uVpHd7 Bs3pcPp8BV7BdRbs3sPLt5bV1+rkqOlw+0gZ4Q/ue/YbWtOAt4qY0OcEo0HgcnaX lsB827QIfZIVtGWMhuh94xzm/SJkvngml6KB3YJNnWP61A9qJ37/VbVVLzvcmazA McWB4HUMNrhd0JgBCo0gIpqCbpJEvUc02Bjn23eEJsS9kC7OUAHyQkVnx4d9UzXF 4OoISF6hmQKIBoLnRrAlj5Qvs3GhvHQ0ThYq0Grk/KMJJX2CSqt7tWJ8gk1n3H3Y SReRXJRnv7DsDDBwFgT6r5Q2HW1TBUvaoZy5hF6maD09nHcNnvBjqADzeT8Tr/Qu bBCLzkNSYqqkpgtwv7seoD2P4n1giRvDAOEfMZpVkUr+C252IaH1HZFEz+TvBVQM Y8OWWxmIJW+J6evjo3N1eO19UHv71jvoF8zljbI4bsL2c+QTJmOv7nRqzDQgCWyp Id/v2dUVVTk1j9omuLBBwNJzQCB+72LcIzJhYmaP1HC4LcKQG+/f41exuItenatK lEJQhYtyVXcBlh6Yn/wzNg2NWOwb3vqY/F7m6u9ixAwgtIMgPCDE4aJ86zrrXYFz N2HqkTSQh77Z8KPKmyGopsmN/reMuilPdINb249nA0dzoN+nj+tTFOYCIaLaFyjs Z0r1QAOJAjkEEwECACMFAlq1SasCGwMHCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIX gAAKCRC86dmkLVF4T9iFEACEnkm1dNXsWUx34R3c0vamHrPxvfkyI1FlEUen8D1h uX9xy6jCEROHWEp0rjGK4QDPgM93sWJ+s1UAKg214QRVzft0y9/DdR+twApA0fzy uavIthGd6+03jAAo6udYDE+cZC3P7XBbDiYEWk4XAF9I1JjB8hTZUgvXBL046JhG eM17+crgUyQeetkiOQemLbsbXQ40Bd9V7zf7XJraFd8VrwNUwNb+9KFtgAsc9rk+ YIT/PEf+YOPysgcxI4sTWghtyCulVnuGoskgDv4v73PALU0ieUrvvQVqWMRvhVx1 0X90J7cC1KOyhlEQQ1aFTgmQjmXexVTwIBm8LvysFK6YXM41KjOrlz3+6xBIm/qe bFyLUnf4WoiuOplAaJhK9pRY+XEnGNxdtN4D26Kd0F+PLkm3Tr3Hy3b1Ok34FlGr KVHUq1TZD7cvMnnNKEELTUcKX+1mV3an16nmAg/my1JSUt6BNK2rJpY1s/kkSGSE XQ4zuF2IGCpvBFhYAlt5Un5zwqkwwQR3/n2kwAoDzonJcehDw/C/cGos5D0aIU7I K2X2aTD3+pA7Mx3IMe2hqmYqRt9X42yF1PIEVRneBRJ3HDezAgJrNh0GQWRQkhIx gz6/cTR+ekr5TptVszS9few2GpI5bCgBKBisZIssT89aw7mAKWut0Gcm4qM9/yK6 1bkCDQRatUmrARAAxNPvVwreJ2yAiFcUpdRlVhsuOgnxvs1QgsIw3H7+Pacr9Hpe 8uftYZqdC82KeSKhpHq7c8gMTMucIINtH25x9BCc73E33EjCL9Lqov1TL7+QkgHe T+JIhZwdD8Mx2K+LVVVu/aWkNrfMuNwyDUciSI4D5QHa8T+F8fgN4OTpwYjirzel 5yoICMr9hVcbzDNv/ozKCxjx+XKgnFc3wrnDfJfntfDAT7ecwbUTL+viQKJ646s+ psiqXRYtVvYInEhLVrJ0aV6zHFoigE/Bils6/g7ru1Q6CEHqEw++APs5CcE8VzJu WAGSVHZgun5Y9N4quR/M9Vm+IPMhTxrAg7rOvyRN9cAXfeSMf77I+XTifigNna8x t/MOdjXr1fjF4pThEi5u6WsuRdFwjY2azEv3vevodTi4HoJReH6dFRa6y8c+UDgl 2iHiOKIpQqLbHEfQmHcDd2fix+AaJKMnPGNku9qCFEMbgSRJpXz6BfwnY1QuKE+I R6jA0frUNt2jhiGG/F8RceXzohaaC/Cx7LUCUFWc0n7z32C9/Dtj7I1PMOacdZzz bjJzRKO/ZDv+UN/c9dwAkllzAyPMwGBkUaY68EBstnIliW34aWm6IiHhxioVPKSp VJfyiXPO0EXqujtHLAeChfjcns3I12YshT1dv2PafG53fp33ZdzeUgsBo+EAEQEA AYkCHwQYAQIACQUCWrVJqwIbDAAKCRC86dmkLVF4T+ZdD/9x/8APzgNJF3o3STrF jvnV1ycyhWYGAeBJiu7wjsNWwzMFOv15tLjB7AqeVxZn+WKDD/mIOQ45OZvnYZuy X7DR0JszaH9wrYTxZLVruAu+t6UL0y/XQ4L1GZ9QR6+r+7t1Mvbfy7BlHbvX/gYt Rwe/uwdibI0CagEzyX+2D3kTOlHO5XThbXaNf8AN8zha91Jt2Q2UR2X5T6JcwtMz FBvZnl3LSmZyE0EQehS2iUurU4uWOpGppuqVnbi0jbCvCHKgDGrqZ0smKNAQng54 F365W3g8AfY48s8XQwzmcliowYX9bT8PZiEi0J4QmQh0aXkpqZyFefuWeOL2R94S XKzr+gRh3BAULoqF+qK+IUMxTip9KTPNvYDpiC66yBiT6gFDji5Ca9pGpJXrC3xe TXiKQ8DBWDhBPVPrruLIaenTtZEOsPc4I85yt5U9RoPTStcOr34s3w5yEaJagt6S Gc5r9ysjkfH6+6rbi1ujxMgROSqtqr+RyB+V9A5/OgtNZc8llK6u4UoOCde8jUUW vqWKvjJB/Kz3u4zaeNu2ZyyHaOqOuH+TETcW+jsY9IhbEzqN5yQYGi4pVmDkY5vu lXbJnbqPKpRXgM9BecV9AMbPgbDq/5LnHJJXg+G8YQOgp4lR/hC1TEFdIp5wM8AK CWsENyt2o1rjgMXiZOMF8A5oBLkCDQRatUuSARAAr77kj7j2QR2SZeOSlFBvV7oS mFeSNnz9xZssqrsm6bTwSHM6YLDwc7Sdf2esDdyzONETwqrVCg+FxgL8hmo9hS4c rR6tmrP0mOmptr+xLLsKcaP7ogIXsyZnrEAEsvW8PnfayoiPCdc3cMCR/lTnHFGA 7EuR/XLBmi7Qg9tByVYQ5Yj5wB9V4B2yeCt3XtzPqeLKvaxl7PNelaHGJQY/xo+m V0bndxf9IY+4oFJ4blD32WqvyxESo7vW6WBh7oqv3Zbm0yQrr8a6mDBpqLkvWwNI 3kpJR974tg5o5LfDu1BeeyHWPSGm4U/G4JB+JIG1ADy+RmoWEt4BqTCZ/knnoGvw D5sTCxbKdmuOmhGyTssoG+3OOcGYHV7pWYPhazKHMPm201xKCjH1RfzRULzGKjD+ yMLT1I3AXFmLmZJXikAOlvE3/wgMqCXscbycbLjLD/bXIuFWo3rzoezeXjgi/DJx jKBAyBTYO5nMcth1O9oaFd9d0HbsOUDkIMnsgGBE766Piro6MHo0T0rXl07Tp4pI rwuSOsc6XzCzdImj0Wc6axS/HeUKRXWdXJwno5awTwXKRJMXGfhCvSvbcbc2Wx+L IKvmB7EB4K3fmjFFE67yolmiw2qRcUBfygtH3eL5XZU28MiCpue8Y8GKJoBAUyvf KeM1rO8Jm3iRAc5a/D0AEQEAAYkEPgQYAQIACQUCWrVLkgIbAgIpCRC86dmkLVF4 T8FdIAQZAQIABgUCWrVLkgAKCRDePL1hra+LjtHYD/9MucxdFe6bXO1dQR4tKhhQ P0LRqy6zlBY9ILCLowNdGZdqorogUiUymgn3VhEhVtxTOoHcN7qOuM01PNsRnOeS EYjf8Xrb1clzkD6xULwmOclTb9bBxnBc/4PFvHAbZW3QzusaZniNgkuxt6BTfloS Of4inq71kjmGK+TlzQ6mUMQUg228NUQC+a84EPqYyAeY1sgvgB7hJBhYL0QAxhcW 6m20Rd8iEc6HyzJ3yCOCsKip/nRWAbf0OvfHfRBp0+m0ZwnJM8cPRFjOqqzFpKH9 HpDmTrC4wKP1+TL52LyEqNh4yZitXmZNV7giSRIkk0eDSko+bFy6VbMzKUMkUJK3 D3eHFAMkujmbfJmSMTJOPGn5SB1HyjCZNx6bhIIbQyEUB9gKCmUFaqXKwKpF6rj0 iQXAJxLR/shZ5Rk96VxzOphUl7T90m/PnUEEPwq8KsBhnMRgxa0RFidDP+n9fgtv HLmrOqX9zBCVXh0mdWYLrWvmzQFWzG7AoE55fkf8nAEPsalrCdtaNUBHRXA0OQxG AHMOdJQQvBsmqMvuAdjkDWpFu5y0My5ddU+hiUzUyQLjL5Hhd5LOUDdewlZgIw1j xrEAUzDKetnemM8GkHxDgg8koev5frmShJuce7vSjKpCNg3EIJSgqMOPFjJuLWtZ vjHeDNbJy6uNL65ckJy6WhGjEADS2WAW1D6Tfekkc21SsIXk/LqEpLMR/0g5OUif wcEN1rS9IJXBwIy8MelN9qr5KcKQLmfdfBNEyyceBhyVl0MDyHOKC+7PofMtkGBq 13QieRHv5GJ8LB3fclqHV8pwTTo3Bc8z2g0TjmUYAN/ixETdReDoKavWJYSE9yoM aaJu279ioVTrwpECse0XkiRyKToTjwOb73CGkBZZpJyqux/rmCV/fp4ALdSW8zbz FJVORaivhoWwzjpfQKhwcU9lABXi2UvVm14v0AfeI7oiJPSU1zM4fEny4oiIBXlR zhFNih1UjIu82X16mTm3BwbIga/s1fnQRGzyhqUIMii+mWra23EwjChaxpvjjcUH 5ilLc5Zq781aCYRygYQw+hu5nFkOH1R+Z50Ubxjd/aqUfnGIAX7kPMD3Lof4KldD Q8ppQriUvxVo+4nPV6rpTy/PyqCLWDjkguHpJsEFsMkwajrAz0QNSAU5CJ0G2Zu4 yxvYlumHCEl7nbFrm0vIiA75Sa8KnywTDsyZsu3XcOcf3g+g1xWTpjJqy2bYXlqz 9uDOWtArWHOis6bq8l9RE6xr1RBVXS6uqgQIZFBGyq66b0dIq4D2JdsUvgEMaHbc e7tBfeB1CMBdA64e9Rq7bFR7Tvt8gasCZYlNr3lydh+dFHIEkH53HzQe6l88HEic +0jVnLkCDQRa55wJARAAyLya2Lx6gyoWoJN1a6740q3o8e9d4KggQOfGMTCflmeq ivuzgN+3DZHN+9ty2KxXMtn0mhHBerZdbNJyjMNT1gAgrhPNB4HtXBXum2wS57WK DNmade914L7FWTPAWBG2Wn448OEHTqsClICXXWy9IICgclAEyIq0Yq5mAdTEgRJS Z8t4GpwtDL9gNQyFXaWQmDmkAsCygQMvhAlmu9xOIzQG5CxSnZFk7zcuL60k14Z3 Cmt49k4T/7ZU8goWi8tt+rU78/IL3J/fF9+1civ1OwuUidgfPCSvOUW1JojsdCQA L+RZJcoXq7lfOFj/eNjeOSstCTDPfTCL+kThE6E5neDtbQHBYkEX1BRiTedsV4+M ucgiTrdQFWKf89G72xdv8ut9AYYQ2BbEYU+JAYhUH8rYYui2dHKJIgjNvJscuUWb +QEqJIRleJRhrO+/CHgMs4fZAkWF1VFhKBkcKmEjLn1f7EJJUUW84ZhKXjO/AUPX 1CHsNjziRceuJCJYox1cwsoq6jTE50GiNzcIxTn9xUc0UMKFeggNAFys1K+TDTm3 Bzo8H5ucjCUEmUm9lhkGwqTZgOlRX5eqPX+JBoSaObqhgqCa5IPinKRa6MgoFPHK 6sYKqroYwBGgZm6Js5chpNchvJMs/3WXNOEVg0J3z3vP0DMhxqWm+r+n9zlW8qsA EQEAAYkEPgQYAQgACQUCWuecCQIbAgIpCRC86dmkLVF4T8FdIAQZAQgABgUCWuec CQAKCRBQ3szEcQ5hr+ykD/4tOLRHFHXuKUcxgGaubUcVtsFrwBKma1cYjqaPms8u 6Sk0wfGRI32G/GhOrp0Ts/MOkbObq6VLTh8N5Yc/53MEl8zQFw9Y5AmRoW4PZXER ujs5s7p4oR7xHMihMjCCBn1bvrR+34YPfgzTcgLiOEFHYT8UTxwnGmXOvNkMM7md xD3CV5q6VAte8WKBo/220II3fcQlc9r/oWX4kXXkb0v9hoGwKbDJ1tzqTPrp/xFt yohqnvImpnlz+Q9zXmbrWYL9/g8VCmW/NN2gju2G3Lu/TlFUWIT4v/5OPK6TdeNb VKJO4+S8bTayqSG9CML1S57KSgCo5HUhQWeSNHI+fpe5oX6FALPT9JLDce8OZz1i cZZ0MELP37mOOQun0AlmHm/hVzf0f311PtbzcqWaE51tJvgUR/nZFo6Ta3O5Ezhs 3VlEJNQ1Ijf/6DH87SxvAoRIARCuZd0qxBcDK0avpFzUtbJd24lRA3WJpkEiMqKv RDVZkE4b6TW61f0o+LaVfK6E8oLpixegS4fiqC16mFrOdyRk+RJJfIUyz0WTDVmt g0U1CO1ezokMSqkJ7724pyjr2xf/r9/sC6aOJwB/lKgZkJfC6NqL7TlxVA31dUga LEOvEJTTE4gl+tYtfsCDvALCtqL0jduSkUo+RXcBItmXhA+tShW0pbS2Rtx/ixua KohVD/0R4QxiSwQmICNtm9mw9ydIl1yjYXX5a9x4wMJracNY/LBybJPFnZnT4dYR z4XjqysDwvvYZByaWoIe3QxjX84V6MlI2IdAT/xImu8gbaCI8tmyfpIrLnPKiR9D VFYfGBXuAX7+HgPPSFtrHQONCALxxzlbNpS+zxt9r0MiLgcLyspWxSdmoYGZ6nQP RO5Nm/ZVS+u2imPCRzNUZEMa+dlE6kHx0rS0dPiuJ4O7NtPeYDKkoQtNagspsDvh cK7CSqAiKMq06UBTxqlTSRkm62eOCtcs3p3OeHu5GRZF1uzTET0ZxYkaPgdrQknx ozjP5mC7X+45lcCfmcVt94TFNL5HwEUVJpmOgmzILCI8yoDTWzloo+i+fPFsXX4f kynhE83mSEcr5VHFYrTY3mQXGmNJ3bCLuc/jq7ysGq69xiKmTlUeXFm+aojcRO5i zyShIRJZ0GZfuzDYFDbMV9amA/YQGygLw//zP5ju5SW26dNxlf3MdFQE5JJ86rn9 MgZ4gcpazHEVUsbZsgkLizRp9imUiH8ymLqAXnfRGlU/LpNSefnvDFTtEIRcpOHc bhayG0bk51Bd4mioOXnIsKy4j63nJXA27x5EVVHQ1sYRN8Ny4Fdr2tMAmj2O+X+J qX2yy/UX5nSPU492e2CdZ1UhoU0SRFY3bxKHKB7SDbVeav+K5g== =Gi5D -----END PGP PUBLIC KEY BLOCK----- The details of the Amazon ECS PGP public key for reference: Key ID: BCE9D9A42D51784F Type: RSA Size: 4096/4096 Expires: Never User ID: Amazon ECS Key fingerprint: F34C 3DDA E729 26B0 79BE AEC6 BCE9 D9A4 2D51 784F Import the Amazon ECS PGP public key with the following command. gpg --import <public_key_filename> Download the AWS Copilot CLI signatures. The signatures are ASCII detached PGP signatures stored in files with the extension .asc . The signatures file has the same name as its corresponding executable, with .asc appended. macOS Linux Windows For macOS systems, run the following command. sudo curl -Lo copilot.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-darwin.asc For Linux systems, run the following command. sudo curl -Lo copilot.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux.asc For Windows systems, run the following command. Invoke-WebRequest -OutFile ecs-cli.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-windows.exe Verify the signature with the following command. For macOS and Linux systems: gpg --verify copilot.asc /usr/local/bin/copilot For Windows systems: gpg --verify ecs-cli.asc 'C:\\Program Files\\copilot.exe' Expected output: gpg: Signature made Tue Apr 3 13:29:30 2018 PDT gpg: using RSA key DE3CBD61ADAF8B8E gpg: Good signature from \"Amazon ECS <ecs-security@amazon.com>\" [unknown] gpg: WARNING: This key is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: F34C 3DDA E729 26B0 79BE AEC6 BCE9 D9A4 2D51 784F Subkey fingerprint: EB3D F841 E2C9 212A 2BD4 2232 DE3C BD61 ADAF 8B8E Warning The warning in the output is expected and is not problematic. It occurs because there is not a chain of trust between your personal PGP key (if you have one) and the Amazon ECS PGP key. For more information, see Web of trust .","title":"(Optional) Verify the installation"},{"location":"docs/include/command/","text":"command String or Array of Strings Override the default command in the image. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ]","title":"Command"},{"location":"docs/include/deployment/","text":"deployment Map The deployment section contains parameters to control how many tasks run during the deployment and the ordering of stopping and starting tasks. deployment. rolling String Rolling deployment strategy. Valid values are \"default\" : Creates new tasks as many as the desired count with the updated task definition, before stopping the old tasks. Under the hood, this translates to setting the minimumHealthyPercent to 100 and maximumPercent to 200. \"recreate\" : Stop all running tasks and then spin up new tasks. Under the hood, this translates to setting the minimumHealthyPercent to 0 and maximumPercent to 100. deployment. rollback_alarms Array of Strings or Map Info If an alarm is in \"In alarm\" state at the beginning of a deployment, Amazon ECS will NOT monitor alarms for the duration of that deployment. For more details, read the docs here . As a list of strings, the names of existing CloudWatch alarms to associate with your service that may trigger a deployment rollback . deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] As a map, the alarm metric and threshold for Copilot-created alarms. Available metrics:","title":"Deployment"},{"location":"docs/include/entrypoint/","text":"entrypoint String or Array of Strings Override the default entrypoint in the image. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ]","title":"Entrypoint"},{"location":"docs/include/environments/","text":"environments Map The environment section lets you override any value in your manifest based on the environment you're in. In the example manifest above, we're overriding the count parameter so that we can run 2 copies of our service in our 'prod' environment, and 2 copies using Fargate Spot capacity in our 'staging' environment.","title":"Environments"},{"location":"docs/include/envvars/","text":"variables Map Key-value pairs that represent environment variables that will be passed to your service. Copilot will include a number of environment variables by default for you. variables. from_cfn String The name of a CloudFormation stack export . env_file String The path to a file from the root of your workspace containing the environment variables to pass to the main container. For more information about the environment variable file, see Considerations for specifying environment variable files .","title":"Envvars"},{"location":"docs/include/exec/","text":"exec Boolean Enable running commands in your container. The default is false . Required for $ copilot svc exec .","title":"Exec"},{"location":"docs/include/http-additionalrules-healthcheck/","text":"http.additional_rules. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : additional_rules : - healthcheck : '/' You can also specify healthcheck as a map: http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String The destination that the health check requests are sent to. http.additional_rules.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.additional_rules.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.additional_rules.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.additional_rules.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.additional_rules.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.additional_rules.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s.","title":"Http additionalrules healthcheck"},{"location":"docs/include/http-additionalrules/","text":"http.additional_rules. path String Requests to this path will be forwarded to your service. Each listener rule should listen on a unique path. http.additional_rules. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : additional_rules : - healthcheck : '/' You can also specify healthcheck as a map: http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String The destination that the health check requests are sent to. http.additional_rules.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.additional_rules.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.additional_rules.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.additional_rules.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.additional_rules.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.additional_rules.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s. http.additional_rules. deregistration_delay Duration The amount of time to wait for targets to drain connections during deregistration. The default is 60s. Setting this to a larger value gives targets more time to gracefully drain connections, but increases the time required for new deployments. Range 0s-3600s. http.additional_rules. target_container String A sidecar container that requests are routed to instead of the main service container. If the target container's port is set to 443 , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the target container. http.additional_rules. target_port String The container port that receives traffic. Specify this field if the container port is different from image.port for the main container or sidecar.port for the sidecar containers. http.additional_rules. stickiness Boolean Indicates whether sticky sessions are enabled. http.additional_rules. allowed_source_ips Array of Strings CIDR IP addresses permitted to access your service. http : additional_rules : - allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http.additional_rules. alias String or Array of Strings or Array of Maps HTTPS domain alias of your service. # String version. http : additional_rules : - alias : example.com # Alternatively, as an array of strings. http : additional_rules : - alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : additional_rules : - alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http.additional_rules. hosted_zone String ID of your existing hosted zone; can only be used with http.alias and http.additional_rules.alias . If you have an environment with imported certificates, you can specify the hosted zone into which Copilot should insert the A record once the load balancer is created. http : additional_rules : - alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http.additional_rules. redirect_to_https Boolean Automatically redirect the Application Load Balancer from HTTP to HTTPS. By default it is true . http.additional_rules. version String The HTTP(S) protocol version. Must be one of 'grpc' , 'http1' , or 'http2' . If omitted, then 'http1' is assumed. If using gRPC, please note that a domain must be associated with your application.","title":"Http additionalrules"},{"location":"docs/include/http-healthcheck/","text":"http. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : healthcheck : '/' You can also specify healthcheck as a map: http : healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 60s http.healthcheck. path String The destination that the health check requests are sent to. http.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s. http.healthcheck. grace_period Duration The amount of time to ignore failing target group healthchecks on container start. The default is 60s. This can be useful to fix deployment issues for containers which take a while to become healthy and begin listening for incoming connections, or to speed up deployment of containers guaranteed to start quickly.","title":"Http healthcheck"},{"location":"docs/include/image-config-with-port/","text":"image Map The image section contains parameters relating to the Docker build configuration or referring to an existing container image. image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. image. port Integer The port exposed in your Dockerfile. Copilot should parse this value for you from your EXPOSE instruction.","title":"Image config with port"},{"location":"docs/include/image-config/","text":"image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully.","title":"Image config"},{"location":"docs/include/image-healthcheck/","text":"image. healthcheck Map Optional configuration for container health checks. image.healthcheck. command Array of Strings The command to run to determine if the container is healthy. The string array can start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell. image.healthcheck. interval Duration Time period between health checks, in seconds. Default is 10s. image.healthcheck. retries Integer Number of times to retry before container is deemed unhealthy. Default is 2. image.healthcheck. timeout Duration How long to wait before considering the health check failed, in seconds. Default is 5s. image.healthcheck. start_period Duration Length of grace period for containers to bootstrap before failed health checks count towards the maximum number of retries. Default is 0s.","title":"Image healthcheck"},{"location":"docs/include/image/","text":"image Map The image section contains parameters relating to the Docker build configuration or referring to an existing container image.","title":"Image"},{"location":"docs/include/logging/","text":"logging Map The logging section contains log configuration. You can also configure parameters for your container's FireLens log driver in this section (see examples here ). logging. retention Integer Optional. The number of days to retain the log events. See this page for all accepted values. If omitted, the default is 30. logging. image Map Optional. The Fluent Bit image to use. Defaults to public.ecr.aws/aws-observability/aws-for-fluent-bit:stable . logging. destination Map Optional. The configuration options to send to the FireLens log driver. logging. enableMetadata Map Optional. Whether to include ECS metadata in logs. Defaults to true . logging. secretOptions Map Optional. The secrets to pass to the log configuration. logging. configFilePath Map Optional. The full config file path in your custom Fluent Bit image. logging. env_file String The path to a file from the root of your workspace containing the environment variables to pass to the logging sidecar container. For more information about the environment variable file, see Considerations for specifying environment variable files .","title":"Logging"},{"location":"docs/include/network/","text":"network Map The network section contains parameters for connecting to AWS resources in a VPC. network. connect Bool or Map Enable Service Connect for your service, which makes the traffic between services load balanced and more resilient. Defaults to false . When using it as a map, you can specify which alias to use for this service. Note that the alias must be unique within the environment. network.connect. alias String A custom DNS name for this service exposed to Service Connect. Defaults to the service name. network. vpc Map Subnets and security groups attached to your tasks. network.vpc. placement String or Map When using it as a string, the value must be one of 'public' or 'private' . Defaults to launching your tasks in public subnets. Info If you launch tasks in 'private' subnets and use a Copilot-generated VPC, Copilot will automatically add NAT Gateways to your environment for internet connectivity. (See pricing .) Alternatively, when running copilot env init , you can import an existing VPC with NAT Gateways, or one with VPC endpoints for isolated workloads. See our custom environment resources page for more. When using it as a map, you can specify in which subnets Copilot should launch ECS tasks. For example: network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map As a list of strings, the subnet IDs where Copilot should launch ECS tasks. As a map, the name-value pairs by which to filter your subnets. Note that the filters are joined with an AND , and the values for each filter are joined by an OR . For example, both subnets with tag set org: bi and type: public , and subnets with tag set org: bi and type: private will be matched by network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Tag sets by which to filter subnets where Copilot should launch ECS tasks. network.vpc. security_groups Array of Strings or Map Additional security group IDs associated with your tasks. network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot includes a security group so containers within your environment can communicate with each other. To disable the default security group, you can specify the Map form: network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String The name of a CloudFormation stack export . network.vpc.security_groups. deny_default Boolean Disable the default security group that allows ingress from all services in your environment. network.vpc.security_groups. groups Array of Strings Additional security group IDs associated with your tasks. network.vpc.security_groups.groups from_cfn String The name of a CloudFormation stack export .","title":"Network"},{"location":"docs/include/nlb-additionallisteners/","text":"nlb.additional_listeners Map nlb.additional_listeners. port String Required. The additional port and protocol for the Network Load Balancer to listen on. Accepted protocols include tcp , udp and tls . If the protocol is not specified, tcp is used by default. nlb.additional_listeners. healthcheck Map Specify the health check configuration for your additional listener on the Network Load Balancer. nlb : additional_listeners : - healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.additional_listeners.healthcheck. port String The port that the health check requests are sent to. Specify this if your health check should be performed on a different port than the container target port. nlb.additional_listeners.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 3. Range: 2-10. nlb.additional_listeners.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 3. Range: 2-10. nlb.additional_listeners.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The value can be 10s or 30s. The default is 30s. nlb.additional_listeners.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 10s. nlb.additional_listeners. target_container String A sidecar container that takes the place of a service container. nlb.additional_listeners. target_port Integer The container port that receives traffic. Specify this field if the container port is different from nlb.port , the listener port. nlb.additional_listeners. ssl_policy String The security policy that defines which protocols and ciphers are supported. To learn more, see this doc . nlb.additional_listeners. stickiness Boolean Indicates whether sticky sessions are enabled.","title":"Nlb additionallisteners"},{"location":"docs/include/nlb/","text":"nlb Map The nlb section contains parameters related to integrating your service with a Network Load Balancer. The Network Load Balancer is enabled only if you specify the nlb field. Note that for a Load-Balanced Web Service, at least one of Application Load Balancer and Network Load Balancer must be enabled. nlb. port String Required. The port and protocol for the Network Load Balancer to listen on. Accepted protocols include tcp , udp and tls . If the protocol is not specified, tcp is used by default. For example: nlb : port : 80 will listen on port 80 for tcp requests. This is the same as nlb : port : 80/tcp You can easily enable TLS termination. For example: nlb : port : 443/tls nlb. healthcheck Map Specify the health check configuration for your Network Load Balancer. nlb : healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.healthcheck. port String The port that the health check requests are sent to. Specify this if your health check should be performed on a different port than the container target port. nlb.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 3. Range: 2-10. nlb.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 3. Range: 2-10. nlb.healthcheck. grace_period Duration The amount of time to ignore failing target group healthchecks on container start. The default is 60s. This can be useful to fix deployment issues for containers which take a while to become healthy and begin listening for incoming connections, or to speed up deployment of containers guaranteed to start quickly. Info Per the docs at the time of this writing, 'unhealthy threshold' is required to be equal to 'healthy threshold' for a Network Load Balancer. nlb.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The value can be 10s or 30s. The default is 30s. nlb.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 10s. nlb. target_container String A sidecar container that takes the place of a service container. nlb. target_port Integer The container port that receives traffic. Specify this field if the container port is different from nlb.port , the listener port. nlb. ssl_policy String The security policy that defines which protocols and ciphers are supported. To learn more, see this doc . nlb. stickiness Boolean Indicates whether sticky sessions are enabled. nlb. alias String or Array of Strings Domain aliases for your service. # String version. nlb : alias : example.com # Alteratively, as an array of strings. nlb : alias : [ \"example.com\" , \"v1.example.com\" ] nlb. additional_listeners Array of Maps Configure multiple NLB listeners. nlb.additional_listeners Map nlb.additional_listeners. port String Required. The additional port and protocol for the Network Load Balancer to listen on. Accepted protocols include tcp , udp and tls . If the protocol is not specified, tcp is used by default. nlb.additional_listeners. healthcheck Map Specify the health check configuration for your additional listener on the Network Load Balancer. nlb : additional_listeners : - healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.additional_listeners.healthcheck. port String The port that the health check requests are sent to. Specify this if your health check should be performed on a different port than the container target port. nlb.additional_listeners.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 3. Range: 2-10. nlb.additional_listeners.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 3. Range: 2-10. nlb.additional_listeners.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The value can be 10s or 30s. The default is 30s. nlb.additional_listeners.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 10s. nlb.additional_listeners. target_container String A sidecar container that takes the place of a service container. nlb.additional_listeners. target_port Integer The container port that receives traffic. Specify this field if the container port is different from nlb.port , the listener port. nlb.additional_listeners. ssl_policy String The security policy that defines which protocols and ciphers are supported. To learn more, see this doc . nlb.additional_listeners. stickiness Boolean Indicates whether sticky sessions are enabled.","title":"Nlb"},{"location":"docs/include/observability/","text":"observability Map The observability section lets you configure ways to measure your service's current state. Currently, only tracing configuration is supported. For more details, see the observability page. observability. tracing String The vendor to use for tracing. Currently, only awsxray is supported.","title":"Observability"},{"location":"docs/include/overrides-intro/","text":"Attention Overriding CloudFormation templates is an advanced feature which can cause your stacks to not deploy successfully. Please use with caution! Copilot generates CloudFormation templates using configuration specified in the manifest . However, not all CloudFormation properties are configurable in the manifest. For example, you might want to configure the Ulimits for your workload container, but the property is not exposed in manifests. Overrides with yamlpatch or cdk allow you to add, delete, or replace any property or resource in a CloudFormation template.","title":"Overrides intro"},{"location":"docs/include/platform/","text":"platform String or Map Operating system and architecture (formatted as [os]/[arch] ) to pass with docker build --platform . For example, linux/arm64 or windows/x86_64 . The default is linux/x86_64 . Override the generated string to build with a different valid osfamily or architecture . For example, Windows users might change the string platform : windows/x86_64 which defaults to WINDOWS_SERVER_2019_CORE , using a map: platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64","title":"Platform"},{"location":"docs/include/publish/","text":"publish Map The publish section allows services to publish messages to one or more SNS topics. publish : topics : - name : orderEvents In the example above, this manifest declares an SNS topic named orderEvents that other worker services deployed to the Copilot environment can subscribe to. An environment variable named COPILOT_SNS_TOPIC_ARNS is injected into your workload as a JSON string. In JavaScript, you could write: const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) For more details, see the pub/sub page. publish. topics Array of topics List of topic objects. publish.topics. topic Map Holds configuration for a single SNS topic. publish.topics.topic. name String Required. The name of the SNS topic. Must contain only upper and lowercase letters, numbers, hyphens, and underscores. publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS topic configuration. If you specify true , Copilot will create the topic with FIFO ordering. publish : topics : - name : mytopic fifo : true Alternatively, you can also configure advanced SNS FIFO topic settings. publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean If the message body is guaranteed to be unique for each published message, you can enable content-based deduplication for the SNS FIFO topic.","title":"Publish"},{"location":"docs/include/secrets/","text":"secrets Map Key-value pairs that represent secret values from AWS Systems Manager Parameter Store or AWS Secrets Manager that will be securely passed to your service as environment variables. secrets. from_cfn String The name of a CloudFormation stack export .","title":"Secrets"},{"location":"docs/include/sidecar-config/","text":"port Integer Port of the container to expose (optional). image String or Map Image URL for the sidecar container (required). image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. essential Bool Whether the sidecar container is an essential container (optional, default true). credentialsParameter String ARN of the secret containing the private repository credentials (optional). variables Map Environment variables for the sidecar container (optional) secrets Map Secrets to expose to the sidecar container (optional) env_file String The path to a file from the root of your workspace containing the environment variables to pass to the sidecar container. For more information about the environment variable file, see Considerations for specifying environment variable files . mount_points Array of Maps Mount paths for EFS volumes specified at the service level (optional). mount_points. source_volume String Source volume to mount in this sidecar (required). mount_points. path String The path inside the sidecar container at which to mount the volume (required). mount_points. read_only Boolean Whether to allow the sidecar read-only access to the volume (default true). labels Map Docker labels to apply to this container (optional). depends_on Map Container dependencies to apply to this container (optional). entrypoint String or Array of Strings Override the default entrypoint in the sidecar. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings Override the default command in the sidecar. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ] healthcheck Map Optional configuration for sidecar container health checks. healthcheck. command Array of Strings The command to run to determine if the sidecar container is healthy. The string array can start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell. healthcheck. interval Duration Time period between health checks, in seconds. Default is 10s. healthcheck. retries Integer Number of times to retry before container is deemed unhealthy. Default is 2. healthcheck. timeout Duration How long to wait before considering the health check failed, in seconds. Default is 5s. healthcheck. start_period Duration Length of grace period for containers to bootstrap before failed health checks count towards the maximum number of retries. Default is 0s.","title":"Sidecar config"},{"location":"docs/include/storage/","text":"storage Map The Storage section lets you specify external EFS volumes for your containers and sidecars to mount. This allows you to access persistent storage across availability zones in a region for data processing or CMS workloads. For more detail, see the storage page. You can also specify extensible ephemeral storage at the task level. storage. ephemeral Int Specify how much ephemeral task storage to provision in GiB. The default value and minimum is 20 GiB. The maximum size is 200 GiB. Sizes above 20 GiB incur additional charges. To create a shared filesystem context between an essential container and a sidecar, you can use an empty volume: storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false This example will provision 100 GiB of storage to be shared between the sidecar and the task container. This can be useful for large datasets, or for using a sidecar to transfer data from EFS into task storage for workloads with high disk I/O requirements. storage. readonly_fs Boolean Specify true to give your container read-only access to its root file system. storage. volumes Map Specify the name and configuration of any EFS volumes you would like to attach. The volumes field is specified as a map of the form: volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map Specify the configuration of a volume. storage.volumes. <volume> . path String Required. Specify the location in the container where you would like your volume to be mounted. Must be fewer than 242 characters and must consist only of the characters a-zA-Z0-9.-_/ . storage.volumes. <volume> . read_only Boolean Optional. Defaults to true . Defines whether the volume is read-only or not. If false, the container is granted elasticfilesystem:ClientWrite permissions to the filesystem and the volume is writable. storage.volumes. <volume> . efs Boolean or Map Specify more detailed EFS configuration. If specified as a boolean, or using only the uid and gid subfields, creates a managed EFS filesystem and dedicated Access Point for this workload. // Simple managed EFS efs : true // Managed EFS with custom POSIX info efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String Required. The ID of the filesystem you would like to mount. storage.volumes. <volume> .efs.id. from_cfn String Added in v1.30.0 The name of a CloudFormation stack export . storage.volumes. <volume> .efs. root_dir String Optional. Defaults to / . Specify the location in the EFS filesystem you would like to use as the root of your volume. Must be fewer than 255 characters and must consist only of the characters a-zA-Z0-9.-_/ . If using an access point, root_dir must be either empty or / and auth.iam must be true . storage.volumes. <volume> .efs. uid Uint32 Optional. Must be specified with gid . Mutually exclusive with root_dir , auth , and id . The POSIX UID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. gid Uint32 Optional. Must be specified with uid . Mutually exclusive with root_dir , auth , and id . The POSIX GID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. auth Map Specify advanced authorization configuration for EFS. storage.volumes. <volume> .efs.auth. iam Boolean Optional. Defaults to true . Whether or not to use IAM authorization to determine whether the volume is allowed to connect to EFS. storage.volumes. <volume> .efs.auth. access_point_id String Optional. Defaults to \"\" . The ID of the EFS access point to connect to. If using an access point, root_dir must be either empty or / and auth.iam must be true .","title":"Storage"},{"location":"docs/include/task-size/","text":"cpu Integer Number of CPU units for the task. See the Amazon ECS docs for valid CPU values. memory Integer Amount of memory in MiB used by the task. See the Amazon ECS docs for valid memory values.","title":"Task size"},{"location":"docs/include/taskdef-overrides/","text":"taskdef_overrides Array of Rules The taskdef_overrides section allows users to apply overriding rules to their ECS Task Definitions (see examples here ). taskdef_overrides. path String Required. Path to the Task Definition field to override. taskdef_overrides. value Any Required. Value of the Task Definition field to override.","title":"Taskdef overrides"},{"location":"docs/manifest/backend-service/","text":"List of all available properties for a 'Backend Service' manifest. To learn about Copilot services, see the Services concept page. Sample backend service manifests Serving Internal Traffic Internal Application Load Balancer With a domain Event-driven Shared file system Expose Multiple Ports name : api type : Backend Service image : build : ./api/Dockerfile port : 8080 healthcheck : command : [ \"CMD-SHELL\" , \"curl -f http://localhost:8080 || exit 1\" ] interval : 10s retries : 2 timeout : 5s start_period : 0s network : connect : true cpu : 256 memory : 512 count : 2 exec : true env_file : ./api/.env environments : test : deployment : rolling : \"recreate\" count : 1 # Your service is reachable at: # http://api.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.internal # behind an internal load balancer only within your VPC. name : api type : Backend Service image : build : ./api/Dockerfile port : 8080 http : path : '/' healthcheck : path : '/_healthcheck' success_codes : '200,301' healthy_threshold : 3 interval : 15s timeout : 10s grace_period : 30s deregistration_delay : 50s network : vpc : placement : 'private' count : range : 1-10 cpu_percentage : 70 requests : 10 response_time : 2s secrets : GITHUB_WEBHOOK_SECRET : GH_WEBHOOK_SECRET DB_PASSWORD : secretsmanager : 'mysql:password::' # Assuming your environment has private certificates imported, you can assign # an HTTPS endpoint to your service. # See https://aws.github.io/copilot-cli/docs/manifest/environment/#http-private-certificates name : api type : Backend Service image : build : ./api/Dockerfile port : 8080 http : path : '/' alias : 'v1.api.example.com' hosted_zone : AN0THE9H05TED20NEID # Insert record for v1.api.example.com to the hosted zone. count : 1 # See https://aws.github.io/copilot-cli/docs/developing/publish-subscribe/ name : warehouse type : Backend Service image : build : ./warehouse/Dockerfile port : 80 publish : topics : - name : 'inventory' - name : 'orders' fifo : true variables : DDB_TABLE_NAME : 'inventory' count : range : 3-5 cpu_percentage : 70 memory_percentage : 80 # See http://localhost:8000/copilot-cli/docs/developing/storage/#file-systems name : sync type : Backend Serivce image : build : Dockerfile variables : S3_BUCKET_NAME : my-userdata-bucket storage : volumes : userdata : path : /etc/mount1 efs : id : fs-1234567 name : 'backend' type : 'Backend Service' image : build : './backend/Dockerfile' port : 8080 http : path : '/' target_port : 8083 # Traffic on \"/\" is forwarded to the main container, on port 8083. additional_rules : - path : 'customerdb' target_port : 8081 # Traffic on \"/customerdb\" is forwarded to the main container, on port 8081. - path : 'admin' target_port : 8082 # Traffic on \"/admin\" is forwarded to the sidecar \"envoy\", on port 8082. target_container : envoy sidecars : envoy : port : 80 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy-proxy-with-selfsigned-certs:v1 name String The name of your service. type String The architecture type for your service. Backend Services are not reachable from the internet, but can be reached with service discovery from your other services. http Map The http section contains parameters related to integrating your service with an internal Application Load Balancer. http. path String Requests to this path will be forwarded to your service. Each Backend Service should listen on a unique path. http. alb String Added in v1.33.0 The ARN or name of an existing internal ALB to import. Listener rules will be added to your listener(s). Copilot will not manage DNS-related resources like certificates. http. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : healthcheck : '/' You can also specify healthcheck as a map: http : healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 60s http.healthcheck. path String The destination that the health check requests are sent to. http.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s. http.healthcheck. grace_period Duration The amount of time to ignore failing target group healthchecks on container start. The default is 60s. This can be useful to fix deployment issues for containers which take a while to become healthy and begin listening for incoming connections, or to speed up deployment of containers guaranteed to start quickly. http. deregistration_delay Duration The amount of time to wait for targets to drain connections during deregistration. The default is 60s. Setting this to a larger value gives targets more time to gracefully drain connections, but increases the time required for new deployments. Range 0s-3600s. http. target_container String A sidecar container that requests are routed to instead of the main service container. If the target container's port is set to 443 , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the target container. http. stickiness Boolean Indicates whether sticky sessions are enabled. http. allowed_source_ips Array of Strings CIDR IP addresses permitted to access your service. http : allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http. alias String or Array of Strings or Array of Maps HTTPS domain alias of your service. # String version. http : alias : example.com # Alternatively, as an array of strings. http : alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http. hosted_zone String ID of existing private hosted zone, into which Copilot will insert the alias record once the internal load balancer is created, mapping the alias name to the LB's DNS name. Must be used with alias . http : alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http. version String The HTTP(S) protocol version. Must be one of 'grpc' , 'http1' , or 'http2' . If omitted, then 'http1' is assumed. If using gRPC, please note that a domain must be associated with your application. http. additional_rules Array of Maps Configure multiple ALB listener rules. http.additional_rules. path String Requests to this path will be forwarded to your service. Each listener rule should listen on a unique path. http.additional_rules. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : additional_rules : - healthcheck : '/' You can also specify healthcheck as a map: http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String The destination that the health check requests are sent to. http.additional_rules.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.additional_rules.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.additional_rules.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.additional_rules.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.additional_rules.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.additional_rules.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s. http.additional_rules. deregistration_delay Duration The amount of time to wait for targets to drain connections during deregistration. The default is 60s. Setting this to a larger value gives targets more time to gracefully drain connections, but increases the time required for new deployments. Range 0s-3600s. http.additional_rules. target_container String A sidecar container that requests are routed to instead of the main service container. If the target container's port is set to 443 , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the target container. http.additional_rules. target_port String The container port that receives traffic. Specify this field if the container port is different from image.port for the main container or sidecar.port for the sidecar containers. http.additional_rules. stickiness Boolean Indicates whether sticky sessions are enabled. http.additional_rules. allowed_source_ips Array of Strings CIDR IP addresses permitted to access your service. http : additional_rules : - allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http.additional_rules. alias String or Array of Strings or Array of Maps HTTPS domain alias of your service. # String version. http : additional_rules : - alias : example.com # Alternatively, as an array of strings. http : additional_rules : - alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : additional_rules : - alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http.additional_rules. hosted_zone String ID of your existing hosted zone; can only be used with http.alias and http.additional_rules.alias . If you have an environment with imported certificates, you can specify the hosted zone into which Copilot should insert the A record once the load balancer is created. http : additional_rules : - alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http.additional_rules. redirect_to_https Boolean Automatically redirect the Application Load Balancer from HTTP to HTTPS. By default it is true . http.additional_rules. version String The HTTP(S) protocol version. Must be one of 'grpc' , 'http1' , or 'http2' . If omitted, then 'http1' is assumed. If using gRPC, please note that a domain must be associated with your application. image Map The image section contains parameters relating to the Docker build configuration or referring to an existing container image. image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. image. port Integer The port exposed in your Dockerfile. Copilot should parse this value for you from your EXPOSE instruction. If the port is set to 443 and an internal load balancer is enabled with http , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the container. image. healthcheck Map Optional configuration for container health checks. image.healthcheck. command Array of Strings The command to run to determine if the container is healthy. The string array can start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell. image.healthcheck. interval Duration Time period between health checks, in seconds. Default is 10s. image.healthcheck. retries Integer Number of times to retry before container is deemed unhealthy. Default is 2. image.healthcheck. timeout Duration How long to wait before considering the health check failed, in seconds. Default is 5s. image.healthcheck. start_period Duration Length of grace period for containers to bootstrap before failed health checks count towards the maximum number of retries. Default is 0s. cpu Integer Number of CPU units for the task. See the Amazon ECS docs for valid CPU values. memory Integer Amount of memory in MiB used by the task. See the Amazon ECS docs for valid memory values. platform String or Map Operating system and architecture (formatted as [os]/[arch] ) to pass with docker build --platform . For example, linux/arm64 or windows/x86_64 . The default is linux/x86_64 . Override the generated string to build with a different valid osfamily or architecture . For example, Windows users might change the string platform : windows/x86_64 which defaults to WINDOWS_SERVER_2019_CORE , using a map: platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 count Integer or Map The number of tasks that your service should maintain. If you specify a number: count : 5 The service will set the desired count to 5 and maintain 5 tasks in your service. count. spot Integer If you want to use Fargate Spot capacity to run your services, you can specify a number under the spot subfield: count : spot : 5 Info Fargate Spot is not supported for containers running on ARM architecture. Alternatively, you can specify a map for setting up autoscaling: count : range : 1-10 cooldown : in : 30s cpu_percentage : 70 memory_percentage : value : 80 cooldown : out : 45s requests : 10000 response_time : 2s count. range String or Map You can specify a minimum and maximum bound for the number of tasks your service should maintain, based on the values you specify for the metrics. count : range : n-m This will set up an Application Autoscaling Target with the MinCapacity of n and MaxCapacity of m . Alternatively, if you wish to scale your service onto Fargate Spot instances, specify min and max under range and then specify spot_from with the desired count you wish to start placing your services onto Spot capacity. For example: count : range : min : 1 max : 10 spot_from : 3 This will set your range as 1-10 as above, but will place the first two copies of your service on dedicated Fargate capacity. If your service scales to 3 or higher, the third and any additional copies will be placed on Spot until the maximum is reached. count.range. min Integer The minimum desired count for your service using autoscaling. count.range. max Integer The maximum desired count for your service using autoscaling. count.range. spot_from Integer The desired count at which you wish to start placing your service using Fargate Spot capacity providers. count. cooldown Map Cooldown scaling fields that are used as the default cooldown for all autoscaling fields specified. count.cooldown. in Duration The cooldown time for autoscaling fields to scale up the service. count.cooldown. out Duration The cooldown time for autoscaling fields to scale down the service. The following options cpu_percentage , memory_percentage , requests and response_time are autoscaling fields for count which can be defined either as the value of the field, or as a Map containing advanced information about the field's value and cooldown : value : 50 cooldown : in : 30s out : 60s The cooldown specified here will override the default cooldown. count. cpu_percentage Integer or Map Scale up or down based on the average CPU your service should maintain. count. memory_percentage Integer or Map Scale up or down based on the average memory your service should maintain. count. requests Integer or Map Scale up or down based on the request count handled per task. count. response_time Duration or Map Scale up or down based on the service average response time. exec Boolean Enable running commands in your container. The default is false . Required for $ copilot svc exec . deployment Map The deployment section contains parameters to control how many tasks run during the deployment and the ordering of stopping and starting tasks. deployment. rolling String Rolling deployment strategy. Valid values are \"default\" : Creates new tasks as many as the desired count with the updated task definition, before stopping the old tasks. Under the hood, this translates to setting the minimumHealthyPercent to 100 and maximumPercent to 200. \"recreate\" : Stop all running tasks and then spin up new tasks. Under the hood, this translates to setting the minimumHealthyPercent to 0 and maximumPercent to 100. deployment. rollback_alarms Array of Strings or Map Info If an alarm is in \"In alarm\" state at the beginning of a deployment, Amazon ECS will NOT monitor alarms for the duration of that deployment. For more details, read the docs here . As a list of strings, the names of existing CloudWatch alarms to associate with your service that may trigger a deployment rollback . deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] As a map, the alarm metric and threshold for Copilot-created alarms. Available metrics: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. entrypoint String or Array of Strings Override the default entrypoint in the image. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings Override the default command in the image. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ] network Map The network section contains parameters for connecting to AWS resources in a VPC. network. connect Bool or Map Enable Service Connect for your service, which makes the traffic between services load balanced and more resilient. Defaults to false . When using it as a map, you can specify which alias to use for this service. Note that the alias must be unique within the environment. network.connect. alias String A custom DNS name for this service exposed to Service Connect. Defaults to the service name. network. vpc Map Subnets and security groups attached to your tasks. network.vpc. placement String or Map When using it as a string, the value must be one of 'public' or 'private' . Defaults to launching your tasks in public subnets. Info If you launch tasks in 'private' subnets and use a Copilot-generated VPC, Copilot will automatically add NAT Gateways to your environment for internet connectivity. (See pricing .) Alternatively, when running copilot env init , you can import an existing VPC with NAT Gateways, or one with VPC endpoints for isolated workloads. See our custom environment resources page for more. When using it as a map, you can specify in which subnets Copilot should launch ECS tasks. For example: network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map As a list of strings, the subnet IDs where Copilot should launch ECS tasks. As a map, the name-value pairs by which to filter your subnets. Note that the filters are joined with an AND , and the values for each filter are joined by an OR . For example, both subnets with tag set org: bi and type: public , and subnets with tag set org: bi and type: private will be matched by network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Tag sets by which to filter subnets where Copilot should launch ECS tasks. network.vpc. security_groups Array of Strings or Map Additional security group IDs associated with your tasks. network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot includes a security group so containers within your environment can communicate with each other. To disable the default security group, you can specify the Map form: network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String The name of a CloudFormation stack export . network.vpc.security_groups. deny_default Boolean Disable the default security group that allows ingress from all services in your environment. network.vpc.security_groups. groups Array of Strings Additional security group IDs associated with your tasks. network.vpc.security_groups.groups from_cfn String The name of a CloudFormation stack export . variables Map Key-value pairs that represent environment variables that will be passed to your service. Copilot will include a number of environment variables by default for you. variables. from_cfn String The name of a CloudFormation stack export . env_file String The path to a file from the root of your workspace containing the environment variables to pass to the main container. For more information about the environment variable file, see Considerations for specifying environment variable files . secrets Map Key-value pairs that represent secret values from AWS Systems Manager Parameter Store or AWS Secrets Manager that will be securely passed to your service as environment variables. secrets. from_cfn String The name of a CloudFormation stack export . storage Map The Storage section lets you specify external EFS volumes for your containers and sidecars to mount. This allows you to access persistent storage across availability zones in a region for data processing or CMS workloads. For more detail, see the storage page. You can also specify extensible ephemeral storage at the task level. storage. ephemeral Int Specify how much ephemeral task storage to provision in GiB. The default value and minimum is 20 GiB. The maximum size is 200 GiB. Sizes above 20 GiB incur additional charges. To create a shared filesystem context between an essential container and a sidecar, you can use an empty volume: storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false This example will provision 100 GiB of storage to be shared between the sidecar and the task container. This can be useful for large datasets, or for using a sidecar to transfer data from EFS into task storage for workloads with high disk I/O requirements. storage. readonly_fs Boolean Specify true to give your container read-only access to its root file system. storage. volumes Map Specify the name and configuration of any EFS volumes you would like to attach. The volumes field is specified as a map of the form: volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map Specify the configuration of a volume. storage.volumes. <volume> . path String Required. Specify the location in the container where you would like your volume to be mounted. Must be fewer than 242 characters and must consist only of the characters a-zA-Z0-9.-_/ . storage.volumes. <volume> . read_only Boolean Optional. Defaults to true . Defines whether the volume is read-only or not. If false, the container is granted elasticfilesystem:ClientWrite permissions to the filesystem and the volume is writable. storage.volumes. <volume> . efs Boolean or Map Specify more detailed EFS configuration. If specified as a boolean, or using only the uid and gid subfields, creates a managed EFS filesystem and dedicated Access Point for this workload. // Simple managed EFS efs : true // Managed EFS with custom POSIX info efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String Required. The ID of the filesystem you would like to mount. storage.volumes. <volume> .efs.id. from_cfn String Added in v1.30.0 The name of a CloudFormation stack export . storage.volumes. <volume> .efs. root_dir String Optional. Defaults to / . Specify the location in the EFS filesystem you would like to use as the root of your volume. Must be fewer than 255 characters and must consist only of the characters a-zA-Z0-9.-_/ . If using an access point, root_dir must be either empty or / and auth.iam must be true . storage.volumes. <volume> .efs. uid Uint32 Optional. Must be specified with gid . Mutually exclusive with root_dir , auth , and id . The POSIX UID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. gid Uint32 Optional. Must be specified with uid . Mutually exclusive with root_dir , auth , and id . The POSIX GID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. auth Map Specify advanced authorization configuration for EFS. storage.volumes. <volume> .efs.auth. iam Boolean Optional. Defaults to true . Whether or not to use IAM authorization to determine whether the volume is allowed to connect to EFS. storage.volumes. <volume> .efs.auth. access_point_id String Optional. Defaults to \"\" . The ID of the EFS access point to connect to. If using an access point, root_dir must be either empty or / and auth.iam must be true . publish Map The publish section allows services to publish messages to one or more SNS topics. publish : topics : - name : orderEvents In the example above, this manifest declares an SNS topic named orderEvents that other worker services deployed to the Copilot environment can subscribe to. An environment variable named COPILOT_SNS_TOPIC_ARNS is injected into your workload as a JSON string. In JavaScript, you could write: const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) For more details, see the pub/sub page. publish. topics Array of topics List of topic objects. publish.topics. topic Map Holds configuration for a single SNS topic. publish.topics.topic. name String Required. The name of the SNS topic. Must contain only upper and lowercase letters, numbers, hyphens, and underscores. publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS topic configuration. If you specify true , Copilot will create the topic with FIFO ordering. publish : topics : - name : mytopic fifo : true Alternatively, you can also configure advanced SNS FIFO topic settings. publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean If the message body is guaranteed to be unique for each published message, you can enable content-based deduplication for the SNS FIFO topic. logging Map The logging section contains log configuration. You can also configure parameters for your container's FireLens log driver in this section (see examples here ). logging. retention Integer Optional. The number of days to retain the log events. See this page for all accepted values. If omitted, the default is 30. logging. image Map Optional. The Fluent Bit image to use. Defaults to public.ecr.aws/aws-observability/aws-for-fluent-bit:stable . logging. destination Map Optional. The configuration options to send to the FireLens log driver. logging. enableMetadata Map Optional. Whether to include ECS metadata in logs. Defaults to true . logging. secretOptions Map Optional. The secrets to pass to the log configuration. logging. configFilePath Map Optional. The full config file path in your custom Fluent Bit image. logging. env_file String The path to a file from the root of your workspace containing the environment variables to pass to the logging sidecar container. For more information about the environment variable file, see Considerations for specifying environment variable files . observability Map The observability section lets you configure ways to measure your service's current state. Currently, only tracing configuration is supported. For more details, see the observability page. observability. tracing String The vendor to use for tracing. Currently, only awsxray is supported. taskdef_overrides Array of Rules The taskdef_overrides section allows users to apply overriding rules to their ECS Task Definitions (see examples here ). taskdef_overrides. path String Required. Path to the Task Definition field to override. taskdef_overrides. value Any Required. Value of the Task Definition field to override. environments Map The environment section lets you override any value in your manifest based on the environment you're in. In the example manifest above, we're overriding the count parameter so that we can run 2 copies of our service in our 'prod' environment, and 2 copies using Fargate Spot capacity in our 'staging' environment.","title":"Backend Service"},{"location":"docs/manifest/environment/","text":"List of all available properties for a 'Environment' manifest. To learn more about Copilot environments, see Environments concept page. Sample environment manifests Basic Imported VPC Configured VPC With public certificates Private Content delivery network name : prod type : Environment observability : container_insights : true name : imported type : Environment network : vpc : id : 'vpc-12345' subnets : public : - id : 'subnet-11111' - id : 'subnet-22222' private : - id : 'subnet-33333' - id : 'subnet-44444' name : qa type : Environment network : vpc : cidr : '10.0.0.0/16' subnets : public : - cidr : '10.0.0.0/24' az : 'us-east-2a' - cidr : '10.0.1.0/24' az : 'us-east-2b' private : - cidr : '10.0.3.0/24' az : 'us-east-2a' - cidr : '10.0.4.0/24' az : 'us-east-2b' name : prod-pdx type : Environment http : public : # Apply an existing certificate to your public load balancer. certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-cv8f-adf3-j7gd-adf876af95 name : onprem type : Environment network : vpc : id : 'vpc-12345' subnets : private : - id : 'subnet-11111' - id : 'subnet-22222' - id : 'subnet-33333' - id : 'subnet-44444' http : private : # Apply an existing certificate to your private load balancer. certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-cv8f-adf3-j7gd-adf876af95 subnets : [ 'subnet-11111' , 'subnet-22222' ] name : cloudfront type : Environment cdn : true http : public : ingress : cdn : true name String The name of your environment. type String Must be set to 'Environment' . network Map The network section contains parameters for importing an existing VPC or configuring the Copilot-generated VPC. network. vpc Map The vpc section contains parameters to configure CIDR settings and subnets. network.vpc. id String The ID of the VPC to import. This field is mutually exclusive with cidr . network.vpc. cidr String An IPv4 CIDR block to associate with the Copilot-generated VPC. This field is mutually exclusive with id . network.vpc. subnets Map Configure public and private subnets in a VPC. For example, if you're importing an existing VPC: network : vpc : id : 'vpc-12345' subnets : public : - id : 'subnet-11111' - id : 'subnet-22222' Alternatively, if you're configuring a Copilot-generated VPC: network : vpc : cidr : '10.0.0.0/16' subnets : public : - cidr : '10.0.0.0/24' az : 'us-east-2a' - cidr : '10.0.1.0/24' az : 'us-east-2b' network.vpc.subnets. public Array of Subnets A list of public subnets configuration. network.vpc.subnets. private Array of Subnets A list of private subnets configuration. network.vpc.subnets.<type>. id String The ID of the subnet to import. This field is mutually exclusive with cidr and az . network.vpc.subnets.<type>. cidr String An IPv4 CIDR block assigned to the subnet. This field is mutually exclusive with id . network.vpc.subnets.<type>. az String The Availability Zone name assigned to the subnet. The az field is optional, by default Availability Zones are assigned in alphabetical order. This field is mutually exclusive with id . network.vpc. security_group Map Rules for the environment's security group. network : vpc : security_group : ingress : - ip_protocol : tcp ports : 80 cidr : 0.0.0.0/0 network.vpc.security_group. ingress Array of Security Group Rules A list of inbound security group rules. network.vpc.security_group. egress Array of Security Group Rules A list of outbound security group rules. network.vpc.security_group.<type>. ip_protocol String The IP protocol name or number. network.vpc.security_group.<type>. ports String or Integer The port range or number for the security group rule. ports : 0-65535 or ports : 80 network.vpc.security_group.<type>. cidr String The IPv4 address range, in CIDR format. network.vpc. flow_logs Boolean or Map If you specify 'true', Copilot will enable VPC flow logs to capture information about the IP traffic going in and out of the environment VPC. The default value for VPC flow logs is 14 days (2 weeks). network : vpc : flow_logs : on You can customize the number of days for retention: network : vpc : flow_logs : retention : 30 network.vpc.flow_logs. retention String The number of days to retain the log events. See this page for all accepted values. cdn Boolean or Map The cdn section contains parameters related to integrating your service with a CloudFront distribution. To enable the CloudFront distribution, specify cdn: true . cdn. certificate String A certificate by which to enable HTTPS traffic on a CloudFront distribution. CloudFront requires imported certificates to be in the us-east-1 region. For example: cdn : certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" cdn. static_assets Map Optional. Configuration for static assets associated with CloudFront. cdn.static_assets. alias String Additional HTTPS domain alias to use for static assets. cdn.static_assets. location String DNS domain name of the S3 bucket (for example, EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com ). cdn.static_assets. path String The path pattern (for example, static/* ) that specifies which requests should be forwarded to the S3 bucket. cdn. terminate_tls Boolean Enable TLS termination for CloudFront. http Map The http section contains parameters to configure the public load balancer shared by Load Balanced Web Services and the internal load balancer shared by Backend Services . http. public Map Configuration for the public load balancer. http.public. certificates Array of Strings List of public AWS Certificate Manager certificate ARNs. By attaching public certificates to your load balancer, you can associate your Load Balanced Web Services with a domain name and reach them with HTTPS. See the Developing/Domains guide to learn more about how to redeploy services using http.alias . http.public. access_logs Boolean or Map Enable Elastic Load Balancing access logs . If you specify true , Copilot will create an S3 bucket where the Public Load Balancer will store access logs. http : public : access_logs : true You can customize the log prefix: http : public : access_logs : prefix : access-logs It is also possible to use your own S3 bucket instead of letting Copilot creates one for you: http : public : access_logs : bucket_name : my-bucket prefix : access-logs http.public.access_logs. bucket_name String The name of an existing S3 bucket in which to store the access logs. http.public.access_logs. prefix String The prefix for the log objects. http.public. ssl_policy String Optional. Specify an SSL policy for the HTTPS listener of your Public Load Balancer, when applicable. http.public. ingress Map Modified in v1.23.0 Ingress rules to restrict the Public Load Balancer's traffic. http : public : ingress : cdn : true \"http.public.ingress\" was previously \"http.public.security_groups.ingress\" This field was http.public.security_groups.ingress until v1.23.0 . This change cascaded to a child field cdn (the only child field at the time), which was previously http.public.security_groups.ingress.restrict_to.cdn . For more, see the blog post for v1.23.0 . http.public.ingress. cdn Boolean Modified in v1.23.0 Restrict ingress traffic for the public load balancer to come from a CloudFront distribution. http.public.ingress. source_ips Array of Strings Restrict public load balancer ingress traffic to source IPs. http : public : ingress : source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http. private Map Configuration for the internal load balancer. http.private. certificates Array of Strings List of AWS Certificate Manager certificate ARNs. By attaching public or private certificates to your load balancer, you can associate your Backend Services with a domain name and reach them with HTTPS. See the Developing/Domains guide to learn more about how to redeploy services using http.alias . http.private. subnets Array of Strings The subnet IDs to place the internal load balancer in. http.private. ingress Map Modified in v1.23.0 Ingress rules to allow for the internal load balancer. http : private : ingress : vpc : true # Enable incoming traffic within the VPC to the internal load balancer. \"http.private.ingress\" was previously \"http.private.security_groups.ingress\" This field was http.private.security_groups.ingress until v1.23.0 . This change cascaded to a child field vpc (the only child field at the time), which was previously http.private.security_groups.ingress.from_vpc . For more, see the blog post for v1.23.0 . http.private.ingress. vpc Boolean Modified in v1.23.0 Enable traffic from within the VPC to the internal load balancer. http.private. ssl_policy String Optional. Specify an SSL policy for the HTTPS listener of your Internal Load Balancer, when applicable. observability Map The observability section lets you configure ways to collect data about the services and jobs deployed in your environment. observability. container_insights Bool Whether to enable CloudWatch container insights in your environment's ECS cluster.","title":"Environment"},{"location":"docs/manifest/lb-web-service/","text":"List of all available properties for a 'Load Balanced Web Service' manifest. To learn about Copilot services, see the Services concept page. Sample internet-facing service manifests Basic With a domain Larger containers Autoscaling Event-driven Network Load Balancer Shared file system End-to-end encryption Expose Multiple Ports name : 'frontend' type : 'Load Balanced Web Service' image : build : './frontend/Dockerfile' port : 8080 http : path : '/' healthcheck : '/_healthcheck' cpu : 256 memory : 512 count : 3 exec : true variables : LOG_LEVEL : info secrets : GITHUB_TOKEN : GITHUB_TOKEN DB_SECRET : secretsmanager : 'mysql' name : 'frontend' type : 'Load Balanced Web Service' image : build : './frontend/Dockerfile' port : 8080 http : path : '/' alias : 'example.com' environments : qa : http : alias : # The \"qa\" environment imported a certificate. - name : 'qa.example.com' hosted_zone : Z0873220N255IR3MTNR4 # For example, we might want to warm up our Java service before accepting external traffic. name : 'frontend' type : 'Load Balanced Web Service' image : build : dockerfile : './frontend/Dockerfile' context : './frontend' port : 80 http : path : '/' healthcheck : path : '/_deephealthcheck' port : 8080 success_codes : '200,301' healthy_threshold : 4 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 2m deregistration_delay : 50s stickiness : true allowed_source_ips : [ \"10.24.34.0/23\" ] cpu : 2048 memory : 4096 count : 3 storage : ephemeral : 100 network : vpc : placement : 'private' name : 'frontend' type : 'Load Balanced Web Service' http : path : '/' image : location : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/frontend:latest port : 80 cpu : 512 memory : 1024 count : range : 1-10 cooldown : in : 60s out : 30s cpu_percentage : 70 requests : 30 response_time : 2s # See https://aws.github.io/copilot-cli/docs/developing/publish-subscribe/ name : 'orders' type : 'Load Balanced Web Service' image : build : Dockerfile port : 80 http : path : '/' alias : 'orders.example.com' variables : DDB_TABLE_NAME : 'orders' publish : topics : - name : 'products' - name : 'orders' fifo : true name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : false nlb : alias : 'example.com' port : 80/tcp target_container : envoy network : vpc : placement : 'private' sidecars : envoy : port : 80 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy:latest # See http://localhost:8000/copilot-cli/docs/developing/storage/#file-systems name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 80 depends_on : bootstrap : success http : path : '/' storage : volumes : wp : path : /bitnami/wordpress read_only : false efs : true # Hydrate the file system with some content using the bootstrap container. sidecars : bootstrap : image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/bootstrap:v1.0.0 essential : false mount_points : - source_volume : wp path : /bitnami/wordpress read_only : false name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : alias : 'example.com' path : '/' healthcheck : path : '/_health' # The envoy container's port is 443 resulting in the protocol and health check protocol to be to \"HTTPS\" # so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you # install on the envoy container. These certificates can be self-signed. target_container : envoy sidecars : envoy : port : 443 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy-proxy-with-selfsigned-certs:v1 network : vpc : placement : 'private' name : 'frontend' type : 'Load Balanced Web Service' image : build : './frontend/Dockerfile' port : 8080 nlb : port : 8080/tcp # Traffic on port 8080/tcp is forwarded to the main container, on port 8080. additional_listeners : - port : 8084/tcp # Traffic on port 8084/tcp is forwarded to the main container, on port 8084. - port : 8085/tcp # Traffic on port 8085/tcp is forwarded to the sidecar \"envoy\", on port 3000. target_port : 3000 target_container : envoy http : path : '/' target_port : 8083 # Traffic on \"/\" is forwarded to the main container, on port 8083. additional_rules : - path : 'customerdb' target_port : 8081 # Traffic on \"/customerdb\" is forwarded to the main container, on port 8083. - path : 'admin' target_port : 8082 # Traffic on \"/admin\" is forwarded to the sidecar \"envoy\", on port 8082. target_container : envoy sidecars : envoy : port : 80 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy-proxy-with-selfsigned-certs:v1 name String The name of your service. type String The architecture type for your service. A Load Balanced Web Service is an internet-facing service that's behind a load balancer, orchestrated by Amazon ECS on AWS Fargate. http Boolean or Map The http section contains parameters related to integrating your service with an Application Load Balancer. To disable the Application Load Balancer, specify http: false . Note that for a Load-Balanced Web Service, at least one of Application Load Balancer or Network Load Balancer must be enabled. http. path String Requests to this path will be forwarded to your service. Each listener rule should listen on a unique path. http. alb String Added in v1.32.0 The ARN or name of an existing public-facing ALB to import. Listener rules will be added to your listener(s). Copilot will not manage DNS-related resources like certificates. http. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : healthcheck : '/' You can also specify healthcheck as a map: http : healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 60s http.healthcheck. path String The destination that the health check requests are sent to. http.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s. http.healthcheck. grace_period Duration The amount of time to ignore failing target group healthchecks on container start. The default is 60s. This can be useful to fix deployment issues for containers which take a while to become healthy and begin listening for incoming connections, or to speed up deployment of containers guaranteed to start quickly. http. deregistration_delay Duration The amount of time to wait for targets to drain connections during deregistration. The default is 60s. Setting this to a larger value gives targets more time to gracefully drain connections, but increases the time required for new deployments. Range 0s-3600s. http. target_container String A sidecar container that requests are routed to instead of the main service container. If the target container's port is set to 443 , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the target container. http. target_port String Optional. The container port that receives traffic. By default, this will be image.port if the target container is the main container, or sidecars.<name>.port if the target container is a sidecar. http. stickiness Boolean Indicates whether sticky sessions are enabled. http. allowed_source_ips Array of Strings CIDR IP addresses permitted to access your service. http : allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http. alias String or Array of Strings or Array of Maps HTTPS domain alias of your service. # String version. http : alias : example.com # Alternatively, as an array of strings. http : alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http. hosted_zone String ID of your existing hosted zone; can only be used with http.alias . If you have an environment with imported certificates, you can specify the hosted zone into which Copilot should insert the A record once the load balancer is created. http : alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http. redirect_to_https Boolean Automatically redirect the Application Load Balancer from HTTP to HTTPS. By default it is true . http. version String The HTTP(S) protocol version. Must be one of 'grpc' , 'http1' , or 'http2' . If omitted, then 'http1' is assumed. If using gRPC, please note that a domain must be associated with your application. http. additional_rules Array of Maps Configure multiple ALB listener rules. http.additional_rules. path String Requests to this path will be forwarded to your service. Each listener rule should listen on a unique path. http.additional_rules. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : additional_rules : - healthcheck : '/' You can also specify healthcheck as a map: http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String The destination that the health check requests are sent to. http.additional_rules.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.additional_rules.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.additional_rules.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.additional_rules.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.additional_rules.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.additional_rules.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s. http.additional_rules. deregistration_delay Duration The amount of time to wait for targets to drain connections during deregistration. The default is 60s. Setting this to a larger value gives targets more time to gracefully drain connections, but increases the time required for new deployments. Range 0s-3600s. http.additional_rules. target_container String A sidecar container that requests are routed to instead of the main service container. If the target container's port is set to 443 , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the target container. http.additional_rules. target_port String The container port that receives traffic. Specify this field if the container port is different from image.port for the main container or sidecar.port for the sidecar containers. http.additional_rules. stickiness Boolean Indicates whether sticky sessions are enabled. http.additional_rules. allowed_source_ips Array of Strings CIDR IP addresses permitted to access your service. http : additional_rules : - allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http.additional_rules. alias String or Array of Strings or Array of Maps HTTPS domain alias of your service. # String version. http : additional_rules : - alias : example.com # Alternatively, as an array of strings. http : additional_rules : - alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : additional_rules : - alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http.additional_rules. hosted_zone String ID of your existing hosted zone; can only be used with http.alias and http.additional_rules.alias . If you have an environment with imported certificates, you can specify the hosted zone into which Copilot should insert the A record once the load balancer is created. http : additional_rules : - alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http.additional_rules. redirect_to_https Boolean Automatically redirect the Application Load Balancer from HTTP to HTTPS. By default it is true . http.additional_rules. version String The HTTP(S) protocol version. Must be one of 'grpc' , 'http1' , or 'http2' . If omitted, then 'http1' is assumed. If using gRPC, please note that a domain must be associated with your application. nlb Map The nlb section contains parameters related to integrating your service with a Network Load Balancer. The Network Load Balancer is enabled only if you specify the nlb field. Note that for a Load-Balanced Web Service, at least one of Application Load Balancer and Network Load Balancer must be enabled. nlb. port String Required. The port and protocol for the Network Load Balancer to listen on. Accepted protocols include tcp , udp and tls . If the protocol is not specified, tcp is used by default. For example: nlb : port : 80 will listen on port 80 for tcp requests. This is the same as nlb : port : 80/tcp You can easily enable TLS termination. For example: nlb : port : 443/tls nlb. healthcheck Map Specify the health check configuration for your Network Load Balancer. nlb : healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.healthcheck. port String The port that the health check requests are sent to. Specify this if your health check should be performed on a different port than the container target port. nlb.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 3. Range: 2-10. nlb.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 3. Range: 2-10. nlb.healthcheck. grace_period Duration The amount of time to ignore failing target group healthchecks on container start. The default is 60s. This can be useful to fix deployment issues for containers which take a while to become healthy and begin listening for incoming connections, or to speed up deployment of containers guaranteed to start quickly. Info Per the docs at the time of this writing, 'unhealthy threshold' is required to be equal to 'healthy threshold' for a Network Load Balancer. nlb.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The value can be 10s or 30s. The default is 30s. nlb.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 10s. nlb. target_container String A sidecar container that takes the place of a service container. nlb. target_port Integer The container port that receives traffic. Specify this field if the container port is different from nlb.port , the listener port. nlb. ssl_policy String The security policy that defines which protocols and ciphers are supported. To learn more, see this doc . nlb. stickiness Boolean Indicates whether sticky sessions are enabled. nlb. alias String or Array of Strings Domain aliases for your service. # String version. nlb : alias : example.com # Alteratively, as an array of strings. nlb : alias : [ \"example.com\" , \"v1.example.com\" ] nlb. additional_listeners Array of Maps Configure multiple NLB listeners. nlb.additional_listeners Map nlb.additional_listeners. port String Required. The additional port and protocol for the Network Load Balancer to listen on. Accepted protocols include tcp , udp and tls . If the protocol is not specified, tcp is used by default. nlb.additional_listeners. healthcheck Map Specify the health check configuration for your additional listener on the Network Load Balancer. nlb : additional_listeners : - healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.additional_listeners.healthcheck. port String The port that the health check requests are sent to. Specify this if your health check should be performed on a different port than the container target port. nlb.additional_listeners.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 3. Range: 2-10. nlb.additional_listeners.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 3. Range: 2-10. nlb.additional_listeners.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The value can be 10s or 30s. The default is 30s. nlb.additional_listeners.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 10s. nlb.additional_listeners. target_container String A sidecar container that takes the place of a service container. nlb.additional_listeners. target_port Integer The container port that receives traffic. Specify this field if the container port is different from nlb.port , the listener port. nlb.additional_listeners. ssl_policy String The security policy that defines which protocols and ciphers are supported. To learn more, see this doc . nlb.additional_listeners. stickiness Boolean Indicates whether sticky sessions are enabled. image Map The image section contains parameters relating to the Docker build configuration or referring to an existing container image. image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. image. port Integer The port exposed in your Dockerfile. Copilot should parse this value for you from your EXPOSE instruction. If the port is set to 443 , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the container. image. healthcheck Map Optional configuration for container health checks. image.healthcheck. command Array of Strings The command to run to determine if the container is healthy. The string array can start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell. image.healthcheck. interval Duration Time period between health checks, in seconds. Default is 10s. image.healthcheck. retries Integer Number of times to retry before container is deemed unhealthy. Default is 2. image.healthcheck. timeout Duration How long to wait before considering the health check failed, in seconds. Default is 5s. image.healthcheck. start_period Duration Length of grace period for containers to bootstrap before failed health checks count towards the maximum number of retries. Default is 0s. cpu Integer Number of CPU units for the task. See the Amazon ECS docs for valid CPU values. memory Integer Amount of memory in MiB used by the task. See the Amazon ECS docs for valid memory values. platform String or Map Operating system and architecture (formatted as [os]/[arch] ) to pass with docker build --platform . For example, linux/arm64 or windows/x86_64 . The default is linux/x86_64 . Override the generated string to build with a different valid osfamily or architecture . For example, Windows users might change the string platform : windows/x86_64 which defaults to WINDOWS_SERVER_2019_CORE , using a map: platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 count Integer or Map The number of tasks that your service should maintain. If you specify a number: count : 5 The service will set the desired count to 5 and maintain 5 tasks in your service. count. spot Integer If you want to use Fargate Spot capacity to run your services, you can specify a number under the spot subfield: count : spot : 5 Info Fargate Spot is not supported for containers running on ARM architecture. Alternatively, you can specify a map for setting up autoscaling: count : range : 1-10 cooldown : in : 30s out : 60s cpu_percentage : 70 memory_percentage : value : 80 cooldown : in : 80s out : 160s requests : 10000 response_time : 2s count. range String or Map You can specify a minimum and maximum bound for the number of tasks your service should maintain, based on the values you specify for the metrics. count : range : n-m This will set up an Application Autoscaling Target with the MinCapacity of n and MaxCapacity of m . Alternatively, if you wish to scale your service onto Fargate Spot instances, specify min and max under range and then specify spot_from with the desired count you wish to start placing your services onto Spot capacity. For example: count : range : min : 1 max : 10 spot_from : 3 This will set your range as 1-10 as above, but will place the first two copies of your service on dedicated Fargate capacity. If your service scales to 3 or higher, the third and any additional copies will be placed on Spot until the maximum is reached. count.range. min Integer The minimum desired count for your service using autoscaling. count.range. max Integer The maximum desired count for your service using autoscaling. count.range. spot_from Integer The desired count at which you wish to start placing your service using Fargate Spot capacity providers. count. cooldown Map Cooldown scaling fields that are used as the default cooldown for all autoscaling fields specified. count.cooldown. in Duration The cooldown time for autoscaling fields to scale up the service. count.cooldown. out Duration The cooldown time for autoscaling fields to scale down the service. The following options cpu_percentage , memory_percentage , requests and response_time are autoscaling fields for count which can be defined either as the value of the field, or as a Map containing advanced information about the field's value and cooldown : value : 50 cooldown : in : 30s out : 60s The cooldown specified here will override the default cooldown. count. cpu_percentage Integer or Map Scale up or down based on the average CPU your service should maintain. count. memory_percentage Integer or Map Scale up or down based on the average memory your service should maintain. count. requests Integer or Map Scale up or down based on the request count handled per task. count. response_time Duration or Map Scale up or down based on the service average response time. exec Boolean Enable running commands in your container. The default is false . Required for $ copilot svc exec . deployment Map The deployment section contains parameters to control how many tasks run during the deployment and the ordering of stopping and starting tasks. deployment. rolling String Rolling deployment strategy. Valid values are \"default\" : Creates new tasks as many as the desired count with the updated task definition, before stopping the old tasks. Under the hood, this translates to setting the minimumHealthyPercent to 100 and maximumPercent to 200. \"recreate\" : Stop all running tasks and then spin up new tasks. Under the hood, this translates to setting the minimumHealthyPercent to 0 and maximumPercent to 100. deployment. rollback_alarms Array of Strings or Map Info If an alarm is in \"In alarm\" state at the beginning of a deployment, Amazon ECS will NOT monitor alarms for the duration of that deployment. For more details, read the docs here . As a list of strings, the names of existing CloudWatch alarms to associate with your service that may trigger a deployment rollback . deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] As a map, the alarm metric and threshold for Copilot-created alarms. Available metrics: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. entrypoint String or Array of Strings Override the default entrypoint in the image. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings Override the default command in the image. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ] network Map The network section contains parameters for connecting to AWS resources in a VPC. network. connect Bool or Map Enable Service Connect for your service, which makes the traffic between services load balanced and more resilient. Defaults to false . When using it as a map, you can specify which alias to use for this service. Note that the alias must be unique within the environment. network.connect. alias String A custom DNS name for this service exposed to Service Connect. Defaults to the service name. network. vpc Map Subnets and security groups attached to your tasks. network.vpc. placement String or Map When using it as a string, the value must be one of 'public' or 'private' . Defaults to launching your tasks in public subnets. Info If you launch tasks in 'private' subnets and use a Copilot-generated VPC, Copilot will automatically add NAT Gateways to your environment for internet connectivity. (See pricing .) Alternatively, when running copilot env init , you can import an existing VPC with NAT Gateways, or one with VPC endpoints for isolated workloads. See our custom environment resources page for more. When using it as a map, you can specify in which subnets Copilot should launch ECS tasks. For example: network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map As a list of strings, the subnet IDs where Copilot should launch ECS tasks. As a map, the name-value pairs by which to filter your subnets. Note that the filters are joined with an AND , and the values for each filter are joined by an OR . For example, both subnets with tag set org: bi and type: public , and subnets with tag set org: bi and type: private will be matched by network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Tag sets by which to filter subnets where Copilot should launch ECS tasks. network.vpc. security_groups Array of Strings or Map Additional security group IDs associated with your tasks. network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot includes a security group so containers within your environment can communicate with each other. To disable the default security group, you can specify the Map form: network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String The name of a CloudFormation stack export . network.vpc.security_groups. deny_default Boolean Disable the default security group that allows ingress from all services in your environment. network.vpc.security_groups. groups Array of Strings Additional security group IDs associated with your tasks. network.vpc.security_groups.groups from_cfn String The name of a CloudFormation stack export . variables Map Key-value pairs that represent environment variables that will be passed to your service. Copilot will include a number of environment variables by default for you. variables. from_cfn String The name of a CloudFormation stack export . env_file String The path to a file from the root of your workspace containing the environment variables to pass to the main container. For more information about the environment variable file, see Considerations for specifying environment variable files . secrets Map Key-value pairs that represent secret values from AWS Systems Manager Parameter Store or AWS Secrets Manager that will be securely passed to your service as environment variables. secrets. from_cfn String The name of a CloudFormation stack export . storage Map The Storage section lets you specify external EFS volumes for your containers and sidecars to mount. This allows you to access persistent storage across availability zones in a region for data processing or CMS workloads. For more detail, see the storage page. You can also specify extensible ephemeral storage at the task level. storage. ephemeral Int Specify how much ephemeral task storage to provision in GiB. The default value and minimum is 20 GiB. The maximum size is 200 GiB. Sizes above 20 GiB incur additional charges. To create a shared filesystem context between an essential container and a sidecar, you can use an empty volume: storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false This example will provision 100 GiB of storage to be shared between the sidecar and the task container. This can be useful for large datasets, or for using a sidecar to transfer data from EFS into task storage for workloads with high disk I/O requirements. storage. readonly_fs Boolean Specify true to give your container read-only access to its root file system. storage. volumes Map Specify the name and configuration of any EFS volumes you would like to attach. The volumes field is specified as a map of the form: volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map Specify the configuration of a volume. storage.volumes. <volume> . path String Required. Specify the location in the container where you would like your volume to be mounted. Must be fewer than 242 characters and must consist only of the characters a-zA-Z0-9.-_/ . storage.volumes. <volume> . read_only Boolean Optional. Defaults to true . Defines whether the volume is read-only or not. If false, the container is granted elasticfilesystem:ClientWrite permissions to the filesystem and the volume is writable. storage.volumes. <volume> . efs Boolean or Map Specify more detailed EFS configuration. If specified as a boolean, or using only the uid and gid subfields, creates a managed EFS filesystem and dedicated Access Point for this workload. // Simple managed EFS efs : true // Managed EFS with custom POSIX info efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String Required. The ID of the filesystem you would like to mount. storage.volumes. <volume> .efs.id. from_cfn String Added in v1.30.0 The name of a CloudFormation stack export . storage.volumes. <volume> .efs. root_dir String Optional. Defaults to / . Specify the location in the EFS filesystem you would like to use as the root of your volume. Must be fewer than 255 characters and must consist only of the characters a-zA-Z0-9.-_/ . If using an access point, root_dir must be either empty or / and auth.iam must be true . storage.volumes. <volume> .efs. uid Uint32 Optional. Must be specified with gid . Mutually exclusive with root_dir , auth , and id . The POSIX UID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. gid Uint32 Optional. Must be specified with uid . Mutually exclusive with root_dir , auth , and id . The POSIX GID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. auth Map Specify advanced authorization configuration for EFS. storage.volumes. <volume> .efs.auth. iam Boolean Optional. Defaults to true . Whether or not to use IAM authorization to determine whether the volume is allowed to connect to EFS. storage.volumes. <volume> .efs.auth. access_point_id String Optional. Defaults to \"\" . The ID of the EFS access point to connect to. If using an access point, root_dir must be either empty or / and auth.iam must be true . publish Map The publish section allows services to publish messages to one or more SNS topics. publish : topics : - name : orderEvents In the example above, this manifest declares an SNS topic named orderEvents that other worker services deployed to the Copilot environment can subscribe to. An environment variable named COPILOT_SNS_TOPIC_ARNS is injected into your workload as a JSON string. In JavaScript, you could write: const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) For more details, see the pub/sub page. publish. topics Array of topics List of topic objects. publish.topics. topic Map Holds configuration for a single SNS topic. publish.topics.topic. name String Required. The name of the SNS topic. Must contain only upper and lowercase letters, numbers, hyphens, and underscores. publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS topic configuration. If you specify true , Copilot will create the topic with FIFO ordering. publish : topics : - name : mytopic fifo : true Alternatively, you can also configure advanced SNS FIFO topic settings. publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean If the message body is guaranteed to be unique for each published message, you can enable content-based deduplication for the SNS FIFO topic. logging Map The logging section contains log configuration. You can also configure parameters for your container's FireLens log driver in this section (see examples here ). logging. retention Integer Optional. The number of days to retain the log events. See this page for all accepted values. If omitted, the default is 30. logging. image Map Optional. The Fluent Bit image to use. Defaults to public.ecr.aws/aws-observability/aws-for-fluent-bit:stable . logging. destination Map Optional. The configuration options to send to the FireLens log driver. logging. enableMetadata Map Optional. Whether to include ECS metadata in logs. Defaults to true . logging. secretOptions Map Optional. The secrets to pass to the log configuration. logging. configFilePath Map Optional. The full config file path in your custom Fluent Bit image. logging. env_file String The path to a file from the root of your workspace containing the environment variables to pass to the logging sidecar container. For more information about the environment variable file, see Considerations for specifying environment variable files . observability Map The observability section lets you configure ways to measure your service's current state. Currently, only tracing configuration is supported. For more details, see the observability page. observability. tracing String The vendor to use for tracing. Currently, only awsxray is supported. taskdef_overrides Array of Rules The taskdef_overrides section allows users to apply overriding rules to their ECS Task Definitions (see examples here ). taskdef_overrides. path String Required. Path to the Task Definition field to override. taskdef_overrides. value Any Required. Value of the Task Definition field to override. environments Map The environment section lets you override any value in your manifest based on the environment you're in. In the example manifest above, we're overriding the count parameter so that we can run 2 copies of our service in our 'prod' environment, and 2 copies using Fargate Spot capacity in our 'staging' environment.","title":"Load Balanced Web Service"},{"location":"docs/manifest/overview/","text":"Manifest The AWS Copilot CLI manifest describes a service's, a job's or an environment's architecture as infrastructure-as-code. It is a file generated from copilot init , copilot svc init , copilot job init , or copilot env init that gets converted to an AWS CloudFormation template. Unlike raw CloudFormation templates, the manifest allows you to focus on the most common settings for the architecture of your service, job or environment, and not the individual resources. Manifest files are stored under copilot/<your service, job, or environment name>/manifest.yml .","title":"Overview"},{"location":"docs/manifest/overview/#manifest","text":"The AWS Copilot CLI manifest describes a service's, a job's or an environment's architecture as infrastructure-as-code. It is a file generated from copilot init , copilot svc init , copilot job init , or copilot env init that gets converted to an AWS CloudFormation template. Unlike raw CloudFormation templates, the manifest allows you to focus on the most common settings for the architecture of your service, job or environment, and not the individual resources. Manifest files are stored under copilot/<your service, job, or environment name>/manifest.yml .","title":"Manifest"},{"location":"docs/manifest/pipeline/","text":"List of all available properties for a Copilot pipeline manifest. To learn more about pipelines, see the Pipelines concept page. Sample continuous delivery pipeline manifests Release workloads Control order of deployments Release environments # The \"app-pipeline\" will deploy all the services and jobs in the user/repo # to the \"test\" and \"prod\" environments. name : app-pipeline source : provider : GitHub properties : branch : main repository : https://github.com/user/repo # Optional: specify the name of an existing CodeStar Connections connection. # connection_name: a-connection build : image : aws/codebuild/amazonlinux2-x86_64-standard:5.0 # additional_policy: # Add additional permissions while building your container images and templates. stages : - # By default all workloads are deployed concurrently within a stage. name : test pre_deployments : db_migration : buildspec : ./buildspec.yml test_commands : - make integ-test - echo \"woo! Tests passed\" - name : prod requires_approval : true # Alternatively, you can control the order of stack deployments in a stage. # See https://aws.github.io/copilot-cli/blogs/release-v118/#controlling-order-of-deployments-in-a-pipeline name : app-pipeline source : provider : Bitbucket properties : branch : main repository : https://bitbucket.org/user/repo stages : - name : test deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] - name : prod require_approval : true deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] # Environment manifests changes can also be released with a pipeline. name : env-pipeline source : provider : CodeCommit properties : branch : main repository : https://git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo stages : - name : test deployments : deploy-env : template_path : infrastructure/test.env.yml template_config : infrastructure/test.env.params.json stack_name : app-test - name : prod deployments : deploy-prod : template_path : infrastructure/prod.env.yml template_config : infrastructure/prod.env.params.json stack_name : app-prod name String The name of your pipeline. version String The schema version for the template. There is only one version, 1 , supported at the moment. source Map Configuration for how your pipeline is triggered. source. provider String The name of your provider. Currently, GitHub , Bitbucket , and CodeCommit are supported. source. properties Map Provider-specific configuration on how the pipeline is triggered. source.properties. access_token_secret String The name of AWS Secrets Manager secret that holds the GitHub access token to trigger the pipeline if your provider is GitHub and you created your pipeline with a personal access token. Info As of AWS Copilot v1.4.0, the access token is no longer needed for GitHub repository sources. Instead, Copilot will trigger the pipeline using AWS CodeStar connections . source.properties. branch String The name of the branch in your repository that triggers the pipeline. Copilot autofills this field with your current local branch. source.properties. repository String The URL of your repository. source.properties. connection_name String The name of an existing CodeStar Connections connection. If omitted, Copilot will generate a connection for you. source.properties. output_artifact_format String Optional. The output artifact format. Values can be either CODEBUILD_CLONE_REF or CODE_ZIP . If omitted, the default is CODE_ZIP . Info This property is not available for pipelines with GitHub version 1 source actions, which use access_token_secret . build Map Configuration for CodeBuild project. build. image String The URI that identifies the Docker image to use for this build project. As of now, aws/codebuild/amazonlinux2-x86_64-standard:5.0 is used by default. build. buildspec String Optional. The path to a buildspec file, relative to the project root, to use for this build project. By default, Copilot will generate one for you, located at copilot/pipelines/[your pipeline name]/buildspec.yml . build. additional_policy. PolicyDocument Map Optional. Specify an additional policy document to add to the build project role. The additional policy document can be specified in a map in YAML, for example: build : additional_policy : PolicyDocument : Version : '2012-10-17' Statement : - Effect : Allow Action : - ecr:GetAuthorizationToken Resource : '*' or alternatively as JSON: build : additional_policy : PolicyDocument : { \"Statement\" : [ { \"Action\" : [ \"ecr:GetAuthorizationToken\" ], \"Effect\" : \"Allow\" , \"Resource\" : \"*\" } ], \"Version\" : \"2012-10-17\" } stages Array of Maps Ordered list of environments that your pipeline will deploy to. stages. name String The name of an environment to deploy your services to. stages. requires_approval Boolean Optional. Indicates whether to add a manual approval step before the deployment (or the pre-deployment actions, if you have added any). Defaults to false . stages. pre_deployments Map Added in v1.30.0 Optional. Add actions to be executed before deployments. stages : - name : <env name> pre_deployments : <action name> : buildspec : <path to local buildspec> depends_on : [ <other action's name> , ... ] stages.pre_deployments. <name> Map Added in v1.30.0 Name of the pre-deployment action. stages.pre_deployments. <name> . buildspec String Added in v1.30.0 The path to a buildspec file, relative to the project root, to use for this build project. stages.pre_deployments. <name> . depends_on Array of Strings Added in v1.30.0 Optional. Names of other pre-deployment actions that should be deployed prior to deploying this action. Defaults to no dependencies. Info For more on pre- and post-deployments, see the v1.30.0 blog post and the Pipelines page. stages. deployments Map Optional. Control which CloudFormation stacks to deploy and their order. The deployments dependencies are specified in a map of the form: stages : - name : test deployments : <service or job name> : <other service or job name> : depends_on : [ <name> , ... ] For example, if your git repository has the following layout: copilot \u251c\u2500\u2500 api \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 frontend \u2514\u2500\u2500 manifest.yml And you'd like to control the order of your deployments, such that api is deployed before frontend , then you can configure your stage as follows: stages : - name : test deployments : api : frontend : depends_on : - api You can also limit which microservices to release part of your pipeline. In the following manifest, we're specifying to deploy only api and not frontend : stages : - name : test deployments : api : Finally, if deployments isn't specified, by default Copilot will deploy all your services and job in the git repository in parallel. stages.deployments. <name> Map Name of the job or service to deploy. stages.deployments. <name> . depends_on Array of Strings Optional. Name of other jobs or services that should be deployed prior to deploying this microservice. Defaults to no dependencies. stages.deployments. <name> . stack_name String Optional. Name of the stack to create or update. Defaults to <app name>-<stage name>-<deployment name> . For example, if your application is called demo , stage name is test , and your service name is frontend then the stack name will be demo-test-frontend . stages.deployments. <name> . template_path String Optional. Path to the CloudFormation template generated during the build phase. Defaults to infrastructure/<deployment name>-<stage name>.yml . stages.deployments. <name> . template_config String Optional. Path to the CloudFormation template configuration generated during the build phase. Defaults to infrastructure/<deployment name>-<stage name>.params.json . stages. post_deployments Map Added in v1.30.0 Optional. Add actions to be executed after deployments. Mutually exclusive with stages.test_commands . stages : - name : <env name> post_deployments : <action name> : buildspec : <path to local buildspec> depends_on : [ <other action's name> , ... ] stages.post_deployments. <name> Map Added in v1.30.0 Name of the post-deployment action. stages.post_deployments. <name> . buildspec String Added in v1.30.0 The path to a buildspec file, relative to the project root, to use for this build project. stages.post_deployments. <name> . depends_on Array of Strings Added in v1.30.0 Optional. Names of other post-deployment actions that should be deployed prior to deploying this action. Defaults to no dependencies. stages. test_commands Array of Strings Optional. Commands to run integration or end-to-end tests after deployment. Defaults to no post-deployment validations. Mutually exclusive with stages.post_deployment .","title":"Pipeline"},{"location":"docs/manifest/rd-web-service/","text":"List of all available properties for a 'Request-Driven Web Service' manifest. Sample AWS App Runner manifests Public Connected to the environment VPC Event-driven # Deploys a web service accessible at https://web.example.com. name : frontend type : Request-Driven Web Service http : healthcheck : '/_healthcheck' alias : web.example.com image : build : ./frontend/Dockerfile port : 80 cpu : 1024 memory : 2048 variables : LOG_LEVEL : info tags : owner : frontend observability : tracing : awsxray secrets : GITHUB_TOKEN : GITHUB_TOKEN DB_SECRET : secretsmanager : 'mysql' environments : test : variables : LOG_LEVEL : debug # All egress traffic is routed though the environment VPC. name : frontend type : Request-Driven Web Service image : build : ./frontend/Dockerfile port : 8080 cpu : 1024 memory : 2048 network : vpc : placement : private # See https://aws.github.io/copilot-cli/docs/developing/publish-subscribe/ name : refunds type : Request-Driven Web Service image : build : ./refunds/Dockerfile port : 8080 http : alias : refunds.example.com cpu : 1024 memory : 2048 publish : topics : - name : 'refunds' - name : 'orders' fifo : true name String The name of your service. type String The architecture type for your service. A Request-Driven Web Service is an internet-facing service that is deployed on AWS App Runner. http Map The http section contains parameters related to the managed load balancer. http. private Bool or Map Restrict incoming traffic to only your environment. Defaults to false. http.private endpoint String The ID of an existing VPC Endpoint to App Runner. http : private : endpoint : vpce-12345 http. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : healthcheck : '/' You can also specify healthcheck as a map: http : healthcheck : path : '/' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.healthcheck. path String The destination that the health check requests are sent to. http.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 3. Range: 1-20. http.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 3. Range: 1-20. http.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 5s. Range: 1s\u201320s. http.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 2s. Range 1s-20s. http. alias String Assign a friendly domain name to your request-driven web services. To learn more see developing/domain . image Map The image section contains parameters relating to the Docker build configuration and exposed port. image. build String or Map If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . Note Only public images stored in Amazon ECR Public are available with AWS App Runner. image. port Integer The port exposed in your Dockerfile. Copilot should parse this value for you from your EXPOSE instruction. cpu Integer Number of CPU units reserved for each instance of your service. See the AWS App Runner docs for valid CPU values. memory Integer Amount of memory in MiB reserved for each instance of your service. See the AWS App Runner docs for valid memory values. network Map The network section contains parameters for connecting the service to AWS resources in the environment's VPC. By connecting the service to a VPC, you can use service discovery to communicate with other services in your environment, or connect to a database in your VPC such as Amazon Aurora with storage init . network. vpc Map Subnets in the VPC to route egress traffic from the service. network.vpc. placement String The only valid option today is 'private' . If you prefer the service not to be connected to a VPC, you can remove the network field. When the placement is 'private' , the App Runner service routes egress traffic through the private subnets of the VPC. If you use a Copilot-generated VPC, Copilot will automatically add NAT Gateways to your environment for internet connectivity. (See pricing .) Alternatively, when running copilot env init , you can import an existing VPC with NAT Gateways, or one with VPC endpoints for isolated workloads. See our custom environment resources page for more. observability Map The observability section lets you configure ways to measure your service's current state. Currently, only tracing configuration is supported. For more details, see the observability page. observability. tracing String The vendor to use for tracing. Currently, only awsxray is supported. command String Optional. Override the default command in the image. variables Map Key-value pairs that represent environment variables that will be passed to your service. Copilot will include a number of environment variables by default for you. secrets Map Key-value pairs that represent secret values from AWS Systems Manager Parameter Store or AWS Secrets Manager that will be securely passed to your service as environment variables. secrets. from_cfn String The name of a CloudFormation stack export . publish Map The publish section allows services to publish messages to one or more SNS topics. publish : topics : - name : orderEvents In the example above, this manifest declares an SNS topic named orderEvents that other worker services deployed to the Copilot environment can subscribe to. An environment variable named COPILOT_SNS_TOPIC_ARNS is injected into your workload as a JSON string. In JavaScript, you could write: const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) For more details, see the pub/sub page. publish. topics Array of topics List of topic objects. publish.topics. topic Map Holds configuration for a single SNS topic. publish.topics.topic. name String Required. The name of the SNS topic. Must contain only upper and lowercase letters, numbers, hyphens, and underscores. publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS topic configuration. If you specify true , Copilot will create the topic with FIFO ordering. publish : topics : - name : mytopic fifo : true Alternatively, you can also configure advanced SNS FIFO topic settings. publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean If the message body is guaranteed to be unique for each published message, you can enable content-based deduplication for the SNS FIFO topic. tags Map Key-value pairs representing AWS tags that are passed down to your AWS App Runner resources. count String Specify the name of an existing autoscaling configuration. count : high-availability/3 environments Map The environment section lets you override any value in your manifest based on the environment you're in. In the example manifest above, we're overriding the LOG_LEVEL environment variable in our 'test' environment.","title":"Request-Driven Web Service"},{"location":"docs/manifest/scheduled-job/","text":"List of all available properties for a 'Scheduled Job' manifest. To learn about Copilot jobs, see the Jobs concept page. Sample scheduled job manifest name : report-generator type : Scheduled Job on : schedule : \"@daily\" cpu : 256 memory : 512 retries : 3 timeout : 1h image : build : ./Dockerfile variables : LOG_LEVEL : info env_file : log.env secrets : GITHUB_TOKEN : GITHUB_TOKEN # You can override any of the values defined above by environment. environments : prod : cpu : 2048 memory : 4096 name String The name of your job. type String The architecture type for your job. Currently, Copilot only supports the \"Scheduled Job\" type for tasks that are triggered either on a fixed schedule or periodically. on Map The configuration for the event that triggers your job. on. schedule String You can specify a rate to periodically trigger your job. Supported rates: Rate Identical to In human-readable text and UTC , it runs ... \"@yearly\" \"cron(0 * * * ? *)\" at midnight on January 1st \"@monthly\" \"cron(0 0 1 * ? *)\" at midnight on the first day of the month \"@weekly\" \"cron(0 0 ? * 1 *)\" at midnight on Sunday \"@daily\" \"cron(0 0 * * ? *)\" at midnight \"@hourly\" \"cron(0 * * * ? *)\" at minute 0 \"@every {duration}\" (For example, \"1m\", \"5m\") \"rate({duration})\" based on CloudWatch's rate expressions Alternatively, you can specify a cron schedule if you'd like to trigger the job at a specific time: \"* * * * *\" based on the standard cron format . \"cron({fields})\" based on CloudWatch's cron expressions with six fields. Finally, you can disable the job from triggering by setting the schedule field to none : on : schedule : \"none\" image Map The image section contains parameters relating to the Docker build configuration or referring to an existing container image. image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. entrypoint String or Array of Strings Override the default entrypoint in the image. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings Override the default command in the image. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ] cpu Integer Number of CPU units for the task. See the Amazon ECS docs for valid CPU values. memory Integer Amount of memory in MiB used by the task. See the Amazon ECS docs for valid memory values. platform String Operating system and architecture (formatted as [os]/[arch] ) to pass with docker build --platform . For example, linux/arm64 or windows/x86_64 . The default is linux/x86_64 . Override the generated string to build with a different valid osfamily or architecture . For example, Windows users might change the string platform : windows/x86_64 which defaults to WINDOWS_SERVER_2019_CORE , using a map: platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2019_core architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 retries Integer The number of times to retry the job before failing. timeout Duration How long the job should run before it aborts and fails. You can use the units: h , m , or s . network Map The network section contains parameters for connecting to AWS resources in a VPC. network. vpc Map Subnets and security groups attached to your tasks. network.vpc. placement String Must be one of 'public' or 'private' . Defaults to launching your tasks in public subnets. Info If you launch tasks in 'private' subnets and use a Copilot-generated VPC, Copilot will automatically add NAT Gateways to your environment for internet connectivity. (See pricing .) Alternatively, when running copilot env init , you can import an existing VPC with NAT Gateways, or one with VPC endpoints for isolated workloads. See our custom environment resources page for more. network.vpc. security_groups Array of Strings Additional security group IDs associated with your tasks. Copilot always includes a security group so containers within your environment can communicate with each other. variables Map Key-value pairs that represent environment variables that will be passed to your job. Copilot will include a number of environment variables by default for you. secrets Map Key-value pairs that represent secret values from AWS Systems Manager Parameter Store that will be securely passed to your job as environment variables. storage Map The Storage section lets you specify external EFS volumes for your containers and sidecars to mount. This allows you to access persistent storage across regions for data processing or CMS workloads. For more detail, see the storage page. storage. volumes Map Specify the name and configuration of any EFS volumes you would like to attach. The volumes field is specified as a map of the form: volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map Specify the configuration of a volume. storage.volumes. <volume> . path String Required. Specify the location in the container where you would like your volume to be mounted. Must be fewer than 242 characters and must consist only of the characters a-zA-Z0-9.-_/ . storage.volumes. <volume> . read_only Boolean Optional. Defaults to true . Defines whether the volume is read-only or not. If false, the container is granted elasticfilesystem:ClientWrite permissions to the filesystem and the volume is writable. storage.volumes. <volume> . efs Map Specify more detailed EFS configuration. storage.volumes. <volume> .efs. id String Required. The ID of the filesystem you would like to mount. storage.volumes. <volume> .efs. root_dir String Optional. Defaults to / . Specify the location in the EFS filesystem you would like to use as the root of your volume. Must be fewer than 255 characters and must consist only of the characters a-zA-Z0-9.-_/ . If using an access point, root_dir must be either empty or / and auth.iam must be true . storage.volumes. <volume> .efs. auth Map Specify advanced authorization configuration for EFS. storage.volumes. <volume> .efs.auth. iam Boolean Optional. Defaults to true . Whether or not to use IAM authorization to determine whether the volume is allowed to connect to EFS. storage.volumes. <volume> .efs.auth. access_point_id String Optional. Defaults to \"\" . The ID of the EFS access point to connect to. If using an access point, root_dir must be either empty or / and auth.iam must be true . logging Map The logging section contains log configuration parameters for your container's FireLens log driver (see examples here ). logging. image Map Optional. The Fluent Bit image to use. Defaults to public.ecr.aws/aws-observability/aws-for-fluent-bit:stable . logging. destination Map Optional. The configuration options to send to the FireLens log driver. logging. enableMetadata Map Optional. Whether to include ECS metadata in logs. Defaults to true . logging. secretOptions Map Optional. The secrets to pass to the log configuration. logging. configFilePath Map Optional. The full config file path in your custom Fluent Bit image. publish Map The publish section allows services to publish messages to one or more SNS topics. publish : topics : - name : orderEvents In the example above, this manifest declares an SNS topic named orderEvents that other worker services deployed to the Copilot environment can subscribe to. An environment variable named COPILOT_SNS_TOPIC_ARNS is injected into your workload as a JSON string. In JavaScript, you could write: const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) For more details, see the pub/sub page. publish. topics Array of topics List of topic objects. publish.topics. topic Map Holds configuration for a single SNS topic. publish.topics.topic. name String Required. The name of the SNS topic. Must contain only upper and lowercase letters, numbers, hyphens, and underscores. publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS topic configuration. If you specify true , Copilot will create the topic with FIFO ordering. publish : topics : - name : mytopic fifo : true Alternatively, you can also configure advanced SNS FIFO topic settings. publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean If the message body is guaranteed to be unique for each published message, you can enable content-based deduplication for the SNS FIFO topic. environments Map The environment section lets you override any value in your manifest based on the environment you're in. In the example manifest above, we're overriding the CPU parameter so that our production container is more performant.","title":"Scheduled Job"},{"location":"docs/manifest/static-site/","text":"List of all available properties for a 'Static Site Service' manifest. Sample static site manifest name : example type : Static Site http : alias : 'example.com' files : - source : src/someDirectory recursive : true - source : someFile.html # You can override any of the values defined above by environment. # environments: # test: # files: # - source: './blob' # destination: 'assets' # recursive: true # exclude: '*' # reinclude: # - '*.txt' # - '*.png' name String The name of your service. type String The architecture type for your service. A Static Site is an internet-facing service that is hosted by Amazon S3. http Map Configuration for incoming traffic to your site. http. alias String HTTPS domain alias of your service. http. certificate String The ARN for the certificate used for your HTTPS traffic. CloudFront requires imported certificates to be in the us-east-1 region. For example: http : alias : example.com certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" files Array of Maps Parameters related to your static assets. files. source String The path, relative to your workspace root, to the directory or file to upload to S3. files. recursive Boolean Whether or not the source directory should be uploaded recursively. Defaults to true for directories. files. destination String Optional. The subpath to be prepended to your files in your S3 bucket. Default value is . files. exclude String Optional. Pattern-matched filters to exclude files from upload. Acceptable symbols are: * (matches everything) ? (matches any single character) [sequence] (matches any character in sequence ) [!sequence] (matches any character not in sequence ) files. reinclude String Optional. Pattern-matched filters to reinclude files that have been excluded from upload via exclude . Acceptable symbols are: * (matches everything) ? (matches any single character) [sequence] (matches any character in sequence ) [!sequence] (matches any character not in sequence )","title":"Static Site"},{"location":"docs/manifest/worker-service/","text":"List of all available properties for a 'Worker Service' manifest. To learn about Copilot services, see the Services concept page. Sample worker service manifests Single queue Spot autoscaling Separate queues # Collect messages from multiple topics published from other services to a single SQS queue. name : cost-analyzer type : Worker Service image : build : ./cost-analyzer/Dockerfile subscribe : topics : - name : products service : orders filter_policy : event : - anything-but : order_cancelled - name : inventory service : warehouse queue : retention : 96h timeout : 30s dead_letter : tries : 10 cpu : 256 memory : 512 count : 3 exec : true secrets : DB : secretsmanager : 'mysql' # Burst to Fargate Spot tasks if capacity is available. name : cost-analyzer type : Worker Service image : build : ./cost-analyzer/Dockerfile subscribe : topics : - name : products service : orders - name : inventory service : warehouse cpu : 256 memory : 512 count : range : min : 1 max : 10 spot_from : 2 queue_delay : # Ensure messages are processed within 10mins assuming a single message takes 250ms to process. acceptable_latency : 10m msg_processing_time : 250ms exec : true # Assign individual queues to each topic. name : cost-analyzer type : Worker Service image : build : ./cost-analyzer/Dockerfile subscribe : topics : - name : products service : orders queue : retention : 5d timeout : 1h dead_letter : tries : 3 - name : inventory service : warehouse queue : retention : 1d timeout : 5m count : 1 name String The name of your service. type String The architecture type for your service. Worker Services are not reachable from the internet or elsewhere in the VPC. They are designed to pull messages from their associated SQS queues, which are populated by their subscriptions to SNS topics created by other Copilot services' publish fields. subscribe Map The subscribe section allows worker services to create subscriptions to the SNS topics exposed by other Copilot services in the same application and environment. Each topic can define its own SQS queue, but by default all topics are subscribed to the worker service's default queue. The URI of the default queue will be injected into the container as an environment variable, COPILOT_QUEUE_URI . subscribe : topics : - name : events service : api queue : # Define a topic-specific queue for the api-events topic. timeout : 20s - name : events service : fe queue : # By default, messages from all topics will go to a shared queue. timeout : 45s retention : 96h delay : 30s subscribe. queue Map By default, a service level queue is always created. queue allows customization of certain attributes of that default queue. subscribe.queue. delay Duration The time in seconds for which the delivery of all messages in the queue is delayed. Default 0s. Range 0s-15m. subscribe.queue. retention Duration Retention specifies the time a message will remain in the queue before being deleted. Default 4d. Range 60s-336h. subscribe.queue. timeout Duration Timeout defines the length of time a message is unavailable after being delivered. Default 30s. Range 0s-12h. subscribe.queue. fifo Boolean or Map Enable FIFO (first in, first out) ordering on your SQS queue to handle scenarios where the order of operations and events is critical, or where duplicates can't be tolerated. subscribe : topics : - name : events service : api - name : events service : fe queue : # Messages from both FIFO SNS Topics go to the shared FIFO SQS Queue. fifo : true When the queue is enabled with FIFO capabilities, Copilot requires that the source SNS topics are also FIFO . Alternatively, you can also specify advanced SQS FIFO queue configurations: subscribe : topics : - name : events service : api queue : # Define a topic-specific Standard queue for the api-events topic. timeout : 20s - name : events service : fe queue : # By default, messages from all FIFO topics will go to a shared FIFO queue. fifo : content_based_deduplication : true high_throughput : true subscribe.queue.fifo. content_based_deduplication Boolean If the message body is guaranteed to be unique for each published message, you can enable content-based deduplication for the SNS FIFO topic. subscribe.queue.fifo. deduplication_scope String For high throughput for FIFO queues, specifies whether message deduplication occurs at the message group or queue level. Valid values are \"messageGroup\" and \"queue\". subscribe.queue.fifo. throughput_limit String For high throughput for FIFO queues, specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are \"perQueue\" and \"perMessageGroupId\". subscribe.queue.fifo. high_throughput Boolean If enabled, provides higher transactions per second (TPS) for messages in FIFO queues. Mutually exclusive with deduplication_scope and throughput_limit . subscribe.queue.dead_letter. tries Integer If specified, creates a dead letter queue and a redrive policy which routes messages to the DLQ after tries attempts. That is, if a worker service fails to process a message successfully tries times, it will be routed to the DLQ for examination instead of redriven. subscribe. topics Array of topic s Contains information about which SNS topics the worker service should subscribe to. subscribe.topics.topic name String Required. The name of the SNS topic to subscribe to. subscribe.topics.topic service String Required. The service this SNS topic is exposed by. Together with the topic name, this uniquely identifies an SNS topic in the copilot environment. subscribe.topics.topic filter_policy Map Optional. Specify a SNS subscription filter policy to evaluate incoming message attributes against the policy. The filter policy can be specified in JSON, for example: f il ter _policy : { \"store\" :[ \"example_corp\" ], \"event\" :[{ \"anything-but\" : \"order_cancelled\" }], \"customer_interests\" :[ \"rugby\" , \"football\" , \"baseball\" ], \"price_usd\" :[{ \"numeric\" :[ \">=\" , 100 ]}]} or alternatively as a map in YAML: filter_policy : store : - example_corp event : - anything-but : order_cancelled customer_interests : - rugby - football - baseball price_usd : - numeric : - \">=\" - 100 For additional information on how to write filter policies, see the SNS documentation . subscribe.topics.topic. queue Boolean or Map Optional. Specify SQS queue configuration for the topic. If specified as true , the queue will be created with default configuration. Specify this field as a map for customization of certain attributes for this topic-specific queue. If you specify one or more topic-specific queues, you can access those queue URIs via the COPILOT_TOPIC_QUEUE_URIS variable. This variable is a JSON map from a unique identifier for the topic-specific queue to its URI. For example, a worker service with a topic-specific queue for the orders topic from the merchant service and a FIFO topic transactions from the merchant service will have the following JSON structure. // COPILOT_TOPIC_QUEUE_URIS { \"merchantOrdersEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" , \"merchantTransactionsfifoEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" } subscribe.topics.topic.queue. fifo Boolean or Map Optional. Specify SQS FIFO queue configuration for the topic. If specified as true , the FIFO queue will be created with the default FIFO configuration. Specify this field as a map for customization of certain attributes for this topic-specific queue. image Map The image section contains parameters relating to the Docker build configuration or referring to an existing container image. image. build String or Map Build a container from a Dockerfile with optional arguments. Mutually exclusive with image.location . If you specify a string, Copilot interprets it as the path to your Dockerfile. It will assume that the dirname of the string you specify should be the build context. The manifest: image : build : path/to/dockerfile will result in the following call to docker build: $ docker build --file path/to/dockerfile path/to You can also specify build as a map: image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value In this case, Copilot will use the context directory you specified and convert the key-value pairs under args to --build-arg overrides. The equivalent docker build call will be: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . You can omit fields and Copilot will do its best to understand what you mean. For example, if you specify context but not dockerfile , Copilot will run Docker in the context directory and assume that your Dockerfile is named \"Dockerfile.\" If you specify dockerfile but no context , Copilot assumes you want to run Docker in the directory that contains dockerfile . All paths are relative to your workspace root. image. location String Instead of building a container from a Dockerfile, you can specify an existing image name. Mutually exclusive with image.build . The location field follows the same definition as the image parameter in the Amazon ECS task definition. Warning If you are passing in a Windows image, you must add platform: windows/x86_64 to your manifest. If you are passing in an ARM architecture-based image, you must add platform: linux/arm64 to your manifest. image. credentials String An optional credentials ARN for a private repository. The credentials field follows the same definition as the credentialsParameter in the Amazon ECS task definition. image. labels Map An optional key/value map of Docker labels to add to the container. image. depends_on Map An optional key/value map of Container Dependencies to add to the container. The key of the map is a container name and the value is the condition to depend on. Valid conditions are: start , healthy , complete , and success . You cannot specify a complete or success dependency on an essential container. For example: image : build : ./Dockerfile depends_on : nginx : start startup : success In the above example, the task's main container will only start after the nginx sidecar has started and the startup container has completed successfully. image. healthcheck Map Optional configuration for container health checks. image.healthcheck. command Array of Strings The command to run to determine if the container is healthy. The string array can start with CMD to execute the command arguments directly, or CMD-SHELL to run the command with the container's default shell. image.healthcheck. interval Duration Time period between health checks, in seconds. Default is 10s. image.healthcheck. retries Integer Number of times to retry before container is deemed unhealthy. Default is 2. image.healthcheck. timeout Duration How long to wait before considering the health check failed, in seconds. Default is 5s. image.healthcheck. start_period Duration Length of grace period for containers to bootstrap before failed health checks count towards the maximum number of retries. Default is 0s. cpu Integer Number of CPU units for the task. See the Amazon ECS docs for valid CPU values. memory Integer Amount of memory in MiB used by the task. See the Amazon ECS docs for valid memory values. platform String or Map Operating system and architecture (formatted as [os]/[arch] ) to pass with docker build --platform . For example, linux/arm64 or windows/x86_64 . The default is linux/x86_64 . Override the generated string to build with a different valid osfamily or architecture . For example, Windows users might change the string platform : windows/x86_64 which defaults to WINDOWS_SERVER_2019_CORE , using a map: platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 count Integer or Map The number of tasks that your service should maintain. If you specify a number: count : 5 The service will set the desired count to 5 and maintain 5 tasks in your service. count. spot Integer If you want to use Fargate Spot capacity to run your services, you can specify a number under the spot subfield: count : spot : 5 Info Fargate Spot is not supported for containers running on ARM architecture. Alternatively, you can specify a map for setting up autoscaling: count : range : 1-10 cpu_percentage : 70 memory_percentage : value : 80 cooldown : in : 80s out : 160s queue_delay : acceptable_latency : 10m msg_processing_time : 250ms cooldown : in : 30s out : 60s count. range String or Map You can specify a minimum and maximum bound for the number of tasks your service should maintain, based on the values you specify for the metrics. count : range : n-m This will set up an Application Autoscaling Target with the MinCapacity of n and MaxCapacity of m . Alternatively, if you wish to scale your service onto Fargate Spot instances, specify min and max under range and then specify spot_from with the desired count you wish to start placing your services onto Spot capacity. For example: count : range : min : 1 max : 10 spot_from : 3 This will set your range as 1-10 as above, but will place the first two copies of your service on dedicated Fargate capacity. If your service scales to 3 or higher, the third and any additional copies will be placed on Spot until the maximum is reached. count.range. min Integer The minimum desired count for your service using autoscaling. count.range. max Integer The maximum desired count for your service using autoscaling. count.range. spot_from Integer The desired count at which you wish to start placing your service using Fargate Spot capacity providers. count. cooldown Map Cooldown scaling fields that are used as the default cooldown for all autoscaling fields specified. count.cooldown. in Duration The cooldown time for autoscaling fields to scale up the service. count.cooldown. out Duration The cooldown time for autoscaling fields to scale down the service. The following options cpu_percentage and memory_percentage are autoscaling fields for count which can be defined either as the value of the field, or as a Map containing advanced information about the field's value and cooldown : value : 50 cooldown : in : 30s out : 60s The cooldown specified here will override the default cooldown. count. cpu_percentage Integer or Map Scale up or down based on the average CPU your service should maintain. count. memory_percentage Integer or Map Scale up or down based on the average memory your service should maintain. count. queue_delay Map Scale up or down to maintain an acceptable queue latency by tracking against the acceptable backlog per task. The acceptable backlog per task is calculated by dividing acceptable_latency by msg_processing_time . For example, if you can tolerate consuming a message within 10 minutes of its arrival and it takes your task on average 250 milliseconds to process a message, then acceptableBacklogPerTask = 10 * 60 / 0.25 = 2400 . Therefore, each task can hold up to 2,400 messages. A target tracking policy is set up on your behalf to ensure your service scales up and down to maintain <= 2400 messages per task. To learn more see docs . count.queue_delay. acceptable_latency Duration The acceptable amount of time that a message can sit in the queue. For example, \"45s\" , \"5m\" , 10h . count.queue_delay. msg_processing_time Duration The average amount of time it takes to process an SQS message. For example, \"250ms\" , \"1s\" . count.queue_delay. cooldown Map Scale up and down cooldown fields for queue delay autoscaling. exec Boolean Enable running commands in your container. The default is false . Required for $ copilot svc exec . deployment Map The deployment section contains parameters to control how many tasks run during the deployment and the ordering of stopping and starting tasks. deployment. rolling String Rolling deployment strategy. Valid values are \"default\" : Creates new tasks as many as the desired count with the updated task definition, before stopping the old tasks. Under the hood, this translates to setting the minimumHealthyPercent to 100 and maximumPercent to 200. \"recreate\" : Stop all running tasks and then spin up new tasks. Under the hood, this translates to setting the minimumHealthyPercent to 0 and maximumPercent to 100. deployment. rollback_alarms Array of Strings or Map Info If an alarm is in \"In alarm\" state at the beginning of a deployment, Amazon ECS will NOT monitor alarms for the duration of that deployment. For more details, read the docs here . As a list of strings, the names of existing CloudWatch alarms to associate with your service that may trigger a deployment rollback . deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] As a map, the alarm metric and threshold for Copilot-created alarms. Available metrics: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. messages_delayed : 5 // Number of delayed messages in the queue at or above which alarm is triggered. entrypoint String or Array of Strings Override the default entrypoint in the image. # String version. entrypoint : \"/bin/entrypoint --p1 --p2\" # Alteratively, as an array of strings. entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings Override the default command in the image. # String version. command : ps au # Alteratively, as an array of strings. command : [ \"ps\" , \"au\" ] network Map The network section contains parameters for connecting to AWS resources in a VPC. network. connect Bool or Map Enable Service Connect for your service, which makes the traffic between services load balanced and more resilient. Defaults to false . When using it as a map, you can specify which alias to use for this service. Note that the alias must be unique within the environment. network.connect. alias String A custom DNS name for this service exposed to Service Connect. Defaults to the service name. network. vpc Map Subnets and security groups attached to your tasks. network.vpc. placement String or Map When using it as a string, the value must be one of 'public' or 'private' . Defaults to launching your tasks in public subnets. Info If you launch tasks in 'private' subnets and use a Copilot-generated VPC, Copilot will automatically add NAT Gateways to your environment for internet connectivity. (See pricing .) Alternatively, when running copilot env init , you can import an existing VPC with NAT Gateways, or one with VPC endpoints for isolated workloads. See our custom environment resources page for more. When using it as a map, you can specify in which subnets Copilot should launch ECS tasks. For example: network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map As a list of strings, the subnet IDs where Copilot should launch ECS tasks. As a map, the name-value pairs by which to filter your subnets. Note that the filters are joined with an AND , and the values for each filter are joined by an OR . For example, both subnets with tag set org: bi and type: public , and subnets with tag set org: bi and type: private will be matched by network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Tag sets by which to filter subnets where Copilot should launch ECS tasks. network.vpc. security_groups Array of Strings or Map Additional security group IDs associated with your tasks. network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot includes a security group so containers within your environment can communicate with each other. To disable the default security group, you can specify the Map form: network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String The name of a CloudFormation stack export . network.vpc.security_groups. deny_default Boolean Disable the default security group that allows ingress from all services in your environment. network.vpc.security_groups. groups Array of Strings Additional security group IDs associated with your tasks. network.vpc.security_groups.groups from_cfn String The name of a CloudFormation stack export . variables Map Key-value pairs that represent environment variables that will be passed to your service. Copilot will include a number of environment variables by default for you. variables. from_cfn String The name of a CloudFormation stack export . env_file String The path to a file from the root of your workspace containing the environment variables to pass to the main container. For more information about the environment variable file, see Considerations for specifying environment variable files . secrets Map Key-value pairs that represent secret values from AWS Systems Manager Parameter Store or AWS Secrets Manager that will be securely passed to your service as environment variables. secrets. from_cfn String The name of a CloudFormation stack export . storage Map The Storage section lets you specify external EFS volumes for your containers and sidecars to mount. This allows you to access persistent storage across availability zones in a region for data processing or CMS workloads. For more detail, see the storage page. You can also specify extensible ephemeral storage at the task level. storage. ephemeral Int Specify how much ephemeral task storage to provision in GiB. The default value and minimum is 20 GiB. The maximum size is 200 GiB. Sizes above 20 GiB incur additional charges. To create a shared filesystem context between an essential container and a sidecar, you can use an empty volume: storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false This example will provision 100 GiB of storage to be shared between the sidecar and the task container. This can be useful for large datasets, or for using a sidecar to transfer data from EFS into task storage for workloads with high disk I/O requirements. storage. readonly_fs Boolean Specify true to give your container read-only access to its root file system. storage. volumes Map Specify the name and configuration of any EFS volumes you would like to attach. The volumes field is specified as a map of the form: volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map Specify the configuration of a volume. storage.volumes. <volume> . path String Required. Specify the location in the container where you would like your volume to be mounted. Must be fewer than 242 characters and must consist only of the characters a-zA-Z0-9.-_/ . storage.volumes. <volume> . read_only Boolean Optional. Defaults to true . Defines whether the volume is read-only or not. If false, the container is granted elasticfilesystem:ClientWrite permissions to the filesystem and the volume is writable. storage.volumes. <volume> . efs Boolean or Map Specify more detailed EFS configuration. If specified as a boolean, or using only the uid and gid subfields, creates a managed EFS filesystem and dedicated Access Point for this workload. // Simple managed EFS efs : true // Managed EFS with custom POSIX info efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String Required. The ID of the filesystem you would like to mount. storage.volumes. <volume> .efs.id. from_cfn String Added in v1.30.0 The name of a CloudFormation stack export . storage.volumes. <volume> .efs. root_dir String Optional. Defaults to / . Specify the location in the EFS filesystem you would like to use as the root of your volume. Must be fewer than 255 characters and must consist only of the characters a-zA-Z0-9.-_/ . If using an access point, root_dir must be either empty or / and auth.iam must be true . storage.volumes. <volume> .efs. uid Uint32 Optional. Must be specified with gid . Mutually exclusive with root_dir , auth , and id . The POSIX UID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. gid Uint32 Optional. Must be specified with uid . Mutually exclusive with root_dir , auth , and id . The POSIX GID to use for the dedicated access point created for the managed EFS filesystem. storage.volumes. <volume> .efs. auth Map Specify advanced authorization configuration for EFS. storage.volumes. <volume> .efs.auth. iam Boolean Optional. Defaults to true . Whether or not to use IAM authorization to determine whether the volume is allowed to connect to EFS. storage.volumes. <volume> .efs.auth. access_point_id String Optional. Defaults to \"\" . The ID of the EFS access point to connect to. If using an access point, root_dir must be either empty or / and auth.iam must be true . publish Map The publish section allows services to publish messages to one or more SNS topics. publish : topics : - name : orderEvents In the example above, this manifest declares an SNS topic named orderEvents that other worker services deployed to the Copilot environment can subscribe to. An environment variable named COPILOT_SNS_TOPIC_ARNS is injected into your workload as a JSON string. In JavaScript, you could write: const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) For more details, see the pub/sub page. publish. topics Array of topics List of topic objects. publish.topics. topic Map Holds configuration for a single SNS topic. publish.topics.topic. name String Required. The name of the SNS topic. Must contain only upper and lowercase letters, numbers, hyphens, and underscores. publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS topic configuration. If you specify true , Copilot will create the topic with FIFO ordering. publish : topics : - name : mytopic fifo : true Alternatively, you can also configure advanced SNS FIFO topic settings. publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean If the message body is guaranteed to be unique for each published message, you can enable content-based deduplication for the SNS FIFO topic. logging Map The logging section contains log configuration. You can also configure parameters for your container's FireLens log driver in this section (see examples here ). logging. retention Integer Optional. The number of days to retain the log events. See this page for all accepted values. If omitted, the default is 30. logging. image Map Optional. The Fluent Bit image to use. Defaults to public.ecr.aws/aws-observability/aws-for-fluent-bit:stable . logging. destination Map Optional. The configuration options to send to the FireLens log driver. logging. enableMetadata Map Optional. Whether to include ECS metadata in logs. Defaults to true . logging. secretOptions Map Optional. The secrets to pass to the log configuration. logging. configFilePath Map Optional. The full config file path in your custom Fluent Bit image. logging. env_file String The path to a file from the root of your workspace containing the environment variables to pass to the logging sidecar container. For more information about the environment variable file, see Considerations for specifying environment variable files . observability Map The observability section lets you configure ways to measure your service's current state. Currently, only tracing configuration is supported. For more details, see the observability page. observability. tracing String The vendor to use for tracing. Currently, only awsxray is supported. taskdef_overrides Array of Rules The taskdef_overrides section allows users to apply overriding rules to their ECS Task Definitions (see examples here ). taskdef_overrides. path String Required. Path to the Task Definition field to override. taskdef_overrides. value Any Required. Value of the Task Definition field to override. environments Map The environment section lets you override any value in your manifest based on the environment you're in. In the example manifest above, we're overriding the count parameter so that we can run 2 copies of our service in our 'prod' environment, and 2 copies using Fargate Spot capacity in our 'staging' environment.","title":"Worker Service"},{"location":"ja/","text":"","title":"Home"},{"location":"ja/blogs/apprunner-vpc/","text":"AWS Copilot \u306b\u3088\u308b AWS App Runner \u306e VPC \u63a5\u7d9a \u6295\u7a3f\u65e5: 2022 \u5e74 6 \u6708 15 \u65e5 Rafael Mosca , Associate Solutions Architect, WWPS EMEA Central SA AWS Copilot CLI \u306f 2020 \u5e74\u306b\u30ed\u30fc\u30f3\u30c1 \u3055\u308c\u305f\u30c4\u30fc\u30eb\u3067\u3001\u305d\u308c\u4ee5\u6765\u3001\u958b\u767a\u8005\u306f Amazon Elastic Container Service (Amazon ECS) \u3001 AWS Fargate \u3001 AWS App Runner \u4e0a\u3067 Linux \u3084 Windows \u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3001\u7ba1\u7406\u3001\u904b\u7528\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 2022 \u5e74 2 \u6708\u3001AWS \u306f AWS App Runner \u306e VPC \u30b5\u30dd\u30fc\u30c8 \u3092\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001 AWS App Runner \u3092\u5229\u7528\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084 API \u306f\u3001 Amazon Relational Database Service (RDS) \u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u3067\u52d5\u4f5c\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u3001 Amazon Virtual Private Cloud (Amazon VPC) \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b Amazon Elastic Container Service (Amazon ECS) \u3001 Amazon Elastic Kubernetes Service (EKS) \u3001 Amazon Elastic Compute Cloud (Amazon EC2) \u3067\u52d5\u4f5c\u3059\u308b\u3001\u4ed6\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 AWS App Runner \u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3066 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u624b\u9806 \u306b\u5f93\u3063\u3066 VPC \u30a2\u30af\u30bb\u30b9\u3092\u6709\u52b9\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u624b\u9806\u66f8\u3067\u306f\u3001AWS Copilot \u3092\u4f7f\u7528\u3057\u3066 VPC \u30a2\u30af\u30bb\u30b9\u3092\u6709\u52b9\u5316\u3057\u3066 Amazon Aurora \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 \u80cc\u666f AWS App Runner \u306f\u3001\u958b\u767a\u8005\u304c Web \u30b5\u30fc\u30d0\u30fc\u3084 API \u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e HTTP \u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u305f\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\u4e8b\u524d\u306e\u30a4\u30f3\u30d5\u30e9\u3084\u7d4c\u9a13\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4e0e\u3048\u308b\u3068\u3001App Runner \u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u3066 AWS \u30af\u30e9\u30a6\u30c9\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002\u8868\u793a\u3055\u308c\u308b\u306e\u306f\u3001HTTPS \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u884c\u3067\u304d\u308b App Runner \u30b5\u30fc\u30d3\u30b9\u306e URL \u3060\u3051\u3067\u3059\u3002 \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u88cf\u3067\u306f App Runner \u304c\u6240\u5c5e\u3059\u308b VPC \u3067 Amazon Elastic Container Service (ECS) \u306b\u3088\u3063\u3066\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f AWS Fargate \u30bf\u30b9\u30af\u3068\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ca\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u958b\u59cb\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u3001NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3068\u3053\u306e App Runner \u304c\u6240\u6709\u3059\u308b VPC \u306b\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u7d4c\u7531\u3057\u3066\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u5f93\u3063\u3066\u3053\u306e\u30e2\u30fc\u30c9\u3067\u306f\u3001App Runner \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306e\u307f\u63a5\u7d9a\u3067\u304d\u307e\u3059\u304c\u3001VPC \u5185\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u5230\u9054\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 App Runner \u30b5\u30fc\u30d3\u30b9 \u306e VPC \u30b5\u30dd\u30fc\u30c8\u306e\u767a\u8868 \u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f Amazon RDS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084 Amazon ElastiCache \u30af\u30e9\u30b9\u30bf\u306a\u3069\u3001VPC \u5185\u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 VPC \u306e\u5185\u90e8\u3067\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u304b\u3092\u7406\u89e3\u3059\u308b\u306b\u306f\u3001 AWS App Runner \u306e VPC \u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u306b\u95a2\u3057\u3066 Dive Deep \u3057\u305f\u8a18\u4e8b\u3092\u30c1\u30a7\u30c3\u30af \u3057\u3066\u304f\u3060\u3055\u3044\u3002\u8981\u7d04\u3059\u308b\u3068\u3001VPC \u30b3\u30cd\u30af\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001App Runner \u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u307f\u306b\u4f7f\u7528\u3067\u304d\u308b\u4e00\u65b9\u5411\u306e Elastic Network Interface (ENI) \u3092\u6240\u6709\u3057\u3066\u3044\u308b VPC \u4e0a\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002(\u3064\u307e\u308a\u3001ENI \u306e IP \u30a2\u30c9\u30ec\u30b9\u306b\u30a4\u30f3\u30d0\u30a6\u30f3\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002) \u3053\u306e ENI \u306b\u306f\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30eb\u30fc\u30eb\u3092\u542b\u3080\u3088\u3046\u306b\u5909\u66f4\u3067\u304d\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u3042\u308a\u3001\u5e0c\u671b\u3059\u308b\u5b9b\u5148\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3078\u306e\u901a\u4fe1\u3092\u8a31\u53ef\u3057\u307e\u3059\u3002 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f8b AWS Copilot CLI \u3068 AWS App Runner \u306e VPC \u30b5\u30dd\u30fc\u30c8\u306e\u6a5f\u80fd\u3092\u5b9f\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u5fc5\u8981\u306a\u30b9\u30c6\u30c3\u30d7\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 Copilot \u306e Environment \u6982\u5ff5\u3092\u4f7f\u7528\u3057\u3066\u3001Customer VPC \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u306e VPC \u5185\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u5185\u306b Amazon Aurora PostgreSQL \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 AWS App Runner \u4e0a\u3067\u52d5\u4f5c\u3059\u308b Service \u3092\u3001VPC \u5185\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b VPC \u30b3\u30cd\u30af\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u63a5\u7d9a\u3057\u3001\u9069\u5207\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 Python \u5411\u3051\u306e\u4e00\u822c\u7684\u306a ORM \u3067\u3042\u308b SQLAlchemy \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3001\u63a5\u7d9a\u304c\u3046\u307e\u304f\u3044\u304f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u524d\u63d0\u6761\u4ef6 \u4e0a\u8a18\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u30d3\u30eb\u30c9\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u524d\u63d0\u6761\u4ef6\u304c\u5fc5\u8981\u3067\u3059\u3002 AWS \u30a2\u30ab\u30a6\u30f3\u30c8 \u3068\u3001\u4e0a\u8a18\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u9078\u629e\u3057\u3066\u3044\u308b\u3053\u3068\u3002 \u30ed\u30fc\u30ab\u30eb\u30ef\u30fc\u30af\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u306b AWS Copilot CLI \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3002 AWS CLI \u3092\u4f7f\u7528\u3057\u3066\u3001\u307e\u305f\u306f \u74b0\u5883\u5909\u6570 \u3092\u4f7f\u7528\u3057\u3066\u3001 AWS \u8a8d\u8a3c\u60c5\u5831 \u3092\u9069\u5207\u306b\u69cb\u6210\u3057\u3066\u3044\u308b\u3002 \u30ed\u30fc\u30ab\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u306b Docker \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3002 \u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u3044\u308b\u3002 git clone https://github.com/aws-rafams/apprunner-vpc-copilot Application \u3068 Environment \u306e\u4f5c\u6210 \u307e\u305a\u3001\u95a2\u9023\u3059\u308b Service\u3001Environment\u3001Pipeline \u306e\u8ad6\u7406\u7684\u306a\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002AWS Copilot \u306e\u7528\u8a9e\u3067\u306f\u3001\u3053\u308c\u3092 Application \u3068\u547c\u3073\u307e\u3059\u3002 copilot app init apprunner-vpc \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f ./copilot \u3068\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u3092\u4f7f\u7528\u3057\u3066\u3001 Manifest \u3068\u547c\u3070\u308c\u308b Infrastructure-as-Code \u306eYAML \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001Copilot \u3092\u4f7f\u3063\u3066 AWS \u4e0a\u306b\u30b3\u30f3\u30c6\u30ca\u5316\u3057\u305f Application \u3092\u7c21\u5358\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u3001Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Application \u306e Environment \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002AWS Copilot \u3067\u306f\u3001\u7570\u306a\u308b\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u5225\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8ad6\u7406\u7684\u306b\u5206\u96e2\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u822c\u7684\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u3068\u5225\u306e\u672c\u756a\u74b0\u5883\u304c\u3042\u308a\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u4e0a\u3067\u691c\u8a3c\u3055\u308c\u305f\u5834\u5408\u306b\u306e\u307f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306e\u7bc4\u56f2\u3067\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u3057\u305f test \u3068\u3044\u3046\u540d\u524d\u306e\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u306e\u307f Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002 copilot env init \\ --app apprunner-vpc \\ --name test \\ --region 'eu-west-1' \\ --default-config \u30b3\u30de\u30f3\u30c9\u3067 Enter \u3092\u62bc\u3059\u3068\u3001Service \u3092\u30db\u30b9\u30c8\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b AWS \u8a8d\u8a3c\u60c5\u5831\u3092\u9078\u629e\u3059\u308b\u3088\u3046\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u8a8d\u8a3c\u60c5\u5831\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u304c\u3042\u306a\u305f\u306b\u4ee3\u308f\u3063\u3066\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306f\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u306e\u9593\u3001\u5c11\u3057\u30b9\u30c8\u30ec\u30c3\u30c1\u3057\u3066\u304a\u5f85\u3061\u304f\u3060\u3055\u3044\u3002 \u4f5c\u6210\u3057\u305f Environment \u3054\u3068\u306b\u3001AWS Copilot \u306f\u500b\u5225\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30bf\u30c3\u30af (VPC) \u3068\u3001\u4eca\u56de\u306e\u30c7\u30e2\u3067\u306f\u4f7f\u7528\u3057\u306a\u3044 ECS Cluster \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 AWS App Runner \u4e0a\u3067\u52d5\u4f5c\u3059\u308b Service \u306e\u4f5c\u6210 AWS Copilot\u306f\u3001\u69d8\u3005\u306a\u30bf\u30a4\u30d7\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u308b\u3001\u3044\u304f\u3064\u304b\u306e\u62bd\u8c61\u5316\u3055\u308c\u305f\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306e\u4f8b\u3067\u306f\u3001 Request-Driven Web Service \u3068\u3044\u3046 Copilot \u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u53d7\u4fe1\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u57fa\u3065\u3044\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3057\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u306a\u3044\u3068\u304d\u306f\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u307e\u3067\u30b9\u30b1\u30fc\u30eb\u30c0\u30a6\u30f3\u3059\u308b AWS App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u6025\u6fc0\u306b\u5897\u52a0\u3059\u308b HTTP \u30b5\u30fc\u30d3\u30b9\u3084\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u5c11\u306a\u3044\u5834\u5408\u306b\u3001\u3088\u308a\u8cbb\u7528\u5bfe\u52b9\u679c\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002 copilot svc init \\ --app apprunner-vpc \\ --svc-type \"Request-Driven Web Service\" \\ --name demo-service\\ --port 5000 \\ --dockerfile \"demo-service/Dockerfile\" \u901a\u5e38\u3001AWS Copilot \u306f manifest.yml \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u5b9f\u969b\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u9032\u3080\u524d\u306b\u30ea\u30bd\u30fc\u30b9\u3092\u3055\u3089\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Application \u3067 VPC \u30a2\u30af\u30bb\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001Manifest \u30d5\u30a1\u30a4\u30eb copilot/demo-service/manifest.yml \u304b\u3089\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u30a2\u30f3\u30b3\u30e1\u30f3\u30c8\u3059\u308b\u3060\u3051\u3067\u3059\u3002 network: vpc: placement: private \u3053\u308c\u3089\u306e\u8ffd\u52a0\u884c\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 VPC \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a VPC \u30b3\u30cd\u30af\u30bf\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 VPC \u4e0a\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 VPC \u5185\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001AWS Copilot \u3092\u4f7f\u7528\u3057\u3066 demoDb \u3068\u3044\u3046\u540d\u524d\u306e Amazon Aurora Serverless v1 PostgreSQL \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 copilot storage init \\ --name demoDb \\ --storage-type Aurora\\ --workload demo-service \\ --engine PostgreSQL\\ --initial-db demo \u3053\u308c\u306b\u3088\u308a\u3001AWS Copilot CLI \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b Amazon Aurora Serverless \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\u3092\u542b\u3080 ./copilot/demo-service/addons/demoDb.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u898b\u308b\u3068\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 Copilot Application \u3068 Environment \u306e VPC \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u5185\u306b\u4f5c\u6210\u3055\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002 Copilot \u306f AWS Secrets Manager \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30b9\u30ef\u30fc\u30c9\u3068 Service \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3001AWS Copilot\u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306eARN\u3092\u74b0\u5883\u5909\u6570\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3057\u3001\u5f8c\u3067 SDK \u3092\u4f7f\u7528\u3057\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u30c7\u30e2\u3067\u306f Python \u3092\u4f7f\u7528\u3057\u3066\u304a\u308a (\u306a\u306e\u3067 boto3 \u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059)\u3001\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u74b0\u5883\u5909\u6570\u306f DEMO_DB_SECRET_ARN \u3068\u3044\u3046\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u3002Python \u3092\u4f7f\u3063\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 sm_client = boto3.client('secretsmanager') secret_arn = os.getenv(\"DEMO_DB_SECRET_ARN\") response = sm_client.get_secret_value(SecretId=secret_arn) secret = json.loads(response['SecretString']) secret \u306f\u4ee5\u4e0b\u306e\u60c5\u5831\u3067\u4f5c\u3089\u308c\u305f Dictionary \u306b\u306a\u308a\u307e\u3059\u3002 {dbClusterIdentifier, password, dbname, engine, port, host, username} \u3067\u4f5c\u3089\u308c\u305f Dictionary \u3067\u3001\u3053\u308c\u3092\u7528\u3044\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4eca\u56de\u306f\u3001SQLAlchemy \u3092\u5229\u7528\u3057\u307e\u3059\u3002 SQLAlchemy \u306f Python \u7528\u306e\u6709\u540d\u306a ORM (Object Relation Mapper) \u30c4\u30fc\u30eb \u3067\u3001\u4f4e\u30ec\u30d9\u30eb\u306e SQL \u30af\u30a8\u30ea\u306e\u4ee3\u308f\u308a\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d1\u30e9\u30c0\u30a4\u30e0\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u7167\u4f1a\u30fb\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u306b\u306f\u3001 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b \u3088\u3046\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3059\u3079\u3066 secret Dictionary \u304b\u3089\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 DB_URI = f\"postgresql://{secret['username']}:{secret['password']}@{secret['host']}/{secret['dbname']}\" Copilot \u306f\u81ea\u52d5\u7684\u306b\u9069\u5207\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4f5c\u6210\u3055\u308c\u305f Secret \u306b\u5bfe\u3057\u3066 secretsmanager:GetSecretValue \u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a31\u53ef\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3082\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002Copilot \u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u3001Service \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 (VPC\u30b3\u30cd\u30af\u30bf\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u3082\u306e) \u304b\u3089 PostgreSQL \u30dd\u30fc\u30c8 (5432) \u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u81ea\u52d5\u7684\u306b\u8a31\u53ef\u3057\u3001Service \u304c\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u5834\u6240\u306b\u306a\u308a\u307e\u3059\u3002 \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30d7\u30ed\u30a4 \u3053\u308c\u3067\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u30fc\u3092\u633f\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot svc deploy --name demo-service --env test Copilot \u306f\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u4f5c\u3059\u308b Docker Daemon \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u3001ECR \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u3001Daemon \u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306b\u5931\u6557\u3057\u3066\u30a8\u30e9\u30fc\u304c\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002 \u30a4\u30e1\u30fc\u30b8\u304c ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u308b\u3068 Copilot \u306f\u5fc5\u8981\u306a\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3057\u3001\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u304c\u5b8c\u4e86\u3059\u308b\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5b89\u5168\u306a URL \u304c\u53d6\u5f97\u3055\u308c\u307e\u3059\u3002 \u5c06\u6765\u7684\u306b\u3053\u306e URL \u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u3001 copilot svc show --name demo-service \u3092\u5b9f\u884c\u3057\u3001 Routes \u30bb\u30af\u30b7\u30e7\u30f3\u306e URL \u306e\u5024\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u52d5\u4f5c\u78ba\u8a8d \u30da\u30fc\u30b8\u3092\u66f4\u65b0\u3059\u308b\u305f\u3073\u306b\u3001\u65b0\u3057\u3044\u540d\u524d\u3068\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u304c\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Send \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001SQLAlchemy \u306f\u3001\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 (demo) \u3068\u3001Python \u306e\u30b3\u30fc\u30c9\u3067 ( __tablename__ = 'users' ) \u3068\u6307\u5b9a\u3057\u305f\u30c6\u30fc\u30d6\u30eb ' users ' \u306b\u3001\u30e6\u30fc\u30b6\u30fc\u3092 SQL Insert \u3057\u307e\u3059\u3002 \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u8907\u6570\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e Users \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u884c\u304d\u3001\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3055\u3089\u306b\u30e6\u30fc\u30b6\u30fc\u304c\u672c\u5f53\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001 RDS \u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u30af\u30a8\u30ea\u30a8\u30c7\u30a3\u30bf \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u6a19\u6e96 SQL \u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u5b9a\u7fa9\u8a00\u8a9e (DDL) \u304a\u3088\u3073\u30c7\u30fc\u30bf\u64cd\u4f5c\u8a00\u8a9e (DML) \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3053\u306e\u6a5f\u80fd\u306f\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u624b\u52d5\u3067\u30c7\u30fc\u30bf API \u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u6a5f\u80fd\u3092\u6709\u52b9\u306b\u3057\u305f\u5f8c\u3001SELECT \u306e\u3088\u3046\u306a SQL \u6587\u3092\u5b9f\u884c\u3057\u3066\u3001\u633f\u5165\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u5b9f\u969b\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306b\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7 \u4eca\u5f8c\u306e\u8ab2\u91d1\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3059\u3079\u3066\u6b63\u3057\u304f\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 copilot app delete apprunner-vpc \u4ee5\u4e0a\u3067\u3001\u3053\u306e\u30c7\u30e2\u306e\u305f\u3081\u306b\u4f5c\u6210\u3055\u308c\u305f\u3059\u3079\u3066\u306e Service \u3068\u95a2\u9023\u3059\u308b\u30a4\u30f3\u30d5\u30e9\u306f\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u307e\u3068\u3081 AWS Copilot \u3068 AWS App Runner \u306e\u65b0\u3057\u3044 VPC \u63a5\u7d9a\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 VPC \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u3053\u306e 2 \u3064\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u3001VPC \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3067\u304d\u308b HTTP \u30d9\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7c21\u5358\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u3001Copilot \u306f\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u306e\u8907\u96d1\u3055\u3092\u3059\u3079\u3066\u96a0\u853d\u3059\u308b\u3053\u3068\u3067\u3001\u7d50\u679c\u7684\u306b\u6642\u9593\u3092\u7bc0\u7d04\u3057\u3066\u7ba1\u7406\u3092\u7c21\u7d20\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002 \u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"AWS App Runner VPC"},{"location":"ja/blogs/apprunner-vpc/#aws-copilot-aws-app-runner-vpc","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 6 \u6708 15 \u65e5 Rafael Mosca , Associate Solutions Architect, WWPS EMEA Central SA AWS Copilot CLI \u306f 2020 \u5e74\u306b\u30ed\u30fc\u30f3\u30c1 \u3055\u308c\u305f\u30c4\u30fc\u30eb\u3067\u3001\u305d\u308c\u4ee5\u6765\u3001\u958b\u767a\u8005\u306f Amazon Elastic Container Service (Amazon ECS) \u3001 AWS Fargate \u3001 AWS App Runner \u4e0a\u3067 Linux \u3084 Windows \u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3001\u7ba1\u7406\u3001\u904b\u7528\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002 2022 \u5e74 2 \u6708\u3001AWS \u306f AWS App Runner \u306e VPC \u30b5\u30dd\u30fc\u30c8 \u3092\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001 AWS App Runner \u3092\u5229\u7528\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084 API \u306f\u3001 Amazon Relational Database Service (RDS) \u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u3067\u52d5\u4f5c\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u3001 Amazon Virtual Private Cloud (Amazon VPC) \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b Amazon Elastic Container Service (Amazon ECS) \u3001 Amazon Elastic Kubernetes Service (EKS) \u3001 Amazon Elastic Compute Cloud (Amazon EC2) \u3067\u52d5\u4f5c\u3059\u308b\u3001\u4ed6\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 AWS App Runner \u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3066 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u624b\u9806 \u306b\u5f93\u3063\u3066 VPC \u30a2\u30af\u30bb\u30b9\u3092\u6709\u52b9\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u624b\u9806\u66f8\u3067\u306f\u3001AWS Copilot \u3092\u4f7f\u7528\u3057\u3066 VPC \u30a2\u30af\u30bb\u30b9\u3092\u6709\u52b9\u5316\u3057\u3066 Amazon Aurora \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002","title":"AWS Copilot \u306b\u3088\u308b AWS App Runner \u306e VPC \u63a5\u7d9a"},{"location":"ja/blogs/apprunner-vpc/#_1","text":"AWS App Runner \u306f\u3001\u958b\u767a\u8005\u304c Web \u30b5\u30fc\u30d0\u30fc\u3084 API \u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e HTTP \u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u305f\u30d5\u30eb\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\u4e8b\u524d\u306e\u30a4\u30f3\u30d5\u30e9\u3084\u7d4c\u9a13\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4e0e\u3048\u308b\u3068\u3001App Runner \u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u3066 AWS \u30af\u30e9\u30a6\u30c9\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002\u8868\u793a\u3055\u308c\u308b\u306e\u306f\u3001HTTPS \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u884c\u3067\u304d\u308b App Runner \u30b5\u30fc\u30d3\u30b9\u306e URL \u3060\u3051\u3067\u3059\u3002 \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u88cf\u3067\u306f App Runner \u304c\u6240\u5c5e\u3059\u308b VPC \u3067 Amazon Elastic Container Service (ECS) \u306b\u3088\u3063\u3066\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f AWS Fargate \u30bf\u30b9\u30af\u3068\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ca\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u958b\u59cb\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u3001NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3068\u3053\u306e App Runner \u304c\u6240\u6709\u3059\u308b VPC \u306b\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u7d4c\u7531\u3057\u3066\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u5f93\u3063\u3066\u3053\u306e\u30e2\u30fc\u30c9\u3067\u306f\u3001App Runner \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306e\u307f\u63a5\u7d9a\u3067\u304d\u307e\u3059\u304c\u3001VPC \u5185\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u5230\u9054\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 App Runner \u30b5\u30fc\u30d3\u30b9 \u306e VPC \u30b5\u30dd\u30fc\u30c8\u306e\u767a\u8868 \u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f Amazon RDS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084 Amazon ElastiCache \u30af\u30e9\u30b9\u30bf\u306a\u3069\u3001VPC \u5185\u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 VPC \u306e\u5185\u90e8\u3067\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u304b\u3092\u7406\u89e3\u3059\u308b\u306b\u306f\u3001 AWS App Runner \u306e VPC \u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u306b\u95a2\u3057\u3066 Dive Deep \u3057\u305f\u8a18\u4e8b\u3092\u30c1\u30a7\u30c3\u30af \u3057\u3066\u304f\u3060\u3055\u3044\u3002\u8981\u7d04\u3059\u308b\u3068\u3001VPC \u30b3\u30cd\u30af\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001App Runner \u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u307f\u306b\u4f7f\u7528\u3067\u304d\u308b\u4e00\u65b9\u5411\u306e Elastic Network Interface (ENI) \u3092\u6240\u6709\u3057\u3066\u3044\u308b VPC \u4e0a\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002(\u3064\u307e\u308a\u3001ENI \u306e IP \u30a2\u30c9\u30ec\u30b9\u306b\u30a4\u30f3\u30d0\u30a6\u30f3\u30c9\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002) \u3053\u306e ENI \u306b\u306f\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30eb\u30fc\u30eb\u3092\u542b\u3080\u3088\u3046\u306b\u5909\u66f4\u3067\u304d\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u3042\u308a\u3001\u5e0c\u671b\u3059\u308b\u5b9b\u5148\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3078\u306e\u901a\u4fe1\u3092\u8a31\u53ef\u3057\u307e\u3059\u3002","title":"\u80cc\u666f"},{"location":"ja/blogs/apprunner-vpc/#_2","text":"AWS Copilot CLI \u3068 AWS App Runner \u306e VPC \u30b5\u30dd\u30fc\u30c8\u306e\u6a5f\u80fd\u3092\u5b9f\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u5fc5\u8981\u306a\u30b9\u30c6\u30c3\u30d7\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 Copilot \u306e Environment \u6982\u5ff5\u3092\u4f7f\u7528\u3057\u3066\u3001Customer VPC \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u306e VPC \u5185\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u5185\u306b Amazon Aurora PostgreSQL \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 AWS App Runner \u4e0a\u3067\u52d5\u4f5c\u3059\u308b Service \u3092\u3001VPC \u5185\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b VPC \u30b3\u30cd\u30af\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u63a5\u7d9a\u3057\u3001\u9069\u5207\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 Python \u5411\u3051\u306e\u4e00\u822c\u7684\u306a ORM \u3067\u3042\u308b SQLAlchemy \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3001\u63a5\u7d9a\u304c\u3046\u307e\u304f\u3044\u304f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f8b"},{"location":"ja/blogs/apprunner-vpc/#_3","text":"\u4e0a\u8a18\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u30d3\u30eb\u30c9\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u524d\u63d0\u6761\u4ef6\u304c\u5fc5\u8981\u3067\u3059\u3002 AWS \u30a2\u30ab\u30a6\u30f3\u30c8 \u3068\u3001\u4e0a\u8a18\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u9078\u629e\u3057\u3066\u3044\u308b\u3053\u3068\u3002 \u30ed\u30fc\u30ab\u30eb\u30ef\u30fc\u30af\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u306b AWS Copilot CLI \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3002 AWS CLI \u3092\u4f7f\u7528\u3057\u3066\u3001\u307e\u305f\u306f \u74b0\u5883\u5909\u6570 \u3092\u4f7f\u7528\u3057\u3066\u3001 AWS \u8a8d\u8a3c\u60c5\u5831 \u3092\u9069\u5207\u306b\u69cb\u6210\u3057\u3066\u3044\u308b\u3002 \u30ed\u30fc\u30ab\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u306b Docker \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3002 \u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u3044\u308b\u3002 git clone https://github.com/aws-rafams/apprunner-vpc-copilot","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"ja/blogs/apprunner-vpc/#application-environment","text":"\u307e\u305a\u3001\u95a2\u9023\u3059\u308b Service\u3001Environment\u3001Pipeline \u306e\u8ad6\u7406\u7684\u306a\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002AWS Copilot \u306e\u7528\u8a9e\u3067\u306f\u3001\u3053\u308c\u3092 Application \u3068\u547c\u3073\u307e\u3059\u3002 copilot app init apprunner-vpc \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f ./copilot \u3068\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u3092\u4f7f\u7528\u3057\u3066\u3001 Manifest \u3068\u547c\u3070\u308c\u308b Infrastructure-as-Code \u306eYAML \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001Copilot \u3092\u4f7f\u3063\u3066 AWS \u4e0a\u306b\u30b3\u30f3\u30c6\u30ca\u5316\u3057\u305f Application \u3092\u7c21\u5358\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u3001Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Application \u306e Environment \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002AWS Copilot \u3067\u306f\u3001\u7570\u306a\u308b\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u5225\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8ad6\u7406\u7684\u306b\u5206\u96e2\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u822c\u7684\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u3068\u5225\u306e\u672c\u756a\u74b0\u5883\u304c\u3042\u308a\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u4e0a\u3067\u691c\u8a3c\u3055\u308c\u305f\u5834\u5408\u306b\u306e\u307f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306e\u7bc4\u56f2\u3067\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u3057\u305f test \u3068\u3044\u3046\u540d\u524d\u306e\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u306e\u307f Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002 copilot env init \\ --app apprunner-vpc \\ --name test \\ --region 'eu-west-1' \\ --default-config \u30b3\u30de\u30f3\u30c9\u3067 Enter \u3092\u62bc\u3059\u3068\u3001Service \u3092\u30db\u30b9\u30c8\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b AWS \u8a8d\u8a3c\u60c5\u5831\u3092\u9078\u629e\u3059\u308b\u3088\u3046\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u8a8d\u8a3c\u60c5\u5831\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u304c\u3042\u306a\u305f\u306b\u4ee3\u308f\u3063\u3066\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306f\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u306e\u9593\u3001\u5c11\u3057\u30b9\u30c8\u30ec\u30c3\u30c1\u3057\u3066\u304a\u5f85\u3061\u304f\u3060\u3055\u3044\u3002 \u4f5c\u6210\u3057\u305f Environment \u3054\u3068\u306b\u3001AWS Copilot \u306f\u500b\u5225\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30bf\u30c3\u30af (VPC) \u3068\u3001\u4eca\u56de\u306e\u30c7\u30e2\u3067\u306f\u4f7f\u7528\u3057\u306a\u3044 ECS Cluster \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002","title":"Application \u3068 Environment \u306e\u4f5c\u6210"},{"location":"ja/blogs/apprunner-vpc/#aws-app-runner-service","text":"AWS Copilot\u306f\u3001\u69d8\u3005\u306a\u30bf\u30a4\u30d7\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u308b\u3001\u3044\u304f\u3064\u304b\u306e\u62bd\u8c61\u5316\u3055\u308c\u305f\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306e\u4f8b\u3067\u306f\u3001 Request-Driven Web Service \u3068\u3044\u3046 Copilot \u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u53d7\u4fe1\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u57fa\u3065\u3044\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3057\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u306a\u3044\u3068\u304d\u306f\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u307e\u3067\u30b9\u30b1\u30fc\u30eb\u30c0\u30a6\u30f3\u3059\u308b AWS App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u6025\u6fc0\u306b\u5897\u52a0\u3059\u308b HTTP \u30b5\u30fc\u30d3\u30b9\u3084\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u5c11\u306a\u3044\u5834\u5408\u306b\u3001\u3088\u308a\u8cbb\u7528\u5bfe\u52b9\u679c\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002 copilot svc init \\ --app apprunner-vpc \\ --svc-type \"Request-Driven Web Service\" \\ --name demo-service\\ --port 5000 \\ --dockerfile \"demo-service/Dockerfile\" \u901a\u5e38\u3001AWS Copilot \u306f manifest.yml \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u5b9f\u969b\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u9032\u3080\u524d\u306b\u30ea\u30bd\u30fc\u30b9\u3092\u3055\u3089\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Application \u3067 VPC \u30a2\u30af\u30bb\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001Manifest \u30d5\u30a1\u30a4\u30eb copilot/demo-service/manifest.yml \u304b\u3089\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u30a2\u30f3\u30b3\u30e1\u30f3\u30c8\u3059\u308b\u3060\u3051\u3067\u3059\u3002 network: vpc: placement: private \u3053\u308c\u3089\u306e\u8ffd\u52a0\u884c\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 VPC \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a VPC \u30b3\u30cd\u30af\u30bf\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002","title":"AWS App Runner \u4e0a\u3067\u52d5\u4f5c\u3059\u308b Service \u306e\u4f5c\u6210"},{"location":"ja/blogs/apprunner-vpc/#vpc","text":"VPC \u5185\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001AWS Copilot \u3092\u4f7f\u7528\u3057\u3066 demoDb \u3068\u3044\u3046\u540d\u524d\u306e Amazon Aurora Serverless v1 PostgreSQL \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 copilot storage init \\ --name demoDb \\ --storage-type Aurora\\ --workload demo-service \\ --engine PostgreSQL\\ --initial-db demo \u3053\u308c\u306b\u3088\u308a\u3001AWS Copilot CLI \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b Amazon Aurora Serverless \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\u3092\u542b\u3080 ./copilot/demo-service/addons/demoDb.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u898b\u308b\u3068\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 Copilot Application \u3068 Environment \u306e VPC \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u5185\u306b\u4f5c\u6210\u3055\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002 Copilot \u306f AWS Secrets Manager \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30b9\u30ef\u30fc\u30c9\u3068 Service \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3001AWS Copilot\u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306eARN\u3092\u74b0\u5883\u5909\u6570\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3057\u3001\u5f8c\u3067 SDK \u3092\u4f7f\u7528\u3057\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u30c7\u30e2\u3067\u306f Python \u3092\u4f7f\u7528\u3057\u3066\u304a\u308a (\u306a\u306e\u3067 boto3 \u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059)\u3001\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u74b0\u5883\u5909\u6570\u306f DEMO_DB_SECRET_ARN \u3068\u3044\u3046\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u3002Python \u3092\u4f7f\u3063\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 sm_client = boto3.client('secretsmanager') secret_arn = os.getenv(\"DEMO_DB_SECRET_ARN\") response = sm_client.get_secret_value(SecretId=secret_arn) secret = json.loads(response['SecretString']) secret \u306f\u4ee5\u4e0b\u306e\u60c5\u5831\u3067\u4f5c\u3089\u308c\u305f Dictionary \u306b\u306a\u308a\u307e\u3059\u3002 {dbClusterIdentifier, password, dbname, engine, port, host, username} \u3067\u4f5c\u3089\u308c\u305f Dictionary \u3067\u3001\u3053\u308c\u3092\u7528\u3044\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4eca\u56de\u306f\u3001SQLAlchemy \u3092\u5229\u7528\u3057\u307e\u3059\u3002 SQLAlchemy \u306f Python \u7528\u306e\u6709\u540d\u306a ORM (Object Relation Mapper) \u30c4\u30fc\u30eb \u3067\u3001\u4f4e\u30ec\u30d9\u30eb\u306e SQL \u30af\u30a8\u30ea\u306e\u4ee3\u308f\u308a\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d1\u30e9\u30c0\u30a4\u30e0\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u7167\u4f1a\u30fb\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u306b\u306f\u3001 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b \u3088\u3046\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3059\u3079\u3066 secret Dictionary \u304b\u3089\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 DB_URI = f\"postgresql://{secret['username']}:{secret['password']}@{secret['host']}/{secret['dbname']}\" Copilot \u306f\u81ea\u52d5\u7684\u306b\u9069\u5207\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4f5c\u6210\u3055\u308c\u305f Secret \u306b\u5bfe\u3057\u3066 secretsmanager:GetSecretValue \u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a31\u53ef\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3082\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002Copilot \u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u3001Service \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 (VPC\u30b3\u30cd\u30af\u30bf\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u3082\u306e) \u304b\u3089 PostgreSQL \u30dd\u30fc\u30c8 (5432) \u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u81ea\u52d5\u7684\u306b\u8a31\u53ef\u3057\u3001Service \u304c\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u5834\u6240\u306b\u306a\u308a\u307e\u3059\u3002","title":"VPC \u4e0a\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9"},{"location":"ja/blogs/apprunner-vpc/#_4","text":"\u3053\u308c\u3067\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u30fc\u3092\u633f\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot svc deploy --name demo-service --env test Copilot \u306f\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u4f5c\u3059\u308b Docker Daemon \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u3001ECR \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u3001Daemon \u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306b\u5931\u6557\u3057\u3066\u30a8\u30e9\u30fc\u304c\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002 \u30a4\u30e1\u30fc\u30b8\u304c ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u308b\u3068 Copilot \u306f\u5fc5\u8981\u306a\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3057\u3001\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u304c\u5b8c\u4e86\u3059\u308b\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5b89\u5168\u306a URL \u304c\u53d6\u5f97\u3055\u308c\u307e\u3059\u3002 \u5c06\u6765\u7684\u306b\u3053\u306e URL \u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u3001 copilot svc show --name demo-service \u3092\u5b9f\u884c\u3057\u3001 Routes \u30bb\u30af\u30b7\u30e7\u30f3\u306e URL \u306e\u5024\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30d7\u30ed\u30a4"},{"location":"ja/blogs/apprunner-vpc/#_5","text":"\u30da\u30fc\u30b8\u3092\u66f4\u65b0\u3059\u308b\u305f\u3073\u306b\u3001\u65b0\u3057\u3044\u540d\u524d\u3068\u96fb\u5b50\u30e1\u30fc\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u304c\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Send \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001SQLAlchemy \u306f\u3001\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 (demo) \u3068\u3001Python \u306e\u30b3\u30fc\u30c9\u3067 ( __tablename__ = 'users' ) \u3068\u6307\u5b9a\u3057\u305f\u30c6\u30fc\u30d6\u30eb ' users ' \u306b\u3001\u30e6\u30fc\u30b6\u30fc\u3092 SQL Insert \u3057\u307e\u3059\u3002 \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u8907\u6570\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e Users \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u884c\u304d\u3001\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3055\u3089\u306b\u30e6\u30fc\u30b6\u30fc\u304c\u672c\u5f53\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001 RDS \u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u30af\u30a8\u30ea\u30a8\u30c7\u30a3\u30bf \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u6a19\u6e96 SQL \u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u5b9a\u7fa9\u8a00\u8a9e (DDL) \u304a\u3088\u3073\u30c7\u30fc\u30bf\u64cd\u4f5c\u8a00\u8a9e (DML) \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3053\u306e\u6a5f\u80fd\u306f\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u624b\u52d5\u3067\u30c7\u30fc\u30bf API \u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u6a5f\u80fd\u3092\u6709\u52b9\u306b\u3057\u305f\u5f8c\u3001SELECT \u306e\u3088\u3046\u306a SQL \u6587\u3092\u5b9f\u884c\u3057\u3066\u3001\u633f\u5165\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u5b9f\u969b\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306b\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u52d5\u4f5c\u78ba\u8a8d"},{"location":"ja/blogs/apprunner-vpc/#_6","text":"\u4eca\u5f8c\u306e\u8ab2\u91d1\u3092\u907f\u3051\u308b\u305f\u3081\u3001\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3059\u3079\u3066\u6b63\u3057\u304f\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 copilot app delete apprunner-vpc \u4ee5\u4e0a\u3067\u3001\u3053\u306e\u30c7\u30e2\u306e\u305f\u3081\u306b\u4f5c\u6210\u3055\u308c\u305f\u3059\u3079\u3066\u306e Service \u3068\u95a2\u9023\u3059\u308b\u30a4\u30f3\u30d5\u30e9\u306f\u524a\u9664\u3055\u308c\u307e\u3059\u3002","title":"\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7"},{"location":"ja/blogs/apprunner-vpc/#_7","text":"AWS Copilot \u3068 AWS App Runner \u306e\u65b0\u3057\u3044 VPC \u63a5\u7d9a\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 VPC \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u3053\u306e 2 \u3064\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u3001VPC \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3067\u304d\u308b HTTP \u30d9\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7c21\u5358\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u3001Copilot \u306f\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u306e\u8907\u96d1\u3055\u3092\u3059\u3079\u3066\u96a0\u853d\u3059\u308b\u3053\u3068\u3067\u3001\u7d50\u679c\u7684\u306b\u6642\u9593\u3092\u7bc0\u7d04\u3057\u3066\u7ba1\u7406\u3092\u7c21\u7d20\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002 \u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u307e\u3068\u3081"},{"location":"ja/blogs/apprunner-waf/","text":"Copilot \u306b\u304a\u3051\u308b App Runner \u3067\u306e WAF \u306e\u5229\u7528 \u6295\u7a3f\u65e5 : 2023 \u5e74 2 \u6708 23 \u65e5 Siddharth Vohra , \u30bd\u30d5\u30c8\u30a6\u30a8\u30a2 \u30c7\u30a3\u30d9\u30ed\u30c3\u30d7\u30e1\u30f3\u30c8 \u30a8\u30f3\u30b8\u30cb\u30a2, AWS App Runner AWS Web Application Firewall (WAF) \u306e\u30a6\u30a7\u30d6\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30ea\u30b9\u30c8 (\u30a6\u30a7\u30d6 ACL) \u3092 App Runner \u30b5\u30fc\u30d3\u30b9\u306b\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 - Copilot \u3067\uff01 AWS Web Application Firewall (WAF) \u306f\u3001Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8ee2\u9001\u3055\u308c\u308b HTTP(S) \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u76e3\u8996\u3092\u652f\u63f4\u3057\u3001 \u30b3\u30f3\u30c6\u30f3\u30c4\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002 \u6307\u5b9a\u3057\u305f\u57fa\u6e96\u306b\u57fa\u3065\u3044\u3066\u3001Web \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u62d2\u5426\u3057\u305f\u308a\u3001\u8a31\u53ef\u3059\u308b\u3053\u3068\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4fdd\u8b77\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u767a\u4fe1\u5143 IP \u30a2\u30c9\u30ec\u30b9\u3084\u30af\u30a8\u30ea\u6587\u5b57\u5217\u306e\u5024\u306a\u3069\u3067\u30a2\u30af\u30bb\u30b9\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002 AWS\u3000\u306f AWS App Runner \u304c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u306e\u305f\u3081\u306e\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb (WAF) \u30b5\u30dd\u30fc\u30c8\u3092\u5c0e\u5165 \u3092\u767a\u8868\u3057\u307e\u3057\u305f\u3002 \u3053\u306e\u767a\u8868\u306f Request-Driven Web Services \u3092 AWS WAF \u3067\u4fdd\u8b77\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3053\u306e\u30d6\u30ed\u30b0\u30dd\u30b9\u30c8\u3067\u306f\u3001AWS Copilot \u3092\u5229\u7528\u3057\u3066\u3001\u7c21\u5358\u306b\u4fdd\u8b77\u3092\u6709\u52b9\u306b\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 Info \u3053\u308c\u3089\u306e\u624b\u9806\u306f\u3001 GitHub \"Show and tell\" discussion section \u306b\u6295\u7a3f\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u3067\u3059\uff01\u3082\u3057 App Runner \u306e WAF \u30b5\u30dd\u30fc\u30c8\u306b\u3064\u3044\u3066\u3001\u8cea\u554f\u3001\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u308c\u3070\u3001\u6c17\u8efd\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\uff01 \u524d\u63d0\u6761\u4ef6 \u7d9a\u884c\u3059\u308b\u306b\u306f\u3001\u72ec\u81ea\u306e WAF \u30a6\u30a7\u30d6\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30ea\u30b9\u30c8(\u30a6\u30a7\u30d6 ACL) \u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u307e\u3060\u3001ACL \u3092\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u307e\u305a\u30eb\u30fc\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306e WAF ACL \u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059(\u72ec\u81ea\u306e\u30a6\u30a7\u30d6 ACL \u306e\u4f5c\u6210\u306b\u3064\u3044\u3066\u306f \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044)\u3002 \u30a6\u30a7\u30d6 ACL \u304c\u6e96\u5099\u3067\u304d\u305f\u3089\u3001\u305d\u306e ARN \u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002 WAF \u30a6\u30a7\u30d6 ACL \u3092 Request-Driven Web Service \u3067\u5229\u7528\u3059\u308b\u306b\u306f\u3001 \u6b21\u306e\u624b\u9806\u306b\u5f93\u3044\u307e\u3059\u3002 \u624b\u9806 1 (\u30aa\u30d7\u30b7\u30e7\u30f3): Request-Driven Web Service \u306e\u4f5c\u6210 Request-Driven Web Service \u304c\u307e\u3060\u7121\u3044\u5834\u5408\u3001 \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001 App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 copilot init \\ --svc-type \"Request-Driven Web Service\" \\ --name \"waf-example\" \\ --dockerfile path/to/Dockerfile \u307e\u305f\u306f\u3001 copilot svc init \u3092\u30d5\u30e9\u30b0\u7121\u3057\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002Copilot \u306f\u8ffd\u52a0\u306e\u5165\u529b\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u3057\u3001 Service \u306e\u4f5c\u6210\u3092\u30ac\u30a4\u30c9\u3057\u307e\u3059\u3002 \u624b\u9806 2 (\u30aa\u30d7\u30b7\u30e7\u30f3): Service \u306b\u5bfe\u5fdc\u3057\u305f addons/ \u30d5\u30a9\u30eb\u30c0\u306e\u4f5c\u6210 Request-Driven Web Service \u304c\u3042\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u624b\u9806 1 \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u5834\u5408\u3001 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u69cb\u9020\u306f\u6b21\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002 . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u2514\u2500\u2500 manifest.yml ./copilot/<name of your Request-Driven Web Service> \u914d\u4e0b\u306b\u3001 addons/ \u3000\u30d5\u30a9\u30eb\u30c0\u304c\u307e\u3060\u7121\u3044\u5834\u5408\u3001\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306f\u6b21\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002 . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/ \u624b\u9806 3: Addon \u3092\u5229\u7528\u3057\u3066\u3001Request-Driven Web Service \u306b \u30a6\u30a7\u30d6 ACL \u3092\u95a2\u9023\u3065\u3051\u308b Addon \u30d5\u30a9\u30eb\u30c0\u306b\u3001 waf.yml \u3068 addons.parameters.yml \u3068\u3044\u3046 2 \u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u3057\u304f\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d5\u30a9\u30eb\u30c0\u306f\u6b21\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002 . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 waf.yml \u2514\u2500\u2500 addons.parameters.yml \u6b21\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002 waf.yml addons.parameters.yml #Addon template to add WAF configuration to your App Runner service. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. ServiceARN : Type : String Default : \"\" Description : The ARN of the service being deployed. Resources : # Configuration of the WAF Web ACL you want to asscoiate with # your App Runner service. Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : <paste your WAF Web ACL ARN here> # Paste your WAF Web ACL ARN here. Parameters : ServiceARN : !Ref Service \u624b\u9806 4: \u30a6\u30a7\u30d6 ACL ARN \u3092 waf.yml \u306b\u5165\u529b\u3059\u308b waf.yml \u3092\u958b\u304d\u3001 <paste your WAF Web ACL ARN here> \u3092\u30a6\u30a7\u30d6 ACL \u30ea\u30bd\u30fc\u30b9\u306e ARN \u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306e\u90e8\u5206\u3067\u3059\u3002 Resources : # Configuration of the WAF Web ACL you want to associate with # your App Runner service Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : arn:aws:wafv2:us-east-2:123456789138:regional/webacl/mytestwebacl/3df43564-be9f-47ce-a12b-3a577d2d8913 \u624b\u9806 5: Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b \u6700\u5f8c\u306b\u3001 copilot svc deploy \u3092\u5b9f\u884c\u3057\u307e\u3059\uff01\u3000Request-Driven Web Service \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3001 WAF \u30a6\u30a7\u30d6 ACL \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\uff01 \u8003\u616e\u4e8b\u9805 \u30a6\u30a7\u30d6 ACL \u306f\u8907\u6570\u306e Services \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u307e\u3059\u304c\u30011 \u3064\u306e Service \u306b\u306f 1 \u3064\u3088\u308a\u591a\u304f\u306e\u30a6\u30a7\u30d6 ACL \u3092\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 Copilot \u3092\u5229\u7528\u3057\u305f App Runner \u30b5\u30fc\u30d3\u30b9\u304c\u65e2\u306b\u3042\u308b\u5834\u5408\u3001 \u624b\u9806 2-5 \u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001 WAF \u30a6\u30a7\u30d6 ACL \u3092\u65e2\u5b58\u306e Service \u306b\u95a2\u9023\u3065\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"AWS App Runner WAF"},{"location":"ja/blogs/apprunner-waf/#copilot-app-runner-waf","text":"\u6295\u7a3f\u65e5 : 2023 \u5e74 2 \u6708 23 \u65e5 Siddharth Vohra , \u30bd\u30d5\u30c8\u30a6\u30a8\u30a2 \u30c7\u30a3\u30d9\u30ed\u30c3\u30d7\u30e1\u30f3\u30c8 \u30a8\u30f3\u30b8\u30cb\u30a2, AWS App Runner AWS Web Application Firewall (WAF) \u306e\u30a6\u30a7\u30d6\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30ea\u30b9\u30c8 (\u30a6\u30a7\u30d6 ACL) \u3092 App Runner \u30b5\u30fc\u30d3\u30b9\u306b\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 - Copilot \u3067\uff01 AWS Web Application Firewall (WAF) \u306f\u3001Web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8ee2\u9001\u3055\u308c\u308b HTTP(S) \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u76e3\u8996\u3092\u652f\u63f4\u3057\u3001 \u30b3\u30f3\u30c6\u30f3\u30c4\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002 \u6307\u5b9a\u3057\u305f\u57fa\u6e96\u306b\u57fa\u3065\u3044\u3066\u3001Web \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u62d2\u5426\u3057\u305f\u308a\u3001\u8a31\u53ef\u3059\u308b\u3053\u3068\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4fdd\u8b77\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u767a\u4fe1\u5143 IP \u30a2\u30c9\u30ec\u30b9\u3084\u30af\u30a8\u30ea\u6587\u5b57\u5217\u306e\u5024\u306a\u3069\u3067\u30a2\u30af\u30bb\u30b9\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002 AWS\u3000\u306f AWS App Runner \u304c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u306e\u305f\u3081\u306e\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb (WAF) \u30b5\u30dd\u30fc\u30c8\u3092\u5c0e\u5165 \u3092\u767a\u8868\u3057\u307e\u3057\u305f\u3002 \u3053\u306e\u767a\u8868\u306f Request-Driven Web Services \u3092 AWS WAF \u3067\u4fdd\u8b77\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u3053\u306e\u30d6\u30ed\u30b0\u30dd\u30b9\u30c8\u3067\u306f\u3001AWS Copilot \u3092\u5229\u7528\u3057\u3066\u3001\u7c21\u5358\u306b\u4fdd\u8b77\u3092\u6709\u52b9\u306b\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 Info \u3053\u308c\u3089\u306e\u624b\u9806\u306f\u3001 GitHub \"Show and tell\" discussion section \u306b\u6295\u7a3f\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u3067\u3059\uff01\u3082\u3057 App Runner \u306e WAF \u30b5\u30dd\u30fc\u30c8\u306b\u3064\u3044\u3066\u3001\u8cea\u554f\u3001\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u308c\u3070\u3001\u6c17\u8efd\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\uff01","title":"Copilot \u306b\u304a\u3051\u308b App Runner \u3067\u306e WAF \u306e\u5229\u7528"},{"location":"ja/blogs/apprunner-waf/#_1","text":"\u7d9a\u884c\u3059\u308b\u306b\u306f\u3001\u72ec\u81ea\u306e WAF \u30a6\u30a7\u30d6\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30ea\u30b9\u30c8(\u30a6\u30a7\u30d6 ACL) \u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u307e\u3060\u3001ACL \u3092\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u307e\u305a\u30eb\u30fc\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306e WAF ACL \u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059(\u72ec\u81ea\u306e\u30a6\u30a7\u30d6 ACL \u306e\u4f5c\u6210\u306b\u3064\u3044\u3066\u306f \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044)\u3002 \u30a6\u30a7\u30d6 ACL \u304c\u6e96\u5099\u3067\u304d\u305f\u3089\u3001\u305d\u306e ARN \u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002 WAF \u30a6\u30a7\u30d6 ACL \u3092 Request-Driven Web Service \u3067\u5229\u7528\u3059\u308b\u306b\u306f\u3001 \u6b21\u306e\u624b\u9806\u306b\u5f93\u3044\u307e\u3059\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"ja/blogs/apprunner-waf/#1-request-driven-web-service","text":"Request-Driven Web Service \u304c\u307e\u3060\u7121\u3044\u5834\u5408\u3001 \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001 App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 copilot init \\ --svc-type \"Request-Driven Web Service\" \\ --name \"waf-example\" \\ --dockerfile path/to/Dockerfile \u307e\u305f\u306f\u3001 copilot svc init \u3092\u30d5\u30e9\u30b0\u7121\u3057\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002Copilot \u306f\u8ffd\u52a0\u306e\u5165\u529b\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u3057\u3001 Service \u306e\u4f5c\u6210\u3092\u30ac\u30a4\u30c9\u3057\u307e\u3059\u3002","title":"\u624b\u9806 1 (\u30aa\u30d7\u30b7\u30e7\u30f3): Request-Driven Web Service \u306e\u4f5c\u6210"},{"location":"ja/blogs/apprunner-waf/#2-service-addons","text":"Request-Driven Web Service \u304c\u3042\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u624b\u9806 1 \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u5834\u5408\u3001 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u69cb\u9020\u306f\u6b21\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002 . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u2514\u2500\u2500 manifest.yml ./copilot/<name of your Request-Driven Web Service> \u914d\u4e0b\u306b\u3001 addons/ \u3000\u30d5\u30a9\u30eb\u30c0\u304c\u307e\u3060\u7121\u3044\u5834\u5408\u3001\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306f\u6b21\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002 . \u2514\u2500\u2500 copilot/ \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/","title":"\u624b\u9806 2 (\u30aa\u30d7\u30b7\u30e7\u30f3): Service \u306b\u5bfe\u5fdc\u3057\u305f  addons/ \u30d5\u30a9\u30eb\u30c0\u306e\u4f5c\u6210"},{"location":"ja/blogs/apprunner-waf/#3-addon-request-driven-web-service-acl","text":"Addon \u30d5\u30a9\u30eb\u30c0\u306b\u3001 waf.yml \u3068 addons.parameters.yml \u3068\u3044\u3046 2 \u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u3057\u304f\u4f5c\u6210\u3057\u307e\u3059\u3002\u30d5\u30a9\u30eb\u30c0\u306f\u6b21\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002 . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 waf-example/ # The name of your Request-Driven Web Service. Not necessarily \"waf-example\". \u251c\u2500\u2500 manifest.yml \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 waf.yml \u2514\u2500\u2500 addons.parameters.yml \u6b21\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002 waf.yml addons.parameters.yml #Addon template to add WAF configuration to your App Runner service. Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. ServiceARN : Type : String Default : \"\" Description : The ARN of the service being deployed. Resources : # Configuration of the WAF Web ACL you want to asscoiate with # your App Runner service. Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : <paste your WAF Web ACL ARN here> # Paste your WAF Web ACL ARN here. Parameters : ServiceARN : !Ref Service","title":"\u624b\u9806 3: Addon \u3092\u5229\u7528\u3057\u3066\u3001Request-Driven Web Service \u306b \u30a6\u30a7\u30d6 ACL \u3092\u95a2\u9023\u3065\u3051\u308b"},{"location":"ja/blogs/apprunner-waf/#4-acl-arn-wafyml","text":"waf.yml \u3092\u958b\u304d\u3001 <paste your WAF Web ACL ARN here> \u3092\u30a6\u30a7\u30d6 ACL \u30ea\u30bd\u30fc\u30b9\u306e ARN \u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6b21\u306e\u90e8\u5206\u3067\u3059\u3002 Resources : # Configuration of the WAF Web ACL you want to associate with # your App Runner service Firewall : Metadata : 'aws:copilot:description' : 'Associating your App Runner service with your WAF WebACL' Type : AWS::WAFv2::WebACLAssociation Properties : ResourceArn : !Sub ${ServiceARN} WebACLArn : arn:aws:wafv2:us-east-2:123456789138:regional/webacl/mytestwebacl/3df43564-be9f-47ce-a12b-3a577d2d8913","title":"\u624b\u9806 4: \u30a6\u30a7\u30d6 ACL ARN \u3092 waf.yml \u306b\u5165\u529b\u3059\u308b"},{"location":"ja/blogs/apprunner-waf/#5-service","text":"\u6700\u5f8c\u306b\u3001 copilot svc deploy \u3092\u5b9f\u884c\u3057\u307e\u3059\uff01\u3000Request-Driven Web Service \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3001 WAF \u30a6\u30a7\u30d6 ACL \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\uff01 \u8003\u616e\u4e8b\u9805 \u30a6\u30a7\u30d6 ACL \u306f\u8907\u6570\u306e Services \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u307e\u3059\u304c\u30011 \u3064\u306e Service \u306b\u306f 1 \u3064\u3088\u308a\u591a\u304f\u306e\u30a6\u30a7\u30d6 ACL \u3092\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 Copilot \u3092\u5229\u7528\u3057\u305f App Runner \u30b5\u30fc\u30d3\u30b9\u304c\u65e2\u306b\u3042\u308b\u5834\u5408\u3001 \u624b\u9806 2-5 \u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001 WAF \u30a6\u30a7\u30d6 ACL \u3092\u65e2\u5b58\u306e Service \u306b\u95a2\u9023\u3065\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u624b\u9806 5: Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b"},{"location":"ja/blogs/release-v116/","text":"AWS Copilot v1.16: \u30de\u30eb\u30c1\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3001 SNS \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u30fc\u306a\u3069 \u6295\u7a3f\u65e5: 2022 \u5e74 4 \u6708 6 \u65e5 The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.16 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3067\u304d\u308b\u3053\u3068\u3092\u5b09\u3057\u304f\u601d\u3044\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f 7 \u4eba\u306e\u65b0\u3057\u3044\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u958b\u767a\u8005\u3092\u6b53\u8fce\u3057\u307e\u3059\u3002 @codekitchen , @shingos \u3001 @csantos \u3001 @rfma23 \u3001 @g-grass \u3001 @isleys \u3001 @kangere \u3002 \u30d1\u30d6\u30ea\u30c3\u30af\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u3044\u3066\u3001270 \u4eba\u4ee5\u4e0a\u306e\u65b9\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001\u65e5\u3005\u52a9\u3051\u5408\u3063\u3066\u307e\u3059\u3002\u307e\u305f\u3001 \u6700\u8fd1 GitHub \u3067 2.1 K \u3092\u8d85\u3048\u308b Star \u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002 AWS Copilot \u306b\u95a2\u5fc3\u3068\u30b5\u30dd\u30fc\u30c8\u3092\u793a\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u69d8\u306b\u611f\u8b1d\u3057\u3066\u3044\u307e\u3059\u3002 Copilot v1.16 \u306b\u306f\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u304c\u52a0\u3048\u3089\u308c\u307e\u3057\u305f: \u30de\u30eb\u30c1\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3: copilot pipeline init \u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306e\u5225\u3005\u306e\u30d6\u30e9\u30f3\u30c1\u3092\u8ffd\u8de1\u3059\u308b\u8907\u6570\u306e AWS CodePipeline \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 SNS \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc: filter_policy \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u3001 Worker Service \u306f\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u305f\u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u3059\u308b SNS \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u305d\u306e\u4ed6 \u305f\u304f\u3055\u3093\u306e\u6539\u5584\u70b9: deploy \u30b3\u30de\u30f3\u30c9\u306b --no-rollback \u30d5\u30e9\u30b0\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u30c7\u30d7\u30ed\u30a4\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u30b9\u30bf\u30c3\u30af\u306e\u81ea\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7121\u52b9\u5316\u3057\u307e\u3059( #3341 )\u3002 \u65b0\u3057\u3044\u30d5\u30e9\u30b0\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306e\u66f4\u65b0\u5931\u6557\u6642\u306b\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u3059\u308b\u969b\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c7\u30d7\u30ed\u30a4\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001CloudFormation \u306f\u30b9\u30bf\u30c3\u30af\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u305f\u3081\u3001\u5931\u6557\u6642\u306b\u767a\u751f\u3057\u305f\u30ed\u30b0\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30e9\u30b0\u306f\u3001\u554f\u984c\u306e\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u70ba\u306b\u30ed\u30b0\u3092\u4fdd\u5b58\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u4fdd\u5b58\u5f8c\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3001Manifest \u3092\u518d\u5ea6\u66f4\u65b0\u3067\u304d\u307e\u3059\u3002 package \u30b3\u30de\u30f3\u30c9\u306b --upload-assets \u30d5\u30e9\u30b0\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3059\u308b\u524d\u306b\u3001ECR \u307e\u305f\u306f S3 \u306b\u30a2\u30bb\u30c3\u30c8\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u307e\u3059 ( #3268 )\u3002 \u3053\u306e\u30d5\u30e9\u30b0\u306b\u3088\u308a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e buildspec \u3092\u5927\u5e45\u306b\u7c21\u7565\u5316\u304c\u3067\u304d\u307e\u3059\u3002 buildspec \u3092\u518d\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3001 copilot pipeline init \u3092\u518d\u5ea6\u5b9f\u884c\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u306b\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u3067\u306f\u3001\u65e2\u5b58\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Environment \u3067 task run \u5b9f\u884c\u4e2d\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f ( #3365 )\u3002 Copilot \u304c CI \u74b0\u5883\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u5834\u5408(\u74b0\u5883\u5909\u6570 CI \u3092 true \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u5834\u5408)\u306b\u3001Docker \u9032\u884c\u72b6\u6cc1\u306e\u66f4\u65b0\u30ce\u30a4\u30ba\u304c\u5c11\u306a\u304f\u306a\u308a\u307e\u3057\u305f ( #3345 )\u3002 App Runner \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u3001App Runner Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u304d\u306b\u8b66\u544a\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f( #3326 )\u3002 app show \u304a\u3088\u3073 env show \u30b3\u30de\u30f3\u30c9\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5f62\u5f0f\u3067 Service \u3084 Job \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Environment \u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002( #3379 \u3001 #3316 )\u3002 Pipeline Manifest \u306e build.buildspec \u3092\u4f7f\u3063\u3066 buildspec \u30d1\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f( #3403 )\u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001 \u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306b\u30de\u30eb\u30c1\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b Contributed by Efe Karakus , Janice Huang \u30ea\u30ea\u30fc\u30b9\u30d7\u30ed\u30bb\u30b9\u3092\u81ea\u52d5\u5316\u3059\u308b\u3053\u3068\u306f\u3001\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30c7\u30ea\u30d0\u30ea\u306e\u6700\u3082\u91cd\u8981\u306a\u90e8\u5206\u306e 1 \u3064\u3067\u3059\u3002 AWS Copilot \u306f\u305d\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u3067\u304d\u308b\u3060\u3051\u7c21\u5358\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u69d8\u306b\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5168\u3066\u306e Environment \u3067 copilot deploy \u3092\u624b\u52d5\u3067\u5b9f\u884c\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001 \u3044\u304f\u3064\u304b\u306e copilot pipeline \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001 git push \u3059\u308b\u305f\u3073\u306b\u74b0\u5883\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u7684\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308b\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 \u751f\u6210\u3055\u308c\u305f CodePipeline \u306f\u3001\u6b21\u306e\u69d8\u306a\u57fa\u672c\u69cb\u9020\u306b\u306a\u308a\u307e\u3059\u3002 Source \u30b9\u30c6\u30fc\u30b8: \u8a2d\u5b9a\u6e08\u307f\u306e GitHub\u3001Bitbucket\u3001\u307e\u305f\u306f CodeCommit \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u306e\u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066 push \u3057\u305f\u969b\u306b\u3001\u65b0\u3057\u3044\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5b9f\u884c\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u307e\u3059\u3002 Build: \u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30b3\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u3001Service \u7528\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001\u3059\u3079\u3066\u306e Environment \u306e Amazon ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\u52a0\u3048\u3066\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001Lambda \u95a2\u6570 zip \u30d5\u30a1\u30a4\u30eb\u3001\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u3059\u3079\u3066\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c S3\u3000\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 Deploy \u30b9\u30c6\u30fc\u30b8: \u30b3\u30fc\u30c9\u304c\u30d3\u30eb\u30c9\u3055\u308c\u305f\u5f8c\u3001\u4efb\u610f\u307e\u305f\u306f\u5168\u3066\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30c6\u30b9\u30c8\u3084\u624b\u52d5\u627f\u8a8d\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u4ee5\u524d\u306f\u3001 Copilot \u3067\u306f git \u30ea\u30dd\u30b8\u30c8\u30ea\u3054\u3068\u306b 1 \u3064\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3057\u304b\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002 copilot pipeline init \u3092\u5b9f\u884c\u3059\u308b\u3068\u5358\u4e00\u306e Pipeline Manifest \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u306f\u3001\u307e\u305a \"test\" \u306b\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u304c\u6210\u529f\u3059\u308b\u3068 \"prod\" Environment \u306b\u30ea\u30ea\u30fc\u30b9\u3059\u308b CodePipeline \u3092\u30e2\u30c7\u30eb\u5316\u3057\u307e\u3059\u3002 $ copilot pipeline init 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for my-pipeline at 'copilot/pipeline.yml' Required follow-up actions: - Commit and push the buildspec.yml, pipeline.yml, and .workspace files of your copilot directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ cat copilot/pipeline.yml name: my-pipeline source: provider: GitHub properties: branch: main repository: https://github.com/user/repo stages: - name: test - name: prod # requires_approval: true # test_commands: [echo 'running tests', make test] \u3053\u306e\u30e2\u30c7\u30eb\u306f \"main\" \u30d6\u30e9\u30f3\u30c1\u3078\u306e\u5168\u3066\u306e\u30b3\u30df\u30c3\u30c8\u3092 Environment \u5168\u4f53\u3067\u30ea\u30ea\u30fc\u30b9\u3057\u305f\u3044\u30e6\u30fc\u30b6\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee3\u66ff\u30e2\u30c7\u30eb\u306f\u3001\u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\"main\" \u30d6\u30e9\u30f3\u30c1\u306b\u3044\u304f\u3064\u304b\u306e\u5909\u66f4\u3092\u30b3\u30df\u30c3\u30c8\u3057\u3001\u6e80\u8db3\u3057\u305f\u3089 \"test\" \u30d6\u30e9\u30f3\u30c1\u306b\u5909\u66f4\u3092\u30de\u30fc\u30b8\u3057\u3066 \"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u6b21\u306b \"prod\" \u30d6\u30e9\u30f3\u30c1\u306b\u30de\u30fc\u30b8\u3057\u307e\u3059\u3002v1.15 \u307e\u3067\u306f\u5358\u4e00\u306e Pipeline Manifest \u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u305f\u305f\u3081\u3001\u3053\u306e\u30e2\u30c7\u30eb\u306f\u5b9f\u73fe\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002 v1.16 \u304b\u3089\u306f\u3001Copilot \u30e6\u30fc\u30b6\u306f git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8907\u6570\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3067\u304d\u308b\u69d8\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306b\u5225\u3005\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 \u30de\u30fc\u30b8\u6642\u306e\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u3092\u6c17\u306b\u3059\u308b\u3053\u3068\u306a\u304f\u3001 copilot pipeline init \u3092 git \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5225\u3005\u306e\u30d6\u30e9\u30f3\u30c1\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ git checkout test $ copilot pipeline init Pipeline name: repo-test 1st stage: test Your pipeline will follow branch 'test'. \u2714 Wrote the pipeline manifest for repo-test at 'copilot/pipelines/repo-test/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ git checkout prod $ copilot pipeline init Pipeline name: repo-prod 1st stage: prod Your pipeline will follow branch 'prod'. \u2714 Wrote the pipeline manifest for repo-prod at 'copilot/pipelines/repo-prod/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. \"test\" \u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066\u5909\u66f4\u304c\u30de\u30fc\u30b8\u3055\u308c\u308b\u3068\u3001 \"repo-test\" \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u307e\u3059\u3002\u540c\u69d8\u306b\u3001\"prod\"\u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u3068 \"repo-prod\" \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30c8\u30ea\u30ac\u30fc\u3067\u304d\u307e\u3059\u3002 \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u3064\u3044\u3066\u3088\u308a\u8a73\u3057\u304f\u5b66\u3073\u305f\u3044\u5834\u5408\u306f\u3001 Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u306e\u5b9a\u7fa9 Contributed by Penghao He \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u5171\u901a\u7684\u306a\u30cb\u30fc\u30ba\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3084\u308a\u53d6\u308a\u3059\u308b\u305f\u3081\u306e\u5805\u7262\u306a\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002 AWS Copilot \u306f\u3001\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001Amazon SNS \u3068 Amazon SQS \u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5b9f\u73fe\u3057\u307e\u3059\u3002 AWS Copilot \u3067\u306f\u3001 \u5358\u4e00\u307e\u305f\u306f\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u540d\u524d\u4ed8\u304d SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u767a\u884c\u3059\u308b\u69d8\u306b\u8a2d\u5b9a\u3057\u3001 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u3066\u51e6\u7406\u3059\u308b\u30ef\u30fc\u30ab\u30fc\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 AWS Copilot \u306f SNS \u30c8\u30d4\u30c3\u30af\u3001SQS \u30ad\u30e5\u30fc\u3001\u5fc5\u8981\u306a\u30dd\u30ea\u30b7\u30fc\u306a\u3069\u306e\u3001 \u30d1\u30d6\u30b5\u30d6\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u8a2d\u5b9a\u3057\u3001\u81ea\u52d5\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 AWS Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306e Publish/Subscribe architecture \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Amazon SNS \u30c8\u30d4\u30c3\u30af\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306f\u30c8\u30d4\u30c3\u30af\u306b\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u5168\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u70ba\u306b\u306f\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306f\u30c8\u30d4\u30c3\u30af\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u3092\u5272\u308a\u5f53\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c8\u30d4\u30c3\u30af\u306b\u6ce8\u6587\u3092\u30d0\u30d6\u30ea\u30c3\u30b7\u30e5\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 ` # manifest.yml for api service name : api type : Backend Service publish : topics : - name : ordersTopic` \u7d9a\u3044\u3066\u3001 ordersTopic \u306e\u5168\u3066\u306e\u30bf\u30a4\u30d7\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u30ef\u30fc\u30ab\u30fc\u3067\u3059\u3002 name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 AWS Copilot \u306f\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u5fc5\u8981\u306a\u5168\u3066\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3059\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u306e\u4f5c\u6210\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u4fa1\u683c\u304c 100 \u30c9\u30eb\u3092\u8d85\u3048\u308b\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u305f\u6ce8\u6587\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u3092\u51e6\u7406\u3059\u308b\u65b0\u3057\u3044\u30ef\u30fc\u30ab\u30fc\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 Copilot v1.16 \u30ea\u30ea\u30fc\u30b9\u4ee5\u964d\u306f\u3001\u30b3\u30fc\u30c9\u3067\u3053\u308c\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9664\u5916\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002SNS \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\u3002 name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api filter_policy : store : - example_corp event : - order_canceled price_usd : - numeric : - \">=\" - 100 queue : dead_letter : tries : 5 \u3053\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001Amazon SNS \u306f\u3053\u308c\u3089\u306e\u5c5e\u6027\u3068\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u308a\u5168\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3057\u307e\u3059\u3002 SNS \u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\u3088\u308a\u5b66\u3073\u305f\u3044\u5834\u5408\u306f\u3001 Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3092\u305f\u3069\u3063\u3066\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.16"},{"location":"ja/blogs/release-v116/#aws-copilot-v116-sns","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 4 \u6708 6 \u65e5 The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.16 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3067\u304d\u308b\u3053\u3068\u3092\u5b09\u3057\u304f\u601d\u3044\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f 7 \u4eba\u306e\u65b0\u3057\u3044\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u958b\u767a\u8005\u3092\u6b53\u8fce\u3057\u307e\u3059\u3002 @codekitchen , @shingos \u3001 @csantos \u3001 @rfma23 \u3001 @g-grass \u3001 @isleys \u3001 @kangere \u3002 \u30d1\u30d6\u30ea\u30c3\u30af\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u3044\u3066\u3001270 \u4eba\u4ee5\u4e0a\u306e\u65b9\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001\u65e5\u3005\u52a9\u3051\u5408\u3063\u3066\u307e\u3059\u3002\u307e\u305f\u3001 \u6700\u8fd1 GitHub \u3067 2.1 K \u3092\u8d85\u3048\u308b Star \u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002 AWS Copilot \u306b\u95a2\u5fc3\u3068\u30b5\u30dd\u30fc\u30c8\u3092\u793a\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u69d8\u306b\u611f\u8b1d\u3057\u3066\u3044\u307e\u3059\u3002 Copilot v1.16 \u306b\u306f\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u304c\u52a0\u3048\u3089\u308c\u307e\u3057\u305f: \u30de\u30eb\u30c1\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3: copilot pipeline init \u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306e\u5225\u3005\u306e\u30d6\u30e9\u30f3\u30c1\u3092\u8ffd\u8de1\u3059\u308b\u8907\u6570\u306e AWS CodePipeline \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 SNS \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc: filter_policy \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u3001 Worker Service \u306f\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u305f\u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u3059\u308b SNS \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u305d\u306e\u4ed6 \u305f\u304f\u3055\u3093\u306e\u6539\u5584\u70b9: deploy \u30b3\u30de\u30f3\u30c9\u306b --no-rollback \u30d5\u30e9\u30b0\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u30c7\u30d7\u30ed\u30a4\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u30b9\u30bf\u30c3\u30af\u306e\u81ea\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7121\u52b9\u5316\u3057\u307e\u3059( #3341 )\u3002 \u65b0\u3057\u3044\u30d5\u30e9\u30b0\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306e\u66f4\u65b0\u5931\u6557\u6642\u306b\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u3059\u308b\u969b\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c7\u30d7\u30ed\u30a4\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001CloudFormation \u306f\u30b9\u30bf\u30c3\u30af\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u305f\u3081\u3001\u5931\u6557\u6642\u306b\u767a\u751f\u3057\u305f\u30ed\u30b0\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30e9\u30b0\u306f\u3001\u554f\u984c\u306e\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u70ba\u306b\u30ed\u30b0\u3092\u4fdd\u5b58\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u4fdd\u5b58\u5f8c\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3001Manifest \u3092\u518d\u5ea6\u66f4\u65b0\u3067\u304d\u307e\u3059\u3002 package \u30b3\u30de\u30f3\u30c9\u306b --upload-assets \u30d5\u30e9\u30b0\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3059\u308b\u524d\u306b\u3001ECR \u307e\u305f\u306f S3 \u306b\u30a2\u30bb\u30c3\u30c8\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u307e\u3059 ( #3268 )\u3002 \u3053\u306e\u30d5\u30e9\u30b0\u306b\u3088\u308a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e buildspec \u3092\u5927\u5e45\u306b\u7c21\u7565\u5316\u304c\u3067\u304d\u307e\u3059\u3002 buildspec \u3092\u518d\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3001 copilot pipeline init \u3092\u518d\u5ea6\u5b9f\u884c\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u306b\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u3067\u306f\u3001\u65e2\u5b58\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Environment \u3067 task run \u5b9f\u884c\u4e2d\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f ( #3365 )\u3002 Copilot \u304c CI \u74b0\u5883\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u5834\u5408(\u74b0\u5883\u5909\u6570 CI \u3092 true \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u5834\u5408)\u306b\u3001Docker \u9032\u884c\u72b6\u6cc1\u306e\u66f4\u65b0\u30ce\u30a4\u30ba\u304c\u5c11\u306a\u304f\u306a\u308a\u307e\u3057\u305f ( #3345 )\u3002 App Runner \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u3001App Runner Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u304d\u306b\u8b66\u544a\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f( #3326 )\u3002 app show \u304a\u3088\u3073 env show \u30b3\u30de\u30f3\u30c9\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5f62\u5f0f\u3067 Service \u3084 Job \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Environment \u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002( #3379 \u3001 #3316 )\u3002 Pipeline Manifest \u306e build.buildspec \u3092\u4f7f\u3063\u3066 buildspec \u30d1\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f( #3403 )\u3002","title":"AWS Copilot v1.16: \u30de\u30eb\u30c1\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3001 SNS \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u30fc\u306a\u3069"},{"location":"ja/blogs/release-v116/#aws-copilot","text":"AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001 \u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot \u3068\u306f?"},{"location":"ja/blogs/release-v116/#_1","text":"Contributed by Efe Karakus , Janice Huang \u30ea\u30ea\u30fc\u30b9\u30d7\u30ed\u30bb\u30b9\u3092\u81ea\u52d5\u5316\u3059\u308b\u3053\u3068\u306f\u3001\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30c7\u30ea\u30d0\u30ea\u306e\u6700\u3082\u91cd\u8981\u306a\u90e8\u5206\u306e 1 \u3064\u3067\u3059\u3002 AWS Copilot \u306f\u305d\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u3067\u304d\u308b\u3060\u3051\u7c21\u5358\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u69d8\u306b\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5168\u3066\u306e Environment \u3067 copilot deploy \u3092\u624b\u52d5\u3067\u5b9f\u884c\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001 \u3044\u304f\u3064\u304b\u306e copilot pipeline \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001 git push \u3059\u308b\u305f\u3073\u306b\u74b0\u5883\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u7684\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308b\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 \u751f\u6210\u3055\u308c\u305f CodePipeline \u306f\u3001\u6b21\u306e\u69d8\u306a\u57fa\u672c\u69cb\u9020\u306b\u306a\u308a\u307e\u3059\u3002 Source \u30b9\u30c6\u30fc\u30b8: \u8a2d\u5b9a\u6e08\u307f\u306e GitHub\u3001Bitbucket\u3001\u307e\u305f\u306f CodeCommit \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u306e\u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066 push \u3057\u305f\u969b\u306b\u3001\u65b0\u3057\u3044\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5b9f\u884c\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u307e\u3059\u3002 Build: \u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30b3\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u3001Service \u7528\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001\u3059\u3079\u3066\u306e Environment \u306e Amazon ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\u52a0\u3048\u3066\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001Lambda \u95a2\u6570 zip \u30d5\u30a1\u30a4\u30eb\u3001\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u3059\u3079\u3066\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c S3\u3000\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 Deploy \u30b9\u30c6\u30fc\u30b8: \u30b3\u30fc\u30c9\u304c\u30d3\u30eb\u30c9\u3055\u308c\u305f\u5f8c\u3001\u4efb\u610f\u307e\u305f\u306f\u5168\u3066\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30c6\u30b9\u30c8\u3084\u624b\u52d5\u627f\u8a8d\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u4ee5\u524d\u306f\u3001 Copilot \u3067\u306f git \u30ea\u30dd\u30b8\u30c8\u30ea\u3054\u3068\u306b 1 \u3064\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3057\u304b\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002 copilot pipeline init \u3092\u5b9f\u884c\u3059\u308b\u3068\u5358\u4e00\u306e Pipeline Manifest \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u306f\u3001\u307e\u305a \"test\" \u306b\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u304c\u6210\u529f\u3059\u308b\u3068 \"prod\" Environment \u306b\u30ea\u30ea\u30fc\u30b9\u3059\u308b CodePipeline \u3092\u30e2\u30c7\u30eb\u5316\u3057\u307e\u3059\u3002 $ copilot pipeline init 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for my-pipeline at 'copilot/pipeline.yml' Required follow-up actions: - Commit and push the buildspec.yml, pipeline.yml, and .workspace files of your copilot directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ cat copilot/pipeline.yml name: my-pipeline source: provider: GitHub properties: branch: main repository: https://github.com/user/repo stages: - name: test - name: prod # requires_approval: true # test_commands: [echo 'running tests', make test] \u3053\u306e\u30e2\u30c7\u30eb\u306f \"main\" \u30d6\u30e9\u30f3\u30c1\u3078\u306e\u5168\u3066\u306e\u30b3\u30df\u30c3\u30c8\u3092 Environment \u5168\u4f53\u3067\u30ea\u30ea\u30fc\u30b9\u3057\u305f\u3044\u30e6\u30fc\u30b6\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee3\u66ff\u30e2\u30c7\u30eb\u306f\u3001\u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\"main\" \u30d6\u30e9\u30f3\u30c1\u306b\u3044\u304f\u3064\u304b\u306e\u5909\u66f4\u3092\u30b3\u30df\u30c3\u30c8\u3057\u3001\u6e80\u8db3\u3057\u305f\u3089 \"test\" \u30d6\u30e9\u30f3\u30c1\u306b\u5909\u66f4\u3092\u30de\u30fc\u30b8\u3057\u3066 \"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u6b21\u306b \"prod\" \u30d6\u30e9\u30f3\u30c1\u306b\u30de\u30fc\u30b8\u3057\u307e\u3059\u3002v1.15 \u307e\u3067\u306f\u5358\u4e00\u306e Pipeline Manifest \u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u305f\u305f\u3081\u3001\u3053\u306e\u30e2\u30c7\u30eb\u306f\u5b9f\u73fe\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002 v1.16 \u304b\u3089\u306f\u3001Copilot \u30e6\u30fc\u30b6\u306f git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8907\u6570\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3067\u304d\u308b\u69d8\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306b\u5225\u3005\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 \u30de\u30fc\u30b8\u6642\u306e\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u3092\u6c17\u306b\u3059\u308b\u3053\u3068\u306a\u304f\u3001 copilot pipeline init \u3092 git \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5225\u3005\u306e\u30d6\u30e9\u30f3\u30c1\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ git checkout test $ copilot pipeline init Pipeline name: repo-test 1st stage: test Your pipeline will follow branch 'test'. \u2714 Wrote the pipeline manifest for repo-test at 'copilot/pipelines/repo-test/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. $ git checkout prod $ copilot pipeline init Pipeline name: repo-prod 1st stage: prod Your pipeline will follow branch 'prod'. \u2714 Wrote the pipeline manifest for repo-prod at 'copilot/pipelines/repo-prod/manifest.yml' Required follow-up actions: - Commit and push the copilot/ directory to your repository. - Run `copilot pipeline deploy` to create your pipeline. \"test\" \u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066\u5909\u66f4\u304c\u30de\u30fc\u30b8\u3055\u308c\u308b\u3068\u3001 \"repo-test\" \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u307e\u3059\u3002\u540c\u69d8\u306b\u3001\"prod\"\u30d6\u30e9\u30f3\u30c1\u306b\u5bfe\u3057\u3066\u5909\u66f4\u3092\u53cd\u6620\u3059\u308b\u3068 \"repo-prod\" \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30c8\u30ea\u30ac\u30fc\u3067\u304d\u307e\u3059\u3002 \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u3064\u3044\u3066\u3088\u308a\u8a73\u3057\u304f\u5b66\u3073\u305f\u3044\u5834\u5408\u306f\u3001 Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306b\u30de\u30eb\u30c1\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b"},{"location":"ja/blogs/release-v116/#_2","text":"Contributed by Penghao He \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u5171\u901a\u7684\u306a\u30cb\u30fc\u30ba\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3084\u308a\u53d6\u308a\u3059\u308b\u305f\u3081\u306e\u5805\u7262\u306a\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002 AWS Copilot \u306f\u3001\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001Amazon SNS \u3068 Amazon SQS \u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5b9f\u73fe\u3057\u307e\u3059\u3002 AWS Copilot \u3067\u306f\u3001 \u5358\u4e00\u307e\u305f\u306f\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u540d\u524d\u4ed8\u304d SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u767a\u884c\u3059\u308b\u69d8\u306b\u8a2d\u5b9a\u3057\u3001 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u3066\u51e6\u7406\u3059\u308b\u30ef\u30fc\u30ab\u30fc\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 AWS Copilot \u306f SNS \u30c8\u30d4\u30c3\u30af\u3001SQS \u30ad\u30e5\u30fc\u3001\u5fc5\u8981\u306a\u30dd\u30ea\u30b7\u30fc\u306a\u3069\u306e\u3001 \u30d1\u30d6\u30b5\u30d6\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u8a2d\u5b9a\u3057\u3001\u81ea\u52d5\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 AWS Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306e Publish/Subscribe architecture \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Amazon SNS \u30c8\u30d4\u30c3\u30af\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306f\u30c8\u30d4\u30c3\u30af\u306b\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u5168\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u70ba\u306b\u306f\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306f\u30c8\u30d4\u30c3\u30af\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u3092\u5272\u308a\u5f53\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c8\u30d4\u30c3\u30af\u306b\u6ce8\u6587\u3092\u30d0\u30d6\u30ea\u30c3\u30b7\u30e5\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 ` # manifest.yml for api service name : api type : Backend Service publish : topics : - name : ordersTopic` \u7d9a\u3044\u3066\u3001 ordersTopic \u306e\u5168\u3066\u306e\u30bf\u30a4\u30d7\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u30ef\u30fc\u30ab\u30fc\u3067\u3059\u3002 name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 AWS Copilot \u306f\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u5fc5\u8981\u306a\u5168\u3066\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3059\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u306e\u4f5c\u6210\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u4fa1\u683c\u304c 100 \u30c9\u30eb\u3092\u8d85\u3048\u308b\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u305f\u6ce8\u6587\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u3092\u51e6\u7406\u3059\u308b\u65b0\u3057\u3044\u30ef\u30fc\u30ab\u30fc\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 Copilot v1.16 \u30ea\u30ea\u30fc\u30b9\u4ee5\u964d\u306f\u3001\u30b3\u30fc\u30c9\u3067\u3053\u308c\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9664\u5916\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002SNS \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\u3002 name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api filter_policy : store : - example_corp event : - order_canceled price_usd : - numeric : - \">=\" - 100 queue : dead_letter : tries : 5 \u3053\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001Amazon SNS \u306f\u3053\u308c\u3089\u306e\u5c5e\u6027\u3068\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u3088\u308a\u5168\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3057\u307e\u3059\u3002 SNS \u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\u3088\u308a\u5b66\u3073\u305f\u3044\u5834\u5408\u306f\u3001 Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u306e\u5b9a\u7fa9"},{"location":"ja/blogs/release-v116/#_3","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3092\u305f\u3069\u3063\u3066\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v117/","text":"AWS Copilot v1.17: Request-Driven Web Service \u306e\u305f\u3081\u306e\u30c8\u30ec\u30fc\u30b9 \u6295\u7a3f\u65e5: 2022 \u5e74 4 \u6708 12 \u65e5 v1.16 \u306e\u30ea\u30ea\u30fc\u30b9\u304b\u3089\u307e\u30601\u9031\u9593\u3057\u304b\u7d4c\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u3001The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f AWS App Runner \u3068\u3068\u3082\u306b AWS X-Ray with OpenTelemetry \u3092\u4f7f\u3063\u305f\u7d71\u5408\u30c8\u30ec\u30fc\u30b9\u306e\u30b5\u30dd\u30fc\u30c8\u3092\u767a\u8868\u3057\u3066\u3044\u307e\u3059\u3002App Runner \u306e\u30ea\u30ea\u30fc\u30b9\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002Copilot \u3067 Request-Driven Web Services \u306e\u30c8\u30ec\u30fc\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u5f8c\u8ff0\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f @kangere \u306b\u611f\u8b1d\u3092\u7533\u3057\u4e0a\u3052\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5e38\u306b\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 270 \u4eba\u4ee5\u4e0a\u306e\u65b9\u3005\u304c\u65e5\u3005\u52a9\u3051\u5408\u3063\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.17 \u3067\u306f\u3001\u65b0\u6a5f\u80fd\u306e\u8ffd\u52a0\u3068\u3044\u304f\u3064\u304b\u306e\u6539\u5584\u304c\u884c\u308f\u308c\u307e\u3057\u305f: Request-Driven Web Service \u306b\u304a\u3051\u308b\u30c8\u30ec\u30fc\u30b9: AWS App Runner \u30b5\u30fc\u30d3\u30b9\u306e AWS X-Ray \u30c8\u30ec\u30fc\u30b9\u30b5\u30dd\u30fc\u30c8\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u4f34\u3044\u3001Request-Driven Web Service \u306e Manifest \u306b observability.tracing: awsxray \u3092\u8ffd\u52a0\u3057\u3066\u3001AWS X-Ray \u306b\u30c8\u30ec\u30fc\u30b9\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30b8\u30e7\u30d6\u3092\u7121\u52b9\u5316\u53ef\u80fd: Manifest \u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092 \"none\" \u306b\u8a2d\u5b9a\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30eb\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30b8\u30e7\u30d6\u3092\u7c21\u5358\u306b\u30aa\u30d5\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002( #3447 ) on : schedule : \"none\" \u30d7\u30ed\u30b0\u30ec\u30b9\u30c8\u30e9\u30c3\u30ab\u30fc\u306e\u8996\u8a8d\u6027\u5411\u4e0a: \u73fe\u5728\u3001\u30d7\u30ed\u30b0\u30ec\u30b9\u30c8\u30e9\u30c3\u30ab\u30fc\u306f\u3001HTTP\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306e\u4f5c\u6210\u306a\u3069\u3001\u3088\u308a\u591a\u304f\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002( #3430 \u304a\u3088\u3073 #3432 ) \u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9: \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u540d\u5019\u88dc\u306e\u30ab\u30e9\u30fc\u5316\u66f8\u5f0f\u3092\u524a\u9664 ( #3437 ) \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u306f\u3001\u7834\u58ca\u7684\u306a\u5909\u66f4\u306f\u3042\u308a\u307e\u305b\u3093\u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Request-Driven Web Service \u306e\u30c8\u30ec\u30fc\u30b9\u3092 AWS X-Ray \u306b\u9001\u4fe1\u3059\u308b Contributed by Wanxian Yang Request-Driven Web Service \u3067\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u3092 AWS X-Ray \u306b\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001Amazon CloudWatch \u30b3\u30f3\u30bd\u30fc\u30eb\u3084 AWS X-Ray \u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u901a\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u30de\u30c3\u30d7\u3084\u30c8\u30ec\u30fc\u30b9\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u306b\u306f\u3001\u307e\u305a AWS Distro for OpenTelemetry \u3067 Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3059\u308b (\u8a33\u6ce8: \u8a08\u88c5\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8a08\u6e2c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b) \u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u624b\u52d5\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 \u3092\u884c\u3046\u304b\u3001\u3088\u308a\u8fc5\u901f\u3067\u7c21\u5358\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u305f\u3081\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u305b\u305a\u306b Dockerfile \u3092\u901a\u3057\u3066 Service \u3092 \u81ea\u52d5\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 \u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3057\u305f\u3089\u3001Request-Driven Web Service \u306e Manifest \u3092\u5909\u66f4\u3057\u3001 observability \u306e\u69cb\u6210 \u3092\u542b\u3081\u308b\u3060\u3051\u3067\u3059: observability : tracing : awsxray copilot svc deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Service \u3067\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u304c AWS X-Ray \u306b\u9001\u4fe1\u3055\u308c\u3001Service \u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u7c21\u5358\u306b\u6e2c\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.17"},{"location":"ja/blogs/release-v117/#aws-copilot-v117-request-driven-web-service","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 4 \u6708 12 \u65e5 v1.16 \u306e\u30ea\u30ea\u30fc\u30b9\u304b\u3089\u307e\u30601\u9031\u9593\u3057\u304b\u7d4c\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u3001The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f AWS App Runner \u3068\u3068\u3082\u306b AWS X-Ray with OpenTelemetry \u3092\u4f7f\u3063\u305f\u7d71\u5408\u30c8\u30ec\u30fc\u30b9\u306e\u30b5\u30dd\u30fc\u30c8\u3092\u767a\u8868\u3057\u3066\u3044\u307e\u3059\u3002App Runner \u306e\u30ea\u30ea\u30fc\u30b9\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002Copilot \u3067 Request-Driven Web Services \u306e\u30c8\u30ec\u30fc\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u5f8c\u8ff0\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f @kangere \u306b\u611f\u8b1d\u3092\u7533\u3057\u4e0a\u3052\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5e38\u306b\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 270 \u4eba\u4ee5\u4e0a\u306e\u65b9\u3005\u304c\u65e5\u3005\u52a9\u3051\u5408\u3063\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.17 \u3067\u306f\u3001\u65b0\u6a5f\u80fd\u306e\u8ffd\u52a0\u3068\u3044\u304f\u3064\u304b\u306e\u6539\u5584\u304c\u884c\u308f\u308c\u307e\u3057\u305f: Request-Driven Web Service \u306b\u304a\u3051\u308b\u30c8\u30ec\u30fc\u30b9: AWS App Runner \u30b5\u30fc\u30d3\u30b9\u306e AWS X-Ray \u30c8\u30ec\u30fc\u30b9\u30b5\u30dd\u30fc\u30c8\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u4f34\u3044\u3001Request-Driven Web Service \u306e Manifest \u306b observability.tracing: awsxray \u3092\u8ffd\u52a0\u3057\u3066\u3001AWS X-Ray \u306b\u30c8\u30ec\u30fc\u30b9\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30b8\u30e7\u30d6\u3092\u7121\u52b9\u5316\u53ef\u80fd: Manifest \u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092 \"none\" \u306b\u8a2d\u5b9a\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30eb\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30b8\u30e7\u30d6\u3092\u7c21\u5358\u306b\u30aa\u30d5\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002( #3447 ) on : schedule : \"none\" \u30d7\u30ed\u30b0\u30ec\u30b9\u30c8\u30e9\u30c3\u30ab\u30fc\u306e\u8996\u8a8d\u6027\u5411\u4e0a: \u73fe\u5728\u3001\u30d7\u30ed\u30b0\u30ec\u30b9\u30c8\u30e9\u30c3\u30ab\u30fc\u306f\u3001HTTP\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306e\u4f5c\u6210\u306a\u3069\u3001\u3088\u308a\u591a\u304f\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002( #3430 \u304a\u3088\u3073 #3432 ) \u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9: \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u540d\u5019\u88dc\u306e\u30ab\u30e9\u30fc\u5316\u66f8\u5f0f\u3092\u524a\u9664 ( #3437 ) \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u306f\u3001\u7834\u58ca\u7684\u306a\u5909\u66f4\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"AWS Copilot v1.17: Request-Driven Web Service \u306e\u305f\u3081\u306e\u30c8\u30ec\u30fc\u30b9"},{"location":"ja/blogs/release-v117/#aws-copilot","text":"AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot \u3068\u306f?"},{"location":"ja/blogs/release-v117/#request-driven-web-service-aws-x-ray","text":"Contributed by Wanxian Yang Request-Driven Web Service \u3067\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u3092 AWS X-Ray \u306b\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001Amazon CloudWatch \u30b3\u30f3\u30bd\u30fc\u30eb\u3084 AWS X-Ray \u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u901a\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u30de\u30c3\u30d7\u3084\u30c8\u30ec\u30fc\u30b9\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u306b\u306f\u3001\u307e\u305a AWS Distro for OpenTelemetry \u3067 Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3059\u308b (\u8a33\u6ce8: \u8a08\u88c5\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8a08\u6e2c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b) \u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u624b\u52d5\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 \u3092\u884c\u3046\u304b\u3001\u3088\u308a\u8fc5\u901f\u3067\u7c21\u5358\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u305f\u3081\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u305b\u305a\u306b Dockerfile \u3092\u901a\u3057\u3066 Service \u3092 \u81ea\u52d5\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3 \u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3057\u305f\u3089\u3001Request-Driven Web Service \u306e Manifest \u3092\u5909\u66f4\u3057\u3001 observability \u306e\u69cb\u6210 \u3092\u542b\u3081\u308b\u3060\u3051\u3067\u3059: observability : tracing : awsxray copilot svc deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Service \u3067\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u304c AWS X-Ray \u306b\u9001\u4fe1\u3055\u308c\u3001Service \u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u7c21\u5358\u306b\u6e2c\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Request-Driven Web Service \u306e\u30c8\u30ec\u30fc\u30b9\u3092 AWS X-Ray \u306b\u9001\u4fe1\u3059\u308b"},{"location":"ja/blogs/release-v117/#_1","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v118/","text":"AWS Copilot v1.18: \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3001Pipeline \u3067\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f\u4ed8\u3051\u3001\u4ed6 The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.18 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002\u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f @corey-cole \u306b\u611f\u8b1d\u3092\u7533\u3057\u4e0a\u3052\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5e38\u306b\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f\u7d04 280 \u4eba\u3001GitHub \u3067\u306f 2.2k \u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.18 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u63d0\u4f9b\u3068\u6539\u5584\u304c\u884c\u308f\u308c\u307e\u3057\u305f: \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8: copilot env init --import-cert-arns \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u691c\u8a3c\u6e08\u307f\u306e ACM \u8a3c\u660e\u66f8\u3092 Environment \u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u30ea\u30b9\u30ca\u30fc\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Pipeline \u3067\u306e\u9806\u5e8f\u4ed8\u3051: \u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u306e Pipeline \u306b\u304a\u3044\u3066\u3001Service \u3084 Job \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u9806\u756a\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Pipeline \u306e\u8ffd\u52a0\u6539\u5584: \u30c7\u30d7\u30ed\u30a4\u9806\u5e8f\u306e\u4ed6\u306b\u3001Pipeline \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b Service \u3084 Job \u3092\u5236\u9650\u3057\u305f\u308a\u3001Pipeline \u306b\u30ab\u30b9\u30bf\u30e0 CloudFormation \u30b9\u30bf\u30c3\u30af\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u518d\u30c7\u30d7\u30ed\u30a4\u306e\u8fc5\u901f\u5316\u3092\u5b9f\u73fe\u3059\u308b \"recreate\" \u6226\u7565: \"recreate\" \u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001ECS \u304c\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u958b\u59cb\u3059\u308b\u524d\u306b Service \u5185\u306e\u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Load Balanced Web Service\u3001Worker Service\u3001Backend Service \u306e\u30c8\u30ec\u30fc\u30b9: ECS \u30bf\u30b9\u30af\u304b\u3089 AWS X-Ray \u306b\u30c8\u30ec\u30fc\u30b9\u3092\u53ce\u96c6\u3057\u3066\u51fa\u529b\u3059\u308b\u305f\u3081\u3001Manifest \u306b observability.tracing \u306e\u8a2d\u5b9a\u3092\u5c0e\u5165\u3057\u3001 AWS Distro for OpenTelemetry Collector \u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f? \u6295\u7a3f\u65e5: 2022 \u5e74 5 \u6708 9 \u65e5 AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8 Contributed by Penghao He Route 53 \u4ee5\u5916\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30c9\u30e1\u30a4\u30f3\u304c\u3042\u308b\u5834\u5408\u3001\u307e\u305f\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c9\u30e1\u30a4\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u305a\u306b HTTPS \u3092\u6709\u52b9\u306b\u3057\u305f\u3044\u5834\u5408\u3001\u65b0\u8a2d\u306e --import-cert-arns \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u4f5c\u6210\u6642\u306b\u691c\u8a3c\u6e08\u307f\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 $ copilot env init --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/87654321-4321-4321-4321-210987654321 \u4f8b\u3048\u3070\u3001\u3042\u308b\u8a3c\u660e\u66f8\u306e\u30c9\u30e1\u30a4\u30f3\u304c example.com \u3067\u3001\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5225\u540d \uff08Subject Alternative Names/SAN\uff09 \u304c *.example.com \u3067\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002 ???+ \"Sample certificate\" \u306e\u4f8b { \"Certificate\" : { \"CertificateArn\" : \"arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012\" , \"DomainName\" : \"example.com\" , \"SubjectAlternativeNames\" : [ \"*.example.com\" ], \"DomainValidationOptions\" : [ { \"DomainName\" : \"example.com\" , \"ValidationDomain\" : \"example.com\" , \"ValidationStatus\" : \"SUCCESS\" , \"ResourceRecord\" : { \"Name\" : \"_45c8aa9ac85568e905a6c3852e62ebc6.example.com.\" , \"Type\" : \"CNAME\" , \"Value\" : \"_f8be688050b7d23184863690b3d4baa8.xrchbtpdjs.acm-validations.aws.\" }, \"ValidationMethod\" : \"DNS\" } ], ... } \u6b21\u306b\u3001 Load Balanced Web Service \u306e Manifest \u3067\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306e\u3044\u305a\u308c\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u306a\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 name : frontend type : Load Balanced Web Service http : path : 'frontend' alias : v1.example.com Attention Service Manifest \u306b http.alias \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3092\u6301\u3064 Environment \u306b Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001Environment \u306b\u4f5c\u6210\u3055\u308c\u305f Application Load Balancer (ALB) \u306e DNS \u3092\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u30c9\u30e1\u30a4\u30f3\u304c\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u6240\u306b A \u30ec\u30b3\u30fc\u30c9\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u30c9\u30e1\u30a4\u30f3\u304c Route 53 \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 ???+ \"Sample Route 53 A Record\" \u306e\u4f8b { \"Name\" : \"v1.example.com.\" , \"Type\" : \"A\" , \"AliasTarget\" : { \"HostedZoneId\" : \"Z1H1FL3HABSF5\" , \"DNSName\" : \"demo-publi-1d328e3bqag4r-1914228528.us-west-2.elb.amazonaws.com.\" , \"EvaluateTargetHealth\" : true } } \u3053\u308c\u3067\u3001\u3042\u306a\u305f\u306e Service \u306f\u72ec\u81ea\u306e\u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3057\u3066 HTTPS \u304c\u6709\u52b9\u306b\u306a\u308a\u3001 https://v1.example.com \u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f! Pipeline \u306b\u304a\u3051\u308b\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b Contributed by Efe Karakus Copilot \u306f\u3001git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u81ea\u52d5\u7684\u306b\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e copilot pipeline \u30b3\u30de\u30f3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 v1.18 \u4ee5\u524d\u306f\u3001git \u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u3059\u3079\u3066\u306e Service \u3084 Job \u306f\u3001\u30b9\u30c6\u30fc\u30b8\u3054\u3068\u306b\u4e26\u884c\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u30013 \u3064\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9 (frontend\u3001orders\u3001warehouse\uff09 \u3092\u6301\u3064 monorepo \u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3059\u3079\u3066\u3001 test \u3068 prod Environment \u306b\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3057\u305f\u3002 Pipeline Pipeline Manifest name : release source : provider : GitHub properties : branch : main repository : https://github.com/user/repo stages : - name : test - name : prod requires_approval : true Repository Layout copilot \u251c\u2500\u2500 frontend \u2502 \u2514\u2500\u2500 manifest.yml \u251c\u2500\u2500 orders \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 warehouse \u2514\u2500\u2500 manifest.yml v1.18 \u304b\u3089\u306f\u3001\u65b0\u3057\u3044 deployments \u30d5\u30a3\u30fc\u30eb\u30c9 \u3067 Pipeline \u5185\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u756a\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 stages : - name : test deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] - name : prod require_approval : true deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] \u4e0a\u8a18\u306e Manifest \u3067\u306f\u3001 orders \u3068 warehouse \u306eService \u3092 frontend \u3088\u308a\u3082\u5148\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u4e0b\u6d41\u306e Service \u304c\u53d7\u3051\u5165\u308c\u308b\u6e96\u5099\u304c\u6574\u3046\u524d\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u65b0\u3057\u3044 API \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002Copilot \u306f\u30b9\u30bf\u30c3\u30af\u3092\u3069\u306e\u9806\u756a\u3067\u30c7\u30d7\u30ed\u30a4\u3059\u3079\u304d\u304b\u3092\u5224\u65ad\u3057\u3001\u305d\u306e\u7d50\u679c\u3001CodePipeline \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Pipeline \u306e\u8ffd\u52a0\u6539\u5584 \u305d\u306e\u4ed6\u306b\u3082\u3001\u65b0\u3057\u3044 deployments \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4ed8\u968f\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u5f37\u5316\u304c\u3042\u308a\u307e\u3059\u3002 1. monorepos \u3067\u3001Pipeline \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b Service \u3084 Job \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001Pipeline \u3067 orders \u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3060\u3051\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3088\u3046\u306b\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 deployments : orders : 2. Pipeline \u304c Copilot \u3067\u751f\u6210\u3055\u308c\u306a\u3044\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3042\u3063\u305f\u5834\u5408\u3001 copilot \u251c\u2500\u2500 api \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 templates \u251c\u2500\u2500 cognito.params.json \u2514\u2500\u2500 cognito.yml \u305d\u306e\u969b\u3001 deployments \u306e\u65b0\u3057\u3044 stack_name \u3001 template_path \u3001 template_config \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6d3b\u7528\u3057\u3066\u3001Pipeline \u3067 cognito cloudformation \u30b9\u30bf\u30c3\u30af\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 deployments : cognito : stack_name : myapp-test-cognito template_path : infrastructure/cognito.yml template_config : infrastructure/cognito.params.json api : \u6700\u5f8c\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u3001 copilot/templates \u306e\u4e0b\u306b\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3092 infrastructure/ \u306b\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306b cp -r copilot/templates infrastructure/ \u3067\u3001 template_path \u3068 template_config \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u65e2\u5b58\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u3059\u3088\u3046\u306b\u3001copilot \u304c\u751f\u6210\u3059\u308b buildspec \u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3059\u3002 \u518d\u30c7\u30d7\u30ed\u30a4\u3092\u52a0\u901f\u3055\u305b\u308b \"recreate\" \u6226\u7565 Contributed by Parag Bhingre Alert \"recreate\" \u306b\u3088\u3063\u3066 Service \u304c\u505c\u6b62\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u672c\u756a Service \u3067\u306e\u4f7f\u7528\u306f \u304a\u52e7\u3081\u3057\u307e\u305b\u3093 \u3002 v1.18 \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001Copilot ECS \u30d9\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\uff08Load Balanced Web Service\u3001Backend Service\u3001Worker Service\uff09\u306e\u518d\u30c7\u30d7\u30ed\u30a4\u3067\u306f\u5e38\u306b\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u30b9\u30d4\u30f3\u30a2\u30c3\u30d7\u3057\u3001\u305d\u308c\u3089\u304c\u5b89\u5b9a\u3059\u308b\u306e\u3092\u5f85\u3063\u3066\u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u958b\u767a\u6bb5\u968e\u306b\u3042\u308b ECS \u30d9\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u9ad8\u901f\u306a\u518d\u30c7\u30d7\u30ed\u30a4\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u3001\u30e6\u30fc\u30b6\u30fc\u306f Service Manifest \u3067\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3068\u3057\u3066 \"recreate\" \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 deployment : rolling : recreate Copilot \u306f\u3001\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u524d\u306b\u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u3088\u3046\u306b\u3001 minimumHealthyPercent \u3068 maximumPercent \u3092\u305d\u308c\u305e\u308c 0 \u3068 100 \u306b\u8a2d\u5b9a\u3057\u307e\u3059 \uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 100 \u3068 200 \u3067\u3059\uff09\u3002 Load Balanced Web Service\u3001Worker Service\u3001Backend Service \u306e\u30c8\u30ec\u30fc\u30b9 Contributed by Danny Randall v1.17 \u3067\u3001Copilot \u306f Request-Driven Web Service \u304b\u3089 AWS X-Ray \u306b\u30c8\u30ec\u30fc\u30b9\u3092\u9001\u4fe1\u3059\u308b\u30b5\u30dd\u30fc\u30c8\u3092\u958b\u59cb\u3057\u307e\u3057\u305f\u3002 Service Manifest \u3067 observability \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Load Balanced Web Service\u3001Worker Service\u3001Backend Service \u304b\u3089 X-Ray \u306b\u7c21\u5358\u306b\u30c8\u30ec\u30fc\u30b9\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 observability : tracing : awsxray \u3053\u308c\u3089\u306e Service \u30bf\u30a4\u30d7\u3067\u306f\u3001Copilot \u306f AWS Distro for OpenTelemetry Collector \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3001Service \u304b\u3089\u30c8\u30ec\u30fc\u30b9\u3092\u53ce\u96c6\u3057\u3001X-Ray \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u30c8\u30ec\u30fc\u30b9\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306b Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316 (\u8a33\u6ce8: \u8a08\u88c5\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8a08\u6e2c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068) \u3092\u3057\u305f\u5f8c\u3001Application \u306e\u30c7\u30d0\u30c3\u30b0\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u76e3\u8996\u3059\u308b\u305f\u3081\u306b\u3001Service \u3092\u901a\u3057\u3066\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u884c\u72b6\u6cc1\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u53ef\u89b3\u6e2c\u6027 (Observability) \u3092\u3054\u4e00\u8aad\u3044\u305f\u3060\u304d\u3001\u30c8\u30ec\u30fc\u30b9\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u6df1\u3081\u3066\u3001\u65e9\u901f\u59cb\u3081\u3066\u307f\u307e\u3057\u3087\u3046\uff01 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.18"},{"location":"ja/blogs/release-v118/#aws-copilot-v118-pipeline","text":"The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.18 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002\u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f @corey-cole \u306b\u611f\u8b1d\u3092\u7533\u3057\u4e0a\u3052\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5e38\u306b\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f\u7d04 280 \u4eba\u3001GitHub \u3067\u306f 2.2k \u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.18 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u63d0\u4f9b\u3068\u6539\u5584\u304c\u884c\u308f\u308c\u307e\u3057\u305f: \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8: copilot env init --import-cert-arns \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u691c\u8a3c\u6e08\u307f\u306e ACM \u8a3c\u660e\u66f8\u3092 Environment \u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u30ea\u30b9\u30ca\u30fc\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Pipeline \u3067\u306e\u9806\u5e8f\u4ed8\u3051: \u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u306e Pipeline \u306b\u304a\u3044\u3066\u3001Service \u3084 Job \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u9806\u756a\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Pipeline \u306e\u8ffd\u52a0\u6539\u5584: \u30c7\u30d7\u30ed\u30a4\u9806\u5e8f\u306e\u4ed6\u306b\u3001Pipeline \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b Service \u3084 Job \u3092\u5236\u9650\u3057\u305f\u308a\u3001Pipeline \u306b\u30ab\u30b9\u30bf\u30e0 CloudFormation \u30b9\u30bf\u30c3\u30af\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u518d\u30c7\u30d7\u30ed\u30a4\u306e\u8fc5\u901f\u5316\u3092\u5b9f\u73fe\u3059\u308b \"recreate\" \u6226\u7565: \"recreate\" \u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001ECS \u304c\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u958b\u59cb\u3059\u308b\u524d\u306b Service \u5185\u306e\u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Load Balanced Web Service\u3001Worker Service\u3001Backend Service \u306e\u30c8\u30ec\u30fc\u30b9: ECS \u30bf\u30b9\u30af\u304b\u3089 AWS X-Ray \u306b\u30c8\u30ec\u30fc\u30b9\u3092\u53ce\u96c6\u3057\u3066\u51fa\u529b\u3059\u308b\u305f\u3081\u3001Manifest \u306b observability.tracing \u306e\u8a2d\u5b9a\u3092\u5c0e\u5165\u3057\u3001 AWS Distro for OpenTelemetry Collector \u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.18: \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3001Pipeline \u3067\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f\u4ed8\u3051\u3001\u4ed6"},{"location":"ja/blogs/release-v118/#aws-copilot","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 5 \u6708 9 \u65e5 AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot \u3068\u306f?"},{"location":"ja/blogs/release-v118/#_1","text":"Contributed by Penghao He Route 53 \u4ee5\u5916\u3067\u7ba1\u7406\u3057\u3066\u3044\u308b\u30c9\u30e1\u30a4\u30f3\u304c\u3042\u308b\u5834\u5408\u3001\u307e\u305f\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c9\u30e1\u30a4\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u305a\u306b HTTPS \u3092\u6709\u52b9\u306b\u3057\u305f\u3044\u5834\u5408\u3001\u65b0\u8a2d\u306e --import-cert-arns \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u4f5c\u6210\u6642\u306b\u691c\u8a3c\u6e08\u307f\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 $ copilot env init --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/87654321-4321-4321-4321-210987654321 \u4f8b\u3048\u3070\u3001\u3042\u308b\u8a3c\u660e\u66f8\u306e\u30c9\u30e1\u30a4\u30f3\u304c example.com \u3067\u3001\u30b5\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5225\u540d \uff08Subject Alternative Names/SAN\uff09 \u304c *.example.com \u3067\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002 ???+ \"Sample certificate\" \u306e\u4f8b { \"Certificate\" : { \"CertificateArn\" : \"arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012\" , \"DomainName\" : \"example.com\" , \"SubjectAlternativeNames\" : [ \"*.example.com\" ], \"DomainValidationOptions\" : [ { \"DomainName\" : \"example.com\" , \"ValidationDomain\" : \"example.com\" , \"ValidationStatus\" : \"SUCCESS\" , \"ResourceRecord\" : { \"Name\" : \"_45c8aa9ac85568e905a6c3852e62ebc6.example.com.\" , \"Type\" : \"CNAME\" , \"Value\" : \"_f8be688050b7d23184863690b3d4baa8.xrchbtpdjs.acm-validations.aws.\" }, \"ValidationMethod\" : \"DNS\" } ], ... } \u6b21\u306b\u3001 Load Balanced Web Service \u306e Manifest \u3067\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306e\u3044\u305a\u308c\u306b\u5bfe\u3057\u3066\u3082\u6709\u52b9\u306a\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 name : frontend type : Load Balanced Web Service http : path : 'frontend' alias : v1.example.com Attention Service Manifest \u306b http.alias \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3092\u6301\u3064 Environment \u306b Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001Environment \u306b\u4f5c\u6210\u3055\u308c\u305f Application Load Balancer (ALB) \u306e DNS \u3092\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u30c9\u30e1\u30a4\u30f3\u304c\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u6240\u306b A \u30ec\u30b3\u30fc\u30c9\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u30c9\u30e1\u30a4\u30f3\u304c Route 53 \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 ???+ \"Sample Route 53 A Record\" \u306e\u4f8b { \"Name\" : \"v1.example.com.\" , \"Type\" : \"A\" , \"AliasTarget\" : { \"HostedZoneId\" : \"Z1H1FL3HABSF5\" , \"DNSName\" : \"demo-publi-1d328e3bqag4r-1914228528.us-west-2.elb.amazonaws.com.\" , \"EvaluateTargetHealth\" : true } } \u3053\u308c\u3067\u3001\u3042\u306a\u305f\u306e Service \u306f\u72ec\u81ea\u306e\u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3057\u3066 HTTPS \u304c\u6709\u52b9\u306b\u306a\u308a\u3001 https://v1.example.com \u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f!","title":"\u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v118/#pipeline","text":"Contributed by Efe Karakus Copilot \u306f\u3001git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u81ea\u52d5\u7684\u306b\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e copilot pipeline \u30b3\u30de\u30f3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 v1.18 \u4ee5\u524d\u306f\u3001git \u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u3059\u3079\u3066\u306e Service \u3084 Job \u306f\u3001\u30b9\u30c6\u30fc\u30b8\u3054\u3068\u306b\u4e26\u884c\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u30013 \u3064\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9 (frontend\u3001orders\u3001warehouse\uff09 \u3092\u6301\u3064 monorepo \u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3059\u3079\u3066\u3001 test \u3068 prod Environment \u306b\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3057\u305f\u3002 Pipeline Pipeline Manifest name : release source : provider : GitHub properties : branch : main repository : https://github.com/user/repo stages : - name : test - name : prod requires_approval : true Repository Layout copilot \u251c\u2500\u2500 frontend \u2502 \u2514\u2500\u2500 manifest.yml \u251c\u2500\u2500 orders \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 warehouse \u2514\u2500\u2500 manifest.yml v1.18 \u304b\u3089\u306f\u3001\u65b0\u3057\u3044 deployments \u30d5\u30a3\u30fc\u30eb\u30c9 \u3067 Pipeline \u5185\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u756a\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 stages : - name : test deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] - name : prod require_approval : true deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] \u4e0a\u8a18\u306e Manifest \u3067\u306f\u3001 orders \u3068 warehouse \u306eService \u3092 frontend \u3088\u308a\u3082\u5148\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u4e0b\u6d41\u306e Service \u304c\u53d7\u3051\u5165\u308c\u308b\u6e96\u5099\u304c\u6574\u3046\u524d\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u65b0\u3057\u3044 API \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002Copilot \u306f\u30b9\u30bf\u30c3\u30af\u3092\u3069\u306e\u9806\u756a\u3067\u30c7\u30d7\u30ed\u30a4\u3059\u3079\u304d\u304b\u3092\u5224\u65ad\u3057\u3001\u305d\u306e\u7d50\u679c\u3001CodePipeline \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"Pipeline \u306b\u304a\u3051\u308b\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b"},{"location":"ja/blogs/release-v118/#pipeline_1","text":"\u305d\u306e\u4ed6\u306b\u3082\u3001\u65b0\u3057\u3044 deployments \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4ed8\u968f\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u5f37\u5316\u304c\u3042\u308a\u307e\u3059\u3002 1. monorepos \u3067\u3001Pipeline \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b Service \u3084 Job \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001Pipeline \u3067 orders \u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3060\u3051\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3088\u3046\u306b\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 deployments : orders : 2. Pipeline \u304c Copilot \u3067\u751f\u6210\u3055\u308c\u306a\u3044\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3042\u3063\u305f\u5834\u5408\u3001 copilot \u251c\u2500\u2500 api \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 templates \u251c\u2500\u2500 cognito.params.json \u2514\u2500\u2500 cognito.yml \u305d\u306e\u969b\u3001 deployments \u306e\u65b0\u3057\u3044 stack_name \u3001 template_path \u3001 template_config \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6d3b\u7528\u3057\u3066\u3001Pipeline \u3067 cognito cloudformation \u30b9\u30bf\u30c3\u30af\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 deployments : cognito : stack_name : myapp-test-cognito template_path : infrastructure/cognito.yml template_config : infrastructure/cognito.params.json api : \u6700\u5f8c\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u3001 copilot/templates \u306e\u4e0b\u306b\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3092 infrastructure/ \u306b\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306b cp -r copilot/templates infrastructure/ \u3067\u3001 template_path \u3068 template_config \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u65e2\u5b58\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u3059\u3088\u3046\u306b\u3001copilot \u304c\u751f\u6210\u3059\u308b buildspec \u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3059\u3002","title":"Pipeline \u306e\u8ffd\u52a0\u6539\u5584"},{"location":"ja/blogs/release-v118/#recreate","text":"Contributed by Parag Bhingre Alert \"recreate\" \u306b\u3088\u3063\u3066 Service \u304c\u505c\u6b62\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u672c\u756a Service \u3067\u306e\u4f7f\u7528\u306f \u304a\u52e7\u3081\u3057\u307e\u305b\u3093 \u3002 v1.18 \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001Copilot ECS \u30d9\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\uff08Load Balanced Web Service\u3001Backend Service\u3001Worker Service\uff09\u306e\u518d\u30c7\u30d7\u30ed\u30a4\u3067\u306f\u5e38\u306b\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u30b9\u30d4\u30f3\u30a2\u30c3\u30d7\u3057\u3001\u305d\u308c\u3089\u304c\u5b89\u5b9a\u3059\u308b\u306e\u3092\u5f85\u3063\u3066\u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u958b\u767a\u6bb5\u968e\u306b\u3042\u308b ECS \u30d9\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u9ad8\u901f\u306a\u518d\u30c7\u30d7\u30ed\u30a4\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u3001\u30e6\u30fc\u30b6\u30fc\u306f Service Manifest \u3067\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3068\u3057\u3066 \"recreate\" \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 deployment : rolling : recreate Copilot \u306f\u3001\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u524d\u306b\u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u3088\u3046\u306b\u3001 minimumHealthyPercent \u3068 maximumPercent \u3092\u305d\u308c\u305e\u308c 0 \u3068 100 \u306b\u8a2d\u5b9a\u3057\u307e\u3059 \uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 100 \u3068 200 \u3067\u3059\uff09\u3002","title":"\u518d\u30c7\u30d7\u30ed\u30a4\u3092\u52a0\u901f\u3055\u305b\u308b \"recreate\" \u6226\u7565"},{"location":"ja/blogs/release-v118/#load-balanced-web-serviceworker-servicebackend-service","text":"Contributed by Danny Randall v1.17 \u3067\u3001Copilot \u306f Request-Driven Web Service \u304b\u3089 AWS X-Ray \u306b\u30c8\u30ec\u30fc\u30b9\u3092\u9001\u4fe1\u3059\u308b\u30b5\u30dd\u30fc\u30c8\u3092\u958b\u59cb\u3057\u307e\u3057\u305f\u3002 Service Manifest \u3067 observability \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Load Balanced Web Service\u3001Worker Service\u3001Backend Service \u304b\u3089 X-Ray \u306b\u7c21\u5358\u306b\u30c8\u30ec\u30fc\u30b9\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 observability : tracing : awsxray \u3053\u308c\u3089\u306e Service \u30bf\u30a4\u30d7\u3067\u306f\u3001Copilot \u306f AWS Distro for OpenTelemetry Collector \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3001Service \u304b\u3089\u30c8\u30ec\u30fc\u30b9\u3092\u53ce\u96c6\u3057\u3001X-Ray \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u30c8\u30ec\u30fc\u30b9\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306b Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316 (\u8a33\u6ce8: \u8a08\u88c5\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8a08\u6e2c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068) \u3092\u3057\u305f\u5f8c\u3001Application \u306e\u30c7\u30d0\u30c3\u30b0\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u76e3\u8996\u3059\u308b\u305f\u3081\u306b\u3001Service \u3092\u901a\u3057\u3066\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u884c\u72b6\u6cc1\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u53ef\u89b3\u6e2c\u6027 (Observability) \u3092\u3054\u4e00\u8aad\u3044\u305f\u3060\u304d\u3001\u30c8\u30ec\u30fc\u30b9\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u6df1\u3081\u3066\u3001\u65e9\u901f\u59cb\u3081\u3066\u307f\u307e\u3057\u3087\u3046\uff01","title":"Load Balanced Web Service\u3001Worker Service\u3001Backend Service \u306e\u30c8\u30ec\u30fc\u30b9"},{"location":"ja/blogs/release-v118/#_2","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v119/","text":"AWS Copilot v1.19: \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc, \u30b5\u30d6\u30cd\u30c3\u30c8\u914d\u7f6e\u6307\u5b9a\u306a\u3069 \u6295\u7a3f\u65e5: 2022 \u5e74 6 \u6708 13 \u65e5 The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f v1.19 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3067\u304d\u308b\u3053\u3068\u3092\u5b09\u3057\u304f\u601d\u3044\u307e\u3059\uff01 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f @gautam-nutalapati \u3068 @jonstacks \u306b\u5fc3\u304b\u3089\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u3044\u3066\u3001300 \u4eba\u8fd1\u3044\u65b9\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001 \u65e5\u3005\u52a9\u3051\u5408\u3063\u3066\u307e\u3059\u3002AWS Copilot \u306b\u95a2\u5fc3\u3068\u30b5\u30dd\u30fc\u30c8\u3092\u793a\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u69d8\u306b\u611f\u8b1d\u3057\u3066\u3044\u307e\u3059\u3002 Copilot v1.19 \u3067\u306f\u65b0\u6a5f\u80fd\u306e\u8ffd\u52a0\u3068\u3001\u3044\u304f\u3064\u304b\u306e\u6539\u826f\u304c\u884c\u308f\u308c\u307e\u3057\u305f: Backend Services\u7528\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc: \u5185\u90e8\u5411\u3051 \u306b Application Load Balancer \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002(Load Balanced Web Service \u7528\u306b\u4f5c\u6210\u3059\u308b\u69d8\u306a internet-facing \u3068\u306f\u5bfe\u7167\u7684\u306b)\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089 . \u30b5\u30d6\u30cd\u30c3\u30c8\u914d\u7f6e\u6307\u5b9a : ECS \u30bf\u30b9\u30af\u306e\u8d77\u52d5\u5834\u6240\u3092\u3088\u308a\u7d30\u304b\u304f\u5236\u5fa1\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u914d\u7f6e\u3092 public \u3068 private \u306b\u52a0\u3048\u3066\u3001\u7279\u5b9a\u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u3092 Copilot \u306b\u6307\u5b9a\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5e0c\u671b\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u306e ID \u3092\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306b\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] \u30db\u30b9\u30c8\u30be\u30fc\u30f3-A\u30ec\u30b3\u30fc\u30c9\u7ba1\u7406 : Service Manifest \u306b\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u5171\u306b\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306e ID \u3092\u8a18\u8f09\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3059\u308b Environment \u3078\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306b Copilot \u304c A \u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002( #3608 , #3643 ) # single alias and hosted zone http : alias : example.com hosted_zone : HostedZoneID1 # multiple aliases that share a hosted zone http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 # multiple aliases, some of which use the top-level hosted zone http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u30a2\u30af\u30bb\u30b9 : Copilot \u306f CloudFormation \u30b9\u30bf\u30c3\u30af\u304b\u3089\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e ID \u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Addon \u3092\u5229\u7528\u3057\u3066 VPC \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u6642\u306b\u5229\u7528\u3057\u307e\u3059\u3002( #3611 ) \u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5229\u7528\u3059\u308b port : \u65b0\u3057\u3044 port \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3088\u308a\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u305f\u3081\u306b\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5229\u7528\u3059\u308b\u30dd\u30fc\u30c8\u3068\u306f\u7570\u306a\u308b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u306a\u3044\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 ( #3548 ) http : path : '/' healthcheck : port : 8080 \u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9: Application \u304b\u3089 Service \u304c\u524a\u9664\u3055\u308c\u305f\u5834\u5408\u306b\u3001 app init --resource-tags \u3067\u9069\u7528\u3055\u308c\u305f\u30bf\u30b0\u3092\u4fdd\u6301\u3057\u307e\u3059( #3582 )\u3002 Network Load Balancer \u3092\u5229\u7528\u3057\u305f Load Balanced Web Service \u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6709\u52b9\u5316\u3059\u308b\u969b\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f( #3578 )\u3002 Fargate Windows \u30bf\u30b9\u30af\u306b\u5bfe\u3059\u308b copilot svc exec \u3092\u6709\u52b9\u306b\u3057\u307e\u3057\u305f( #3566 )\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u306f\u4e92\u63db\u6027\u3092\u7834\u308b\u5909\u66f4\u306f\u3042\u308a\u307e\u305b\u3093\u3002 Copilot\u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc Contributed by Janice Huang and Danny Randall Copilot \u306e Environment \u3068\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u958b\u59cb\u3059\u308b\u969b\u306b\u3044\u304f\u3064\u304b\u306e\u8a2d\u5b9a\u3057\u3001 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u306e\u307f\u3092\u5229\u7528\u3057\u307e\u3059\u3002 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Environment \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002\u8a31\u53ef\u3055\u308c\u305f Service \u9593\u3067\u5171\u6709\u3055\u308c\u307e\u3059\u3002 copilot env init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001ALB \u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u70ba\u306b\u3001\u3044\u3064\u304f\u304b\u306e\u7279\u5b9a\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002 https \u3092\u5229\u7528\u3057\u3066\u3044\u308b Service \u306b\u5bfe\u3057\u3066\u306f\u3001 --import-cert-arns \u30d5\u30e9\u30b0\u3092\u4f7f\u3063\u3066\u3001\u65e2\u5b58\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u8a3c\u660e\u66f8\u306e ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u73fe\u6642\u70b9\u3067\u306f\u3001Copilot \u306f Environment \u3067\u5229\u7528\u3057\u3066\u3044\u308b VPC \u306b\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u304c \u7121\u3044\u5834\u5408 \u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u8a3c\u660e\u66f8\u3092\u5185\u90e8 ALB \u3068\u95a2\u9023\u3065\u3051\u307e\u3059\u3002\u3064\u307e\u308a\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u306e\u5834\u5408\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002Environment \u306e VPC \u5185\u304b\u3089\u5165\u529b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092 ALB \u304c\u53d7\u3051\u4ed8\u3051\u308b\u69d8\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001 --internal-alb-allow-vpc-ingress \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3057\u307e\u3059 ; \u305d\u3046\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u5185\u90e8 ALB \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u3001Environment \u5185\u306b Copilot \u304c\u4f5c\u6210\u3057\u305f Service \u306e\u307f\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u80cc\u5f8c\u306b\u8a2d\u7f6e\u3067\u304d\u308b\u552f\u4e00\u306e Service \u30bf\u30a4\u30d7\u306f Backend Service \u3067\u3059\u3002Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f Environment \u3067 ALB \u3092\u4f5c\u6210\u3059\u308b\u69d8\u306b Copilot \u306b\u6307\u793a\u3092\u3059\u308b\u70ba\u306b\u3001 http \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Backend Service \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Manifest \u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private # for https alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 \u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u5185\u90e8 ALB \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044! \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.19"},{"location":"ja/blogs/release-v119/#aws-copilot-v119","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 6 \u6708 13 \u65e5 The AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f v1.19 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3067\u304d\u308b\u3053\u3068\u3092\u5b09\u3057\u304f\u601d\u3044\u307e\u3059\uff01 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u305f @gautam-nutalapati \u3068 @jonstacks \u306b\u5fc3\u304b\u3089\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u3044\u3066\u3001300 \u4eba\u8fd1\u3044\u65b9\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001 \u65e5\u3005\u52a9\u3051\u5408\u3063\u3066\u307e\u3059\u3002AWS Copilot \u306b\u95a2\u5fc3\u3068\u30b5\u30dd\u30fc\u30c8\u3092\u793a\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u69d8\u306b\u611f\u8b1d\u3057\u3066\u3044\u307e\u3059\u3002 Copilot v1.19 \u3067\u306f\u65b0\u6a5f\u80fd\u306e\u8ffd\u52a0\u3068\u3001\u3044\u304f\u3064\u304b\u306e\u6539\u826f\u304c\u884c\u308f\u308c\u307e\u3057\u305f: Backend Services\u7528\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc: \u5185\u90e8\u5411\u3051 \u306b Application Load Balancer \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002(Load Balanced Web Service \u7528\u306b\u4f5c\u6210\u3059\u308b\u69d8\u306a internet-facing \u3068\u306f\u5bfe\u7167\u7684\u306b)\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089 . \u30b5\u30d6\u30cd\u30c3\u30c8\u914d\u7f6e\u6307\u5b9a : ECS \u30bf\u30b9\u30af\u306e\u8d77\u52d5\u5834\u6240\u3092\u3088\u308a\u7d30\u304b\u304f\u5236\u5fa1\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u914d\u7f6e\u3092 public \u3068 private \u306b\u52a0\u3048\u3066\u3001\u7279\u5b9a\u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u3092 Copilot \u306b\u6307\u5b9a\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5e0c\u671b\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u306e ID \u3092\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306b\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] \u30db\u30b9\u30c8\u30be\u30fc\u30f3-A\u30ec\u30b3\u30fc\u30c9\u7ba1\u7406 : Service Manifest \u306b\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u5171\u306b\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306e ID \u3092\u8a18\u8f09\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3059\u308b Environment \u3078\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306b Copilot \u304c A \u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002( #3608 , #3643 ) # single alias and hosted zone http : alias : example.com hosted_zone : HostedZoneID1 # multiple aliases that share a hosted zone http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 # multiple aliases, some of which use the top-level hosted zone http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u30a2\u30af\u30bb\u30b9 : Copilot \u306f CloudFormation \u30b9\u30bf\u30c3\u30af\u304b\u3089\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e ID \u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Addon \u3092\u5229\u7528\u3057\u3066 VPC \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u6642\u306b\u5229\u7528\u3057\u307e\u3059\u3002( #3611 ) \u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5229\u7528\u3059\u308b port : \u65b0\u3057\u3044 port \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3088\u308a\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u305f\u3081\u306b\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5229\u7528\u3059\u308b\u30dd\u30fc\u30c8\u3068\u306f\u7570\u306a\u308b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u306a\u3044\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 ( #3548 ) http : path : '/' healthcheck : port : 8080 \u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9: Application \u304b\u3089 Service \u304c\u524a\u9664\u3055\u308c\u305f\u5834\u5408\u306b\u3001 app init --resource-tags \u3067\u9069\u7528\u3055\u308c\u305f\u30bf\u30b0\u3092\u4fdd\u6301\u3057\u307e\u3059( #3582 )\u3002 Network Load Balancer \u3092\u5229\u7528\u3057\u305f Load Balanced Web Service \u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6709\u52b9\u5316\u3059\u308b\u969b\u306e\u4e0d\u5177\u5408\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f( #3578 )\u3002 Fargate Windows \u30bf\u30b9\u30af\u306b\u5bfe\u3059\u308b copilot svc exec \u3092\u6709\u52b9\u306b\u3057\u307e\u3057\u305f( #3566 )\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u306f\u4e92\u63db\u6027\u3092\u7834\u308b\u5909\u66f4\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"AWS Copilot v1.19: \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc, \u30b5\u30d6\u30cd\u30c3\u30c8\u914d\u7f6e\u6307\u5b9a\u306a\u3069"},{"location":"ja/blogs/release-v119/#copilot","text":"AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Copilot\u3068\u306f\uff1f"},{"location":"ja/blogs/release-v119/#_1","text":"Contributed by Janice Huang and Danny Randall Copilot \u306e Environment \u3068\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u958b\u59cb\u3059\u308b\u969b\u306b\u3044\u304f\u3064\u304b\u306e\u8a2d\u5b9a\u3057\u3001 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u306e\u307f\u3092\u5229\u7528\u3057\u307e\u3059\u3002 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Environment \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002\u8a31\u53ef\u3055\u308c\u305f Service \u9593\u3067\u5171\u6709\u3055\u308c\u307e\u3059\u3002 copilot env init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001ALB \u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u70ba\u306b\u3001\u3044\u3064\u304f\u304b\u306e\u7279\u5b9a\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002 https \u3092\u5229\u7528\u3057\u3066\u3044\u308b Service \u306b\u5bfe\u3057\u3066\u306f\u3001 --import-cert-arns \u30d5\u30e9\u30b0\u3092\u4f7f\u3063\u3066\u3001\u65e2\u5b58\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u8a3c\u660e\u66f8\u306e ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u73fe\u6642\u70b9\u3067\u306f\u3001Copilot \u306f Environment \u3067\u5229\u7528\u3057\u3066\u3044\u308b VPC \u306b\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u304c \u7121\u3044\u5834\u5408 \u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u8a3c\u660e\u66f8\u3092\u5185\u90e8 ALB \u3068\u95a2\u9023\u3065\u3051\u307e\u3059\u3002\u3064\u307e\u308a\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u306e\u5834\u5408\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002Environment \u306e VPC \u5185\u304b\u3089\u5165\u529b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092 ALB \u304c\u53d7\u3051\u4ed8\u3051\u308b\u69d8\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001 --internal-alb-allow-vpc-ingress \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3057\u307e\u3059 ; \u305d\u3046\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u5185\u90e8 ALB \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u3001Environment \u5185\u306b Copilot \u304c\u4f5c\u6210\u3057\u305f Service \u306e\u307f\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u80cc\u5f8c\u306b\u8a2d\u7f6e\u3067\u304d\u308b\u552f\u4e00\u306e Service \u30bf\u30a4\u30d7\u306f Backend Service \u3067\u3059\u3002Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f Environment \u3067 ALB \u3092\u4f5c\u6210\u3059\u308b\u69d8\u306b Copilot \u306b\u6307\u793a\u3092\u3059\u308b\u70ba\u306b\u3001 http \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Backend Service \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Manifest \u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private # for https alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 \u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u5185\u90e8 ALB \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044!","title":"\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc"},{"location":"ja/blogs/release-v119/#_2","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b \u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v120/","text":"AWS Copilot v1.20: Envronment Manifest \u3068\u305d\u306e\u5148\u3078! \u6295\u7a3f\u65e5: 2022 \u5e74 7 \u6708 19 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.20 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u3066\u304f\u308c\u305f @gautam-nutalapati \u3001 @codekitchen , \u305d\u3057\u3066 @kangere \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.3k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.20 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Environment Manifest : Infrastructure as Code \u306e\u3059\u3079\u3066\u306e\u5229\u70b9\u3092\u74b0\u5883\u306b\u3082\u305f\u3089\u3059 Manifest \u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u3092\u4f5c\u6210\u304a\u3088\u3073\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u65e2\u5b58\u306e Environment \u3092\u79fb\u884c\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u8a73\u7d30\u306a\u624b\u9806 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u306e\u30b5\u30dd\u30fc\u30c8 : Service Manifest \u3067 \u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3 \u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u30d3\u30eb\u30c9\u30ed\u30fc\u30eb\u306e\u8ffd\u52a0\u30dd\u30ea\u30b7\u30fc : Pipeline Manifest \u306e additional_policy \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u901a\u3058\u3066\u3001CodeBuild \u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b5\u30fc\u30d3\u30b9\u30ed\u30fc\u30eb\u306b\u304a\u3051\u308b\u8ffd\u52a0\u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30ed\u30fc\u30eb\u306b\u8ffd\u52a0\u3059\u308b\u8ffd\u52a0\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u8a73\u7d30\u306a\u624b\u9806 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 (#3709) \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u306e\u547c\u3073\u51fa\u3057 : \u65b0\u3057\u3044 copilot job run \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u65e2\u5b58\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u3092\u30a2\u30c9\u30db\u30c3\u30af\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 (#3692) \u30c7\u30d5\u30a9\u30eb\u30c8\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u62d2\u5426\u3059\u308b : Service Manifest \u306e security_groups \u306b deny_default \u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9069\u7528\u3055\u308c\u308b Environment \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e Ingress \u3092\u524a\u9664\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002 (#3682) ALB\u3092\u4f7f\u3063\u305f Backend Service \u306e\u4e88\u6e2c\u53ef\u80fd\u306a\u30a8\u30a4\u30ea\u30a2\u30b9 : \u5185\u90e8 ALB \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b Backend Service \u306b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e ALB \u30db\u30b9\u30c8\u540d\u3067\u306f\u306a\u304f\u3001 svc.env.app.internal \u3068\u3044\u3046\u30db\u30b9\u30c8\u540d\u3067\u5230\u9054\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 ( #3668 ) AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Environment Manifest v1.20 \u4ee5\u524d\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u8ffd\u52a0\u306e\u8a2d\u5b9a\u3067 Environment \u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001Environment \u304c\u30c9\u30e1\u30a4\u30f3\u3068\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306f env init --name copy --import-cert-arns \u3092\u5b9f\u884c\u3057\u3066\u8a3c\u660e\u66f8\u4ed8\u304d\u306e\u65b0\u3057\u3044 Environment \u3092\u4f5c\u6210\u3057\u3001\u53e4\u3044 Environment \u3092\u53d6\u308a\u58ca\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30ea\u30ea\u30fc\u30b9\u304b\u3089\u3001\u30e6\u30fc\u30b6\u30fc\u306f Environment \u3092\u518d\u4f5c\u6210\u3059\u308b\u3053\u3068\u306a\u304f\u3001 Manifest \u3092\u4f7f\u7528\u3057\u3066 Environment \u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4eca\u5f8c\u3001\u65b0\u3057\u3044 Environment \u30ea\u30bd\u30fc\u30b9\u306f env init \u30b3\u30de\u30f3\u30c9\u306e\u30d5\u30e9\u30b0\u306e\u4ee3\u308f\u308a\u306b manifest.yml \u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc [1] copilot env init \u306f\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u306b Environment \u3092\u5373\u5ea7\u306b\u30c7\u30d7\u30ed\u30a4 \u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f \u3002\u4ee3\u308f\u308a\u306b\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b manifest.yml \u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002 copilot env init \u306e\u5b9f\u884c $ copilot env init Environment name: prod-pdx Credential source: [profile default] Default environment configuration? Yes, use default. \u2714 Wrote the manifest for environment prod-pdx at copilot/environments/prod-pdx/manifest.yml ...additional output messages $ cat copilot/environments/prod-pdx/manifest.yml # The manifest for the \"prod-pdx\" environment. # Read the full specification for the \"Environment\" type at: # https://aws.github.io/copilot-cli/docs/manifest/environment/ # Your environment name will be used in naming your resources like VPC, cluster, etc. name: prod-pdx type: Environment # Import your own VPC and subnets or configure how they should be created. # network: # vpc: # id: # Configure the load balancers in your environment, once created. # http: # public: # private: # Configure observability for your environment resources. observability: container_insights: false [2] Manifest \u3092\u4fee\u6b63\u3057\u305f\u5f8c\u3001\u65b0\u3057\u3044 copilot env deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066 Environment \u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot env deploy \u306e\u5b9f\u884c $ copilot env deploy Name: prod-pdx \u2714 Proposing infrastructure changes for the demo-prod-pdx environment. - Creating the infrastructure for the demo-prod-pdx environment. [update complete] [110.6s] - An ECS cluster to group your services [create complete] [9.1s] - A security group to allow your containers to talk to each other [create complete] [6.3s] - An Internet Gateway to connect to the public internet [create complete] [18.5s] - Private subnet 1 for resources with no internet access [create complete] [6.3s] - Private subnet 2 for resources with no internet access [create complete] [6.3s] - A custom route table that directs network traffic for the public subnets [create complete] [15.5s] - Public subnet 1 for resources that can access the internet [create complete] [6.3s] - Public subnet 2 for resources that can access the internet [create complete] [6.3s] - A private DNS namespace for discovering services within the environment [create complete] [47.2s] - A Virtual Private Cloud to control networking of your AWS resources [create complete] [43.6s] \u3053\u308c\u3067\u7d42\u308f\u308a\u3067\u3059\ud83d\ude80! \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u3001 copilot svc \u3068 copilot job \u30b3\u30de\u30f3\u30c9\u306e\u52d5\u4f5c\u3068\u540c\u3058\u3067\u3059\u3002 \u65e2\u5b58 Environment \u306e\u79fb\u884c \u65e2\u5b58\u306e Environment \u7528\u306e manifest.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001Copilot \u306f copilot env show \u30b3\u30de\u30f3\u30c9\u306b\u65b0\u3057\u3044 --manifest \u30d5\u30e9\u30b0\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002 \u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u65e2\u5b58\u306e \"prod\" Environment \u7528\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002 [1] \u6700\u521d\u306b\u3001\u73fe\u5728\u306e git \u30ea\u30dd\u30b8\u30c8\u30ea\u307e\u305f\u306f\u65b0\u3057\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3001Environment Manifest \u306e\u305f\u3081\u306e\u5fc5\u9808\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 prod \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020 # 1 . Navigate to your git repository. $ cd my-sample-repo/ # 2 . Create the directory for the \"prod\" environment $ mkdir -p copilot/environments/prod [2] copilot env show --manifest \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066 Manifest \u3092\u751f\u6210\u3057\u3001\"prod\" \u30d5\u30a9\u30eb\u30c0\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u307e\u3059\u3002 Manifest \u306e\u751f\u6210 $ copilot env show -n prod --manifest > copilot/environments/prod/manifest.yml \u3053\u308c\u3067\u5b8c\u4e86\u3067\u3059! Manifest \u30d5\u30a1\u30a4\u30eb\u3092 \u4ed5\u69d8 \u306e\u4efb\u610f\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u5909\u66f4\u3057\u3001 copilot env deploy \u3092\u5b9f\u884c\u3057\u3066\u30b9\u30bf\u30c3\u30af\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea \u6700\u5f8c\u306b\u3001Copilot \u306f Service \u307e\u305f\u306f Job \u3068\u3057\u3066\u3001Environment \u306b\u5bfe\u3057\u3066\u540c\u3058 \u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u306e Pipeline \u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 [1] Manifest \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b \u3068\u3001\u65e2\u5b58\u306e copilot pipeline init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u30b9\u30c6\u30fc\u30b8\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e Pipeline \u306e manifest.yml \u30d5\u30a1\u30a4\u30eb\u3084\u3001CloudFormation \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e \"Build\" \u30b9\u30c6\u30fc\u30b8\u3067\u4f7f\u7528\u3059\u308b buildspec.yml \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 Pipeline Manifest \u3068 buildspec \u306e\u4f5c\u6210 $ copilot pipeline init Pipeline name: env-pipeline What type of continuous delivery pipeline is this? Environments 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for copilot-pipeline-test at 'copilot/pipelines/env-pipeline/manifest.yml' \u2714 Wrote the buildspec for the pipeline's build stage at 'copilot/pipelines/env-pipeline/buildspec.yml' [2] AWS CodePipeline \u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u305f\u3081\u306b\u3001 copilot pipeline deploy \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 Pipeline \u306e\u4f5c\u6210 $ copilot pipeline deploy Are you sure you want to redeploy an existing pipeline: env-pipeline? Yes \u2714 Successfully deployed pipeline: env-pipeline \u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u306e\u30b5\u30dd\u30fc\u30c8 Service Manifest \u306b\u3001\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u671f\u9593\u3092\u8a2d\u5b9a\u3059\u308b\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 Load Balanced \u3001 Backend \u3001\u304a\u3088\u3073 Worker Service \u3067\u306f\u3001 count \u306e\u4e0b\u306b\u3042\u308b\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u69cb\u6210\u3057\u3066\u3001\u30ab\u30b9\u30bf\u30e0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u671f\u9593\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4ee5\u524d\u306f\u3001 cpu_percentage \u306a\u3069\u306e\u5404\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30e1\u30c8\u30ea\u30c3\u30af\u306f\u3001120 \u79d2\u306e 'in' \u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3068 60 \u79d2\u306e 'out' \u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u304c\u56fa\u5b9a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u4eca\u56de\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u671f\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u4e00\u822c\u7684\u306a\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u306e\u4f7f\u7528 count: range: 1-10 cooldown: in: 30s out: 30s cpu_percentage: 50 \u307e\u305f\u3001\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3092\u500b\u5225\u306b\u8a2d\u5b9a\u3057\u3001\u4e00\u822c\u7684\u306a\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 \u7279\u5b9a\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3092\u4f7f\u7528\u3059\u308b count: range: 1-10 cooldown: in: 2m out: 2m cpu_percentage: 50 requests: value: 10 cooldown: in: 30s out: 30s \u6b21\u306f? \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.20"},{"location":"ja/blogs/release-v120/#aws-copilot-v120-envronment-manifest","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 7 \u6708 19 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.20 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u3066\u304f\u308c\u305f @gautam-nutalapati \u3001 @codekitchen , \u305d\u3057\u3066 @kangere \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.3k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.20 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Environment Manifest : Infrastructure as Code \u306e\u3059\u3079\u3066\u306e\u5229\u70b9\u3092\u74b0\u5883\u306b\u3082\u305f\u3089\u3059 Manifest \u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u3092\u4f5c\u6210\u304a\u3088\u3073\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u65e2\u5b58\u306e Environment \u3092\u79fb\u884c\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u8a73\u7d30\u306a\u624b\u9806 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u306e\u30b5\u30dd\u30fc\u30c8 : Service Manifest \u3067 \u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3 \u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u30d3\u30eb\u30c9\u30ed\u30fc\u30eb\u306e\u8ffd\u52a0\u30dd\u30ea\u30b7\u30fc : Pipeline Manifest \u306e additional_policy \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u901a\u3058\u3066\u3001CodeBuild \u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30b5\u30fc\u30d3\u30b9\u30ed\u30fc\u30eb\u306b\u304a\u3051\u308b\u8ffd\u52a0\u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30ed\u30fc\u30eb\u306b\u8ffd\u52a0\u3059\u308b\u8ffd\u52a0\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6307\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 \u8a73\u7d30\u306a\u624b\u9806 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 (#3709) \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u306e\u547c\u3073\u51fa\u3057 : \u65b0\u3057\u3044 copilot job run \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u65e2\u5b58\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u3092\u30a2\u30c9\u30db\u30c3\u30af\u306b\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 (#3692) \u30c7\u30d5\u30a9\u30eb\u30c8\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u62d2\u5426\u3059\u308b : Service Manifest \u306e security_groups \u306b deny_default \u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9069\u7528\u3055\u308c\u308b Environment \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e Ingress \u3092\u524a\u9664\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002 (#3682) ALB\u3092\u4f7f\u3063\u305f Backend Service \u306e\u4e88\u6e2c\u53ef\u80fd\u306a\u30a8\u30a4\u30ea\u30a2\u30b9 : \u5185\u90e8 ALB \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b Backend Service \u306b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e ALB \u30db\u30b9\u30c8\u540d\u3067\u306f\u306a\u304f\u3001 svc.env.app.internal \u3068\u3044\u3046\u30db\u30b9\u30c8\u540d\u3067\u5230\u9054\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 ( #3668 ) AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.20: Envronment Manifest \u3068\u305d\u306e\u5148\u3078!"},{"location":"ja/blogs/release-v120/#environment-manifest","text":"v1.20 \u4ee5\u524d\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u8ffd\u52a0\u306e\u8a2d\u5b9a\u3067 Environment \u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001Environment \u304c\u30c9\u30e1\u30a4\u30f3\u3068\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306f env init --name copy --import-cert-arns \u3092\u5b9f\u884c\u3057\u3066\u8a3c\u660e\u66f8\u4ed8\u304d\u306e\u65b0\u3057\u3044 Environment \u3092\u4f5c\u6210\u3057\u3001\u53e4\u3044 Environment \u3092\u53d6\u308a\u58ca\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30ea\u30ea\u30fc\u30b9\u304b\u3089\u3001\u30e6\u30fc\u30b6\u30fc\u306f Environment \u3092\u518d\u4f5c\u6210\u3059\u308b\u3053\u3068\u306a\u304f\u3001 Manifest \u3092\u4f7f\u7528\u3057\u3066 Environment \u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4eca\u5f8c\u3001\u65b0\u3057\u3044 Environment \u30ea\u30bd\u30fc\u30b9\u306f env init \u30b3\u30de\u30f3\u30c9\u306e\u30d5\u30e9\u30b0\u306e\u4ee3\u308f\u308a\u306b manifest.yml \u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"Environment Manifest"},{"location":"ja/blogs/release-v120/#_1","text":"[1] copilot env init \u306f\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u306b Environment \u3092\u5373\u5ea7\u306b\u30c7\u30d7\u30ed\u30a4 \u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f \u3002\u4ee3\u308f\u308a\u306b\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b manifest.yml \u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002 copilot env init \u306e\u5b9f\u884c $ copilot env init Environment name: prod-pdx Credential source: [profile default] Default environment configuration? Yes, use default. \u2714 Wrote the manifest for environment prod-pdx at copilot/environments/prod-pdx/manifest.yml ...additional output messages $ cat copilot/environments/prod-pdx/manifest.yml # The manifest for the \"prod-pdx\" environment. # Read the full specification for the \"Environment\" type at: # https://aws.github.io/copilot-cli/docs/manifest/environment/ # Your environment name will be used in naming your resources like VPC, cluster, etc. name: prod-pdx type: Environment # Import your own VPC and subnets or configure how they should be created. # network: # vpc: # id: # Configure the load balancers in your environment, once created. # http: # public: # private: # Configure observability for your environment resources. observability: container_insights: false [2] Manifest \u3092\u4fee\u6b63\u3057\u305f\u5f8c\u3001\u65b0\u3057\u3044 copilot env deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066 Environment \u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot env deploy \u306e\u5b9f\u884c $ copilot env deploy Name: prod-pdx \u2714 Proposing infrastructure changes for the demo-prod-pdx environment. - Creating the infrastructure for the demo-prod-pdx environment. [update complete] [110.6s] - An ECS cluster to group your services [create complete] [9.1s] - A security group to allow your containers to talk to each other [create complete] [6.3s] - An Internet Gateway to connect to the public internet [create complete] [18.5s] - Private subnet 1 for resources with no internet access [create complete] [6.3s] - Private subnet 2 for resources with no internet access [create complete] [6.3s] - A custom route table that directs network traffic for the public subnets [create complete] [15.5s] - Public subnet 1 for resources that can access the internet [create complete] [6.3s] - Public subnet 2 for resources that can access the internet [create complete] [6.3s] - A private DNS namespace for discovering services within the environment [create complete] [47.2s] - A Virtual Private Cloud to control networking of your AWS resources [create complete] [43.6s] \u3053\u308c\u3067\u7d42\u308f\u308a\u3067\u3059\ud83d\ude80! \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u3001 copilot svc \u3068 copilot job \u30b3\u30de\u30f3\u30c9\u306e\u52d5\u4f5c\u3068\u540c\u3058\u3067\u3059\u3002","title":"\u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc"},{"location":"ja/blogs/release-v120/#environment","text":"\u65e2\u5b58\u306e Environment \u7528\u306e manifest.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001Copilot \u306f copilot env show \u30b3\u30de\u30f3\u30c9\u306b\u65b0\u3057\u3044 --manifest \u30d5\u30e9\u30b0\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002 \u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u65e2\u5b58\u306e \"prod\" Environment \u7528\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002 [1] \u6700\u521d\u306b\u3001\u73fe\u5728\u306e git \u30ea\u30dd\u30b8\u30c8\u30ea\u307e\u305f\u306f\u65b0\u3057\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3001Environment Manifest \u306e\u305f\u3081\u306e\u5fc5\u9808\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 prod \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020 # 1 . Navigate to your git repository. $ cd my-sample-repo/ # 2 . Create the directory for the \"prod\" environment $ mkdir -p copilot/environments/prod [2] copilot env show --manifest \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066 Manifest \u3092\u751f\u6210\u3057\u3001\"prod\" \u30d5\u30a9\u30eb\u30c0\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u307e\u3059\u3002 Manifest \u306e\u751f\u6210 $ copilot env show -n prod --manifest > copilot/environments/prod/manifest.yml \u3053\u308c\u3067\u5b8c\u4e86\u3067\u3059! Manifest \u30d5\u30a1\u30a4\u30eb\u3092 \u4ed5\u69d8 \u306e\u4efb\u610f\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u5909\u66f4\u3057\u3001 copilot env deploy \u3092\u5b9f\u884c\u3057\u3066\u30b9\u30bf\u30c3\u30af\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002","title":"\u65e2\u5b58 Environment \u306e\u79fb\u884c"},{"location":"ja/blogs/release-v120/#_2","text":"\u6700\u5f8c\u306b\u3001Copilot \u306f Service \u307e\u305f\u306f Job \u3068\u3057\u3066\u3001Environment \u306b\u5bfe\u3057\u3066\u540c\u3058 \u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u306e Pipeline \u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 [1] Manifest \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b \u3068\u3001\u65e2\u5b58\u306e copilot pipeline init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u30b9\u30c6\u30fc\u30b8\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e Pipeline \u306e manifest.yml \u30d5\u30a1\u30a4\u30eb\u3084\u3001CloudFormation \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e \"Build\" \u30b9\u30c6\u30fc\u30b8\u3067\u4f7f\u7528\u3059\u308b buildspec.yml \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 Pipeline Manifest \u3068 buildspec \u306e\u4f5c\u6210 $ copilot pipeline init Pipeline name: env-pipeline What type of continuous delivery pipeline is this? Environments 1st stage: test 2nd stage: prod \u2714 Wrote the pipeline manifest for copilot-pipeline-test at 'copilot/pipelines/env-pipeline/manifest.yml' \u2714 Wrote the buildspec for the pipeline's build stage at 'copilot/pipelines/env-pipeline/buildspec.yml' [2] AWS CodePipeline \u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u305f\u3081\u306b\u3001 copilot pipeline deploy \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 Pipeline \u306e\u4f5c\u6210 $ copilot pipeline deploy Are you sure you want to redeploy an existing pipeline: env-pipeline? Yes \u2714 Successfully deployed pipeline: env-pipeline","title":"\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea"},{"location":"ja/blogs/release-v120/#_3","text":"Service Manifest \u306b\u3001\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u671f\u9593\u3092\u8a2d\u5b9a\u3059\u308b\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 Load Balanced \u3001 Backend \u3001\u304a\u3088\u3073 Worker Service \u3067\u306f\u3001 count \u306e\u4e0b\u306b\u3042\u308b\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u69cb\u6210\u3057\u3066\u3001\u30ab\u30b9\u30bf\u30e0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u671f\u9593\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4ee5\u524d\u306f\u3001 cpu_percentage \u306a\u3069\u306e\u5404\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30e1\u30c8\u30ea\u30c3\u30af\u306f\u3001120 \u79d2\u306e 'in' \u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3068 60 \u79d2\u306e 'out' \u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u304c\u56fa\u5b9a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u4eca\u56de\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u671f\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u4e00\u822c\u7684\u306a\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u306e\u4f7f\u7528 count: range: 1-10 cooldown: in: 30s out: 30s cpu_percentage: 50 \u307e\u305f\u3001\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3092\u500b\u5225\u306b\u8a2d\u5b9a\u3057\u3001\u4e00\u822c\u7684\u306a\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 \u7279\u5b9a\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3092\u4f7f\u7528\u3059\u308b count: range: 1-10 cooldown: in: 2m out: 2m cpu_percentage: 50 requests: value: 10 cooldown: in: 30s out: 30s","title":"\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u306e\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v120/#_4","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f?"},{"location":"ja/blogs/release-v121/","text":"AWS Copilot v1.21: CloudFront \u304c\u767b\u5834! \u6295\u7a3f\u65e5: 2022 \u5e74 8 \u6708 17 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.21 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u3066\u304f\u308c\u305f @dave-moser \u3001 @dclark \u3001 @apopa57 \u306b\u7279\u5225\u306a\u611f\u8b1d\u3092\u6367\u3052\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.4k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.21 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 CloudFront \u3092 Application Load Balancer \u306b\u7d71\u5408 : CloudFront \u3092 Load Balanced Web Service \u306e\u624b\u524d\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a : Environment Manifest \u306b\u3066 Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 ELB \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306e\u30b5\u30dd\u30fc\u30c8 : Load Balanced Web Service \u306b\u5bfe\u3057\u3066\u3001Elastic Load Balancing \u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 job logs \u306e\u6539\u5584 : Job \u306e\u30ed\u30b0\u3092\u305f\u3069\u308a\u3001\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30ed\u30b0\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30c7\u30d7\u30ed\u30a4\u524d\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5316 Addon : Copilot \u306f\u3001 copilot svc deploy \u30b3\u30de\u30f3\u30c9\u3067 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001Copilot \u306f\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f Service \u3068\u4e00\u7dd2\u306b AWS Lambda \u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f! \u5c0e\u5165\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f Copilot\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 CloudFront \u306e\u7d71\u5408 Copilot \u306e Environment Manifest \u3078\u306e\u6700\u521d\u306e\u5927\u304d\u306a\u8ffd\u52a0\u306e 1 \u3064\u3067\u3059! CloudFront \u306f AWS Content Delivery Network (CDN) \u3067\u3001\u4e16\u754c\u4e2d\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u914d\u4fe1\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002Environment Manifest \u306b cdn: true \u3092\u8a2d\u5b9a\u3057\u3066 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd \u516c\u958b\u3055\u308c\u3066\u3044\u308b Application Load Balancer (ALB) \u306e\u624b\u524d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 DDoS \u653b\u6483\u304b\u3089\u4fdd\u8b77\u3059\u308b\u305f\u3081\u306b\u3001ALB \u306e Ingress \u306f CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 \u306b\u5236\u9650 \u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3001\u307e\u305f\u306f Copilot \u3067\u7ba1\u7406\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306b\u3088\u308b HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af CloudFront \u3067\u306e HTTPS \u5bfe\u5fdc Copilot \u306f\u6b21\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u7c21\u5358\u306b\u3057\u307e\u3059! app init \u306b\u3066 --domain \u3092\u6307\u5b9a\u3057\u3066 Application \u3092\u521d\u671f\u5316\u3057\u305f\u5834\u5408\u3001\u5fc5\u8981\u306a\u8a3c\u660e\u66f8\u304c\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u8ffd\u52a0\u306e\u64cd\u4f5c\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 \u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306b\u72ec\u81ea\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u306b\u3064\u3044\u3066\u3001CloudFront \u7528\u306e\u6b63\u3057\u3044\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 Info CloudFront \u3067\u306f\u3001\u8a3c\u660e\u66f8\u306f us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u304c\u8981\u6c42\u3055\u308c\u307e\u3059\u3002\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u969b\u306f\u3001\u3053\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u8a3c\u660e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305a\u3001 AWS Certificate Manager \u3067 us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u306b Application \u7528\u306e\u8a3c\u660e\u66f8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u8a3c\u660e\u66f8\u306b Application \u306b\u95a2\u9023\u3059\u308b\u5404\u30c9\u30e1\u30a4\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8a3c\u660e\u66f8\u3092\u691c\u8a3c\u3057\u305f\u3089\u3001Environment Manifest \u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8ffd\u52a0\u3057\u3066 CloudFront \u7528\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 Route 53 \u306b Copilot \u3067\u4f5c\u6210\u3057\u305f CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u3059 A \u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3066\u3001\u305d\u306e\u30ec\u30b3\u30fc\u30c9\u306e\u4ed5\u5411\u3051\u5148\u306e\u8a2d\u5b9a\u3068\u3057\u3066 Alias \u3092\u9078\u629e\u3057\u3066\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u5148\u306b\u3066 CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3078\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u9078\u629e\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e CloudFront DNS \u3092\u5165\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u3002 CloudFront \u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u5236\u9650 CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u7d4c\u7531\u3059\u308b\u30d1\u30d6\u30ea\u30c3\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u5236\u9650\u3059\u308b\u305f\u3081\u306b\u3001 http \u306b\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u305f\u3081\u306e\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 http : public : security_groups : ingress : restrict_to : cdn : true \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u5909\u66f4\u3057\u3001CloudFront \u304b\u3089\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u307f\u3092\u53d7\u3051\u5165\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a Environment Manifest \u3067\u3001Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Environment Manifest \u306b\u304a\u3051\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u30eb\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 network : vpc : security_group : ingress : - ip_protocol : tcp ports : 80 cidr : 0.0.0.0/0 egress : - ip_protocol : tcp ports : 0-65535 cidr : 0.0.0.0/0 \u5b8c\u5168\u306a\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f\u3001 Environment Manifest \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 ELB \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306e\u30b5\u30dd\u30fc\u30c8 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u9001\u4fe1\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3001Elastic Load Balancing \u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306b Environment Manifest \u306b\u3066 access_logs: true \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001Copilot \u304c S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 name : qa type : Environment http : public : access_logs : true \u30d0\u30b1\u30c3\u30c8\u540d\u306f copilot env show --resources \u30b3\u30de\u30f3\u30c9\u3067\u8868\u793a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001\u72ec\u81ea\u306e\u30d0\u30b1\u30c3\u30c8\u540d\u3068\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002Copilot \u306f\u3053\u308c\u3089\u306e\u30d0\u30b1\u30c3\u30c8\u306e\u8a73\u7d30\u3092\u4f7f\u7528\u3057\u3066\u3001\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 Environment Manifest \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u53ef\u80fd\u3067\u3059\u3002 name : qa type : Environment http : public : access_logs : bucket_name : my-bucket prefix : my-prefix \u72ec\u81ea\u306e\u30d0\u30b1\u30c3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\u305d\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u5b58\u5728\u3057\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u66f8\u304d\u8fbc\u3080\u305f\u3081\u306b\u5fc5\u8981\u306a bucket policy \u3092\u6240\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 job logs \u3064\u3044\u306b\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u306e\u5b9f\u884c\u30ed\u30b0\u3092\u95b2\u89a7\u3001\u8ffd\u8de1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Job \u306e\u5b9f\u884c\u56de\u6570\u3092\u9078\u629e\u3057\u305f\u308a\u3001\u7279\u5b9a\u306e\u30bf\u30b9\u30af ID \u3067\u30ed\u30b0\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u308a\u3001\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30ed\u30b0\u3092\u8868\u793a\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001Job \u306e\u6700\u5f8c\u306e\u8d77\u52d5\u304b\u3089\u306e\u30ed\u30b0\u3068\u3001\u3059\u3079\u3066\u306e\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 $ copilot job logs --include-state-machine Which application does your job belong to? [Use arrows to move, type to filter, ? for more help] > app1 app2 Which job's logs would you like to show? [Use arrows to move, type to filter, ? for more help] > emailer (test) emailer (prod) Application: app1 Job: emailer states/app1-test-emailer {\"id\":\"1\",\"type\":\"ExecutionStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"2\",\"type\":\"TaskStateEntered\",\"details\": ... states/app1-test-emailer {\"id\":\"3\",\"type\":\"TaskScheduled\",\"details\": ... states/app1-test-emailer {\"id\":\"4\",\"type\":\"TaskStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"5\",\"type\":\"TaskSubmitted\",\"details\": ... copilot/emailer/d476069 Gathered recipients copilot/emailer/d476069 Prepared email body copilot/emailer/d476069 Attached headers copilot/emailer/d476069 Sent all emails states/app1-test-emailer {\"id\":\"6\",\"type\":\"TaskSucceeded\",\"details\": ... states/app1-test-emailer {\"id\":\"7\",\"type\":\"TaskStateExited\",\"details\": ... states/app1-test-emailer {\"id\":\"8\",\"type\":\"ExecutionSucceeded\",\"details\": ... \u307e\u305f\u306f\u3001 copilot job run \u3092\u4f7f\u3063\u3066\u8d77\u52d5\u3057\u305f\u30bf\u30b9\u30af\u306e\u30ed\u30b0\u3092\u8ffd\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 $ copilot job run -n emailer && copilot job logs -n emailer --follow \u6b21\u306f? \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.21"},{"location":"ja/blogs/release-v121/#aws-copilot-v121-cloudfront","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 8 \u6708 17 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.21 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u3066\u304f\u308c\u305f @dave-moser \u3001 @dclark \u3001 @apopa57 \u306b\u7279\u5225\u306a\u611f\u8b1d\u3092\u6367\u3052\u307e\u3059\u3002\u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.4k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.21 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 CloudFront \u3092 Application Load Balancer \u306b\u7d71\u5408 : CloudFront \u3092 Load Balanced Web Service \u306e\u624b\u524d\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a : Environment Manifest \u306b\u3066 Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 ELB \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306e\u30b5\u30dd\u30fc\u30c8 : Load Balanced Web Service \u306b\u5bfe\u3057\u3066\u3001Elastic Load Balancing \u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 job logs \u306e\u6539\u5584 : Job \u306e\u30ed\u30b0\u3092\u305f\u3069\u308a\u3001\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30ed\u30b0\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30c7\u30d7\u30ed\u30a4\u524d\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5316 Addon : Copilot \u306f\u3001 copilot svc deploy \u30b3\u30de\u30f3\u30c9\u3067 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001Copilot \u306f\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f Service \u3068\u4e00\u7dd2\u306b AWS Lambda \u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f! \u5c0e\u5165\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f Copilot\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.21: CloudFront \u304c\u767b\u5834!"},{"location":"ja/blogs/release-v121/#cloudfront","text":"Copilot \u306e Environment Manifest \u3078\u306e\u6700\u521d\u306e\u5927\u304d\u306a\u8ffd\u52a0\u306e 1 \u3064\u3067\u3059! CloudFront \u306f AWS Content Delivery Network (CDN) \u3067\u3001\u4e16\u754c\u4e2d\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u914d\u4fe1\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002Environment Manifest \u306b cdn: true \u3092\u8a2d\u5b9a\u3057\u3066 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002","title":"CloudFront \u306e\u7d71\u5408"},{"location":"ja/blogs/release-v121/#_1","text":"\u516c\u958b\u3055\u308c\u3066\u3044\u308b Application Load Balancer (ALB) \u306e\u624b\u524d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 DDoS \u653b\u6483\u304b\u3089\u4fdd\u8b77\u3059\u308b\u305f\u3081\u306b\u3001ALB \u306e Ingress \u306f CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 \u306b\u5236\u9650 \u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3001\u307e\u305f\u306f Copilot \u3067\u7ba1\u7406\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306b\u3088\u308b HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af","title":"\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd"},{"location":"ja/blogs/release-v121/#cloudfront-https","text":"Copilot \u306f\u6b21\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u7c21\u5358\u306b\u3057\u307e\u3059! app init \u306b\u3066 --domain \u3092\u6307\u5b9a\u3057\u3066 Application \u3092\u521d\u671f\u5316\u3057\u305f\u5834\u5408\u3001\u5fc5\u8981\u306a\u8a3c\u660e\u66f8\u304c\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u8ffd\u52a0\u306e\u64cd\u4f5c\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 \u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306b\u72ec\u81ea\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u306b\u3064\u3044\u3066\u3001CloudFront \u7528\u306e\u6b63\u3057\u3044\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 Info CloudFront \u3067\u306f\u3001\u8a3c\u660e\u66f8\u306f us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u304c\u8981\u6c42\u3055\u308c\u307e\u3059\u3002\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u969b\u306f\u3001\u3053\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u8a3c\u660e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305a\u3001 AWS Certificate Manager \u3067 us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u306b Application \u7528\u306e\u8a3c\u660e\u66f8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u8a3c\u660e\u66f8\u306b Application \u306b\u95a2\u9023\u3059\u308b\u5404\u30c9\u30e1\u30a4\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8a3c\u660e\u66f8\u3092\u691c\u8a3c\u3057\u305f\u3089\u3001Environment Manifest \u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8ffd\u52a0\u3057\u3066 CloudFront \u7528\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 Route 53 \u306b Copilot \u3067\u4f5c\u6210\u3057\u305f CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u3059 A \u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3066\u3001\u305d\u306e\u30ec\u30b3\u30fc\u30c9\u306e\u4ed5\u5411\u3051\u5148\u306e\u8a2d\u5b9a\u3068\u3057\u3066 Alias \u3092\u9078\u629e\u3057\u3066\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u5148\u306b\u3066 CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3078\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u9078\u629e\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e CloudFront DNS \u3092\u5165\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u3002","title":"CloudFront \u3067\u306e HTTPS \u5bfe\u5fdc"},{"location":"ja/blogs/release-v121/#cloudfront_1","text":"CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u7d4c\u7531\u3059\u308b\u30d1\u30d6\u30ea\u30c3\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u5236\u9650\u3059\u308b\u305f\u3081\u306b\u3001 http \u306b\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u305f\u3081\u306e\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 http : public : security_groups : ingress : restrict_to : cdn : true \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u5909\u66f4\u3057\u3001CloudFront \u304b\u3089\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u307f\u3092\u53d7\u3051\u5165\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002","title":"CloudFront \u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u5236\u9650"},{"location":"ja/blogs/release-v121/#environment","text":"Environment Manifest \u3067\u3001Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Environment Manifest \u306b\u304a\u3051\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u30eb\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 network : vpc : security_group : ingress : - ip_protocol : tcp ports : 80 cidr : 0.0.0.0/0 egress : - ip_protocol : tcp ports : 0-65535 cidr : 0.0.0.0/0 \u5b8c\u5168\u306a\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f\u3001 Environment Manifest \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a"},{"location":"ja/blogs/release-v121/#elb","text":"\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u9001\u4fe1\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3001Elastic Load Balancing \u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u4ee5\u4e0b\u306e\u3088\u3046\u306b Environment Manifest \u306b\u3066 access_logs: true \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001Copilot \u304c S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 name : qa type : Environment http : public : access_logs : true \u30d0\u30b1\u30c3\u30c8\u540d\u306f copilot env show --resources \u30b3\u30de\u30f3\u30c9\u3067\u8868\u793a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u307e\u305f\u3001\u72ec\u81ea\u306e\u30d0\u30b1\u30c3\u30c8\u540d\u3068\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002Copilot \u306f\u3053\u308c\u3089\u306e\u30d0\u30b1\u30c3\u30c8\u306e\u8a73\u7d30\u3092\u4f7f\u7528\u3057\u3066\u3001\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 Environment Manifest \u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u53ef\u80fd\u3067\u3059\u3002 name : qa type : Environment http : public : access_logs : bucket_name : my-bucket prefix : my-prefix \u72ec\u81ea\u306e\u30d0\u30b1\u30c3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\u305d\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u5b58\u5728\u3057\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u66f8\u304d\u8fbc\u3080\u305f\u3081\u306b\u5fc5\u8981\u306a bucket policy \u3092\u6240\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"ELB \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306e\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v121/#job-logs","text":"\u3064\u3044\u306b\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u306e\u5b9f\u884c\u30ed\u30b0\u3092\u95b2\u89a7\u3001\u8ffd\u8de1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Job \u306e\u5b9f\u884c\u56de\u6570\u3092\u9078\u629e\u3057\u305f\u308a\u3001\u7279\u5b9a\u306e\u30bf\u30b9\u30af ID \u3067\u30ed\u30b0\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u308a\u3001\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30ed\u30b0\u3092\u8868\u793a\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001Job \u306e\u6700\u5f8c\u306e\u8d77\u52d5\u304b\u3089\u306e\u30ed\u30b0\u3068\u3001\u3059\u3079\u3066\u306e\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 $ copilot job logs --include-state-machine Which application does your job belong to? [Use arrows to move, type to filter, ? for more help] > app1 app2 Which job's logs would you like to show? [Use arrows to move, type to filter, ? for more help] > emailer (test) emailer (prod) Application: app1 Job: emailer states/app1-test-emailer {\"id\":\"1\",\"type\":\"ExecutionStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"2\",\"type\":\"TaskStateEntered\",\"details\": ... states/app1-test-emailer {\"id\":\"3\",\"type\":\"TaskScheduled\",\"details\": ... states/app1-test-emailer {\"id\":\"4\",\"type\":\"TaskStarted\",\"details\": ... states/app1-test-emailer {\"id\":\"5\",\"type\":\"TaskSubmitted\",\"details\": ... copilot/emailer/d476069 Gathered recipients copilot/emailer/d476069 Prepared email body copilot/emailer/d476069 Attached headers copilot/emailer/d476069 Sent all emails states/app1-test-emailer {\"id\":\"6\",\"type\":\"TaskSucceeded\",\"details\": ... states/app1-test-emailer {\"id\":\"7\",\"type\":\"TaskStateExited\",\"details\": ... states/app1-test-emailer {\"id\":\"8\",\"type\":\"ExecutionSucceeded\",\"details\": ... \u307e\u305f\u306f\u3001 copilot job run \u3092\u4f7f\u3063\u3066\u8d77\u52d5\u3057\u305f\u30bf\u30b9\u30af\u306e\u30ed\u30b0\u3092\u8ffd\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 $ copilot job run -n emailer && copilot job logs -n emailer --follow","title":"job logs"},{"location":"ja/blogs/release-v121/#_2","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f?"},{"location":"ja/blogs/release-v122/","text":"AWS Copilot v1.22: IAM \u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u306a\u3069\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\uff01 \u6295\u7a3f\u65e5: 2022 \u5e74 9 \u6708 27 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.22 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u3066\u304f\u308c\u305f @jterry75 \u3001 @gabrielcostasilva \u3001 @shingos \u3001 @hkford \u306b\u7279\u5225\u306a\u611f\u8b1d\u3092\u6367\u3052\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.4k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.22 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 IAM \u30ed\u30fc\u30eb\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 . FIFO SNS/SQS : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 . CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3 : CloudFront \u3092\u5229\u7528\u3057\u3066\u3088\u308a\u9ad8\u901f\u306a TLS \u306e\u7d42\u7aef\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f . Application Load Balancer \u3068 Fargate \u30bf\u30b9\u30af\u9593\u306e TLS\u63a5\u7d9a : \u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u304c 443 \u3068\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u3001Copilot \u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30d7\u30ed\u30c8\u30b3\u30eb\u3092 HTTPS \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 Manifest \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 IAM \u30ed\u30fc\u30eb\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc IAM \u30ed\u30fc\u30eb\u306e\u4f5c\u6210\u6642\u306b\u3001\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u3092\u5fc5\u8981\u3068\u3059\u308b AWS Organizations \u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30dd\u30ea\u30b7\u30fc\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3084\u3001\u5358\u306b Application \u306b\u3044\u304f\u3064\u304b\u306e\u30ac\u30fc\u30c9\u30ec\u30fc\u30eb\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306b\u3001Copilot \u304c\u304a\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 --permissions-boundary \u30d5\u30e9\u30b0\u3092\u4f7f\u3044\u3001 copilot app init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u65e2\u5b58\u306e IAM \u30dd\u30ea\u30b7\u30fc\u540d\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u6307\u5b9a\u3057\u305f\u30dd\u30ea\u30b7\u30fc\u306f Copilot \u304c\u4f5c\u6210\u3059\u308b(\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185)\u5168\u3066\u306e IAM \u30ed\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u3068\u3057\u3066\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002 \u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3057\u305f\u3044\u5834\u5408\u3001\u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 copilot app init --permissions-boundary examplePermissionsBoundaryPolicy \u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u4f5c\u6210\u3055\u308c\u308b\u5168\u3066\u306e IAM \u30ed\u30fc\u30eb\u306b\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002 ExampleIAMRole : Type : AWS::IAM::Role Properties : PermissionsBoundary : 'arn:aws:iam::123456789012:policy/examplePermissionsBoundaryPolicy' FIFO SNS/SQS \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306e\u3001\u53b3\u5bc6\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u9806\u5e8f\u3068\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u91cd\u8907\u6392\u9664\u306e\u70ba\u306b\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u3068 SQS FIFO \u30ad\u30e5\u30fc\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 Manifest \u3092\u69cb\u6210\u3057\u3066\u3001Service \u306b\u5bfe\u3057\u3066\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 Service \u306e Manifest \u306e publish.topics \u914d\u4e0b\u306b\u3001\u6b21\u306e\u69d8\u306b fifo: true \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001 Copilot \u306f SNS FIFO \u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f\u3001\u9ad8\u5ea6\u306a SNS FIFO \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3068\u3057\u3066\u3001\u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true FIFO \u30c8\u30d4\u30c3\u30af\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306a\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f\u3001 Manifest \u4ed5\u69d8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Worker Service \u3067\u306eSQS FIFO \u30ad\u30e5\u30fc Worker Service \u306e Manifest \u306b\u304a\u3044\u3066\u3001 subscribe.topics.queue \u307e\u305f\u306f subscribe.queue \u914d\u4e0b\u306b\u3001\u6b21\u306e\u69d8\u306b fifo: true \u3068\u6307\u5b9a\u3057\u307e\u3059\u3002 Copilot \u306f FIFO SQS \u30ad\u30e5\u30fc\u3068\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 subscribe : topics : - name : mytopic service : myservice queue : fifo : true # topics specific SQS FIFO queue queue : fifo : true # Configure the default SQS queue to be FIFO. \u307e\u305f\u306f\u3001\u9ad8\u5ea6\u306a FIFO SQS \u30ad\u30e5\u30fc\u8a2d\u5b9a\u3068\u3057\u3066\u3001\u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 subscribe : topics : - name : mytopic service : myservice queue : fifo : content_based_deduplication : true deduplication_scope : messageGroup throughput_limit : perMessageGroupId queue : fifo : high_throughput : true FIFO \u30ad\u30e5\u30fc\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306a\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f\u3001 Manifest \u4ed5\u69d8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3 Load Balance Web Service (LBWS) \u306b\u3066\u3001CloudFront \u3067 TLS \u3092\u7d42\u7aef\u3059\u308b\u69d8\u306b\u3001Environment Manifest \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 cdn : terminate_tls : true CloudFront \u3092 TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u4e0a\u8a18\u306e\u8a2d\u5b9a\u306f\u3001 CF \u2192 ALB \u2192 ECS \u9593\u3067 HTTP \u306e\u307f\u306b\u306a\u308b\u4e8b\u3092\u610f\u5473\u3057\u307e\u3059\u3002CloudFront \u306e\u30a8\u30c3\u30b8\u306f\u3001\u901a\u5e38\u3001\u95b2\u89a7\u8005\u3068\u5730\u7406\u7684\u306b\u8fd1\u3044\u70ba\u3001\u9ad8\u901f\u306a TLS \u306e\u7d42\u7aef\u304c\u884c\u3048\u3001\u95b2\u89a7\u8005\u306e\u30da\u30fc\u30b8\u8aad\u307f\u8fbc\u307f\u304c\u77ed\u304f\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001 Service \u304c HTTPS \u3092\u6709\u52b9\u5316\u3057\u3066\u3044\u308b\u5834\u5408(Application \u306b\u30c9\u30e1\u30a4\u30f3\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3001Env \u306b\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b)\u3001 Load Balanced Web Service Manifest \u3092\u4fee\u6b63\u3057\u3001 ALB \u306e http \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092 off \u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http : redirect_to_https : false CloudFront TLS\u3000\u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u5316\u3059\u308b\u306b\u306f env deploy \u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001 svc deploy \u3092\u5229\u7528\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u6b21\u306f? \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.22"},{"location":"ja/blogs/release-v122/#aws-copilot-v122-iam","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 9 \u6708 27 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.22 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u3053\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u8ca2\u732e\u3057\u3066\u304f\u308c\u305f @jterry75 \u3001 @gabrielcostasilva \u3001 @shingos \u3001 @hkford \u306b\u7279\u5225\u306a\u611f\u8b1d\u3092\u6367\u3052\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.4k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.22 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 IAM \u30ed\u30fc\u30eb\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 . FIFO SNS/SQS : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 . CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3 : CloudFront \u3092\u5229\u7528\u3057\u3066\u3088\u308a\u9ad8\u901f\u306a TLS \u306e\u7d42\u7aef\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f . Application Load Balancer \u3068 Fargate \u30bf\u30b9\u30af\u9593\u306e TLS\u63a5\u7d9a : \u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u304c 443 \u3068\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u3001Copilot \u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30d7\u30ed\u30c8\u30b3\u30eb\u3092 HTTPS \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 Manifest \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.22: IAM \u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u306a\u3069\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\uff01"},{"location":"ja/blogs/release-v122/#iam","text":"IAM \u30ed\u30fc\u30eb\u306e\u4f5c\u6210\u6642\u306b\u3001\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u3092\u5fc5\u8981\u3068\u3059\u308b AWS Organizations \u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30dd\u30ea\u30b7\u30fc\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3084\u3001\u5358\u306b Application \u306b\u3044\u304f\u3064\u304b\u306e\u30ac\u30fc\u30c9\u30ec\u30fc\u30eb\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306b\u3001Copilot \u304c\u304a\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 --permissions-boundary \u30d5\u30e9\u30b0\u3092\u4f7f\u3044\u3001 copilot app init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u65e2\u5b58\u306e IAM \u30dd\u30ea\u30b7\u30fc\u540d\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u6307\u5b9a\u3057\u305f\u30dd\u30ea\u30b7\u30fc\u306f Copilot \u304c\u4f5c\u6210\u3059\u308b(\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185)\u5168\u3066\u306e IAM \u30ed\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u3068\u3057\u3066\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002 \u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3057\u305f\u3044\u5834\u5408\u3001\u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 copilot app init --permissions-boundary examplePermissionsBoundaryPolicy \u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u4f5c\u6210\u3055\u308c\u308b\u5168\u3066\u306e IAM \u30ed\u30fc\u30eb\u306b\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002 ExampleIAMRole : Type : AWS::IAM::Role Properties : PermissionsBoundary : 'arn:aws:iam::123456789012:policy/examplePermissionsBoundaryPolicy'","title":"IAM \u30ed\u30fc\u30eb\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc"},{"location":"ja/blogs/release-v122/#fifo-snssqs","text":"\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306e\u3001\u53b3\u5bc6\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u9806\u5e8f\u3068\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u91cd\u8907\u6392\u9664\u306e\u70ba\u306b\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u3068 SQS FIFO \u30ad\u30e5\u30fc\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002","title":"FIFO SNS/SQS"},{"location":"ja/blogs/release-v122/#manifest-service-sns-fifo","text":"Service \u306e Manifest \u306e publish.topics \u914d\u4e0b\u306b\u3001\u6b21\u306e\u69d8\u306b fifo: true \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001 Copilot \u306f SNS FIFO \u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f\u3001\u9ad8\u5ea6\u306a SNS FIFO \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3068\u3057\u3066\u3001\u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true FIFO \u30c8\u30d4\u30c3\u30af\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306a\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f\u3001 Manifest \u4ed5\u69d8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Manifest \u3092\u69cb\u6210\u3057\u3066\u3001Service \u306b\u5bfe\u3057\u3066\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002"},{"location":"ja/blogs/release-v122/#worker-service-sqs-fifo","text":"Worker Service \u306e Manifest \u306b\u304a\u3044\u3066\u3001 subscribe.topics.queue \u307e\u305f\u306f subscribe.queue \u914d\u4e0b\u306b\u3001\u6b21\u306e\u69d8\u306b fifo: true \u3068\u6307\u5b9a\u3057\u307e\u3059\u3002 Copilot \u306f FIFO SQS \u30ad\u30e5\u30fc\u3068\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 subscribe : topics : - name : mytopic service : myservice queue : fifo : true # topics specific SQS FIFO queue queue : fifo : true # Configure the default SQS queue to be FIFO. \u307e\u305f\u306f\u3001\u9ad8\u5ea6\u306a FIFO SQS \u30ad\u30e5\u30fc\u8a2d\u5b9a\u3068\u3057\u3066\u3001\u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 subscribe : topics : - name : mytopic service : myservice queue : fifo : content_based_deduplication : true deduplication_scope : messageGroup throughput_limit : perMessageGroupId queue : fifo : high_throughput : true FIFO \u30ad\u30e5\u30fc\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306a\u4ed5\u69d8\u306b\u3064\u3044\u3066\u306f\u3001 Manifest \u4ed5\u69d8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Worker Service \u3067\u306eSQS FIFO \u30ad\u30e5\u30fc"},{"location":"ja/blogs/release-v122/#cloudfront-tls","text":"Load Balance Web Service (LBWS) \u306b\u3066\u3001CloudFront \u3067 TLS \u3092\u7d42\u7aef\u3059\u308b\u69d8\u306b\u3001Environment Manifest \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 cdn : terminate_tls : true CloudFront \u3092 TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u4e0a\u8a18\u306e\u8a2d\u5b9a\u306f\u3001 CF \u2192 ALB \u2192 ECS \u9593\u3067 HTTP \u306e\u307f\u306b\u306a\u308b\u4e8b\u3092\u610f\u5473\u3057\u307e\u3059\u3002CloudFront \u306e\u30a8\u30c3\u30b8\u306f\u3001\u901a\u5e38\u3001\u95b2\u89a7\u8005\u3068\u5730\u7406\u7684\u306b\u8fd1\u3044\u70ba\u3001\u9ad8\u901f\u306a TLS \u306e\u7d42\u7aef\u304c\u884c\u3048\u3001\u95b2\u89a7\u8005\u306e\u30da\u30fc\u30b8\u8aad\u307f\u8fbc\u307f\u304c\u77ed\u304f\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001 Service \u304c HTTPS \u3092\u6709\u52b9\u5316\u3057\u3066\u3044\u308b\u5834\u5408(Application \u306b\u30c9\u30e1\u30a4\u30f3\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3001Env \u306b\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b)\u3001 Load Balanced Web Service Manifest \u3092\u4fee\u6b63\u3057\u3001 ALB \u306e http \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092 off \u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http : redirect_to_https : false CloudFront TLS\u3000\u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u5316\u3059\u308b\u306b\u306f env deploy \u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001 svc deploy \u3092\u5229\u7528\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002","title":"CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3"},{"location":"ja/blogs/release-v122/#_1","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f?"},{"location":"ja/blogs/release-v123/","text":"AWS Copilot v1.23: App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9, Aurora Serverless v2 \u306a\u3069\uff01 \u6295\u7a3f\u65e5: 2022 \u5e74 11 \u6708 1 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.23 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.5k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.23 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9 : App Runner \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u306e\u8d77\u52d5\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002Request-Driven Web Service Manifest \u306b http.private \u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 storage init \u3067 Aurora Serverless v2 \u3092\u30b5\u30dd\u30fc\u30c8 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Environment Manifest \u306b\u304a\u3051\u308b\u8aa4\u3063\u305f http \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u79fb\u52d5\uff08\u5f8c\u65b9\u4e92\u63db\u6027\u3042\u308a\uff01\uff09: \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u30b3\u30f3\u30c6\u30ca\u30a2\u30af\u30bb\u30b9\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306b\u5236\u9650: \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ( #4062 ). ALB \u306e HTTPS \u30ec\u30a4\u30e4\u30fc\u306b\u5bfe\u3059\u308b SSL \u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059: \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ( #4099 ). ALB \u306b\u5bfe\u3059\u308b \u30bd\u30fc\u30b9 IP \u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u5236\u9650 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ( #4103 ). AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9 Copilot \u3092\u4f7f\u3063\u3066 App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u51fa\u6765\u307e\u3059\u3002Request-Driven Web Service \u306e Manifest \u3092\u66f4\u65b0\u3057\u3001 http : private : true \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3060\u3051\u3067\u3059\uff01\u3000\u305d\u306e Service \u306f\u3001Copilot Envrionment \u5185\u306e\u4ed6\u306e Service \u304b\u3089\u306e\u307f\u5230\u9054\u3067\u304d\u307e\u3059\u3002 \u305d\u306e\u821e\u53f0\u88cf\u3067\u306f\u3001Copilot \u304c Envrionment \u5185\u306e\u5168\u3066\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a Service \u3067\u5171\u6709\u3055\u308c\u308b APP Runnner \u306e VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002 \u65e2\u5b58\u306e App Runner VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u5834\u5408\u3001Manifest \u306b\u6b21\u306e\u69d8\u306a\u8a2d\u5b9a\u3092\u3057\u3066\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u51fa\u6765\u307e\u3059\u3002 http : private : endpoint : vpce-12345 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u306e\u307f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u9001\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002 Environment \u5185\u306b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u9001\u308a\u305f\u3044\u5834\u5408\u306f\u3001Manifest \u306b network.vpc.placement: 'private' \u3068\u8a2d\u5b9a\u3057\u307e\u3059\u3002 storage init \u3067 Aurora Serverless v2 \u3092\u30b5\u30dd\u30fc\u30c8 Aurora Serverless v2 \u306f\u4eca\u5e74\u306e\u521d\u3081\u306b\u4e00\u822c\u5229\u7528\u3092\u958b\u59cb \u3057\u3066\u304a\u308a\u3001 \u73fe\u5728\u3001Copilot \u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4ee5\u524d\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001 $ copilot storage init --storage-type Aurora v1 \u30af\u30e9\u30b9\u30bf\u30fc\u7528\u306e Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u73fe\u5728\u306f\u3001 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 v2 \u7528\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 v1 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u3001 copilot storage init --storage-type Aurora --serverless-version v1 \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u3088\u308a\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001 storage init \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\uff01 Environment Manifest \u306b\u304a\u3051\u308b\u8aa4\u3063\u305f http \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u79fb\u52d5\uff08\u5f8c\u65b9\u4e92\u63db\u6027\u3042\u308a\uff01\uff09 Copilot v1.23.0 \u3067\u306f\u3001 Environment Manifest \u306b\u304a\u3051\u308b http \u30d5\u30a3\u30fc\u30eb\u30c9\u4e0b\u306e\u968e\u5c64\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002 \u4f55\u304c\u4fee\u6b63\u3055\u308c\u308b\u306e\u304b\u3001\u305d\u308c\u306f\u4f55\u6545\u306a\u306e\u304b\uff1f Copilot v1.20.0 \u3067\u306f\u3001Environment Manifest \u3092\u30ea\u30ea\u30fc\u30b9\u3057\u3001infrastructure as code \u306e\u5229\u70b9\u3092 Environment \u306b\u3082\u53d6\u308a\u8fbc\u307f\u307e\u3057\u305f\u3002\u5f53\u6642\u306e http \u30d5\u30a3\u30fc\u30eb\u30c9\u968e\u5c64\u306f\u6b21\u306e\u69d8\u306a\u5f62\u3067\u3059\u3002 name : test type : Environment http : public : security_groups : ingress : # [Flaw 1] restrict_to : # [Flaw 2] cdn : true private : security_groups : ingress : # [Flaw 1] from_vpc : true # [Flaw 2] \u3053\u306e\u968e\u5c64\u8a2d\u8a08\u306b\u306f\u30012 \u3064\u306e\u6b20\u70b9\u304c\u3042\u308a\u307e\u3059\u3002 security_groups \u4e0b\u306e ingress \u306f\u66d6\u6627\u3002 \u5404\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u306f\u3001\u5bfe\u5fdc\u3059\u308b ingress \u304c\u3042\u308a\u307e\u3059\u3002\u8907\u6570\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e \"ingress\" \u304c\u4f55\u3092\u610f\u5473\u3059\u308b\u306e\u304b\u4e0d\u660e\u3067\u3059\u3002 \uff08\u3053\u3053\u3067\u306f\u3001 Copilot \u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u9069\u7528\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092 Ingress \u306b\u8a2d\u5b9a\u3059\u308b\u4e8b\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3057\u305f\u3002\uff09 restrict_to \u304c\u5197\u9577\u3002 http.public \u4e0b\u306e ingress \u306f\u5236\u9650\u3055\u308c\u3001 http.private \u4e0b\u306e ingress \u306f\u8a31\u53ef\u3055\u308c\u308b\u3053\u3068\u304c\u660e\u78ba\u306b\u793a\u5506\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 from_vpc \u306e \"from\" \u3082\u540c\u69d8\u306e\u5197\u9577\u6027\u306e\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u3089\u3092\u4fee\u6b63\u3059\u308b\u3053\u3068\u3067\u3001\u6b21\u306e\u69d8\u306a Envrionment Manifest \u306b\u306a\u308a\u307e\u3059\u3002 name : test type : Environment http : public : ingress : cdn : true private : ingress : vpc : true \u79c1\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u3067\u3059\u304b\uff1f \u77ed\u3044\u7b54\u3048: \u73fe\u6642\u70b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 (\u63a8\u5968) \u6b63\u3057\u3044\u968e\u5c64\u306b Manifest \u3092\u4fee\u6b63\u3059\u308b \u65e2\u5b58\u306e Manifest \u306f\u52d5\u4f5c\u3057\u7d9a\u3051\u307e\u3059\u304c(\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u8ff0\u3057\u307e\u3059)\u3001 Manifest \u3092\u4fee\u6b63\u3055\u308c\u305f\u968e\u5c64\u306b\u66f4\u65b0\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u3001\u5f71\u97ff\u3092\u53d7\u3051\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\u65b9\u6cd5\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u3067\u3059\u3002 \u6b63\u3057\u3044\u968e\u5c64\u306b Manifest \u3092\u4fee\u6b63\u3059\u308b \u30d1\u30d6\u30ea\u30c3\u30af ALB \u306b\u5bfe\u3059\u308b CDN \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 ALB \u306b\u5bfe\u3059\u308b VPC ingress # If you have http : public : security_groups : ingress : restrict_to : cdn : true # Then change it to http : public : ingress : cdn : true # If you have http : private : security_groups : ingress : from_vpc : true # Then change it to http : private : ingress : vpc : true \u65e2\u5b58\u306e Manifest \u306f\u52d5\u4f5c\u3057\u7d9a\u3051\u307e\u3059 Envrionment Manifest \u3092\u6b63\u3057\u3044\u968e\u5c64\u306b\u3059\u3050\u306b\u4fee\u6b63\u3057\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002 http.public.security_groups.ingress \uff08\u4e0d\u5099\u306e\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u3068 http.public.ingress \uff08\u4fee\u6b63\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u306e\u4e21\u65b9\u3092\u542b\u3080 Manifest \u306b\u66f4\u65b0\u3057\u306a\u3044\u9650\u308a\u3001\u65e2\u5b58\u306e Manifest \u306f\u52d5\u4f5c\u3057\u7d9a\u3051\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 v1.23.0 \u306e\u30ea\u30ea\u30fc\u30b9\u524d\u306b\u3001Manifest \u304c\u6b21\u306e\u69d8\u306a\u3082\u306e\u3060\u3063\u305f\u3068\u3057\u307e\u3059\u3002 # Flawed hierarchy but will keep working. http : public : security_groups : ingress : restrict_to : cdn : true \u540c\u3058 Manifest \u306f v1.23.0. \u4ee5\u5f8c\u3082\u52d5\u4f5c\u3057\u7d9a\u3051\u308b\u3067\u3057\u3087\u3046\u3002 \u3057\u304b\u3057\u3001\u3042\u308b\u6642\u70b9\u3067\u3001\u6b21\u306e\u69d8\u306b Manifest \u3092\u4fee\u6b63\u3057\u305f\u3068\u3057\u307e\u3059\u3002 # Error! Both flawed hierarchy and corrected hierarchy are present. http : public : security_groups : ingress : restrict_to : cdn : true ingress : source_ips : - 10.0.0.0/24 - 10.0.1.0/24 Copilot \u306f\u3001Manifest \u306b\u3001 http.public.security_groups.ingress \uff08\u4e0d\u5099\u306e\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u3068 http.public.ingress \uff08\u4fee\u6b63\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u306e\u4e21\u65b9\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u691c\u51fa\u3057\u307e\u3059\u3002\u30a8\u30e9\u30fc\u3068\u306a\u308a\u3001\u4fee\u6b63\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e http.public.ingress \u3060\u3051\u304c\u5b58\u5728\u3059\u308b\u69d8\u306b\u3001Manifest \u3092\u66f4\u65b0\u3059\u308b\u69d8\u306a\u63d0\u6848\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 # Same configuration but written in the corrected hierarchy. http : public : ingress : cdn : true source_ips : - 10.0.0.0/24 - 10.0.1.0/24 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.23"},{"location":"ja/blogs/release-v123/#aws-copilot-v123-app-runner-aurora-serverless-v2","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 11 \u6708 1 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.23 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 300 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.5k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.23 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9 : App Runner \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u306e\u8d77\u52d5\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002Request-Driven Web Service Manifest \u306b http.private \u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 storage init \u3067 Aurora Serverless v2 \u3092\u30b5\u30dd\u30fc\u30c8 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Environment Manifest \u306b\u304a\u3051\u308b\u8aa4\u3063\u305f http \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u79fb\u52d5\uff08\u5f8c\u65b9\u4e92\u63db\u6027\u3042\u308a\uff01\uff09: \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u30b3\u30f3\u30c6\u30ca\u30a2\u30af\u30bb\u30b9\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306b\u5236\u9650: \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ( #4062 ). ALB \u306e HTTPS \u30ec\u30a4\u30e4\u30fc\u306b\u5bfe\u3059\u308b SSL \u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059: \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ( #4099 ). ALB \u306b\u5bfe\u3059\u308b \u30bd\u30fc\u30b9 IP \u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u5236\u9650 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ( #4103 ). AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.23: App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9, Aurora Serverless v2 \u306a\u3069\uff01"},{"location":"ja/blogs/release-v123/#app-runner","text":"Copilot \u3092\u4f7f\u3063\u3066 App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u51fa\u6765\u307e\u3059\u3002Request-Driven Web Service \u306e Manifest \u3092\u66f4\u65b0\u3057\u3001 http : private : true \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3060\u3051\u3067\u3059\uff01\u3000\u305d\u306e Service \u306f\u3001Copilot Envrionment \u5185\u306e\u4ed6\u306e Service \u304b\u3089\u306e\u307f\u5230\u9054\u3067\u304d\u307e\u3059\u3002 \u305d\u306e\u821e\u53f0\u88cf\u3067\u306f\u3001Copilot \u304c Envrionment \u5185\u306e\u5168\u3066\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a Service \u3067\u5171\u6709\u3055\u308c\u308b APP Runnner \u306e VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002 \u65e2\u5b58\u306e App Runner VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u5834\u5408\u3001Manifest \u306b\u6b21\u306e\u69d8\u306a\u8a2d\u5b9a\u3092\u3057\u3066\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u51fa\u6765\u307e\u3059\u3002 http : private : endpoint : vpce-12345 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u306e\u307f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u9001\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002 Environment \u5185\u306b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u9001\u308a\u305f\u3044\u5834\u5408\u306f\u3001Manifest \u306b network.vpc.placement: 'private' \u3068\u8a2d\u5b9a\u3057\u307e\u3059\u3002","title":"App Runner \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30fc\u30d3\u30b9"},{"location":"ja/blogs/release-v123/#storage-init-aurora-serverless-v2","text":"Aurora Serverless v2 \u306f\u4eca\u5e74\u306e\u521d\u3081\u306b\u4e00\u822c\u5229\u7528\u3092\u958b\u59cb \u3057\u3066\u304a\u308a\u3001 \u73fe\u5728\u3001Copilot \u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4ee5\u524d\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001 $ copilot storage init --storage-type Aurora v1 \u30af\u30e9\u30b9\u30bf\u30fc\u7528\u306e Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u73fe\u5728\u306f\u3001 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 v2 \u7528\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 v1 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u3001 copilot storage init --storage-type Aurora --serverless-version v1 \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u3088\u308a\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001 storage init \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\uff01","title":"storage init\u3067 Aurora Serverless v2 \u3092\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v123/#environment-manifest-http","text":"Copilot v1.23.0 \u3067\u306f\u3001 Environment Manifest \u306b\u304a\u3051\u308b http \u30d5\u30a3\u30fc\u30eb\u30c9\u4e0b\u306e\u968e\u5c64\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002","title":"Environment Manifest \u306b\u304a\u3051\u308b\u8aa4\u3063\u305f http \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u79fb\u52d5\uff08\u5f8c\u65b9\u4e92\u63db\u6027\u3042\u308a\uff01\uff09"},{"location":"ja/blogs/release-v123/#_1","text":"Copilot v1.20.0 \u3067\u306f\u3001Environment Manifest \u3092\u30ea\u30ea\u30fc\u30b9\u3057\u3001infrastructure as code \u306e\u5229\u70b9\u3092 Environment \u306b\u3082\u53d6\u308a\u8fbc\u307f\u307e\u3057\u305f\u3002\u5f53\u6642\u306e http \u30d5\u30a3\u30fc\u30eb\u30c9\u968e\u5c64\u306f\u6b21\u306e\u69d8\u306a\u5f62\u3067\u3059\u3002 name : test type : Environment http : public : security_groups : ingress : # [Flaw 1] restrict_to : # [Flaw 2] cdn : true private : security_groups : ingress : # [Flaw 1] from_vpc : true # [Flaw 2] \u3053\u306e\u968e\u5c64\u8a2d\u8a08\u306b\u306f\u30012 \u3064\u306e\u6b20\u70b9\u304c\u3042\u308a\u307e\u3059\u3002 security_groups \u4e0b\u306e ingress \u306f\u66d6\u6627\u3002 \u5404\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u306f\u3001\u5bfe\u5fdc\u3059\u308b ingress \u304c\u3042\u308a\u307e\u3059\u3002\u8907\u6570\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e \"ingress\" \u304c\u4f55\u3092\u610f\u5473\u3059\u308b\u306e\u304b\u4e0d\u660e\u3067\u3059\u3002 \uff08\u3053\u3053\u3067\u306f\u3001 Copilot \u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u9069\u7528\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092 Ingress \u306b\u8a2d\u5b9a\u3059\u308b\u4e8b\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3057\u305f\u3002\uff09 restrict_to \u304c\u5197\u9577\u3002 http.public \u4e0b\u306e ingress \u306f\u5236\u9650\u3055\u308c\u3001 http.private \u4e0b\u306e ingress \u306f\u8a31\u53ef\u3055\u308c\u308b\u3053\u3068\u304c\u660e\u78ba\u306b\u793a\u5506\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 from_vpc \u306e \"from\" \u3082\u540c\u69d8\u306e\u5197\u9577\u6027\u306e\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u3089\u3092\u4fee\u6b63\u3059\u308b\u3053\u3068\u3067\u3001\u6b21\u306e\u69d8\u306a Envrionment Manifest \u306b\u306a\u308a\u307e\u3059\u3002 name : test type : Environment http : public : ingress : cdn : true private : ingress : vpc : true","title":"\u4f55\u304c\u4fee\u6b63\u3055\u308c\u308b\u306e\u304b\u3001\u305d\u308c\u306f\u4f55\u6545\u306a\u306e\u304b\uff1f"},{"location":"ja/blogs/release-v123/#_2","text":"\u77ed\u3044\u7b54\u3048: \u73fe\u6642\u70b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"\u79c1\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u3067\u3059\u304b\uff1f"},{"location":"ja/blogs/release-v123/#manifest","text":"\u65e2\u5b58\u306e Manifest \u306f\u52d5\u4f5c\u3057\u7d9a\u3051\u307e\u3059\u304c(\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u8ff0\u3057\u307e\u3059)\u3001 Manifest \u3092\u4fee\u6b63\u3055\u308c\u305f\u968e\u5c64\u306b\u66f4\u65b0\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u3001\u5f71\u97ff\u3092\u53d7\u3051\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u66f4\u65b0\u3059\u308b\u65b9\u6cd5\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u3067\u3059\u3002 \u6b63\u3057\u3044\u968e\u5c64\u306b Manifest \u3092\u4fee\u6b63\u3059\u308b \u30d1\u30d6\u30ea\u30c3\u30af ALB \u306b\u5bfe\u3059\u308b CDN \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 ALB \u306b\u5bfe\u3059\u308b VPC ingress # If you have http : public : security_groups : ingress : restrict_to : cdn : true # Then change it to http : public : ingress : cdn : true # If you have http : private : security_groups : ingress : from_vpc : true # Then change it to http : private : ingress : vpc : true","title":"(\u63a8\u5968) \u6b63\u3057\u3044\u968e\u5c64\u306b Manifest \u3092\u4fee\u6b63\u3059\u308b"},{"location":"ja/blogs/release-v123/#manifest_1","text":"Envrionment Manifest \u3092\u6b63\u3057\u3044\u968e\u5c64\u306b\u3059\u3050\u306b\u4fee\u6b63\u3057\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002 http.public.security_groups.ingress \uff08\u4e0d\u5099\u306e\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u3068 http.public.ingress \uff08\u4fee\u6b63\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u306e\u4e21\u65b9\u3092\u542b\u3080 Manifest \u306b\u66f4\u65b0\u3057\u306a\u3044\u9650\u308a\u3001\u65e2\u5b58\u306e Manifest \u306f\u52d5\u4f5c\u3057\u7d9a\u3051\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 v1.23.0 \u306e\u30ea\u30ea\u30fc\u30b9\u524d\u306b\u3001Manifest \u304c\u6b21\u306e\u69d8\u306a\u3082\u306e\u3060\u3063\u305f\u3068\u3057\u307e\u3059\u3002 # Flawed hierarchy but will keep working. http : public : security_groups : ingress : restrict_to : cdn : true \u540c\u3058 Manifest \u306f v1.23.0. \u4ee5\u5f8c\u3082\u52d5\u4f5c\u3057\u7d9a\u3051\u308b\u3067\u3057\u3087\u3046\u3002 \u3057\u304b\u3057\u3001\u3042\u308b\u6642\u70b9\u3067\u3001\u6b21\u306e\u69d8\u306b Manifest \u3092\u4fee\u6b63\u3057\u305f\u3068\u3057\u307e\u3059\u3002 # Error! Both flawed hierarchy and corrected hierarchy are present. http : public : security_groups : ingress : restrict_to : cdn : true ingress : source_ips : - 10.0.0.0/24 - 10.0.1.0/24 Copilot \u306f\u3001Manifest \u306b\u3001 http.public.security_groups.ingress \uff08\u4e0d\u5099\u306e\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u3068 http.public.ingress \uff08\u4fee\u6b63\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\u306e\u4e21\u65b9\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u691c\u51fa\u3057\u307e\u3059\u3002\u30a8\u30e9\u30fc\u3068\u306a\u308a\u3001\u4fee\u6b63\u3055\u308c\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e http.public.ingress \u3060\u3051\u304c\u5b58\u5728\u3059\u308b\u69d8\u306b\u3001Manifest \u3092\u66f4\u65b0\u3059\u308b\u69d8\u306a\u63d0\u6848\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 # Same configuration but written in the corrected hierarchy. http : public : ingress : cdn : true source_ips : - 10.0.0.0/24 - 10.0.1.0/24","title":"\u65e2\u5b58\u306e Manifest \u306f\u52d5\u4f5c\u3057\u7d9a\u3051\u307e\u3059"},{"location":"ja/blogs/release-v123/#_3","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v124/","text":"AWS Copilot v1.24: ECS Service Connect! \u6295\u7a3f\u65e5: 2022 \u5e74 11 \u6708 28 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.24 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 350 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.5k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.24 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 ECS Service Connect \u306e\u30b5\u30dd\u30fc\u30c8 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 env deploy \u306b --no-rollback \u3092\u8ffd\u52a0 : Copilot env deploy \u30b3\u30de\u30f3\u30c9\u306f\u65b0\u3057\u3044\u30d5\u30e9\u30b0 --no-rollback \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066\u3001\u30c7\u30d0\u30c3\u30ad\u30f3\u30b0\u306e\u70ba\u306b\u3001Envrionment \u306e\u30c7\u30d7\u30ed\u30a4\u306b\u304a\u3051\u308b\u81ea\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7121\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 Request-Driven Web Service \u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u8a2d\u5b9a : Request-Driven Web Service \u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u8a2d\u5b9a\u3092\u6307\u5b9a\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001Service \u306e Manifest \u306b\u304a\u3044\u3066\u3001\u6b21\u306e\u69d8\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 count : high-availability/3 VPC \u30d5\u30ed\u30fc\u30ed\u30b0\u306e\u30ed\u30b0\u4fdd\u6301\u671f\u9593\u306e\u6307\u5b9a : \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f 14 \u65e5\u9593\u3067\u3059\u3002 network : vpc : flow_logs : on \u307e\u305f\u306f\u3001\u4fdd\u6301\u671f\u9593\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 network : vpc : flow_logs : retention : 30 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 ECS Service Connect \u306e\u30b5\u30dd\u30fc\u30c8 Copilot \u306f \u65b0\u3057\u304f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f ECS Service Connect \u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059! \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3088\u308a\u3082 Service Connect \u306e\u65b9\u304c\u3001\u3088\u308a\u5f3e\u529b\u7684\u3067\u3001\u8ca0\u8377\u5206\u6563\u3055\u308c\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002Copilot \u304c\u3069\u306e\u69d8\u306b ECS Service Connect \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc\u3057\u307e\u3057\u3087\u3046\u3002 (\u4efb\u610f\u9805\u76ee) \u30b5\u30f3\u30d7\u30eb Service \u306e\u30c7\u30d7\u30ed\u30a4 \u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u65e2\u5b58\u306e Service \u304c\u7121\u3044\u5834\u5408\u306f\u3001 \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb \u306b\u5f93\u3063\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u30fc\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u7c21\u5358\u306a\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3057\u3087\u3046\u3002 Service Connect \u306e\u8a2d\u5b9a \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306b\u52a0\u3048\u3066\u3001Manifest \u306b\u6b21\u306e\u69d8\u306a\u8a2d\u5b9a\u3059\u308b\u3068\u3001Service Connect \u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 network : connect : true Attention Service Connect \u3092\u4f7f\u3046\u70ba\u306b\u3001 \u30b5\u30fc\u30d0\u304a\u3088\u3073\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 Service \u5171\u306b Service Connect \u3092\u6709\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f5c\u6210\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u78ba\u8a8d \u66f4\u65b0\u3057\u305f Manifest \u3092\u4f7f\u3063\u305f\u30c7\u30d7\u30ed\u30a4\u304c\u6210\u529f\u3057\u305f\u5f8c\u306f\u3001Service Connect \u304c Service \u306b\u5bfe\u3057\u3066\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002Service \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 URL \u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001 copilot svc show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot svc show --name front-end ... Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.demo.local:80 test Service Discovery ... \u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001 front-end:80 \u306f\u4ed6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 Service \u304c\u547c\u3073\u51fa\u3059\u3053\u3068\u306e\u3067\u304d\u308b Service Connect \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002(\u3053\u308c\u3089\u306e Service \u3082\u540c\u69d8\u306b Service Connect \u3092\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002) (\u4efb\u610f\u9805\u76ee) Service Connect \u3092\u691c\u8a3c\u3059\u308b Service Connect \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u304c\u30b5\u30fc\u30d3\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u70ba\u306b\u306f\u3001 copilot svc exec \u3092\u4f7f\u7528\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u306b\u5165\u308a\u3001hosts \u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ copilot svc exec --name front-end Execute `/bin/sh` in container frontend in task a2d57c4b40014a159d3b2e3ec7b73004. Starting session with SessionId: ecs-execute-command-088d464a5721fuej3f # cat /etc/hosts 127.0.0.1 localhost 10.0.1.253 ip-10-0-1-253.us-west-2.compute.internal 127.255.0.1 front-end 2600:f0f0:0:0:0:0:0:1 front-end # exit Exiting session with sessionId: ecs-execute-command-088d464a5721fuej3f. \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.24"},{"location":"ja/blogs/release-v124/#aws-copilot-v124-ecs-service-connect","text":"\u6295\u7a3f\u65e5: 2022 \u5e74 11 \u6708 28 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.24 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 350 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.5k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.24 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 ECS Service Connect \u306e\u30b5\u30dd\u30fc\u30c8 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 env deploy \u306b --no-rollback \u3092\u8ffd\u52a0 : Copilot env deploy \u30b3\u30de\u30f3\u30c9\u306f\u65b0\u3057\u3044\u30d5\u30e9\u30b0 --no-rollback \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066\u3001\u30c7\u30d0\u30c3\u30ad\u30f3\u30b0\u306e\u70ba\u306b\u3001Envrionment \u306e\u30c7\u30d7\u30ed\u30a4\u306b\u304a\u3051\u308b\u81ea\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7121\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 Request-Driven Web Service \u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u8a2d\u5b9a : Request-Driven Web Service \u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u8a2d\u5b9a\u3092\u6307\u5b9a\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001Service \u306e Manifest \u306b\u304a\u3044\u3066\u3001\u6b21\u306e\u69d8\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 count : high-availability/3 VPC \u30d5\u30ed\u30fc\u30ed\u30b0\u306e\u30ed\u30b0\u4fdd\u6301\u671f\u9593\u306e\u6307\u5b9a : \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f 14 \u65e5\u9593\u3067\u3059\u3002 network : vpc : flow_logs : on \u307e\u305f\u306f\u3001\u4fdd\u6301\u671f\u9593\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 network : vpc : flow_logs : retention : 30 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.24: ECS Service Connect!"},{"location":"ja/blogs/release-v124/#ecs-service-connect","text":"Copilot \u306f \u65b0\u3057\u304f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f ECS Service Connect \u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059! \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3088\u308a\u3082 Service Connect \u306e\u65b9\u304c\u3001\u3088\u308a\u5f3e\u529b\u7684\u3067\u3001\u8ca0\u8377\u5206\u6563\u3055\u308c\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002Copilot \u304c\u3069\u306e\u69d8\u306b ECS Service Connect \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc\u3057\u307e\u3057\u3087\u3046\u3002","title":"ECS Service Connect \u306e\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v124/#service","text":"\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u65e2\u5b58\u306e Service \u304c\u7121\u3044\u5834\u5408\u306f\u3001 \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb \u306b\u5f93\u3063\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u30fc\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u7c21\u5358\u306a\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3057\u3087\u3046\u3002","title":"(\u4efb\u610f\u9805\u76ee) \u30b5\u30f3\u30d7\u30eb Service \u306e\u30c7\u30d7\u30ed\u30a4"},{"location":"ja/blogs/release-v124/#service-connect","text":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306b\u52a0\u3048\u3066\u3001Manifest \u306b\u6b21\u306e\u69d8\u306a\u8a2d\u5b9a\u3059\u308b\u3068\u3001Service Connect \u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 network : connect : true Attention Service Connect \u3092\u4f7f\u3046\u70ba\u306b\u3001 \u30b5\u30fc\u30d0\u304a\u3088\u3073\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 Service \u5171\u306b Service Connect \u3092\u6709\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"Service Connect \u306e\u8a2d\u5b9a"},{"location":"ja/blogs/release-v124/#_1","text":"\u66f4\u65b0\u3057\u305f Manifest \u3092\u4f7f\u3063\u305f\u30c7\u30d7\u30ed\u30a4\u304c\u6210\u529f\u3057\u305f\u5f8c\u306f\u3001Service Connect \u304c Service \u306b\u5bfe\u3057\u3066\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002Service \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 URL \u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001 copilot svc show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot svc show --name front-end ... Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.demo.local:80 test Service Discovery ... \u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001 front-end:80 \u306f\u4ed6\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 Service \u304c\u547c\u3073\u51fa\u3059\u3053\u3068\u306e\u3067\u304d\u308b Service Connect \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002(\u3053\u308c\u3089\u306e Service \u3082\u540c\u69d8\u306b Service Connect \u3092\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002)","title":"\u4f5c\u6210\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u78ba\u8a8d"},{"location":"ja/blogs/release-v124/#service-connect_1","text":"Service Connect \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u304c\u30b5\u30fc\u30d3\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u70ba\u306b\u306f\u3001 copilot svc exec \u3092\u4f7f\u7528\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u306b\u5165\u308a\u3001hosts \u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ copilot svc exec --name front-end Execute `/bin/sh` in container frontend in task a2d57c4b40014a159d3b2e3ec7b73004. Starting session with SessionId: ecs-execute-command-088d464a5721fuej3f # cat /etc/hosts 127.0.0.1 localhost 10.0.1.253 ip-10-0-1-253.us-west-2.compute.internal 127.255.0.1 front-end 2600:f0f0:0:0:0:0:0:1 front-end # exit Exiting session with sessionId: ecs-execute-command-088d464a5721fuej3f.","title":"(\u4efb\u610f\u9805\u76ee) Service Connect \u3092\u691c\u8a3c\u3059\u308b"},{"location":"ja/blogs/release-v124/#_2","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v125/","text":"AWS Copilot v1.25: Environment Addon \u3068\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1 \u6295\u7a3f\u65e5: 2023 \u5e74 1 \u6708 17 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.25 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 400 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.6k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.25 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Environment Addon : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 . CloudFront \u306b\u3088\u308b\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 . AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Environment Addon Environment \u306b\u95a2\u3059\u308b Addon \u3092\u914d\u7f6e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Addon \u3068\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Copilot \u306b\u7d71\u5408\u3055\u308c\u3066\u3044\u306a\u3044\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9 - \u4f8b\u3048\u3070\u3001DynamoDB\u3001RDS \u306a\u3069\u3067\u3042\u308a\u3001Environment Addon \u306f\u3001Environment \u30ec\u30d9\u30eb\u3067\u7ba1\u7406\u3055\u308c\u308b\u8ffd\u52a0\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002Environment Addon \u3092\u4f5c\u6210\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u305f\u3081\u306b\u306f copilot env deploy \u3092\u5b9f\u884c\u3057\u3001Environment \u306b\u5bfe\u3057\u3066 copilot env delete \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f\u305d\u306e Addon \u3082\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002 \u3059\u3067\u306b Workload Addon \u306b\u6163\u308c\u3066\u3044\u308b\u65b9\u306b\u306f\u6717\u5831\u3067\u3001Environment Addon \u306e\u7ba1\u7406\u306f\u3001\u307b\u3068\u3093\u3069\u540c\u3058\u3088\u3046\u306a\u611f\u899a\u3067\u884c\u3048\u307e\u3059\u3002 \u306f\u3058\u3081\u306b Step 1: CloudFormation \u3067\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b \u73fe\u5728\u3001Addon \u306f CloudFormation \u3092\u4f7f\u3063\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u5b9a\u7fa9\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002Environment Addon \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u304c\u5fc5\u9808\u3067\u3059\u3002 Parameters \u306b App \u3068 Env \u3092\u6301\u305f\u305b\u308b\u3002 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e Resource \u3092\u542b\u307e\u305b\u308b\u3002 \u30b5\u30f3\u30d7\u30eb CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u3053\u3053\u3067\u306f\u3001\u5b9f\u969b\u306b\u304a\u8a66\u3057\u9802\u3051\u308b CloudFormation \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4f8b\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002 AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The name of the environment being deployed. Resources : MyTable : Type : 'AWS::DynamoDB::Table' Properties : TableName : MyEnvAddonsGettingStartedTable AttributeDefinitions : - AttributeName : key AttributeType : S KeySchema : - AttributeName : key KeyType : HASH ProvisionedThroughput : ReadCapacityUnits : 5 WriteCapacityUnits : 2 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName Step 2: CFN \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 copilot/environments/addons \u306b\u683c\u7d0d copilot env init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b copilot/environments \u30d5\u30a9\u30eb\u30c0\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u3082\u3057\u5b9f\u884c\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u5f8c\u307b\u3069\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u76f4\u3061\u306b\u5b9f\u884c\u3057\u3066\u304a\u304d\u307e\u3059\u3002 \u5b9f\u884c\u5f8c\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u308a\u307e\u3059\u3002 copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u251c\u2500\u2500 appmesh.yml \u2502 \u2502 \u2514\u2500\u2500 ddb.yml # <- \u8907\u6570\u306e Addon \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059 \u2502 \u251c\u2500\u2500 test/ \u2502 \u2502 \u2514\u2500\u2500\u2500 manifest.yml \u2502 \u2514\u2500\u2500 dev/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 web \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 s3.yml # <- \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059 \u2514\u2500\u2500\u2500 manifest.yml Step 3: copilot env deploy \u306e\u5b9f\u884c copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f addons \u30d5\u30a9\u30eb\u30c0\u3092\u30b9\u30ad\u30e3\u30f3\u3057\u3066 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63a2\u3057\u307e\u3059\u3002\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u3001Environment \u3068\u4e00\u7dd2\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3082\u914d\u5099\u3055\u308c\u307e\u3059\u3002 (\u30aa\u30d7\u30b7\u30e7\u30f3) Step 4: \u30c7\u30d7\u30ed\u30a4\u306e\u78ba\u8a8d \u30c7\u30d7\u30ed\u30a4\u306e\u78ba\u8a8d\u306f\u3001\u5229\u7528\u3057\u3066\u3044\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u306e AWS CloudFormation \u30b3\u30f3\u30bd\u30fc\u30eb \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3067\u884c\u3048\u307e\u3059\u3002 [app]-[env]-AddonsStack-[random string] \u3068\u3044\u3046\u30b9\u30bf\u30c3\u30af\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u3053\u308c\u306f\u3001 [app]-[env] \u3068\u3044\u3046\u540d\u524d\u306e Environment \u30b9\u30bf\u30c3\u30af\u306e\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u305f\u3001\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30b9\u30bf\u30c3\u30af\u3067\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3068\u306e\u6a5f\u80fd\u6bd4\u8f03 Environment Addon \u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3067\u5229\u7528\u53ef\u80fd\u306a\u3059\u3079\u3066\u306e\u65e2\u5b58\u6a5f\u80fd\u3092\u542b\u3081\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u6b21\u306e\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u5fc5\u9808\u306e App \u3084 Env \u306b\u52a0\u3048\u3066\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3055\u308c\u305f Parameter \u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u304a\u3044\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u30d1\u30b9\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u3053\u308c\u3089\u306e\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001\u95a2\u9023\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f S3 \u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7f6e\u63db\u3057\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f \u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u305d\u306e\u4ed6\u306e\u8003\u616e\u4e8b\u9805 \u3059\u3079\u3066\u306e Environment (\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\"test\" \u3068 \"dev\" \u306e\u4e21\u65b9) \u306f\u3001\u540c\u3058 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5171\u6709\u3057\u307e\u3059\u3002\u4eca\u65e5\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e Addon \u3068\u540c\u69d8\u306b\u3001Environment \u56fa\u6709\u306e\u8a2d\u5b9a\u306f\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e Conditions \u304a\u3088\u3073 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001 CFN \u306b\u304a\u3051\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u518d\u5229\u7528\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5247\u3063\u305f\u3082\u306e\u3067\u3059\u3002 AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application name. Env : Type : String Description : The name of the environment being deployed. Conditions : IsTestEnv : !Equals [ !Ref Env , \"test\" ] # <- \"test\" \u56fa\u6709\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u306b\u306f\u3001`Conditions` \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059 Mappings : ScalingConfigurationMapByEnv : test : \"DBMinCapacity\" : 0.5 prod : \"DBMinCapacity\" : 1 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068\u306e\u7d71\u5408 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3001Environment Addon \u304b\u3089\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u304a\u3051\u308b Environment Addon \u306e\u5024\u306e\u53c2\u7167 Step 1: Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 Environment Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3001 Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ea\u30bd\u30fc\u30b9\u306b\u53c2\u7167\u3055\u305b\u305f\u3044 Output \u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002CloudFormation \u306e Outputs \u69cb\u6587\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4f8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName Export.Name \u306b\u306f\u597d\u304d\u306a\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001AWS \u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u3067\u30e6\u30cb\u30fc\u30af\u306a\u540d\u524d\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u540d\u524d\u306e\u885d\u7a81\u306e\u53ef\u80fd\u6027\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001 ${App} \u3068 ${Env} \u3067\u540d\u524d\u7a7a\u9593\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u540d\u524d\u7a7a\u9593\u3067\u306f\u3001\u4f8b\u3048\u3070\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u304c \"my-app\" \u3067\u3001Environment test \u3067 Addon \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3068\u3059\u308b\u3068\u3001\u6700\u7d42\u7684\u306a\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u306f my-app-test-MyTableName \u3068\u306a\u308a\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u305f\u5f8c\u3001 copilot env deploy \u3092\u5b9f\u884c\u3057\u3066\u5909\u66f4\u3092\u53cd\u6620\u3055\u305b\u307e\u3059\u3002 Step 2: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u304b\u3089\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u3066\u3001 Fn::ImportValue \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066 Environment Addon \u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u4f8b\u306e\u7d9a\u304d\u3067\u3001 db-front Service \u304c MyTable \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002 db-front Service \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e IAM \u30dd\u30ea\u30b7\u30fc\u3092\u6301\u3064\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: \u5b9f\u969b\u306e Application \u3067\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u30b9\u30b3\u30fc\u30d7\u30c0\u30a6\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u672c\u30d6\u30ed\u30b0\u306e\u8a18\u4e8b\u304c\u9577\u304f\u306a\u308a\u3059\u304e\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3067\u3059\u3002 Resource : Fn::ImportValue : # <- Environment Addon \u304b\u3089\u30c6\u30fc\u30d6\u30eb ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8 !Sub ${App}-${Env}-MyTableARN # <- \u4f7f\u7528\u3057\u305f\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d \u5225\u306e\u4f8b\u3068\u3057\u3066\u3001 Export.Name \u306b\u540d\u524d\u7a7a\u9593\u3092\u4ed8\u3051\u305a\u3001\u4ee3\u308f\u308a\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u540d\u524d\u3092\u4ed8\u3051\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u3068\u3057\u307e\u3059\u3002 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub MyTableARN \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5024\u306b\u3057\u307e\u3059\u3002 Fn::ImportValue : !Sub MyTableARN \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u3068 Environment Addon \u306f\u3001\u3053\u306e\u3088\u3046\u306b\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306b\u304a\u3051\u308b Environment Addon \u306e\u5024\u306e\u53c2\u7167 Environment Addon \u304b\u3089\u4f55\u3089\u304b\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b - \u4f8b\u3048\u3070\u3001Environment Addon \u3067\u4f5c\u6210\u3057\u305f Secret \u3092 Service \u306b\u8ffd\u52a0\u3059\u308b - \u5834\u5408\u3001 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306e from_cfn \u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Step 1: Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3067\u4f5c\u696d\u3059\u308b\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306b\u3001Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Outputs : MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName Step 2: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3067 from_cfn \u3092\u4f7f\u7528\u3057\u3066\u5024\u3092\u53c2\u7167 db-front Service \u3067\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6ce8\u5165\u3057\u305f\u3044\u5834\u5408\u3001 db-front Service \u306f\u6b21\u306e\u3088\u3046\u306a Manifest \u3092\u6301\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 name : db-front type : Backend Service // \u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u5024... variables : MY_TABLE_NAME : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyTableName \u540c\u69d8\u306b\u3001\u540d\u524d\u7a7a\u9593\u3092\u9664\u3044\u305f\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 Outputs : MyTableName : Value : !Ref MyTable Export : Name : MyTableName \u305d\u306e\u5834\u5408\u3001Manifest \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5024\u306b\u3057\u307e\u3059\u3002 variables : MY_TABLE_NAME : from_cfn : MyTableName \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306b\u304a\u3051\u308b CloudFormation \u30b9\u30bf\u30c3\u30af\u304b\u3089\u306e\u5024\u306e\u30a4\u30f3\u30dd\u30fc\u30c8 from_cfn \u3092\u4f7f\u7528\u3057\u3066\u3001Environment Addon \u306e CloudFormation \u30b9\u30bf\u30c3\u30af\u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306e\u4ed6\u306e\u30b9\u30bf\u30c3\u30af\u304b\u3089\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4ed6\u306e CloudFormation \u30b9\u30bf\u30c3\u30af\u304b\u3089\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u6700\u521d\u306b\u30bd\u30fc\u30b9\u30b9\u30bf\u30c3\u30af\u304b\u3089\u51fa\u529b\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u3001\u4ed6\u306e\u30b9\u30bf\u30c3\u30af\u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u308a\u3001\u76f8\u4e92\u30b9\u30bf\u30c3\u30af\u53c2\u7167\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u304c\u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u306e\u4e00\u4f8b\u3067\u3059\u3002 Outputs : WebBucketURL : Description : URL for the website bucket Value : !GetAtt WebBucket.WebsiteURL Export : Name : stack-WebsiteUrl # <- \u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u3067\u4e00\u610f\u306a\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d \u8a73\u3057\u304f\u306f \u3053\u3061\u3089\u306e\u30da\u30fc\u30b8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u4eca\u306e\u3068\u3053\u308d\u3001 from_cfn \u306f\u4ee5\u4e0b\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306e\u307f\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 variables : LOG_LEVEL : info WebsiteUrl : from_cfn : stack-WebsiteUrl secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName logging : secretOptions : GIT_USERNAME : from_cfn : stack-SSMGHUserName sidecars : secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName network : vpc : security_groups : - sg-1234 - from_cfn : UserDBAccessSecurityGroup CloudFront \u306b\u3088\u308b\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1 \u72ec\u81ea\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092\u5229\u7528\u3057\u3066 CloudFront \u3068\u9023\u643a\u3057\u3001\u3088\u308a\u9ad8\u901f\u306a\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1\u3092\u5b9f\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30d0\u30b1\u30c3\u30c8\u7ba1\u7406\u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30b5\u30dd\u30fc\u30c8 (\u30d0\u30b1\u30c3\u30c8\u4f5c\u6210\u3001\u30a2\u30bb\u30c3\u30c8\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306a\u3069) \u306f\u3001\u4eca\u5f8c\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u3088\u308a\u5145\u5b9f\u3055\u305b\u308b\u4e88\u5b9a\u3067\u3059\u3002 (\u30aa\u30d7\u30b7\u30e7\u30f3) S3 \u30d0\u30b1\u30c3\u30c8\u306e\u4f5c\u6210 \u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u304c\u306a\u3044\u5834\u5408\u3001S3 \u30b3\u30f3\u30bd\u30fc\u30eb\u3084 AWS CLI/SDK \u3092\u4f7f\u7528\u3057\u3066 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u89b3\u70b9\u304b\u3089\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u63a8\u5968\u3057\u307e\u3059\u3002 env Manifest \u3067\u306e CloudFront \u306e\u8a2d\u5b9a \u4ee5\u4e0b\u306e\u3088\u3046\u306b Environment Manifest \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30aa\u30ea\u30b8\u30f3\u3068\u3057\u305f CloudFront \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* \u5177\u4f53\u7684\u306b\u306f\u3001 location \u306f S3 \u30d0\u30b1\u30c3\u30c8\u306e DNS \u30c9\u30e1\u30a4\u30f3\u540d \u3067\u3001\u9759\u7684\u30a2\u30bb\u30c3\u30c8\u306f example.com/static/* \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 (\u30aa\u30d7\u30b7\u30e7\u30f3) \u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u306e\u66f4\u65b0 CloudFront \u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d0\u30b1\u30c3\u30c8\u304c \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 \u306e\u5834\u5408\u3001CloudFront \u306b\u8aad\u307f\u53d6\u308a\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3092\u7528\u3044\u308b\u5834\u5408\u3001 cf-s3-ecs-demo-bucket \u306e\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u66f4\u65b0\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::cf-s3-ecs-demo-bucket/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } } CloudFront \u306e\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 ID \u306f\u3001 copilot env show --resources \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.25"},{"location":"ja/blogs/release-v125/#aws-copilot-v125-environment-addon","text":"\u6295\u7a3f\u65e5: 2023 \u5e74 1 \u6708 17 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.25 \u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 400 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.6k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.25 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Environment Addon : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 . CloudFront \u306b\u3088\u308b\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1 : \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 . AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.25: Environment Addon \u3068\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1"},{"location":"ja/blogs/release-v125/#environment-addon","text":"Environment \u306b\u95a2\u3059\u308b Addon \u3092\u914d\u7f6e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Addon \u3068\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Copilot \u306b\u7d71\u5408\u3055\u308c\u3066\u3044\u306a\u3044\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9 - \u4f8b\u3048\u3070\u3001DynamoDB\u3001RDS \u306a\u3069\u3067\u3042\u308a\u3001Environment Addon \u306f\u3001Environment \u30ec\u30d9\u30eb\u3067\u7ba1\u7406\u3055\u308c\u308b\u8ffd\u52a0\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3059\u3002Environment Addon \u3092\u4f5c\u6210\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u305f\u3081\u306b\u306f copilot env deploy \u3092\u5b9f\u884c\u3057\u3001Environment \u306b\u5bfe\u3057\u3066 copilot env delete \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f\u305d\u306e Addon \u3082\u524a\u9664\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002 \u3059\u3067\u306b Workload Addon \u306b\u6163\u308c\u3066\u3044\u308b\u65b9\u306b\u306f\u6717\u5831\u3067\u3001Environment Addon \u306e\u7ba1\u7406\u306f\u3001\u307b\u3068\u3093\u3069\u540c\u3058\u3088\u3046\u306a\u611f\u899a\u3067\u884c\u3048\u307e\u3059\u3002","title":"Environment Addon"},{"location":"ja/blogs/release-v125/#_1","text":"","title":"\u306f\u3058\u3081\u306b"},{"location":"ja/blogs/release-v125/#step-1-cloudformation-aws","text":"\u73fe\u5728\u3001Addon \u306f CloudFormation \u3092\u4f7f\u3063\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u5b9a\u7fa9\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002Environment Addon \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u304c\u5fc5\u9808\u3067\u3059\u3002 Parameters \u306b App \u3068 Env \u3092\u6301\u305f\u305b\u308b\u3002 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e Resource \u3092\u542b\u307e\u305b\u308b\u3002 \u30b5\u30f3\u30d7\u30eb CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u3053\u3053\u3067\u306f\u3001\u5b9f\u969b\u306b\u304a\u8a66\u3057\u9802\u3051\u308b CloudFormation \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4f8b\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002 AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The name of the environment being deployed. Resources : MyTable : Type : 'AWS::DynamoDB::Table' Properties : TableName : MyEnvAddonsGettingStartedTable AttributeDefinitions : - AttributeName : key AttributeType : S KeySchema : - AttributeName : key KeyType : HASH ProvisionedThroughput : ReadCapacityUnits : 5 WriteCapacityUnits : 2 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName","title":"Step 1: CloudFormation \u3067\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u30e2\u30c7\u30eb\u5316\u3059\u308b"},{"location":"ja/blogs/release-v125/#step-2-cfn-copilotenvironmentsaddons","text":"copilot env init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b copilot/environments \u30d5\u30a9\u30eb\u30c0\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u3082\u3057\u5b9f\u884c\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u5f8c\u307b\u3069\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u76f4\u3061\u306b\u5b9f\u884c\u3057\u3066\u304a\u304d\u307e\u3059\u3002 \u5b9f\u884c\u5f8c\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u308a\u307e\u3059\u3002 copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u251c\u2500\u2500 appmesh.yml \u2502 \u2502 \u2514\u2500\u2500 ddb.yml # <- \u8907\u6570\u306e Addon \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059 \u2502 \u251c\u2500\u2500 test/ \u2502 \u2502 \u2514\u2500\u2500\u2500 manifest.yml \u2502 \u2514\u2500\u2500 dev/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 web \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 s3.yml # <- \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059 \u2514\u2500\u2500\u2500 manifest.yml","title":"Step 2: CFN \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 copilot/environments/addons \u306b\u683c\u7d0d"},{"location":"ja/blogs/release-v125/#step-3-copilot-env-deploy","text":"copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f addons \u30d5\u30a9\u30eb\u30c0\u3092\u30b9\u30ad\u30e3\u30f3\u3057\u3066 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63a2\u3057\u307e\u3059\u3002\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u3001Environment \u3068\u4e00\u7dd2\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3082\u914d\u5099\u3055\u308c\u307e\u3059\u3002","title":"Step 3: copilot env deploy \u306e\u5b9f\u884c"},{"location":"ja/blogs/release-v125/#step-4","text":"\u30c7\u30d7\u30ed\u30a4\u306e\u78ba\u8a8d\u306f\u3001\u5229\u7528\u3057\u3066\u3044\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u306e AWS CloudFormation \u30b3\u30f3\u30bd\u30fc\u30eb \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3067\u884c\u3048\u307e\u3059\u3002 [app]-[env]-AddonsStack-[random string] \u3068\u3044\u3046\u30b9\u30bf\u30c3\u30af\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u3053\u308c\u306f\u3001 [app]-[env] \u3068\u3044\u3046\u540d\u524d\u306e Environment \u30b9\u30bf\u30c3\u30af\u306e\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u305f\u3001\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30b9\u30bf\u30c3\u30af\u3067\u3059\u3002","title":"(\u30aa\u30d7\u30b7\u30e7\u30f3) Step 4: \u30c7\u30d7\u30ed\u30a4\u306e\u78ba\u8a8d"},{"location":"ja/blogs/release-v125/#addon","text":"Environment Addon \u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3067\u5229\u7528\u53ef\u80fd\u306a\u3059\u3079\u3066\u306e\u65e2\u5b58\u6a5f\u80fd\u3092\u542b\u3081\u3066\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u6b21\u306e\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u5fc5\u9808\u306e App \u3084 Env \u306b\u52a0\u3048\u3066\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3055\u308c\u305f Parameter \u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u304a\u3044\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u30d1\u30b9\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u3053\u308c\u3089\u306e\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001\u95a2\u9023\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f S3 \u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7f6e\u63db\u3057\u307e\u3059\u3002 \u8a73\u3057\u304f\u306f \u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3068\u306e\u6a5f\u80fd\u6bd4\u8f03"},{"location":"ja/blogs/release-v125/#_2","text":"\u3059\u3079\u3066\u306e Environment (\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\"test\" \u3068 \"dev\" \u306e\u4e21\u65b9) \u306f\u3001\u540c\u3058 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5171\u6709\u3057\u307e\u3059\u3002\u4eca\u65e5\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e Addon \u3068\u540c\u69d8\u306b\u3001Environment \u56fa\u6709\u306e\u8a2d\u5b9a\u306f\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e Conditions \u304a\u3088\u3073 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001 CFN \u306b\u304a\u3051\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u518d\u5229\u7528\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5247\u3063\u305f\u3082\u306e\u3067\u3059\u3002 AWSTemplateFormatVersion : 2010-09-09 Parameters : App : Type : String Description : Your application name. Env : Type : String Description : The name of the environment being deployed. Conditions : IsTestEnv : !Equals [ !Ref Env , \"test\" ] # <- \"test\" \u56fa\u6709\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u306b\u306f\u3001`Conditions` \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059 Mappings : ScalingConfigurationMapByEnv : test : \"DBMinCapacity\" : 0.5 prod : \"DBMinCapacity\" : 1","title":"\u305d\u306e\u4ed6\u306e\u8003\u616e\u4e8b\u9805"},{"location":"ja/blogs/release-v125/#_3","text":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3001Environment Addon \u304b\u3089\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068\u306e\u7d71\u5408"},{"location":"ja/blogs/release-v125/#addon-environment-addon","text":"","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u304a\u3051\u308b Environment Addon \u306e\u5024\u306e\u53c2\u7167"},{"location":"ja/blogs/release-v125/#step-1-environment-addon","text":"Environment Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3001 Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ea\u30bd\u30fc\u30b9\u306b\u53c2\u7167\u3055\u305b\u305f\u3044 Output \u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002CloudFormation \u306e Outputs \u69cb\u6587\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4f8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName Export.Name \u306b\u306f\u597d\u304d\u306a\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001AWS \u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u3067\u30e6\u30cb\u30fc\u30af\u306a\u540d\u524d\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u540d\u524d\u306e\u885d\u7a81\u306e\u53ef\u80fd\u6027\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001 ${App} \u3068 ${Env} \u3067\u540d\u524d\u7a7a\u9593\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u540d\u524d\u7a7a\u9593\u3067\u306f\u3001\u4f8b\u3048\u3070\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u304c \"my-app\" \u3067\u3001Environment test \u3067 Addon \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3068\u3059\u308b\u3068\u3001\u6700\u7d42\u7684\u306a\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u306f my-app-test-MyTableName \u3068\u306a\u308a\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u305f\u5f8c\u3001 copilot env deploy \u3092\u5b9f\u884c\u3057\u3066\u5909\u66f4\u3092\u53cd\u6620\u3055\u305b\u307e\u3059\u3002","title":"Step 1: Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v125/#step-2-addon","text":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u3066\u3001 Fn::ImportValue \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066 Environment Addon \u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u4f8b\u306e\u7d9a\u304d\u3067\u3001 db-front Service \u304c MyTable \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002 db-front Service \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e IAM \u30dd\u30ea\u30b7\u30fc\u3092\u6301\u3064\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : The name of the service, job, or workflow being deployed. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: \u5b9f\u969b\u306e Application \u3067\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u30b9\u30b3\u30fc\u30d7\u30c0\u30a6\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u3082\u672c\u30d6\u30ed\u30b0\u306e\u8a18\u4e8b\u304c\u9577\u304f\u306a\u308a\u3059\u304e\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3067\u3059\u3002 Resource : Fn::ImportValue : # <- Environment Addon \u304b\u3089\u30c6\u30fc\u30d6\u30eb ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8 !Sub ${App}-${Env}-MyTableARN # <- \u4f7f\u7528\u3057\u305f\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d \u5225\u306e\u4f8b\u3068\u3057\u3066\u3001 Export.Name \u306b\u540d\u524d\u7a7a\u9593\u3092\u4ed8\u3051\u305a\u3001\u4ee3\u308f\u308a\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u540d\u524d\u3092\u4ed8\u3051\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u3068\u3057\u307e\u3059\u3002 Outputs : MyTableARN : Value : !GetAtt MyTable.Arn Export : Name : !Sub MyTableARN \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5024\u306b\u3057\u307e\u3059\u3002 Fn::ImportValue : !Sub MyTableARN \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u3068 Environment Addon \u306f\u3001\u3053\u306e\u3088\u3046\u306b\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002","title":"Step 2: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u304b\u3089\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v125/#manifest-environment-addon","text":"Environment Addon \u304b\u3089\u4f55\u3089\u304b\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b - \u4f8b\u3048\u3070\u3001Environment Addon \u3067\u4f5c\u6210\u3057\u305f Secret \u3092 Service \u306b\u8ffd\u52a0\u3059\u308b - \u5834\u5408\u3001 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306e from_cfn \u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306b\u304a\u3051\u308b Environment Addon \u306e\u5024\u306e\u53c2\u7167"},{"location":"ja/blogs/release-v125/#step-1-environment-addon_1","text":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3067\u4f5c\u696d\u3059\u308b\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306b\u3001Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Outputs : MyTableName : Value : !Ref MyTable Export : Name : !Sub ${App}-${Env}-MyTableName","title":"Step 1: Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v125/#step-2-manifest-from_cfn","text":"db-front Service \u3067\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6ce8\u5165\u3057\u305f\u3044\u5834\u5408\u3001 db-front Service \u306f\u6b21\u306e\u3088\u3046\u306a Manifest \u3092\u6301\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 name : db-front type : Backend Service // \u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u5024... variables : MY_TABLE_NAME : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyTableName \u540c\u69d8\u306b\u3001\u540d\u524d\u7a7a\u9593\u3092\u9664\u3044\u305f\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 Outputs : MyTableName : Value : !Ref MyTable Export : Name : MyTableName \u305d\u306e\u5834\u5408\u3001Manifest \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5024\u306b\u3057\u307e\u3059\u3002 variables : MY_TABLE_NAME : from_cfn : MyTableName","title":"Step 2: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3067 from_cfn  \u3092\u4f7f\u7528\u3057\u3066\u5024\u3092\u53c2\u7167"},{"location":"ja/blogs/release-v125/#manifest-cloudformation","text":"from_cfn \u3092\u4f7f\u7528\u3057\u3066\u3001Environment Addon \u306e CloudFormation \u30b9\u30bf\u30c3\u30af\u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306e\u4ed6\u306e\u30b9\u30bf\u30c3\u30af\u304b\u3089\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4ed6\u306e CloudFormation \u30b9\u30bf\u30c3\u30af\u304b\u3089\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u6700\u521d\u306b\u30bd\u30fc\u30b9\u30b9\u30bf\u30c3\u30af\u304b\u3089\u51fa\u529b\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u3001\u4ed6\u306e\u30b9\u30bf\u30c3\u30af\u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u308a\u3001\u76f8\u4e92\u30b9\u30bf\u30c3\u30af\u53c2\u7167\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u304c\u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u306e\u4e00\u4f8b\u3067\u3059\u3002 Outputs : WebBucketURL : Description : URL for the website bucket Value : !GetAtt WebBucket.WebsiteURL Export : Name : stack-WebsiteUrl # <- \u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u3067\u4e00\u610f\u306a\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d \u8a73\u3057\u304f\u306f \u3053\u3061\u3089\u306e\u30da\u30fc\u30b8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u4eca\u306e\u3068\u3053\u308d\u3001 from_cfn \u306f\u4ee5\u4e0b\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306e\u307f\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 variables : LOG_LEVEL : info WebsiteUrl : from_cfn : stack-WebsiteUrl secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName logging : secretOptions : GIT_USERNAME : from_cfn : stack-SSMGHUserName sidecars : secrets : GIT_USERNAME : from_cfn : stack-SSMGHUserName network : vpc : security_groups : - sg-1234 - from_cfn : UserDBAccessSecurityGroup","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u306b\u304a\u3051\u308b CloudFormation \u30b9\u30bf\u30c3\u30af\u304b\u3089\u306e\u5024\u306e\u30a4\u30f3\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v125/#cloudfront","text":"\u72ec\u81ea\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092\u5229\u7528\u3057\u3066 CloudFront \u3068\u9023\u643a\u3057\u3001\u3088\u308a\u9ad8\u901f\u306a\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1\u3092\u5b9f\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30d0\u30b1\u30c3\u30c8\u7ba1\u7406\u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30b5\u30dd\u30fc\u30c8 (\u30d0\u30b1\u30c3\u30c8\u4f5c\u6210\u3001\u30a2\u30bb\u30c3\u30c8\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306a\u3069) \u306f\u3001\u4eca\u5f8c\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u3088\u308a\u5145\u5b9f\u3055\u305b\u308b\u4e88\u5b9a\u3067\u3059\u3002","title":"CloudFront \u306b\u3088\u308b\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1"},{"location":"ja/blogs/release-v125/#s3","text":"\u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u304c\u306a\u3044\u5834\u5408\u3001S3 \u30b3\u30f3\u30bd\u30fc\u30eb\u3084 AWS CLI/SDK \u3092\u4f7f\u7528\u3057\u3066 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u89b3\u70b9\u304b\u3089\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u63a8\u5968\u3057\u307e\u3059\u3002","title":"(\u30aa\u30d7\u30b7\u30e7\u30f3) S3 \u30d0\u30b1\u30c3\u30c8\u306e\u4f5c\u6210"},{"location":"ja/blogs/release-v125/#env-manifest-cloudfront","text":"\u4ee5\u4e0b\u306e\u3088\u3046\u306b Environment Manifest \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30aa\u30ea\u30b8\u30f3\u3068\u3057\u305f CloudFront \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* \u5177\u4f53\u7684\u306b\u306f\u3001 location \u306f S3 \u30d0\u30b1\u30c3\u30c8\u306e DNS \u30c9\u30e1\u30a4\u30f3\u540d \u3067\u3001\u9759\u7684\u30a2\u30bb\u30c3\u30c8\u306f example.com/static/* \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002","title":"env Manifest \u3067\u306e CloudFront \u306e\u8a2d\u5b9a"},{"location":"ja/blogs/release-v125/#_4","text":"CloudFront \u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d0\u30b1\u30c3\u30c8\u304c \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 \u306e\u5834\u5408\u3001CloudFront \u306b\u8aad\u307f\u53d6\u308a\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3092\u7528\u3044\u308b\u5834\u5408\u3001 cf-s3-ecs-demo-bucket \u306e\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u66f4\u65b0\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::cf-s3-ecs-demo-bucket/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } } CloudFront \u306e\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 ID \u306f\u3001 copilot env show --resources \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"(\u30aa\u30d7\u30b7\u30e7\u30f3) \u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u306e\u66f4\u65b0"},{"location":"ja/blogs/release-v125/#_5","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v126/","text":"AWS Copilot v1.26: CloudWatch \u30a2\u30e9\u30fc\u30e0\u3001Environment Addon \u7528\u306e storage init \u304a\u3088\u3073 RDWS \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30b5\u30dd\u30fc\u30c8\u306b\u3088\u308b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u81ea\u52d5\u5316 \u6295\u7a3f\u65e5:2023\u5e742\u670820\u65e5 AWS Copilot \u306e\u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.26 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u516c\u958b\u3055\u308c\u3066\u3044\u308b \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5897\u3048\u7d9a\u3051\u3066\u304a\u308a\u3001400 \u4eba\u4ee5\u4e0a\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001 GitHub \u306b\u306f 26,000 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.26\u306b\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u70b9\u304c\u3042\u308a\u307e\u3059\u3002 Service alarm-based rollback : \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3002 storage init : \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3002 Request-Driven Web Service secrets support : \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30b5\u30fc\u30d3\u30b9\u30a2\u30e9\u30fc\u30e0\u30d9\u30fc\u30b9\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u30ab\u30b9\u30bf\u30e0 CloudWatch \u30a2\u30e9\u30fc\u30e0 \u3067 ECS \u306e\u30c7\u30d7\u30ed\u30a4\u72b6\u6cc1\u3092\u76e3\u8996\u3059\u308b \u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u30a2\u30e9\u30fc\u30e0\u304c In alarm \u72b6\u614b\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u3001\u6700\u5f8c\u306b\u5b8c\u4e86\u3057\u305f\u30c7\u30d7\u30ed\u30a4\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u30fc \u306b\u3088\u3063\u3066\u3001\u3059\u3067\u306b\u5931\u6557\u3057\u305f\u30c7\u30d7\u30ed\u30a4\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u56de\u3001\u969c\u5bb3\u3067\u306f\u306a\u3044\u304c\u3001\u9078\u629e\u3057\u305f\u30e1\u30c8\u30ea\u30af\u30b9\u306b\u5f93\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u51fa\u3066\u3044\u306a\u3044\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Backend, Worker, Load Balanced Web Service \u306e Manifest \u3067\u3001\u72ec\u81ea\u306e\u65e2\u5b58\u306e CloudWatch \u30a2\u30e9\u30fc\u30e0\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002 deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] \u307e\u305f\u3001Copilot \u306b\u304a\u597d\u307f\u306e\u95be\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3001CPU \u3084\u30e1\u30e2\u30ea\u4f7f\u7528\u7387\u30a2\u30e9\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u3082\u3089\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. Worker Service \u306e\u5834\u5408\u306f\u3001 ApproximateNumberOfMessagesDelayed \u3092\u76e3\u8996\u3059\u308b\u30a2\u30e9\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 deployment : rollback_alarms : messages_delayed : 5 Copilot \u304c\u304a\u5ba2\u69d8\u306b\u4ee3\u308f\u3063\u3066\u30a2\u30e9\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u969b\u3001\u3044\u304f\u3064\u304b\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 ComparisonOperator : 'GreaterThanOrEqualToThreshold' DatapointsToAlarm : 2 EvaluationPeriods : 3 Period : 60 Statistic : 'Average' Service Manifest \u3067\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u30a2\u30e9\u30fc\u30e0\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u6700\u521d\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u306b (\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u65e2\u5b58\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u306a\u3044\u3068\u304d\u306b) svc deploy \u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u3001ECS \u306f\u30a2\u30e9\u30fc\u30e0\u3092\u30dd\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u9055\u53cd\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059\u3002 Environment Addon \u7528 storage init \u4ee5\u524d\u306f\u3001 copilot storage init \u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u63a5\u7d9a\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8 Addon \u3060\u3051\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b copilot svc deploy \u3092\u5b9f\u884c\u3057\u3001 copilot svc delete \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Service \u3068\u3068\u3082\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304b\u3089 Copilot \u306f Environment \u306b\u7d10\u3065\u3044\u305f\u30b9\u30c8\u30ec\u30fc\u30b8 Addon \u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b9\u30c8\u30ec\u30fc\u30b8\u306f copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u305d\u3057\u3066\u3001 copilot env delete \u3092\u5b9f\u884c\u3057\u3066 Environment \u3092\u524a\u9664\u3059\u308b\u307e\u3067\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u540c\u69d8\u306b\u3001Environment \u30b9\u30c8\u30ec\u30fc\u30b8\u3082\u5185\u90e8\u7684\u306b\u306f Environment Addon \u3068\u540c\u3058\u3067\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067 Database-per-service \u30d1\u30bf\u30fc\u30f3 \u3092\u63a1\u7528 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4e16\u754c\u3067\u306f\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3067\u5171\u6709\u3055\u308c\u308b\u30e2\u30ce\u30ea\u30b9\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u305d\u308c\u305e\u308c\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5c02\u7528\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u6838\u3068\u306a\u308b\u7279\u5fb4\u3067\u3042\u308b\u758e\u7d50\u5408\u304c\u7dad\u6301\u3055\u308c\u307e\u3059\u3002 Copilot \u3067\u306f\u3001\u3053\u306e Service \u3054\u3068\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3046\u3053\u3068\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Copilot \u304c\u751f\u6210\u3059\u308b\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f\u30011 \u3064\u306e Service \u307e\u305f\u306f Job \u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u5404\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u72ec\u81ea\u306e\u72b6\u6cc1\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u8907\u6570\u306e Service \u9593\u3067\u5171\u6709\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001 Copilot \u3067\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5909\u66f4\u3057\u3066\u3001\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8868\u793a\u3055\u308c\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u4f8b\u3092\u6b21\u306b\u793a\u3057\u307e\u3059\u3002 $ copilot storage init What type of storage would you like to create? > DynamoDB (NoSQL) S3 (Objects) Aurora Serverless (SQL) Which workload needs access to the storage? > api backend What would you like to name this DynamoDB Table? movies Do you want the storage to be created and deleted with the api service? Yes, the storage should be created and deleted at the same time as api > No, the storage should be created and deleted at the environment level \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u306f\u3001\u4e0a\u8a18\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3068\u540c\u7b49\u3067\u3059\u3002 copilot storage init \\ --storage-type \"DynamoDB\" \\ --workload \"api\" \\ --name \"movies\" \\ --lifecycle \"environment\" \u3059\u3079\u3066\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u7b54\u3048\u308b\u304b\u3001\u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3068\u3001Copilot \u306f DynamoDB \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001 copilot/environments \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u5fc5\u8981\u306a\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f api \u30b5\u30fc\u30d3\u30b9\u3092\u8a31\u53ef\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3067\u3059 \u3053\u308c\u306f \"movies\" \u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092 \"api\" Service \u306b\u8a31\u53ef\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 addon \u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001\"api\" Service \u3068\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 ` copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u2514\u2500\u2500 movies.yml # <- The CloudFormation template that defines the \"movies\" DynamoDB storage. \u2502 \u2514\u2500\u2500 test/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 api \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 movies-access-policy.yml # <- The CloudFormation template that defines the access policy. \u2514\u2500\u2500\u2500 manifest.yml ``` \u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u30bf\u30a4\u30d7\u3001\u304a\u3088\u3073\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u63a5\u3059\u308b\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30bf\u30a4\u30d7\u306b\u3088\u3063\u3066\u3001Copilot \u304c\u751f\u6210\u3059\u308b CloudFormation \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 Sample files generated for an Aurora Serverless fronted by a Request-Driven Web Service ``` Example: an Aurora Serverless v2 storage whose lifecycle is at the environment-level, faced by a Request-Driven Web Service. copilot/ \u251c\u2500\u2500 environments/ \u2502 \u2514\u2500\u2500 addons/ \u2502 \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the Aurora Serverless v2 storage. \u2502 \u2514\u2500\u2500 user.yml # An Aurora Serverless v2 storage \u2514\u2500\u2500 api # \"api\" is a Request-Driven Web Service \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the ingress resource. \u2514\u2500\u2500 user-ingress.yml # A security group ingress that grants \"api\" access to the \"api\" storage\" ``` \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u30b9\u30c8\u30ec\u30fc\u30b8 \u3082\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Request-Driven Web Service \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u30b5\u30dd\u30fc\u30c8 Copilot \u3092\u4f7f\u7528\u3057\u3066\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 (Systems Manager \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u307e\u305f\u306f AWS Secrets Manager \u304b\u3089) \u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066 App Runner \u30b5\u30fc\u30d3\u30b9\u306b\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Load Balanced Web Service \u306a\u3069\u306e\u4ed6\u306e Service \u30bf\u30a4\u30d7\u3068\u540c\u69d8\u306b\u3001\u6700\u521d\u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u6b21\u306e\u30bf\u30b0\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 | \u30ad\u30fc | \u5024 | |-----------------------------------------------------------------------------------| | copilot-application | \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d | | copilot-environment | \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u74b0\u5883\u540d | \u6b21\u306b\u3001Request-Driven Web Service \u306e Manifest \u3092\u6b21\u306e\u3088\u3046\u306b\u66f4\u65b0\u3059\u308b\u3060\u3051\u3067\u3059\u3002 secrets : GITHUB_TOKEN : GH_TOKEN_SECRET \u3053\u308c\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u3059\u308b\u3068\u3001Service \u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 secrets \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u8a73\u7d30\u306a\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 secrets : # To inject a secret from SecretsManager. # (Recommended) Option 1. Referring to the secret by name. DB : secretsmanager : 'mysql' # You can refer to a specific key in the JSON blob. DB_PASSWORD : secretsmanager : 'mysql:password::' # You can substitute predefined environment variables to keep your manifest succinct. DB_PASSWORD : secretsmanager : 'mysql:password::' # Option 2. Alternatively, you can refer to the secret by ARN. DB : 'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL' # To inject a secret from SSM Parameter Store # Option 1. Referring to the secret by ARN. GITHUB_WEBHOOK_SECRET : 'arn:aws:ssm:us-east-1:615525334900:parameter/GH_WEBHOOK_SECRET' # Option 2. Referring to the secret by name. GITHUB_WEBHOOK_SECRET : GITHUB_WEBHOOK_SECRET Manifest \u4ed5\u69d8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002Service \u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u633f\u5165\u3059\u308b\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080","title":"Release v1.26"},{"location":"ja/blogs/release-v126/#aws-copilot-v126-cloudwatch-environment-addon-storage-init-rdws","text":"\u6295\u7a3f\u65e5:2023\u5e742\u670820\u65e5 AWS Copilot \u306e\u30b3\u30a2\u30c1\u30fc\u30e0\u306f\u3001Copilot v1.26 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u516c\u958b\u3055\u308c\u3066\u3044\u308b \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5897\u3048\u7d9a\u3051\u3066\u304a\u308a\u3001400 \u4eba\u4ee5\u4e0a\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001 GitHub \u306b\u306f 26,000 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.26\u306b\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u70b9\u304c\u3042\u308a\u307e\u3059\u3002 Service alarm-based rollback : \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3002 storage init : \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3002 Request-Driven Web Service secrets support : \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.26: CloudWatch \u30a2\u30e9\u30fc\u30e0\u3001Environment Addon \u7528\u306e storage init \u304a\u3088\u3073 RDWS \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30b5\u30dd\u30fc\u30c8\u306b\u3088\u308b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u81ea\u52d5\u5316"},{"location":"ja/blogs/release-v126/#_1","text":"\u30ab\u30b9\u30bf\u30e0 CloudWatch \u30a2\u30e9\u30fc\u30e0 \u3067 ECS \u306e\u30c7\u30d7\u30ed\u30a4\u72b6\u6cc1\u3092\u76e3\u8996\u3059\u308b \u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u30a2\u30e9\u30fc\u30e0\u304c In alarm \u72b6\u614b\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u3001\u6700\u5f8c\u306b\u5b8c\u4e86\u3057\u305f\u30c7\u30d7\u30ed\u30a4\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u30b5\u30fc\u30ad\u30c3\u30c8\u30d6\u30ec\u30fc\u30ab\u30fc \u306b\u3088\u3063\u3066\u3001\u3059\u3067\u306b\u5931\u6557\u3057\u305f\u30c7\u30d7\u30ed\u30a4\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u56de\u3001\u969c\u5bb3\u3067\u306f\u306a\u3044\u304c\u3001\u9078\u629e\u3057\u305f\u30e1\u30c8\u30ea\u30af\u30b9\u306b\u5f93\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u51fa\u3066\u3044\u306a\u3044\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Backend, Worker, Load Balanced Web Service \u306e Manifest \u3067\u3001\u72ec\u81ea\u306e\u65e2\u5b58\u306e CloudWatch \u30a2\u30e9\u30fc\u30e0\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002 deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] \u307e\u305f\u3001Copilot \u306b\u304a\u597d\u307f\u306e\u95be\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3001CPU \u3084\u30e1\u30e2\u30ea\u4f7f\u7528\u7387\u30a2\u30e9\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u3082\u3089\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. Worker Service \u306e\u5834\u5408\u306f\u3001 ApproximateNumberOfMessagesDelayed \u3092\u76e3\u8996\u3059\u308b\u30a2\u30e9\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 deployment : rollback_alarms : messages_delayed : 5 Copilot \u304c\u304a\u5ba2\u69d8\u306b\u4ee3\u308f\u3063\u3066\u30a2\u30e9\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u969b\u3001\u3044\u304f\u3064\u304b\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 ComparisonOperator : 'GreaterThanOrEqualToThreshold' DatapointsToAlarm : 2 EvaluationPeriods : 3 Period : 60 Statistic : 'Average' Service Manifest \u3067\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u30a2\u30e9\u30fc\u30e0\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u6700\u521d\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u306b (\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u65e2\u5b58\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u306a\u3044\u3068\u304d\u306b) svc deploy \u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u3001ECS \u306f\u30a2\u30e9\u30fc\u30e0\u3092\u30dd\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u9055\u53cd\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059\u3002","title":"\u30b5\u30fc\u30d3\u30b9\u30a2\u30e9\u30fc\u30e0\u30d9\u30fc\u30b9\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af"},{"location":"ja/blogs/release-v126/#environment-addon-storage-init","text":"\u4ee5\u524d\u306f\u3001 copilot storage init \u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u63a5\u7d9a\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8 Addon \u3060\u3051\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b copilot svc deploy \u3092\u5b9f\u884c\u3057\u3001 copilot svc delete \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Service \u3068\u3068\u3082\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304b\u3089 Copilot \u306f Environment \u306b\u7d10\u3065\u3044\u305f\u30b9\u30c8\u30ec\u30fc\u30b8 Addon \u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b9\u30c8\u30ec\u30fc\u30b8\u306f copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u305d\u3057\u3066\u3001 copilot env delete \u3092\u5b9f\u884c\u3057\u3066 Environment \u3092\u524a\u9664\u3059\u308b\u307e\u3067\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u540c\u69d8\u306b\u3001Environment \u30b9\u30c8\u30ec\u30fc\u30b8\u3082\u5185\u90e8\u7684\u306b\u306f Environment Addon \u3068\u540c\u3058\u3067\u3059\u3002","title":"Environment Addon \u7528 storage init"},{"location":"ja/blogs/release-v126/#database-per-service","text":"\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4e16\u754c\u3067\u306f\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3067\u5171\u6709\u3055\u308c\u308b\u30e2\u30ce\u30ea\u30b9\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u305d\u308c\u305e\u308c\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5c02\u7528\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u6838\u3068\u306a\u308b\u7279\u5fb4\u3067\u3042\u308b\u758e\u7d50\u5408\u304c\u7dad\u6301\u3055\u308c\u307e\u3059\u3002 Copilot \u3067\u306f\u3001\u3053\u306e Service \u3054\u3068\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3046\u3053\u3068\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Copilot \u304c\u751f\u6210\u3059\u308b\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f\u30011 \u3064\u306e Service \u307e\u305f\u306f Job \u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u5404\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u72ec\u81ea\u306e\u72b6\u6cc1\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u8907\u6570\u306e Service \u9593\u3067\u5171\u6709\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001 Copilot \u3067\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5909\u66f4\u3057\u3066\u3001\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8868\u793a\u3055\u308c\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u4f8b\u3092\u6b21\u306b\u793a\u3057\u307e\u3059\u3002 $ copilot storage init What type of storage would you like to create? > DynamoDB (NoSQL) S3 (Objects) Aurora Serverless (SQL) Which workload needs access to the storage? > api backend What would you like to name this DynamoDB Table? movies Do you want the storage to be created and deleted with the api service? Yes, the storage should be created and deleted at the same time as api > No, the storage should be created and deleted at the environment level \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u306f\u3001\u4e0a\u8a18\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3068\u540c\u7b49\u3067\u3059\u3002 copilot storage init \\ --storage-type \"DynamoDB\" \\ --workload \"api\" \\ --name \"movies\" \\ --lifecycle \"environment\" \u3059\u3079\u3066\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u7b54\u3048\u308b\u304b\u3001\u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3068\u3001Copilot \u306f DynamoDB \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001 copilot/environments \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u5fc5\u8981\u306a\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f api \u30b5\u30fc\u30d3\u30b9\u3092\u8a31\u53ef\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3067\u3059 \u3053\u308c\u306f \"movies\" \u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092 \"api\" Service \u306b\u8a31\u53ef\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 addon \u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u3001\"api\" Service \u3068\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 ` copilot/ \u251c\u2500\u2500 environments/ \u2502 \u251c\u2500\u2500 addons/ \u2502 \u2502 \u2514\u2500\u2500 movies.yml # <- The CloudFormation template that defines the \"movies\" DynamoDB storage. \u2502 \u2514\u2500\u2500 test/ \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 api \u251c\u2500\u2500 addons/ \u2502 \u2514\u2500\u2500 movies-access-policy.yml # <- The CloudFormation template that defines the access policy. \u2514\u2500\u2500\u2500 manifest.yml ``` \u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u30bf\u30a4\u30d7\u3001\u304a\u3088\u3073\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u63a5\u3059\u308b\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30bf\u30a4\u30d7\u306b\u3088\u3063\u3066\u3001Copilot \u304c\u751f\u6210\u3059\u308b CloudFormation \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 Sample files generated for an Aurora Serverless fronted by a Request-Driven Web Service ```","title":"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067Database-per-service \u30d1\u30bf\u30fc\u30f3 \u3092\u63a1\u7528"},{"location":"ja/blogs/release-v126/#example-an-aurora-serverless-v2-storage-whose-lifecycle-is-at-the-environment-level-faced-by-a-request-driven-web-service","text":"copilot/ \u251c\u2500\u2500 environments/ \u2502 \u2514\u2500\u2500 addons/ \u2502 \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the Aurora Serverless v2 storage. \u2502 \u2514\u2500\u2500 user.yml # An Aurora Serverless v2 storage \u2514\u2500\u2500 api # \"api\" is a Request-Driven Web Service \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 addons.parameters.yml # The extra parameters required by the ingress resource. \u2514\u2500\u2500 user-ingress.yml # A security group ingress that grants \"api\" access to the \"api\" storage\" ``` \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u30b9\u30c8\u30ec\u30fc\u30b8 \u3082\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Example: an Aurora Serverless v2 storage whose lifecycle is at the environment-level, faced by a Request-Driven Web Service."},{"location":"ja/blogs/release-v126/#request-driven-web-service","text":"Copilot \u3092\u4f7f\u7528\u3057\u3066\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 (Systems Manager \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u307e\u305f\u306f AWS Secrets Manager \u304b\u3089) \u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066 App Runner \u30b5\u30fc\u30d3\u30b9\u306b\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Load Balanced Web Service \u306a\u3069\u306e\u4ed6\u306e Service \u30bf\u30a4\u30d7\u3068\u540c\u69d8\u306b\u3001\u6700\u521d\u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u6b21\u306e\u30bf\u30b0\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 | \u30ad\u30fc | \u5024 | |-----------------------------------------------------------------------------------| | copilot-application | \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d | | copilot-environment | \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u74b0\u5883\u540d | \u6b21\u306b\u3001Request-Driven Web Service \u306e Manifest \u3092\u6b21\u306e\u3088\u3046\u306b\u66f4\u65b0\u3059\u308b\u3060\u3051\u3067\u3059\u3002 secrets : GITHUB_TOKEN : GH_TOKEN_SECRET \u3053\u308c\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u3059\u308b\u3068\u3001Service \u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 secrets \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u8a73\u7d30\u306a\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 secrets : # To inject a secret from SecretsManager. # (Recommended) Option 1. Referring to the secret by name. DB : secretsmanager : 'mysql' # You can refer to a specific key in the JSON blob. DB_PASSWORD : secretsmanager : 'mysql:password::' # You can substitute predefined environment variables to keep your manifest succinct. DB_PASSWORD : secretsmanager : 'mysql:password::' # Option 2. Alternatively, you can refer to the secret by ARN. DB : 'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL' # To inject a secret from SSM Parameter Store # Option 1. Referring to the secret by ARN. GITHUB_WEBHOOK_SECRET : 'arn:aws:ssm:us-east-1:615525334900:parameter/GH_WEBHOOK_SECRET' # Option 2. Referring to the secret by name. GITHUB_WEBHOOK_SECRET : GITHUB_WEBHOOK_SECRET Manifest \u4ed5\u69d8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002Service \u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u633f\u5165\u3059\u308b\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Request-Driven Web Service \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v126/#_2","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v127/","text":"AWS Copilot v1.27: Copilot \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62e1\u5f35\u3001\u8ffd\u52a0\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30eb\u30fc\u30eb\u306e\u30b5\u30dd\u30fc\u30c8\u3001\u5dee\u5206\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u62e1\u5f35\uff01 \u6295\u7a3f\u65e5: 2023 \u5e74 3 \u6708 28 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.27 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059 \ud83d\ude80\u3002 \u79c1\u305f\u3061\u306e\u516c\u958b \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5897\u3048\u7d9a\u3051\u3066\u3001400 \u4eba\u4ee5\u4e0a\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001 GitHub \u306b\u306f 2,700 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.27 \u306f\u5e7e\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u70b9\u304c\u3042\u308b\u5927\u304d\u306a\u30ea\u30ea\u30fc\u30b9\u3067\u3059\u3002 Copilot \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62e1\u5f35 : Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4efb\u610f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 AWS Cloud Development Kit (CDK) \u307e\u305f\u306f YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u8907\u6570\u306e\u30ea\u30b9\u30ca\u30fc\u3068\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u304c\u6709\u52b9\u306b : Application Load Balancer \u306b\u306f\u30db\u30b9\u30c8\u30d9\u30fc\u30b9\u307e\u305f\u306f\u30d1\u30b9\u306e\u30ea\u30b9\u30ca\u30fc\u306e\u30eb\u30fc\u30eb\u3092\u3001 Network Load Balancer \u306b\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3084\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30ea\u30b9\u30ca\u30fc\u3092\u8907\u6570\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 . CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5909\u66f4\u306e\u30d7\u30ec\u30d3\u30e5\u30fc : copilot [noun] package \u307e\u305f\u306f copilot [noun] deploy \u30b3\u30de\u30f3\u30c9\u306b --diff \u30d5\u30e9\u30b0\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001 \u6700\u5f8c\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u30ed\u30fc\u30ab\u30eb\u306e\u5909\u66f4\u306b\u304a\u3051\u308b\u5dee\u5206\u3092\u8868\u793a\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u30d7\u30c3\u30b7\u30e5 : \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u304b\u3089\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u3066\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u305f\u3081\u306e image.build \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u5bfe\u3059\u308b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30dd\u30fc\u30c8 : \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u7528\u306e\u30ed\u30fc\u30ab\u30eb\u306a .env \u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u305f\u3081\u306e env_file \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62e1\u5f35 AWS Copilot \u3092\u5229\u7528\u3059\u308b\u3068\u3001 copilot init \u3000\u30b3\u30de\u30f3\u30c9\u3068\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u5f93\u3046\u3060\u3051\u3067\u3001\u30d3\u30eb\u30c0\u30fc\u306f\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d20\u65e9\u304f\u958b\u59cb\u3067\u304d\u307e\u3059\u3002 \u305d\u306e\u5f8c\u3001\u958b\u767a\u8005\u306f Manifest \u306e infrastructure-as-code \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 \u3055\u3089\u306b v1.27 \u3067\u306f\u3001 Copilot \u304c\u751f\u6210\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3067\u62e1\u5f35\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u3092\u5b8c\u5168\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 AWS Cloud Development Kit (CDK) \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u8868\u73fe\u529b\u3068\u5b89\u5168\u6027\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001 CDK \u3092\u4f7f\u7528\u3057\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u5f8c\u3001 Copilot \u304c copilot/[name]/override \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b CDK \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u306f\u3001 stack.ts \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3059\u308b\u3001\u307e\u305f\u306f README.md \u306b\u8a18\u8f09\u3055\u308c\u305f\u6307\u793a\u306b\u5f93\u3063\u3066\u884c\u3044\u307e\u3059\u3002 View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } copilot [noun] deploy \u306e\u5b9f\u884c\u3084\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u3068\u3001Copilot \u306f\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 CDK \u306b\u3088\u308b\u62e1\u5f35\u306b\u3064\u3044\u3066\u3001\u3055\u3089\u306b\u5b66\u3076\u305f\u3081\u306b\u306f\u3001 \u30ac\u30a4\u30c9 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u3001\u8efd\u91cf\u306a\u3084\u308a\u65b9\u3067\u3059\u3002 1) \u4ed6\u306e\u30c4\u30fc\u30eb\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u4f9d\u5b58\u95a2\u4fc2\u3092\u6301\u3061\u305f\u304f\u7121\u3044\u5834\u5408\u3084\u30012) \u5c11\u3057\u306e\u4fee\u6b63\u3057\u304b\u884c\u308f\u306a\u3044\u5834\u5408\u306b\u5229\u7528\u3057\u307e\u3059\u3002 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u5f8c\u3001Copilot \u306f copilot/[name]/override \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u306e cfn.patches.yml \u3000\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 . \u251c\u2500\u2500 cfn.patches.yml \u2514\u2500\u2500 README.md \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u306f\u3001 cfn.patches.yaml \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3066\u884c\u3044\u307e\u3059\u3002 View sample cfn.patches.yml - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool copilot [noun] deploy \u306e\u5b9f\u884c\u3084\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u3068\u3001Copilot \u306f\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 YAML \u30d1\u30c3\u30c1\u306b\u3088\u308b\u62e1\u5f35\u306b\u3064\u3044\u3066\u3001\u3055\u3089\u306b\u5b66\u3076\u305f\u3081\u306b\u306f\u3001 \u30ac\u30a4\u30c9 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5909\u66f4\u306e\u30d7\u30ec\u30d3\u30e5\u30fc copilot [noun] package --diff copilot [noun] package --diff \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5909\u66f4\u70b9\u3068\u6700\u65b0\u306e\u30c7\u30d7\u30ed\u30a4\u6e08\u307f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306e\u5dee\u5206\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u5dee\u5206\u3092\u8868\u793a\u3057\u305f\u306e\u3061\u306b\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d42\u4e86\u3057\u307e\u3059\u3002 copilot [noun] package --diff \u5b9f\u884c\u6642\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error-producing diffs $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled \u5dee\u5206\u306b\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u3001\u518d\u5ea6 copilot [noun] package \u3092\u5b9f\u884c\u3057\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092 \u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002 copilot [noun] deploy --diff copilot [noun] package --diff \u3068\u540c\u69d8\u306b\u3001 copilot [noun] deploy --diff \u3067\u540c\u3058\u5dee\u5206\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u3001 Copilot \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u305f\u5f8c\u306b\u7d42\u4e86\u305b\u305a\u3001 Continue with the deployment? [y/N] \u3068\u8cea\u554f\u3057\u307e\u3059\u3002 $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) \u5dee\u5206\u306b\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u3001\"y\" \u3092\u5165\u529b\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u3082\u3057\u304f\u306f\u3001\"N\" \u3068\u5165\u529b\u3057\u3066\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u5bfe\u3059\u308b\u8907\u6570\u306e\u30ea\u30b9\u30ca\u30fc\u3068\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u304c\u6709\u52b9\u306b Application Load Balancer \u306b\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u540c\u69d8\u306b\u3001 Network Load Balancer \u306b\u3082\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u304c\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Application Load Balancer \u306b\u5bfe\u3059\u308b\u8907\u6570\u306e\u30db\u30b9\u30c8\u30d9\u30fc\u30b9\u307e\u306f\u305f\u30d1\u30b9\u30d9\u30fc\u30b9\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0 \u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.additional_rules \u3092\u5229\u7528\u3057\u3066\u3001ALB \u306b\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b\u3092\u901a\u3058\u3066\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 Service \u304c\u30d1\u30b9 customerdb \u3001 admin \u3001 superadmin \u3092\u7570\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3067\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d6\u308a\u6271\u3044\u305f\u3044\u3068\u3057\u307e\u3059\u3002 name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : path : '/' additional_rules : # The new field \"additional_rules\". - path : 'customerdb' target_port : 8081 # Optional. Defaults to the `image.port`. - path : 'admin' target_container : nginx # Optional. Defaults to the main container. target_port : 8082 - path : 'superAdmin' target_port : 80 sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest \u3053\u306e Manifest \u3067\u306f\u3001\u201c/\u201d \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8080 \u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\"/customerdb\" \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8081 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 \"/admin\" \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001nginx \u306e\u30dd\u30fc\u30c8 8082 \u3078\u3001\"/superAdmin\"\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f nginx \u306e\u30dd\u30fc\u30c8 80 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u30013 \u3064\u76ee\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306f 'target_port: 80' \u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3064\u307e\u308a\u3001Copilot \u306f '/superAdmin' \u304b\u3089\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8ce2\u304f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\"/\" \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3092\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.target_port \u3067\u3082\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002 Network Load Balancer \u306b\u5bfe\u3059\u308b \u8907\u6570\u306e\u30dd\u30fc\u30c8\u3084\u30d7\u30ed\u30b3\u30c8\u30eb\u306e\u30ea\u30b9\u30ca\u30fc\u8ffd\u52a0 \u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 nlb.additional_listeners \u3092\u5229\u7528\u3057\u3066\u3001NLB \u306b\u5bfe\u3059\u308b\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b\u3092\u901a\u3058\u3066\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile http : false nlb : port : 8080/tcp additional_listeners : - port : 8081/tcp - port : 8082/tcp target_port : 8085 # Optional. Default is set 8082. target_container : nginx # Optional. Default is set to the main container. sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest \u3053\u306e Manifest \u3067\u306f\u3001NLB \u30dd\u30fc\u30c8 8080 \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8080 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 NLB \u30dd\u30fc\u30c8 8081 \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8081 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 \u3053\u3053\u3067\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u306f\u3001target_port \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u5bfe\u5fdc\u3059\u308b NLB \u30dd\u30fc\u30c8\u306e\u5024\u3068\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3067\u3059\u3002 NLB \u30dd\u30fc\u30c8 8082 \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f nginx \u3068\u3044\u3046\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8085 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u6539\u5584 \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u540c\u3058\u69d8\u306b\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u3082\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u30d7\u30c3\u30b7\u30e5\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u52a0\u3048\u3066\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u5bfe\u3059\u308b\u30ed\u30fc\u30ab\u30eb\u306e\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3067\u304d\u308b\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u30d7\u30c3\u30b7\u30e5 Copilot \u3067\u306f\u3001Dockerfile \u304b\u3089\u30cd\u30a4\u30c6\u30a3\u30d6\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u69cb\u7bc9\u3057\u3001ECR \u3078\u30d7\u30c3\u30b7\u30e5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u3053\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u6700\u521d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001Dockerfile \u3078\u306e\u30d1\u30b9\u3092\u5358\u7d14\u306b\u6587\u5b57\u5217\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3059\u3002 sidecars : nginx : image : build : path/to/dockerfile \u307e\u305f\u3001 build \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Map \u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3068\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u884c\u3048\u307e\u3059\u3002 \u3053\u308c\u306b\u306f\u3001Dockerfile \u30d1\u30b9\u306e\u6307\u5b9a\u3084\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001 \u30bf\u30fc\u30b2\u30c3\u30c8\u3059\u308b\u30d3\u30eb\u30c9\u30b9\u30c6\u30fc\u30b8\u3001 \u30a4\u30e1\u30fc\u30b8\u304b\u3089\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30d3\u30eb\u30c9\u5f15\u6570\u304c\u542b\u307e\u308c\u307e\u3059\u3002 sidecars : nginx : image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image : tag args : value \u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001Dockerfile \u304b\u3089\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30a4\u30e1\u30fc\u30b8 URI \u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002 sidecars : nginx : image : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest \u307e\u305f\u3001location \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u3001\u30a4\u30e1\u30fc\u30b8 URI \u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 sidecars : nginx : image : location : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u7528\u306e\u30ed\u30fc\u30ab\u30eb\u306e\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b \u30bf\u30b9\u30af\u5185\u306e\u4efb\u610f\u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u4ee5\u524d\u306f\u3001 Task \u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u304c\u6307\u5b9a\u3067\u304d\u307e\u3057\u305f\u3002 # in copilot/{service name}/manifest.yml env_file : log.env \u3053\u308c\u304b\u3089\u306f\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u5b9a\u7fa9\u306b\u304a\u3044\u3066\u3001\u540c\u3058\u3053\u3068\u304c\u884c\u3048\u307e\u3059\u3002 sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 \u30de\u30cd\u30fc\u30b8\u30c9\u306a logging \u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u5bfe\u3057\u3066\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env \u7570\u306a\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u540c\u3058\u30d5\u30a1\u30a4\u30eb\u3092\u8907\u6570\u56de\u3057\u3066\u3044\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u30d5\u30a1\u30a4\u30eb\u3092 1 \u56de\u3060\u3051 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002","title":"Release v1.27"},{"location":"ja/blogs/release-v127/#aws-copilot-v127-copilot","text":"","title":"AWS Copilot v1.27: Copilot \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62e1\u5f35\u3001\u8ffd\u52a0\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30eb\u30fc\u30eb\u306e\u30b5\u30dd\u30fc\u30c8\u3001\u5dee\u5206\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u62e1\u5f35\uff01"},{"location":"ja/blogs/release-v127/#2023-3-28","text":"AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.27 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059 \ud83d\ude80\u3002 \u79c1\u305f\u3061\u306e\u516c\u958b \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u5897\u3048\u7d9a\u3051\u3066\u3001400 \u4eba\u4ee5\u4e0a\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u3001 GitHub \u306b\u306f 2,700 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.27 \u306f\u5e7e\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u70b9\u304c\u3042\u308b\u5927\u304d\u306a\u30ea\u30ea\u30fc\u30b9\u3067\u3059\u3002 Copilot \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62e1\u5f35 : Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4efb\u610f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 AWS Cloud Development Kit (CDK) \u307e\u305f\u306f YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u8907\u6570\u306e\u30ea\u30b9\u30ca\u30fc\u3068\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u304c\u6709\u52b9\u306b : Application Load Balancer \u306b\u306f\u30db\u30b9\u30c8\u30d9\u30fc\u30b9\u307e\u305f\u306f\u30d1\u30b9\u306e\u30ea\u30b9\u30ca\u30fc\u306e\u30eb\u30fc\u30eb\u3092\u3001 Network Load Balancer \u306b\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3084\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30ea\u30b9\u30ca\u30fc\u3092\u8907\u6570\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 . CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5909\u66f4\u306e\u30d7\u30ec\u30d3\u30e5\u30fc : copilot [noun] package \u307e\u305f\u306f copilot [noun] deploy \u30b3\u30de\u30f3\u30c9\u306b --diff \u30d5\u30e9\u30b0\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001 \u6700\u5f8c\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u30ed\u30fc\u30ab\u30eb\u306e\u5909\u66f4\u306b\u304a\u3051\u308b\u5dee\u5206\u3092\u8868\u793a\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u30d7\u30c3\u30b7\u30e5 : \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u304b\u3089\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u3066\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u305f\u3081\u306e image.build \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u5bfe\u3059\u308b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30dd\u30fc\u30c8 : \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u7528\u306e\u30ed\u30fc\u30ab\u30eb\u306a .env \u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u305f\u3081\u306e env_file \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u6295\u7a3f\u65e5: 2023 \u5e74 3 \u6708 28 \u65e5"},{"location":"ja/blogs/release-v127/#copilot-aws-cloudformation","text":"AWS Copilot \u3092\u5229\u7528\u3059\u308b\u3068\u3001 copilot init \u3000\u30b3\u30de\u30f3\u30c9\u3068\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u5f93\u3046\u3060\u3051\u3067\u3001\u30d3\u30eb\u30c0\u30fc\u306f\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d20\u65e9\u304f\u958b\u59cb\u3067\u304d\u307e\u3059\u3002 \u305d\u306e\u5f8c\u3001\u958b\u767a\u8005\u306f Manifest \u306e infrastructure-as-code \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 \u3055\u3089\u306b v1.27 \u3067\u306f\u3001 Copilot \u304c\u751f\u6210\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3067\u62e1\u5f35\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u3092\u5b8c\u5168\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002","title":"Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62e1\u5f35"},{"location":"ja/blogs/release-v127/#aws-cloud-development-kit-cdk","text":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u8868\u73fe\u529b\u3068\u5b89\u5168\u6027\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001 CDK \u3092\u4f7f\u7528\u3057\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u5f8c\u3001 Copilot \u304c copilot/[name]/override \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b CDK \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u306f\u3001 stack.ts \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3059\u308b\u3001\u307e\u305f\u306f README.md \u306b\u8a18\u8f09\u3055\u308c\u305f\u6307\u793a\u306b\u5f93\u3063\u3066\u884c\u3044\u307e\u3059\u3002 View sample stack.ts import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } copilot [noun] deploy \u306e\u5b9f\u884c\u3084\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u3068\u3001Copilot \u306f\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 CDK \u306b\u3088\u308b\u62e1\u5f35\u306b\u3064\u3044\u3066\u3001\u3055\u3089\u306b\u5b66\u3076\u305f\u3081\u306b\u306f\u3001 \u30ac\u30a4\u30c9 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Cloud Development Kit (CDK) \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9"},{"location":"ja/blogs/release-v127/#yaml","text":"YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u3001\u8efd\u91cf\u306a\u3084\u308a\u65b9\u3067\u3059\u3002 1) \u4ed6\u306e\u30c4\u30fc\u30eb\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u4f9d\u5b58\u95a2\u4fc2\u3092\u6301\u3061\u305f\u304f\u7121\u3044\u5834\u5408\u3084\u30012) \u5c11\u3057\u306e\u4fee\u6b63\u3057\u304b\u884c\u308f\u306a\u3044\u5834\u5408\u306b\u5229\u7528\u3057\u307e\u3059\u3002 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u5f8c\u3001Copilot \u306f copilot/[name]/override \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u306e cfn.patches.yml \u3000\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 . \u251c\u2500\u2500 cfn.patches.yml \u2514\u2500\u2500 README.md \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u306f\u3001 cfn.patches.yaml \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3066\u884c\u3044\u307e\u3059\u3002 View sample cfn.patches.yml - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool copilot [noun] deploy \u306e\u5b9f\u884c\u3084\u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u3068\u3001Copilot \u306f\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 YAML \u30d1\u30c3\u30c1\u306b\u3088\u308b\u62e1\u5f35\u306b\u3064\u3044\u3066\u3001\u3055\u3089\u306b\u5b66\u3076\u305f\u3081\u306b\u306f\u3001 \u30ac\u30a4\u30c9 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"},{"location":"ja/blogs/release-v127/#aws-cloudformation","text":"","title":"AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5909\u66f4\u306e\u30d7\u30ec\u30d3\u30e5\u30fc"},{"location":"ja/blogs/release-v127/#copilot-noun-package-diff","text":"copilot [noun] package --diff \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5909\u66f4\u70b9\u3068\u6700\u65b0\u306e\u30c7\u30d7\u30ed\u30a4\u6e08\u307f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306e\u5dee\u5206\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u5dee\u5206\u3092\u8868\u793a\u3057\u305f\u306e\u3061\u306b\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d42\u4e86\u3057\u307e\u3059\u3002 copilot [noun] package --diff \u5b9f\u884c\u6642\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error-producing diffs $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled \u5dee\u5206\u306b\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u3001\u518d\u5ea6 copilot [noun] package \u3092\u5b9f\u884c\u3057\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092 \u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002","title":"copilot [noun] package --diff"},{"location":"ja/blogs/release-v127/#copilot-noun-deploy-diff","text":"copilot [noun] package --diff \u3068\u540c\u69d8\u306b\u3001 copilot [noun] deploy --diff \u3067\u540c\u3058\u5dee\u5206\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u3001 Copilot \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u305f\u5f8c\u306b\u7d42\u4e86\u305b\u305a\u3001 Continue with the deployment? [y/N] \u3068\u8cea\u554f\u3057\u307e\u3059\u3002 $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) \u5dee\u5206\u306b\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u3001\"y\" \u3092\u5165\u529b\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u3082\u3057\u304f\u306f\u3001\"N\" \u3068\u5165\u529b\u3057\u3066\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3057\u307e\u3059\u3002","title":"copilot [noun] deploy --diff"},{"location":"ja/blogs/release-v127/#_1","text":"Application Load Balancer \u306b\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u540c\u69d8\u306b\u3001 Network Load Balancer \u306b\u3082\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u304c\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002","title":"\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u5bfe\u3059\u308b\u8907\u6570\u306e\u30ea\u30b9\u30ca\u30fc\u3068\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u304c\u6709\u52b9\u306b"},{"location":"ja/blogs/release-v127/#application-load-balancer","text":"\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.additional_rules \u3092\u5229\u7528\u3057\u3066\u3001ALB \u306b\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b\u3092\u901a\u3058\u3066\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 Service \u304c\u30d1\u30b9 customerdb \u3001 admin \u3001 superadmin \u3092\u7570\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3067\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d6\u308a\u6271\u3044\u305f\u3044\u3068\u3057\u307e\u3059\u3002 name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : path : '/' additional_rules : # The new field \"additional_rules\". - path : 'customerdb' target_port : 8081 # Optional. Defaults to the `image.port`. - path : 'admin' target_container : nginx # Optional. Defaults to the main container. target_port : 8082 - path : 'superAdmin' target_port : 80 sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest \u3053\u306e Manifest \u3067\u306f\u3001\u201c/\u201d \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8080 \u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\"/customerdb\" \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8081 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 \"/admin\" \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001nginx \u306e\u30dd\u30fc\u30c8 8082 \u3078\u3001\"/superAdmin\"\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f nginx \u306e\u30dd\u30fc\u30c8 80 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u30013 \u3064\u76ee\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306f 'target_port: 80' \u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3064\u307e\u308a\u3001Copilot \u306f '/superAdmin' \u304b\u3089\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8ce2\u304f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002 \u307e\u305f\u3001\"/\" \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3092\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.target_port \u3067\u3082\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002","title":"Application Load Balancer \u306b\u5bfe\u3059\u308b\u8907\u6570\u306e\u30db\u30b9\u30c8\u30d9\u30fc\u30b9\u307e\u306f\u305f\u30d1\u30b9\u30d9\u30fc\u30b9\u306e\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0"},{"location":"ja/blogs/release-v127/#network-load-balancer","text":"\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 nlb.additional_listeners \u3092\u5229\u7528\u3057\u3066\u3001NLB \u306b\u5bfe\u3059\u308b\u8ffd\u52a0\u306e\u30ea\u30b9\u30ca\u30fc\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b\u3092\u901a\u3058\u3066\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile http : false nlb : port : 8080/tcp additional_listeners : - port : 8081/tcp - port : 8082/tcp target_port : 8085 # Optional. Default is set 8082. target_container : nginx # Optional. Default is set to the main container. sidecars : nginx : port : 80 image : public.ecr.aws/nginx:latest \u3053\u306e Manifest \u3067\u306f\u3001NLB \u30dd\u30fc\u30c8 8080 \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8080 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 NLB \u30dd\u30fc\u30c8 8081 \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8081 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 \u3053\u3053\u3067\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u306f\u3001target_port \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u5bfe\u5fdc\u3059\u308b NLB \u30dd\u30fc\u30c8\u306e\u5024\u3068\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3067\u3059\u3002 NLB \u30dd\u30fc\u30c8 8082 \u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f nginx \u3068\u3044\u3046\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8 8085 \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002","title":"Network Load Balancer \u306b\u5bfe\u3059\u308b \u8907\u6570\u306e\u30dd\u30fc\u30c8\u3084\u30d7\u30ed\u30b3\u30c8\u30eb\u306e\u30ea\u30b9\u30ca\u30fc\u8ffd\u52a0"},{"location":"ja/blogs/release-v127/#_2","text":"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u540c\u3058\u69d8\u306b\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u3082\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u30d7\u30c3\u30b7\u30e5\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u52a0\u3048\u3066\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u5bfe\u3059\u308b\u30ed\u30fc\u30ab\u30eb\u306e\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3067\u304d\u308b\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","title":"\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u6539\u5584"},{"location":"ja/blogs/release-v127/#_3","text":"Copilot \u3067\u306f\u3001Dockerfile \u304b\u3089\u30cd\u30a4\u30c6\u30a3\u30d6\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u69cb\u7bc9\u3057\u3001ECR \u3078\u30d7\u30c3\u30b7\u30e5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u3053\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u6700\u521d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001Dockerfile \u3078\u306e\u30d1\u30b9\u3092\u5358\u7d14\u306b\u6587\u5b57\u5217\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3059\u3002 sidecars : nginx : image : build : path/to/dockerfile \u307e\u305f\u3001 build \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Map \u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3068\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u884c\u3048\u307e\u3059\u3002 \u3053\u308c\u306b\u306f\u3001Dockerfile \u30d1\u30b9\u306e\u6307\u5b9a\u3084\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001 \u30bf\u30fc\u30b2\u30c3\u30c8\u3059\u308b\u30d3\u30eb\u30c9\u30b9\u30c6\u30fc\u30b8\u3001 \u30a4\u30e1\u30fc\u30b8\u304b\u3089\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30d3\u30eb\u30c9\u5f15\u6570\u304c\u542b\u307e\u308c\u307e\u3059\u3002 sidecars : nginx : image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image : tag args : value \u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001Dockerfile \u304b\u3089\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30a4\u30e1\u30fc\u30b8 URI \u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002 sidecars : nginx : image : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest \u307e\u305f\u3001location \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u3001\u30a4\u30e1\u30fc\u30b8 URI \u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 sidecars : nginx : image : location : 123457839156.dkr.ecr.us-west-2.amazonaws.com/demo/front:nginx-latest","title":"\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u30d7\u30c3\u30b7\u30e5"},{"location":"ja/blogs/release-v127/#_4","text":"\u30bf\u30b9\u30af\u5185\u306e\u4efb\u610f\u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u4ee5\u524d\u306f\u3001 Task \u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u304c\u6307\u5b9a\u3067\u304d\u307e\u3057\u305f\u3002 # in copilot/{service name}/manifest.yml env_file : log.env \u3053\u308c\u304b\u3089\u306f\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u5b9a\u7fa9\u306b\u304a\u3044\u3066\u3001\u540c\u3058\u3053\u3068\u304c\u884c\u3048\u307e\u3059\u3002 sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 \u30de\u30cd\u30fc\u30b8\u30c9\u306a logging \u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u5bfe\u3057\u3066\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env \u7570\u306a\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u540c\u3058\u30d5\u30a1\u30a4\u30eb\u3092\u8907\u6570\u56de\u3057\u3066\u3044\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u30d5\u30a1\u30a4\u30eb\u3092 1 \u56de\u3060\u3051 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002","title":"\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u7528\u306e\u30ed\u30fc\u30ab\u30eb\u306e\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b"},{"location":"ja/blogs/release-v128/","text":"AWS Copilot v1.28: Static Site Service \u30bf\u30a4\u30d7\u306e\u767b\u5834\uff01 \u6295\u7a3f\u65e5: 2023 \u5e74 5 \u6708 24 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.28 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u672c\u30ea\u30ea\u30fc\u30b9\u306b\u3054\u5354\u529b\u3044\u305f\u3060\u3044\u305f @interu \u3001 @0xO0O0 \u3001 @andreas-bergstrom \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 400 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.9k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.28 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Static Site Service \u30bf\u30a4\u30d7 : AWS S3 \u3092\u4f7f\u3063\u3066\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u30db\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 . \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u4e26\u5217\u30d3\u30eb\u30c9 : \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u305d\u308c\u305e\u308c\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u4e26\u5217\u306b\u30d3\u30eb\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4e26\u5217\u30d3\u30eb\u30c9\u306b\u3088\u308a\u3001\u30d3\u30eb\u30c9\u3068 AWS ECR \u3078\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d7\u30c3\u30b7\u30e5\u306b\u304b\u304b\u308b\u5168\u4f53\u306e\u6642\u9593\u3092\u77ed\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Static Site Service \u30bf\u30a4\u30d7 \u6700\u65b0\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30bf\u30a4\u30d7\u3067\u3042\u308b Static Site Service \u306f\u3001Amazon S3 \u306b\u3088\u3063\u3066\u30db\u30b9\u30c8\u3055\u308c Amazon CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1\u3055\u308c\u308b\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3059\u3079\u3066\u3092\u6e96\u5099\u3001\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u5358\u7d14\u306a\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e Web \u30b5\u30a4\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3057\u307e\u3059\u3002\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u5fc5\u8981\u306a\u304f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5fdc\u3058\u3066\u30b5\u30a4\u30c8\u3092\u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3057\u305f\u308a\u3001\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u305f\u308a\u3059\u308b\u5fc5\u8981\u3082\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u3001\u9759\u7684\u306a\u30b5\u30a4\u30c8\u3092\u4f5c\u308b\uff01\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30bf\u30a4\u30d7\u306f\u3001\u6bd4\u8f03\u7684\u30b7\u30f3\u30d7\u30eb\u3067\u7d20\u65e9\u304f\u7acb\u3061\u4e0a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u9ad8\u3044\u3067\u3059\u3002 Static Site \u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u65b9\u6cd5 \u9759\u7684\u30a2\u30bb\u30c3\u30c8 (HTML \u30d5\u30a1\u30a4\u30eb\u3001CSS \u3084 JavaScript \u306a\u3069\u306e\u30d5\u30a1\u30a4\u30eb) \u3092\u4f5c\u6210\u3057\u305f\u3089\u3001 copilot init \u30b3\u30de\u30f3\u30c9\u3092\u3001\u307e\u305f\u306f copilot app init \u3068 copilot env init \u3092\u5b9f\u884c\u6e08\u307f\u306e\u5834\u5408\u306f copilot svc init \u3092\u4f7f\u3063\u3066\u3001\u9759\u7684\u30b5\u30a4\u30c8\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 --sources \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9 (\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9) \u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u306f\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea/\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Manifest \u304c\u5165\u529b\u3055\u308c\u3001 copilot/[service name] \u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30a2\u30bb\u30c3\u30c8\u306e\u4ed5\u69d8\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u518d\u5e30\u7684\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u3092\u671b\u307e\u306a\u3044\u5834\u5408\u306f\u3001 exclude \u3068 reinclude \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6d3b\u7528\u3057\u3066\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5229\u7528\u53ef\u80fd\u306a\u30d1\u30bf\u30fc\u30f3\u30b7\u30f3\u30dc\u30eb\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002 * : \u5168\u3066\u306b\u30de\u30c3\u30c1\u3059\u308b ? : \u4efb\u610f\u306e 1 \u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b [sequence] : \u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u4efb\u610f\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b [!sequence] : \u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u542b\u307e\u308c\u306a\u3044\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b # \"example\" Service \u306e Manifest # \"Static Site\" \u30bf\u30a4\u30d7\u306e\u5b8c\u5168\u306a\u4ed5\u69d8\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044: # https://aws.github.io/copilot-cli/docs/manifest/static-site/ # Service \u540d\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u547d\u540d\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 name : example type : Static Site http : alias : 'example.com' files : - source : src/someDirectory recursive : true - source : someFile.html # \u4e0a\u8a18\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5024\u306f Environment \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u304c\u53ef\u80fd\u3067\u3059\u3002 # environments: # test: # files: # - source: './blob' # recursive: true # destination: 'assets' # exclude: '*' # reinclude: # - '*.txt' # - '*.png' exclude \u3068 reinclude \u30d5\u30a3\u30eb\u30bf\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 copilot deploy \u307e\u305f\u306f copilot svc deploy \u30b3\u30de\u30f3\u30c9\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u9078\u629e\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u305d\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30aa\u30ea\u30b8\u30f3\u3068\u3059\u308b CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u3066\u3001\u9759\u7684 Web \u30b5\u30a4\u30c8\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u9078\u629e\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30aa\u30ea\u30b8\u30f3\u3068\u3059\u308b CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u88cf\u3067\u306f Static Site Service \u306f\u4ed6\u306e Copilot \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068\u540c\u69d8\u306b\u3001CloudFormation \u30b9\u30bf\u30c3\u30af\u3092\u6301\u3061\u307e\u3059\u3002 Note \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306f Copilot \u3067\u7ba1\u7406\u3055\u308c\u308b\u305f\u3081\u3001Static Site S3 \u30d0\u30b1\u30c3\u30c8\u306e \u30b5\u30fc\u30d0\u30fc\u30a2\u30af\u30bb\u30b9\u30ed\u30ae\u30f3\u30b0 \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.28"},{"location":"ja/blogs/release-v128/#aws-copilot-v128-static-site-service","text":"\u6295\u7a3f\u65e5: 2023 \u5e74 5 \u6708 24 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.28 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u672c\u30ea\u30ea\u30fc\u30b9\u306b\u3054\u5354\u529b\u3044\u305f\u3060\u3044\u305f @interu \u3001 @0xO0O0 \u3001 @andreas-bergstrom \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 400 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.9k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.28 \u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b0\u6a5f\u80fd\u3068\u6539\u826f\u304c\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Static Site Service \u30bf\u30a4\u30d7 : AWS S3 \u3092\u4f7f\u3063\u3066\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u30db\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 . \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u4e26\u5217\u30d3\u30eb\u30c9 : \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u305d\u308c\u305e\u308c\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u4e26\u5217\u306b\u30d3\u30eb\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4e26\u5217\u30d3\u30eb\u30c9\u306b\u3088\u308a\u3001\u30d3\u30eb\u30c9\u3068 AWS ECR \u3078\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d7\u30c3\u30b7\u30e5\u306b\u304b\u304b\u308b\u5168\u4f53\u306e\u6642\u9593\u3092\u77ed\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 AWS Copilot \u3068\u306f? AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.28: Static Site Service \u30bf\u30a4\u30d7\u306e\u767b\u5834\uff01"},{"location":"ja/blogs/release-v128/#static-site-service","text":"\u6700\u65b0\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30bf\u30a4\u30d7\u3067\u3042\u308b Static Site Service \u306f\u3001Amazon S3 \u306b\u3088\u3063\u3066\u30db\u30b9\u30c8\u3055\u308c Amazon CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1\u3055\u308c\u308b\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3059\u3079\u3066\u3092\u6e96\u5099\u3001\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u5358\u7d14\u306a\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e Web \u30b5\u30a4\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3057\u307e\u3059\u3002\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u5fc5\u8981\u306a\u304f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5fdc\u3058\u3066\u30b5\u30a4\u30c8\u3092\u30d1\u30fc\u30bd\u30ca\u30e9\u30a4\u30ba\u3057\u305f\u308a\u3001\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u305f\u308a\u3059\u308b\u5fc5\u8981\u3082\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u3001\u9759\u7684\u306a\u30b5\u30a4\u30c8\u3092\u4f5c\u308b\uff01\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30bf\u30a4\u30d7\u306f\u3001\u6bd4\u8f03\u7684\u30b7\u30f3\u30d7\u30eb\u3067\u7d20\u65e9\u304f\u7acb\u3061\u4e0a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u9ad8\u3044\u3067\u3059\u3002","title":"Static Site Service \u30bf\u30a4\u30d7"},{"location":"ja/blogs/release-v128/#static-site","text":"\u9759\u7684\u30a2\u30bb\u30c3\u30c8 (HTML \u30d5\u30a1\u30a4\u30eb\u3001CSS \u3084 JavaScript \u306a\u3069\u306e\u30d5\u30a1\u30a4\u30eb) \u3092\u4f5c\u6210\u3057\u305f\u3089\u3001 copilot init \u30b3\u30de\u30f3\u30c9\u3092\u3001\u307e\u305f\u306f copilot app init \u3068 copilot env init \u3092\u5b9f\u884c\u6e08\u307f\u306e\u5834\u5408\u306f copilot svc init \u3092\u4f7f\u3063\u3066\u3001\u9759\u7684\u30b5\u30a4\u30c8\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 --sources \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9 (\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9) \u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u306f\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea/\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 Manifest \u304c\u5165\u529b\u3055\u308c\u3001 copilot/[service name] \u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30a2\u30bb\u30c3\u30c8\u306e\u4ed5\u69d8\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u518d\u5e30\u7684\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u3092\u671b\u307e\u306a\u3044\u5834\u5408\u306f\u3001 exclude \u3068 reinclude \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6d3b\u7528\u3057\u3066\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5229\u7528\u53ef\u80fd\u306a\u30d1\u30bf\u30fc\u30f3\u30b7\u30f3\u30dc\u30eb\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002 * : \u5168\u3066\u306b\u30de\u30c3\u30c1\u3059\u308b ? : \u4efb\u610f\u306e 1 \u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b [sequence] : \u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u4efb\u610f\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b [!sequence] : \u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u542b\u307e\u308c\u306a\u3044\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b # \"example\" Service \u306e Manifest # \"Static Site\" \u30bf\u30a4\u30d7\u306e\u5b8c\u5168\u306a\u4ed5\u69d8\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044: # https://aws.github.io/copilot-cli/docs/manifest/static-site/ # Service \u540d\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u547d\u540d\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 name : example type : Static Site http : alias : 'example.com' files : - source : src/someDirectory recursive : true - source : someFile.html # \u4e0a\u8a18\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5024\u306f Environment \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u304c\u53ef\u80fd\u3067\u3059\u3002 # environments: # test: # files: # - source: './blob' # recursive: true # destination: 'assets' # exclude: '*' # reinclude: # - '*.txt' # - '*.png' exclude \u3068 reinclude \u30d5\u30a3\u30eb\u30bf\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 copilot deploy \u307e\u305f\u306f copilot svc deploy \u30b3\u30de\u30f3\u30c9\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u9078\u629e\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u305d\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30aa\u30ea\u30b8\u30f3\u3068\u3059\u308b CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u3066\u3001\u9759\u7684 Web \u30b5\u30a4\u30c8\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u9078\u629e\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30aa\u30ea\u30b8\u30f3\u3068\u3059\u308b CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u88cf\u3067\u306f Static Site Service \u306f\u4ed6\u306e Copilot \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068\u540c\u69d8\u306b\u3001CloudFormation \u30b9\u30bf\u30c3\u30af\u3092\u6301\u3061\u307e\u3059\u3002 Note \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306f Copilot \u3067\u7ba1\u7406\u3055\u308c\u308b\u305f\u3081\u3001Static Site S3 \u30d0\u30b1\u30c3\u30c8\u306e \u30b5\u30fc\u30d0\u30fc\u30a2\u30af\u30bb\u30b9\u30ed\u30ae\u30f3\u30b0 \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6709\u52b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"Static Site \u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u65b9\u6cd5"},{"location":"ja/blogs/release-v128/#_1","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v129/","text":"AWS Copilot v1.29: AWS Copilot v1.29: Pipeline \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3068 CloudFront \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u7121\u52b9\u5316\uff01 \u6295\u7a3f\u65e5: 2023 \u5e74 7 \u6708 20 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.29 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u672c\u30ea\u30ea\u30fc\u30b9\u306b\u3054\u5354\u529b\u3044\u305f\u3060\u3044\u305f @tjhorner \u3001 @build-with-aws-copilot \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.9k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.29 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: Pipeline \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 : v1.27.0 \u3067\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068 Environment \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5bfe\u3059\u308b CDK \u3068 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u3001Copilot Pipeline \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u306e\u62e1\u5f35\u6027\u3092\u5229\u7528\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\uff01 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 Static Site \u6a5f\u80fd\u62e1\u5f35 : CloudFront \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u7121\u52b9\u5316\u3068 Static Site \u306b\u5408\u308f\u305b\u305f\u904b\u7528\u30b3\u30de\u30f3\u30c9\u3067 \u6700\u8fd1\u8ffd\u52a0\u3055\u308c\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30bf\u30a4\u30d7 \u3092\u6539\u5584\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Pipeline \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 Copilot Pipeline \u306f CDK \u3068 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3088\u308a\u3001\u3088\u308a\u8efd\u5feb\u3067\u62e1\u5f35\u6027\u304c\u3042\u308a\u307e\u3059\uff01\u3053\u306e\u6a5f\u80fd\u306f Pipeline \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b89\u5168\u304b\u3064\u7c21\u5358\u306b\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u4ed6\u306e\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30b3\u30de\u30f3\u30c9\u3068\u540c\u69d8\u306b\u3001 copilot pipeline override \u3092\u5b9f\u884c\u3057\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3044\u307e\u3059\u3002CDK \u307e\u305f\u306f YAML \u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 copilot pipeline deploy \u306b\u5bfe\u3059\u308b\u65b0\u3057\u3044 --diff \u30d5\u30e9\u30b0\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u65bd\u3059\u308b\u524d\u306b\u3001\u6700\u5f8c\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5909\u66f4\u3068\u306e\u5909\u66f4\u70b9\u306b\u3064\u3044\u3066\u30d7\u30ec\u30d3\u30e5\u30fc\u3067\u304d\u307e\u3059\u3002\u30d7\u30ec\u30d3\u30e5\u30fc\u5f8c\u3001Copilot \u306f\u51e6\u7406\u3092\u7d99\u7d9a\u3059\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\u78ba\u8a8d\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u5834\u5408\u306f\u3001 copilot pipeline deploy --diff --yes \u306e\u69d8\u306b --yes \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3088\u308a\u5b66\u3073\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001 CDK \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30ac\u30a4\u30c9 \u3068 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30ac\u30a4\u30c9 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Static Site \u306e\u62e1\u5f35 \u3088\u308a\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u958b\u767a\u306e\u305f\u3081\u306b\u3001Copilot \u306f\u3001Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5ea6\u306b CloudFront \u30a8\u30c3\u30b8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u7121\u52b9\u5316\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u66f4\u65b0\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u3059\u3050\u306b\u78ba\u8a8d\u3057\u3001\u914d\u4fe1\u3067\u304d\u307e\u3059\u3002 \u904b\u7528\u30b3\u30de\u30f3\u30c9\u306b\u306f Static Site \u5411\u3051\u306e\u8ffd\u52a0\u9805\u76ee\u304c\u3042\u308a\u307e\u3059\uff1a Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3051\u308b copilot svc show \u30b3\u30de\u30f3\u30c9\u306f S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30c4\u30ea\u30fc\u5f62\u5f0f\u3067\u8868\u793a\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3051\u308b copilot svc status \u30b3\u30de\u30f3\u30c9\u3067\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6570\u3001\u5408\u8a08\u30b5\u30a4\u30ba\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.29"},{"location":"ja/blogs/release-v129/#aws-copilot-v129-aws-copilot-v129-pipeline-cloudfront","text":"\u6295\u7a3f\u65e5: 2023 \u5e74 7 \u6708 20 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.29 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u672c\u30ea\u30ea\u30fc\u30b9\u306b\u3054\u5354\u529b\u3044\u305f\u3060\u3044\u305f @tjhorner \u3001 @build-with-aws-copilot \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 2.9k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.29 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: Pipeline \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 : v1.27.0 \u3067\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068 Environment \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5bfe\u3059\u308b CDK \u3068 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u3001Copilot Pipeline \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5bfe\u3057\u3066\u3082\u540c\u69d8\u306e\u62e1\u5f35\u6027\u3092\u5229\u7528\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\uff01 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 Static Site \u6a5f\u80fd\u62e1\u5f35 : CloudFront \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u7121\u52b9\u5316\u3068 Static Site \u306b\u5408\u308f\u305b\u305f\u904b\u7528\u30b3\u30de\u30f3\u30c9\u3067 \u6700\u8fd1\u8ffd\u52a0\u3055\u308c\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30bf\u30a4\u30d7 \u3092\u6539\u5584\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.29: AWS Copilot v1.29: Pipeline \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3068 CloudFront \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u7121\u52b9\u5316\uff01"},{"location":"ja/blogs/release-v129/#pipeline","text":"Copilot Pipeline \u306f CDK \u3068 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3088\u308a\u3001\u3088\u308a\u8efd\u5feb\u3067\u62e1\u5f35\u6027\u304c\u3042\u308a\u307e\u3059\uff01\u3053\u306e\u6a5f\u80fd\u306f Pipeline \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b89\u5168\u304b\u3064\u7c21\u5358\u306b\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u4ed6\u306e\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30b3\u30de\u30f3\u30c9\u3068\u540c\u69d8\u306b\u3001 copilot pipeline override \u3092\u5b9f\u884c\u3057\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3044\u307e\u3059\u3002CDK \u307e\u305f\u306f YAML \u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 copilot pipeline deploy \u306b\u5bfe\u3059\u308b\u65b0\u3057\u3044 --diff \u30d5\u30e9\u30b0\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u65bd\u3059\u308b\u524d\u306b\u3001\u6700\u5f8c\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5909\u66f4\u3068\u306e\u5909\u66f4\u70b9\u306b\u3064\u3044\u3066\u30d7\u30ec\u30d3\u30e5\u30fc\u3067\u304d\u307e\u3059\u3002\u30d7\u30ec\u30d3\u30e5\u30fc\u5f8c\u3001Copilot \u306f\u51e6\u7406\u3092\u7d99\u7d9a\u3059\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\u78ba\u8a8d\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u5834\u5408\u306f\u3001 copilot pipeline deploy --diff --yes \u306e\u69d8\u306b --yes \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3088\u308a\u5b66\u3073\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001 CDK \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30ac\u30a4\u30c9 \u3068 YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30ac\u30a4\u30c9 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Pipeline \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"},{"location":"ja/blogs/release-v129/#static-site","text":"\u3088\u308a\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u958b\u767a\u306e\u305f\u3081\u306b\u3001Copilot \u306f\u3001Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5ea6\u306b CloudFront \u30a8\u30c3\u30b8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u7121\u52b9\u5316\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u66f4\u65b0\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u3059\u3050\u306b\u78ba\u8a8d\u3057\u3001\u914d\u4fe1\u3067\u304d\u307e\u3059\u3002 \u904b\u7528\u30b3\u30de\u30f3\u30c9\u306b\u306f Static Site \u5411\u3051\u306e\u8ffd\u52a0\u9805\u76ee\u304c\u3042\u308a\u307e\u3059\uff1a Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3051\u308b copilot svc show \u30b3\u30de\u30f3\u30c9\u306f S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30c4\u30ea\u30fc\u5f62\u5f0f\u3067\u8868\u793a\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3051\u308b copilot svc status \u30b3\u30de\u30f3\u30c9\u3067\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6570\u3001\u5408\u8a08\u30b5\u30a4\u30ba\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"Static Site \u306e\u62e1\u5f35"},{"location":"ja/blogs/release-v129/#_1","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6d45\u91ce\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v130/","text":"AWS Copilot v1.30: copilot run local \u30b3\u30de\u30f3\u30c9\u3001Ctrl-C \u6a5f\u80fd\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u51e6\u7406\u3001 copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 \u6295\u7a3f\u65e5: 2023 \u5e74 8 \u6708 30 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.30 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u672c\u30ea\u30ea\u30fc\u30b9\u306b\u3054\u5354\u529b\u3044\u305f\u3060\u3044\u305f @Varun359 \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.30 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: copilot run local : Copilot \u306b\u65b0\u3057\u3044\u64cd\u4f5c\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30ed\u30fc\u30ab\u30eb\u3067 Service \u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f! \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 Ctrl-C \u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af : \u3082\u3046\u5b8c\u4e86\u307e\u3067\u5f85\u3064\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff01\u3044\u3064\u3067\u3082\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089 CloudFormation \u30c7\u30d7\u30ed\u30a4\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e Pipline \u30a2\u30af\u30b7\u30e7\u30f3 : \u30ef\u30fc\u30af\u30ed\u30fc\u30c9/Environment \u306e\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306b\u3001DB \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u7d71\u5408\u30c6\u30b9\u30c8\u3001\u305d\u306e\u4ed6\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u633f\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 : \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u30b9\u30b3\u30fc\u30d7\u3084\u67d4\u8edf\u6027\u306b\u3064\u3044\u3066\u62e1\u5145\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 --detach flag : CloudFormation \u30b9\u30bf\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306e\u9032\u884c\u72b6\u6cc1\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u4e0a\u3067\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 copilot run local Service \u306b\u5bfe\u3059\u308b\u5909\u66f4\u4f5c\u696d\u3092\u3057\u3066\u3044\u308b\u3068\u304d\u306b copilot run local \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306a\u3057\u306b\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u30c6\u30b9\u30c8\u3067\u304d\u308b\u305f\u3081\u3001\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30eb\u30fc\u30d7\u3092\u9ad8\u901f\u5316\u3067\u304d\u307e\u3059\u3002\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u307e\u305a copilot svc deploy \u3092\u5b9f\u884c\u3057\u3066 Service \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Service \u306e\u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\u3092\u958b\u59cb\u3067\u304d\u307e\u3059\u3002\u5909\u66f4\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6e96\u5099\u3092\u3057\u305f\u5f8c\u3001 copilot run local \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u4e21\u65b9\u306b\u5bfe\u3057\u3066\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 image \u3067\u6307\u5b9a\u3055\u308c\u305f\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u307e\u305f\u306f pull \u3057\u307e\u3059\u3002 secrets \u3067\u6307\u5b9a\u3055\u308c\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 \u73fe\u5728\u306e IAM \u30e6\u30fc\u30b6\u30fc/\u30ed\u30fc\u30eb\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 variables \u3068\u30b9\u30c6\u30c3\u30d7 2 \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u5024\u53ca\u3073\u30b9\u30c6\u30c3\u30d7 3 \u306e IAM \u8a8d\u8a3c\u60c5\u5831\u3092\u9069\u7528\u3057\u305f\u72b6\u614b\u3067\u30b9\u30c6\u30c3\u30d7 1 \u3067\u6307\u5b9a\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 Service \u304b\u3089\u306e\u30ed\u30b0\u306f\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u30c6\u30b9\u30c8\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u306b Ctrl-C \u3092\u5165\u529b\u3059\u308b\u3068\u3001Copilot \u304c\u5b9f\u884c\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u3059\u3079\u3066\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u304b\u3089\u7d42\u4e86\u3057\u307e\u3059! Ctrl-C \u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af Service\u3001Job\u3001Environment \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u306e\u3092\u5f85\u3063\u3066\u3044\u308b\u9593\u3001 Ctrl-C \u3092\u62bc\u3057\u3066\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u64cd\u4f5c\u306f\u30b9\u30bf\u30c3\u30af\u3092\u4ee5\u524d\u306e\u8a2d\u5b9a\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u304b\u3001\u521d\u3081\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f\u30b9\u30bf\u30c3\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 'Ctrl-C' \u30922\u56de\u62bc\u3059\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d42\u4e86\u3057\u307e\u3059\u304c\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3084\u524a\u9664\u306f\u7d9a\u884c\u3055\u308c\u307e\u3059\u3002 Ctrl-C \u306f copilot svc deploy \u3001 copilot job deploy \u3001 copilot env deploy \u3001 copilot deploy \u306e\u5404\u30b3\u30de\u30f3\u30c9\u3067\u6709\u52b9\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u30c7\u30d7\u30ed\u30a4\u6642\u306e\u30a2\u30af\u30b7\u30e7\u30f3 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u79fb\u884c\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5065\u5168\u6027\u30c1\u30a7\u30c3\u30af\u306f\u305d\u306e\u66f4\u65b0\u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u306b Pipeline \u3067 E2E \u307e\u305f\u306f\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u3001 Copilot Pipeline \u3067\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Copilot \u306f\u4ee5\u524d\u304b\u3089 'test_commands' \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001 \u30c7\u30d7\u30ed\u30a4\u524d \u3068 \u30c7\u30d7\u30ed\u30a4\u5f8c \u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066 Pipeline \u306e\u6a5f\u80fd\u3068\u67d4\u8edf\u6027\u304c\u62e1\u5f35\u3055\u308c\u307e\u3059\u3002 test_commands \u306e\u5834\u5408\u3001Copilot \u306f\u30b3\u30de\u30f3\u30c9\u6587\u5b57\u5217\u3092\u542b\u3080 buildspec \u3092 Pipeline \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3057\u307e\u3059\u3002 pre_deployments \u3068 post_deployments \u306e\u5834\u5408\u3001Copilot \u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e buildspec \u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u8a2d\u5b9a\u306f\u3001 Pipeline Manifest \u3067\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\u8907\u6570\u306e\u30c7\u30d7\u30ed\u30a4\u524d\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u8907\u6570\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u3001 [pre_/post_]deployments.buildspec \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3067 buildspec \u3078\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Copilot \u306f\u30a2\u30af\u30b7\u30e7\u30f3\u7528\u306e CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001Pipeline \u304a\u3088\u3073 Application \u3068\u540c\u3058\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002buildspec \u5185\u3067 Copilot \u30b3\u30de\u30f3\u30c9 ( copilot svc exec \u3084 copilot task run \u306a\u3069) \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Environment \u306b\u3042\u308b VPC \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u5148\u306e Environment \u306b\u3042\u308b VPC \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u306a\u304a\u3001 $COPILOT_APPLICATION_NAME \u304a\u3088\u3073 $COPILOT_ENVIRONMENT_NAME \u3068\u3044\u3046 Copilot \u74b0\u5883\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001buildspec \u30d5\u30a1\u30a4\u30eb\u3092\u8907\u6570\u306e Environment \u3067\u518d\u5229\u7528\u3067\u304d\u307e\u3059\u3002 depends_on \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u304a\u3088\u3073\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30b0\u30eb\u30fc\u30d7\u5185\u3067\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u9806\u5e8f\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u4e26\u884c\u3057\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 post_deployments \u3068 test_commands \u306f\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u3059\u3002 stages : - name : test require_approval : true pre_deployments : db_migration : # \u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u524d buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # buildspec \u3078\u306e\u30d1\u30b9 deployments : # \u4efb\u610f\u9805\u76ee \u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # \u4efb\u610f\u9805\u76ee \u30a2\u30af\u30b7\u30e7\u30f3\u306e\u9806\u5e8f copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 copilot deploy \u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u521d\u671f\u5316\u3001Environment \u306e\u521d\u671f\u5316\u3068\u30c7\u30d7\u30ed\u30a4\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002Application \u3068 Manifest \u306e\u307f\u3092\u542b\u3080\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u958b\u59cb\u3057\u3001\u5358\u4e00\u306e\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u4f5c\u3055\u305b\u308b Environment \u3068 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5fc5\u8981\u306a\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\"prod\" Environment \u3068 \"frontend\" \u304a\u3088\u3073 \"backend\" Service \u306e Manifest \u3092\u542b\u3080\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002 copilot deploy \u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068 Environment \u3092\u521d\u671f\u5316\u3059\u308b\u3088\u3046\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u3057\u3001Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u5c0b\u306d\u3066\u304b\u3089\u3001Environment \u3068\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ git clone myrepo $ cd myrepo $ copilot app init myapp $ copilot deploy -n frontend -e prod Environment \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 $ copilot deploy --region us-west-2 --profile prod-profile -e prod --init-env \u65e2\u306b Environment \u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002 $ copilot deploy --deploy-env = false < id=\"use---detach-to-deploy-without-waiting\"> --detach \u3092\u4f7f\u7528\u3057\u3066\u5f85\u3061\u6642\u9593\u306a\u3057\u3067\u30c7\u30d7\u30ed\u30a4 \u901a\u5e38\u3001 deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f\u9032\u6357\u72b6\u6cc1\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u8868\u793a\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3059\u308b\u306e\u3092\u5f85\u3061\u307e\u3059\u3002 Copilot \u3092\u5f85\u6a5f\u3055\u305b\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001 --detach \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002Copilot \u306f\u30c7\u30d7\u30ed\u30a4\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3001\u9032\u884c\u72b6\u6cc1\u3092\u8868\u793a\u3057\u305f\u308a\u30c7\u30d7\u30ed\u30a4\u5b8c\u4e86\u307e\u3067\u5f85\u6a5f\u3057\u307e\u305b\u3093\u3002 --detach \u30d5\u30e9\u30b0\u306f\u3001 copilot svc deploy \u3001 copilot job deploy \u3001 copilot env deploy \u3001 copilot deploy \u30b3\u30de\u30f3\u30c9\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u6b21\u306f\uff1f \u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"Release v1.30"},{"location":"ja/blogs/release-v130/#aws-copilot-v130-copilot-run-local-ctrl-c-copilot-deploy","text":"\u6295\u7a3f\u65e5: 2023 \u5e74 8 \u6708 30 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.30 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u672c\u30ea\u30ea\u30fc\u30b9\u306b\u3054\u5354\u529b\u3044\u305f\u3060\u3044\u305f @Varun359 \u306b\u611f\u8b1d\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.30 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: copilot run local : Copilot \u306b\u65b0\u3057\u3044\u64cd\u4f5c\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30ed\u30fc\u30ab\u30eb\u3067 Service \u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f! \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 Ctrl-C \u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af : \u3082\u3046\u5b8c\u4e86\u307e\u3067\u5f85\u3064\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff01\u3044\u3064\u3067\u3082\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089 CloudFormation \u30c7\u30d7\u30ed\u30a4\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 \u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e Pipline \u30a2\u30af\u30b7\u30e7\u30f3 : \u30ef\u30fc\u30af\u30ed\u30fc\u30c9/Environment \u306e\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306b\u3001DB \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u7d71\u5408\u30c6\u30b9\u30c8\u3001\u305d\u306e\u4ed6\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u633f\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 : \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u30b9\u30b3\u30fc\u30d7\u3084\u67d4\u8edf\u6027\u306b\u3064\u3044\u3066\u62e1\u5145\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 --detach flag : CloudFormation \u30b9\u30bf\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306e\u9032\u884c\u72b6\u6cc1\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u4e0a\u3067\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002 \u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044 \u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.30: copilot run local \u30b3\u30de\u30f3\u30c9\u3001Ctrl-C \u6a5f\u80fd\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u51e6\u7406\u3001copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35"},{"location":"ja/blogs/release-v130/#copilot-run-local","text":"Service \u306b\u5bfe\u3059\u308b\u5909\u66f4\u4f5c\u696d\u3092\u3057\u3066\u3044\u308b\u3068\u304d\u306b copilot run local \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306a\u3057\u306b\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u30c6\u30b9\u30c8\u3067\u304d\u308b\u305f\u3081\u3001\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30eb\u30fc\u30d7\u3092\u9ad8\u901f\u5316\u3067\u304d\u307e\u3059\u3002\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u307e\u305a copilot svc deploy \u3092\u5b9f\u884c\u3057\u3066 Service \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Service \u306e\u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\u3092\u958b\u59cb\u3067\u304d\u307e\u3059\u3002\u5909\u66f4\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6e96\u5099\u3092\u3057\u305f\u5f8c\u3001 copilot run local \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f\u30d7\u30e9\u30a4\u30de\u30ea\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u4e21\u65b9\u306b\u5bfe\u3057\u3066\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 image \u3067\u6307\u5b9a\u3055\u308c\u305f\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u307e\u305f\u306f pull \u3057\u307e\u3059\u3002 secrets \u3067\u6307\u5b9a\u3055\u308c\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 \u73fe\u5728\u306e IAM \u30e6\u30fc\u30b6\u30fc/\u30ed\u30fc\u30eb\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 variables \u3068\u30b9\u30c6\u30c3\u30d7 2 \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u5024\u53ca\u3073\u30b9\u30c6\u30c3\u30d7 3 \u306e IAM \u8a8d\u8a3c\u60c5\u5831\u3092\u9069\u7528\u3057\u305f\u72b6\u614b\u3067\u30b9\u30c6\u30c3\u30d7 1 \u3067\u6307\u5b9a\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 Service \u304b\u3089\u306e\u30ed\u30b0\u306f\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u30c6\u30b9\u30c8\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u306b Ctrl-C \u3092\u5165\u529b\u3059\u308b\u3068\u3001Copilot \u304c\u5b9f\u884c\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u3059\u3079\u3066\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u304b\u3089\u7d42\u4e86\u3057\u307e\u3059!","title":"copilot run local"},{"location":"ja/blogs/release-v130/#ctrl-c","text":"Service\u3001Job\u3001Environment \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u306e\u3092\u5f85\u3063\u3066\u3044\u308b\u9593\u3001 Ctrl-C \u3092\u62bc\u3057\u3066\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u64cd\u4f5c\u306f\u30b9\u30bf\u30c3\u30af\u3092\u4ee5\u524d\u306e\u8a2d\u5b9a\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u304b\u3001\u521d\u3081\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f\u30b9\u30bf\u30c3\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 'Ctrl-C' \u30922\u56de\u62bc\u3059\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d42\u4e86\u3057\u307e\u3059\u304c\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3084\u524a\u9664\u306f\u7d9a\u884c\u3055\u308c\u307e\u3059\u3002 Ctrl-C \u306f copilot svc deploy \u3001 copilot job deploy \u3001 copilot env deploy \u3001 copilot deploy \u306e\u5404\u30b3\u30de\u30f3\u30c9\u3067\u6709\u52b9\u306b\u306a\u308a\u307e\u3057\u305f\u3002","title":"Ctrl-C \u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af"},{"location":"ja/blogs/release-v130/#_1","text":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u79fb\u884c\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5065\u5168\u6027\u30c1\u30a7\u30c3\u30af\u306f\u305d\u306e\u66f4\u65b0\u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u306b Pipeline \u3067 E2E \u307e\u305f\u306f\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u3001 Copilot Pipeline \u3067\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Copilot \u306f\u4ee5\u524d\u304b\u3089 'test_commands' \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u304c\u3001 \u30c7\u30d7\u30ed\u30a4\u524d \u3068 \u30c7\u30d7\u30ed\u30a4\u5f8c \u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066 Pipeline \u306e\u6a5f\u80fd\u3068\u67d4\u8edf\u6027\u304c\u62e1\u5f35\u3055\u308c\u307e\u3059\u3002 test_commands \u306e\u5834\u5408\u3001Copilot \u306f\u30b3\u30de\u30f3\u30c9\u6587\u5b57\u5217\u3092\u542b\u3080 buildspec \u3092 Pipeline \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3057\u307e\u3059\u3002 pre_deployments \u3068 post_deployments \u306e\u5834\u5408\u3001Copilot \u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e buildspec \u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u8a2d\u5b9a\u306f\u3001 Pipeline Manifest \u3067\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\u8907\u6570\u306e\u30c7\u30d7\u30ed\u30a4\u524d\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u8907\u6570\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u3001 [pre_/post_]deployments.buildspec \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3067 buildspec \u3078\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Copilot \u306f\u30a2\u30af\u30b7\u30e7\u30f3\u7528\u306e CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001Pipeline \u304a\u3088\u3073 Application \u3068\u540c\u3058\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002buildspec \u5185\u3067 Copilot \u30b3\u30de\u30f3\u30c9 ( copilot svc exec \u3084 copilot task run \u306a\u3069) \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Environment \u306b\u3042\u308b VPC \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u5148\u306e Environment \u306b\u3042\u308b VPC \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u306a\u304a\u3001 $COPILOT_APPLICATION_NAME \u304a\u3088\u3073 $COPILOT_ENVIRONMENT_NAME \u3068\u3044\u3046 Copilot \u74b0\u5883\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001buildspec \u30d5\u30a1\u30a4\u30eb\u3092\u8907\u6570\u306e Environment \u3067\u518d\u5229\u7528\u3067\u304d\u307e\u3059\u3002 depends_on \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u304a\u3088\u3073\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30b0\u30eb\u30fc\u30d7\u5185\u3067\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u9806\u5e8f\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u4e26\u884c\u3057\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 post_deployments \u3068 test_commands \u306f\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u3059\u3002 stages : - name : test require_approval : true pre_deployments : db_migration : # \u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u524d buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # buildspec \u3078\u306e\u30d1\u30b9 deployments : # \u4efb\u610f\u9805\u76ee \u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # \u4efb\u610f\u9805\u76ee \u30a2\u30af\u30b7\u30e7\u30f3\u306e\u9806\u5e8f","title":"\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u30a2\u30af\u30b7\u30e7\u30f3"},{"location":"ja/blogs/release-v130/#copilot-deploy","text":"copilot deploy \u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u521d\u671f\u5316\u3001Environment \u306e\u521d\u671f\u5316\u3068\u30c7\u30d7\u30ed\u30a4\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002Application \u3068 Manifest \u306e\u307f\u3092\u542b\u3080\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u958b\u59cb\u3057\u3001\u5358\u4e00\u306e\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u4f5c\u3055\u305b\u308b Environment \u3068 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5fc5\u8981\u306a\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\"prod\" Environment \u3068 \"frontend\" \u304a\u3088\u3073 \"backend\" Service \u306e Manifest \u3092\u542b\u3080\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002 copilot deploy \u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068 Environment \u3092\u521d\u671f\u5316\u3059\u308b\u3088\u3046\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u3057\u3001Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u5c0b\u306d\u3066\u304b\u3089\u3001Environment \u3068\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ git clone myrepo $ cd myrepo $ copilot app init myapp $ copilot deploy -n frontend -e prod Environment \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 $ copilot deploy --region us-west-2 --profile prod-profile -e prod --init-env \u65e2\u306b Environment \u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002 $ copilot deploy --deploy-env = false < id=\"use---detach-to-deploy-without-waiting\">","title":"copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35"},{"location":"ja/blogs/release-v130/#-detach","text":"\u901a\u5e38\u3001 deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u306f\u9032\u6357\u72b6\u6cc1\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u8868\u793a\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3059\u308b\u306e\u3092\u5f85\u3061\u307e\u3059\u3002 Copilot \u3092\u5f85\u6a5f\u3055\u305b\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001 --detach \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002Copilot \u306f\u30c7\u30d7\u30ed\u30a4\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3001\u9032\u884c\u72b6\u6cc1\u3092\u8868\u793a\u3057\u305f\u308a\u30c7\u30d7\u30ed\u30a4\u5b8c\u4e86\u307e\u3067\u5f85\u6a5f\u3057\u307e\u305b\u3093\u3002 --detach \u30d5\u30e9\u30b0\u306f\u3001 copilot svc deploy \u3001 copilot job deploy \u3001 copilot env deploy \u3001 copilot deploy \u30b3\u30de\u30f3\u30c9\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002","title":"--detach \u3092\u4f7f\u7528\u3057\u3066\u5f85\u3061\u6642\u9593\u306a\u3057\u3067\u30c7\u30d7\u30ed\u30a4"},{"location":"ja/blogs/release-v130/#_2","text":"\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u3088\u308a\u3001\u65b0\u3057\u3044 Copilot CLI \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 GitHub \u3084 \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u6b8b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u6700\u65b0 CLI \u30d0\u30fc\u30b8\u30e7\u30f3 \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30b9\u30bf\u30fc\u30c8\u30ac\u30a4\u30c9 \u3092\u8a66\u3059 GitHub \u3067\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u306e\u5168\u6587\u3092\u8aad\u3080 \u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u7ffb\u8a33\u306f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u306e\u6749\u672c\u304c\u62c5\u5f53\u3057\u307e\u3057\u305f\u3002","title":"\u6b21\u306f\uff1f"},{"location":"ja/blogs/release-v131/","text":"AWS Copilot v1.31: NLB \u8a2d\u5b9a\u306e\u62e1\u5f35\u3001\u30bf\u30b9\u30af\u5931\u6557\u6642\u306e\u30ed\u30b0\u306e\u6539\u5584\u3001 copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 \u6295\u7a3f\u65e5: 2023 \u5e74 10 \u6708 5 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.31 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.31 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: NLB \u8a2d\u5b9a\u306e\u62e1\u5f35 : Copilot \u304c\u7ba1\u7406\u3059\u308b Network Load Balancer (NLB) \u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u8ffd\u52a0\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u307e\u305f\u3001NLB \u306e\u8a2d\u5b9a\u3067 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u6307\u5b9a\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 \u30bf\u30b9\u30af\u5931\u6557\u6642\u306e\u30ed\u30b0\u306e\u6539\u5584 : Copilot \u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u30bf\u30b9\u30af\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u3001\u3088\u308a\u8a73\u7d30\u306a\u30ed\u30b0\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002 copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 : \u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u4e00\u5ea6\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u307e\u305f\u3001 --all \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u3001\u3059\u3079\u3066\u306e\u30ed\u30fc\u30ab\u30eb\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u3082\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u9759\u7684\u30b5\u30a4\u30c8\u3078 ACM \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8 : \u81ea\u5df1\u7f72\u540d\u306e ACM \u8a3c\u660e\u66f8\u3092\u3001\u9759\u7684\u30b5\u30a4\u30c8\u3078\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 NLB \u8a2d\u5b9a\u306e\u62e1\u5f35 Copilot \u306b\u3066\u3001NLB \u306e\u8a2d\u5b9a\u3067 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u6307\u5b9a\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002NLB \u304c\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u306f nlb.port \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb: port: 8080/udp Info NLB \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u3001NLB \u3078\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u5f37\u5316\u3067\u304d\u308b AWS \u306e\u65b0\u6a5f\u80fd\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 AWS \u30d6\u30ed\u30b0 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002Copilot \u3067\u3053\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001 NetworkLoadBalancer \u304a\u3088\u3073 TargetGroup \u30ea\u30bd\u30fc\u30b9\u3092\u518d\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Copilot v1.31 \u6642\u70b9\u3067\u306f\u3001 udp \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306e\u307f\u3001 NetworkLoadBalancer \u304a\u3088\u3073 TargetGroup \u30ea\u30bd\u30fc\u30b9\u306e\u518d\u4f5c\u6210 (NLB \u3078\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u7d10\u4ed8\u3051) \u304c\u884c\u308f\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u3001Copilot v1.33 \u3067\u306f\u3001 udp \u4ee5\u5916\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u3057\u3066\u3082\u3053\u306e\u5909\u66f4\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u3059\u306a\u308f\u3061\u3001DNS \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001NLB \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002DNS \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u65b0\u3057\u3044 NLB \u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 copilot deploy \u3067\u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u4e00\u5ea6\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 --name \u30d5\u30e9\u30b0\u3067\u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u65b0\u3057\u3044 --all \u30d5\u30e9\u30b0\u3092 --init-wkld \u30d5\u30e9\u30b0\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5229\u7528\u3059\u308b\u3068\u3001\u3059\u3079\u3066\u306e\u30ed\u30fc\u30ab\u30eb\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u521d\u671f\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001Service \u540d\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b \"deployment order\" \u30bf\u30b0\u3092\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u305f\u3068\u3048\u3070\u3001\u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u542b\u3080\u65b0\u3057\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u305f\u5834\u5408\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u74b0\u5883\u3068\u3059\u3079\u3066\u306e Service \u3092\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002 copilot deploy --init-env --deploy-env -e dev --all --init-wkld \u5225\u306e\u4f8b\u3068\u3057\u3066\u3001\u4ed6\u306e Service \u304c\u516c\u958b\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u3066\u3044\u308b Worker Service \u304c\u3042\u308b\u5834\u5408\u3001 --all \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u540d\u524d\u3068\u9806\u5e8f\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 copilot deploy --all -n fe/1 -n worker/2 \u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u306f\u3001\u307e\u305a fe \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u3001\u6b21\u306b worker \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u306b\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u6b8b\u308a\u306e Service \u3084 Job \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u30bf\u30b9\u30af\u5931\u6557\u6642\u306e\u30ed\u30b0\u306e\u6539\u5584 Copilot v1.31 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001ECS \u30bf\u30b9\u30af\u304c\u505c\u6b62\u3057\u305f\u539f\u56e0\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u3001AWS \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001\u300cECS\u300d->\u300c\u30b5\u30fc\u30d3\u30b9\u300d->\u300c\u505c\u6b62\u6e08\u307f\u306e\u30bf\u30b9\u30af\u300d->\u300c\u505c\u6b62\u7406\u7531\u300d\u306b\u30da\u30fc\u30b8\u9077\u79fb\u3057\u3066\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002 \u3053\u306e\u6a5f\u80fd\u62e1\u5f35\u306b\u3088\u308a\u3001 copilot [noun] deploy \u306f CloudFormation \u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9032\u6357\u30c8\u30e9\u30c3\u30ab\u30fc\u306e\u4e2d\u306b ECS \u30bf\u30b9\u30af\u306e\u505c\u6b62\u7406\u7531\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002Copilot \u306f\u3001Load Balanced Web Service\u3001Backend Service\u3001Worker Service \u306e\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u767a\u751f\u3057\u305f\u3001\u76f4\u8fd1\u306e 2 \u3064\u306e\u30bf\u30b9\u30af\u306e\u5931\u6557\u3092\u8868\u793a\u3057\u307e\u3059\u3002 - An ECS service to run and maintain your tasks in the environment cluster Deployments Revision Rollout Desired Running Failed Pending PRIMARY 11 [in progress] 1 0 1 0 ACTIVE 8 [completed] 1 1 0 0 Latest 2 stopped tasks TaskId CurrentStatus DesiredStatus 6b1d6e32 DEPROVISIONING STOPPED 9802d212 STOPPED STOPPED \u2718 Latest 2 tasks stopped reason - [6b1d6e32,9802d212]: Essential container in task exited Troubleshoot task stopped reason 1. You can run `copilot svc logs --previous` to see the logs of the last stopped task. 2. You can visit this article: https://repost.aws/knowledge-center/ecs-task-stopped. \u9759\u7684\u30b5\u30a4\u30c8\u3078 ACM \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8 Copilot \u3067\u306f\u3001 Static Site \u306e Manifest \u306b\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.certificate \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 us-east-1 \u306e\u691c\u8a3c\u6e08\u307f ACM \u8a3c\u660e\u66f8\u306e ARN \u3092\u6b21\u306e\u3088\u3046\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 http : alias : example.com certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" example.com \u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u8a3c\u660e\u66f8\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u307e\u305f\u306f Subject Alternative Name (SAN) \u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u306f\u3001Copilot \u304c\u7ba1\u7406\u3059\u308b\u8a3c\u660e\u66f8\u306e\u4ee3\u308f\u308a\u306b\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002","title":"Release v1.31"},{"location":"ja/blogs/release-v131/#aws-copilot-v131-nlb-copilot-deploy","text":"\u6295\u7a3f\u65e5: 2023 \u5e74 10 \u6708 5 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.31 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3k \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.31 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: NLB \u8a2d\u5b9a\u306e\u62e1\u5f35 : Copilot \u304c\u7ba1\u7406\u3059\u308b Network Load Balancer (NLB) \u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u8ffd\u52a0\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u307e\u305f\u3001NLB \u306e\u8a2d\u5b9a\u3067 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u6307\u5b9a\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 \u30bf\u30b9\u30af\u5931\u6557\u6642\u306e\u30ed\u30b0\u306e\u6539\u5584 : Copilot \u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u30bf\u30b9\u30af\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u3001\u3088\u308a\u8a73\u7d30\u306a\u30ed\u30b0\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002 copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35 : \u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u4e00\u5ea6\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u307e\u305f\u3001 --all \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u3001\u3059\u3079\u3066\u306e\u30ed\u30fc\u30ab\u30eb\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u3082\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u9759\u7684\u30b5\u30a4\u30c8\u3078 ACM \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8 : \u81ea\u5df1\u7f72\u540d\u306e ACM \u8a3c\u660e\u66f8\u3092\u3001\u9759\u7684\u30b5\u30a4\u30c8\u3078\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.31: NLB \u8a2d\u5b9a\u306e\u62e1\u5f35\u3001\u30bf\u30b9\u30af\u5931\u6557\u6642\u306e\u30ed\u30b0\u306e\u6539\u5584\u3001copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35"},{"location":"ja/blogs/release-v131/#nlb","text":"Copilot \u306b\u3066\u3001NLB \u306e\u8a2d\u5b9a\u3067 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u6307\u5b9a\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002NLB \u304c\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u306f nlb.port \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb: port: 8080/udp Info NLB \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u3001NLB \u3078\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3092\u5f37\u5316\u3067\u304d\u308b AWS \u306e\u65b0\u6a5f\u80fd\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 AWS \u30d6\u30ed\u30b0 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002Copilot \u3067\u3053\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001 NetworkLoadBalancer \u304a\u3088\u3073 TargetGroup \u30ea\u30bd\u30fc\u30b9\u3092\u518d\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Copilot v1.31 \u6642\u70b9\u3067\u306f\u3001 udp \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306e\u307f\u3001 NetworkLoadBalancer \u304a\u3088\u3073 TargetGroup \u30ea\u30bd\u30fc\u30b9\u306e\u518d\u4f5c\u6210 (NLB \u3078\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u7d10\u4ed8\u3051) \u304c\u884c\u308f\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u3001Copilot v1.33 \u3067\u306f\u3001 udp \u4ee5\u5916\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u3057\u3066\u3082\u3053\u306e\u5909\u66f4\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u3059\u306a\u308f\u3061\u3001DNS \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001NLB \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002DNS \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u65b0\u3057\u3044 NLB \u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"NLB \u8a2d\u5b9a\u306e\u62e1\u5f35"},{"location":"ja/blogs/release-v131/#copilot-deploy","text":"copilot deploy \u3067\u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u4e00\u5ea6\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 --name \u30d5\u30e9\u30b0\u3067\u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u65b0\u3057\u3044 --all \u30d5\u30e9\u30b0\u3092 --init-wkld \u30d5\u30e9\u30b0\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5229\u7528\u3059\u308b\u3068\u3001\u3059\u3079\u3066\u306e\u30ed\u30fc\u30ab\u30eb\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u521d\u671f\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001Service \u540d\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b \"deployment order\" \u30bf\u30b0\u3092\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u305f\u3068\u3048\u3070\u3001\u8907\u6570\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u542b\u3080\u65b0\u3057\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u305f\u5834\u5408\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u74b0\u5883\u3068\u3059\u3079\u3066\u306e Service \u3092\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002 copilot deploy --init-env --deploy-env -e dev --all --init-wkld \u5225\u306e\u4f8b\u3068\u3057\u3066\u3001\u4ed6\u306e Service \u304c\u516c\u958b\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u3066\u3044\u308b Worker Service \u304c\u3042\u308b\u5834\u5408\u3001 --all \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u540d\u524d\u3068\u9806\u5e8f\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 copilot deploy --all -n fe/1 -n worker/2 \u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u306f\u3001\u307e\u305a fe \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u3001\u6b21\u306b worker \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u306b\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u6b8b\u308a\u306e Service \u3084 Job \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002","title":"copilot deploy \u306e\u6a5f\u80fd\u62e1\u5f35"},{"location":"ja/blogs/release-v131/#_1","text":"Copilot v1.31 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001ECS \u30bf\u30b9\u30af\u304c\u505c\u6b62\u3057\u305f\u539f\u56e0\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u3001AWS \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001\u300cECS\u300d->\u300c\u30b5\u30fc\u30d3\u30b9\u300d->\u300c\u505c\u6b62\u6e08\u307f\u306e\u30bf\u30b9\u30af\u300d->\u300c\u505c\u6b62\u7406\u7531\u300d\u306b\u30da\u30fc\u30b8\u9077\u79fb\u3057\u3066\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002 \u3053\u306e\u6a5f\u80fd\u62e1\u5f35\u306b\u3088\u308a\u3001 copilot [noun] deploy \u306f CloudFormation \u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9032\u6357\u30c8\u30e9\u30c3\u30ab\u30fc\u306e\u4e2d\u306b ECS \u30bf\u30b9\u30af\u306e\u505c\u6b62\u7406\u7531\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002Copilot \u306f\u3001Load Balanced Web Service\u3001Backend Service\u3001Worker Service \u306e\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u767a\u751f\u3057\u305f\u3001\u76f4\u8fd1\u306e 2 \u3064\u306e\u30bf\u30b9\u30af\u306e\u5931\u6557\u3092\u8868\u793a\u3057\u307e\u3059\u3002 - An ECS service to run and maintain your tasks in the environment cluster Deployments Revision Rollout Desired Running Failed Pending PRIMARY 11 [in progress] 1 0 1 0 ACTIVE 8 [completed] 1 1 0 0 Latest 2 stopped tasks TaskId CurrentStatus DesiredStatus 6b1d6e32 DEPROVISIONING STOPPED 9802d212 STOPPED STOPPED \u2718 Latest 2 tasks stopped reason - [6b1d6e32,9802d212]: Essential container in task exited Troubleshoot task stopped reason 1. You can run `copilot svc logs --previous` to see the logs of the last stopped task. 2. You can visit this article: https://repost.aws/knowledge-center/ecs-task-stopped.","title":"\u30bf\u30b9\u30af\u5931\u6557\u6642\u306e\u30ed\u30b0\u306e\u6539\u5584"},{"location":"ja/blogs/release-v131/#acm","text":"Copilot \u3067\u306f\u3001 Static Site \u306e Manifest \u306b\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.certificate \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 us-east-1 \u306e\u691c\u8a3c\u6e08\u307f ACM \u8a3c\u660e\u66f8\u306e ARN \u3092\u6b21\u306e\u3088\u3046\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 http : alias : example.com certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" example.com \u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u8a3c\u660e\u66f8\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u307e\u305f\u306f Subject Alternative Name (SAN) \u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u306f\u3001Copilot \u304c\u7ba1\u7406\u3059\u308b\u8a3c\u660e\u66f8\u306e\u4ee3\u308f\u308a\u306b\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002","title":"\u9759\u7684\u30b5\u30a4\u30c8\u3078 ACM \u8a3c\u660e\u66f8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v132/","text":"AWS Copilot v1.32: run local --proxy \u3001 run local --watch \u3001\u65e2\u5b58 ALB \u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u30b5\u30dd\u30fc\u30c8 \u6295\u7a3f\u65e5: 2023 \u5e74 11 \u6708 9 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.32 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3,100 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.32 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: copilot run local --proxy : \u30ed\u30fc\u30ab\u30eb\u30b3\u30f3\u30c6\u30ca\u304b\u3089 Environment \u306e Services \u3084 RDS \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u306e\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30d7\u30ed\u30ad\u30b7\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 copilot run local --watch : \u30b3\u30fc\u30c9\u306b\u5909\u66f4\u3092\u52a0\u3048\u305f\u969b\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u81ea\u52d5\u7684\u306b\u30ea\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 ALB \u306e\u30a4\u30f3\u30dd\u30fc\u30c8 : Load Balanced Web Service \u306e\u30d5\u30ed\u30f3\u30c8\u306b\u3001\u65e2\u5b58\u306e ALB \u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 copilot run local \u306e\u30d7\u30ed\u30ad\u30b7\u6a5f\u80fd copilot run local \u306e\u65b0\u3057\u3044 --proxy \u30d5\u30e9\u30b0\u306b\u3088\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u30b3\u30f3\u30c6\u30ca\u304c Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Service \u3068\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u958b\u767a\u306e\u4f53\u9a13\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u3001 users \u3068 orders \u3068\u3044\u3046 2 \u3064\u306e Service \u304c\u3042\u308a\u3001\u3069\u3061\u3089\u3082 Service Connect \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b Environment \u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001 orders \u306b\u306f\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b RDS addon \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002 copilot run local --proxy --name orders \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u306e orders \u30b3\u30f3\u30c6\u30ca\u306f\u4ee5\u4e0b\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u901a\u4fe1\u304c\u3067\u304d\u307e\u3059: users Service: Service Connect URL \u3092\u5229\u7528\u3057\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8: http://users:<port> ) orders Service \u306e RDS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: DB \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 URL (\u4f8b: app-env-orders-random-characters.us-west-2.rds.amazonaws.com:5432 ) \u3084\u3001DB \u30af\u30e9\u30b9\u30bf\u30fc URL \u3092\u5229\u7528\u3057\u307e\u3059 copilot run local \u306e watch \u30d5\u30e9\u30b0 --watch \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u3092\u76e3\u8996\u3057\u3001\u30b3\u30fc\u30c9\u306b\u5909\u66f4\u3092\u52a0\u3048\u305f\u969b\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u81ea\u52d5\u7684\u306b\u30ea\u30d3\u30eb\u30c9\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u7d99\u7d9a\u7684\u306a\u958b\u767a\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 --watch \u30d5\u30e9\u30b0\u3092 --proxy \u30d5\u30e9\u30b0\u3068\u4e00\u7dd2\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30ea\u30d3\u30eb\u30c9\u3059\u308b\u305f\u3073\u306b\u30d7\u30ed\u30ad\u30b7\u3092\u8a2d\u5b9a\u3059\u308b\u624b\u9593\u3092\u7701\u7565\u3067\u304d\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002 ALB \u306e\u30a4\u30f3\u30dd\u30fc\u30c8 Load Balanced Web Service \u306e Manifest \u3067\u3001\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.alb \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002Copilot \u304c Environment \u5185\u306b\u65b0\u3057\u3044 Application Load Balancer \u3092\u4f5c\u6210\u3057\u3001\u3059\u3079\u3066\u306e Load Balanced Web Service \u9593\u3067\u5171\u6709\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u7279\u5b9a\u306e Load Balanced Web Service (LBWS) \u7528\u306b\u65e2\u5b58\u306e\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5411\u3051 ALB \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002LBWS Manifest \u306b\u3001VPC \u306b\u5b58\u5728\u3059\u308b\u65e2\u5b58\u306e ALB \u306e ARN \u307e\u305f\u306f ALB \u540d\u3092\u6307\u5b9a\u3057\u307e\u3059: http : alb : [ name or ARN ] \u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f ALB \u306b\u3064\u3044\u3066\u306f\u3001Copilot \u306f\u8a3c\u660e\u66f8\u306a\u3069\u306e DNS \u95a2\u9023\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3057\u307e\u305b\u3093\u3002","title":"Release v1.32"},{"location":"ja/blogs/release-v132/#aws-copilot-v132-run-local-proxyrun-local-watch-alb","text":"\u6295\u7a3f\u65e5: 2023 \u5e74 11 \u6708 9 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.32 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3,100 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.32 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: copilot run local --proxy : \u30ed\u30fc\u30ab\u30eb\u30b3\u30f3\u30c6\u30ca\u304b\u3089 Environment \u306e Services \u3084 RDS \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u306e\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30d7\u30ed\u30ad\u30b7\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 copilot run local --watch : \u30b3\u30fc\u30c9\u306b\u5909\u66f4\u3092\u52a0\u3048\u305f\u969b\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u81ea\u52d5\u7684\u306b\u30ea\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 ALB \u306e\u30a4\u30f3\u30dd\u30fc\u30c8 : Load Balanced Web Service \u306e\u30d5\u30ed\u30f3\u30c8\u306b\u3001\u65e2\u5b58\u306e ALB \u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.32: run local --proxy\u3001run local --watch\u3001\u65e2\u5b58 ALB \u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v132/#copilot-run-local","text":"copilot run local \u306e\u65b0\u3057\u3044 --proxy \u30d5\u30e9\u30b0\u306b\u3088\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u30b3\u30f3\u30c6\u30ca\u304c Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Service \u3068\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u958b\u767a\u306e\u4f53\u9a13\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u3001 users \u3068 orders \u3068\u3044\u3046 2 \u3064\u306e Service \u304c\u3042\u308a\u3001\u3069\u3061\u3089\u3082 Service Connect \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b Environment \u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001 orders \u306b\u306f\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b RDS addon \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002 copilot run local --proxy --name orders \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u306e orders \u30b3\u30f3\u30c6\u30ca\u306f\u4ee5\u4e0b\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u901a\u4fe1\u304c\u3067\u304d\u307e\u3059: users Service: Service Connect URL \u3092\u5229\u7528\u3057\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8: http://users:<port> ) orders Service \u306e RDS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: DB \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 URL (\u4f8b: app-env-orders-random-characters.us-west-2.rds.amazonaws.com:5432 ) \u3084\u3001DB \u30af\u30e9\u30b9\u30bf\u30fc URL \u3092\u5229\u7528\u3057\u307e\u3059","title":"copilot run local \u306e\u30d7\u30ed\u30ad\u30b7\u6a5f\u80fd"},{"location":"ja/blogs/release-v132/#copilot-run-local-watch","text":"--watch \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u3092\u76e3\u8996\u3057\u3001\u30b3\u30fc\u30c9\u306b\u5909\u66f4\u3092\u52a0\u3048\u305f\u969b\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u81ea\u52d5\u7684\u306b\u30ea\u30d3\u30eb\u30c9\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u7d99\u7d9a\u7684\u306a\u958b\u767a\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 --watch \u30d5\u30e9\u30b0\u3092 --proxy \u30d5\u30e9\u30b0\u3068\u4e00\u7dd2\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30ea\u30d3\u30eb\u30c9\u3059\u308b\u305f\u3073\u306b\u30d7\u30ed\u30ad\u30b7\u3092\u8a2d\u5b9a\u3059\u308b\u624b\u9593\u3092\u7701\u7565\u3067\u304d\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002","title":"copilot run local \u306e watch \u30d5\u30e9\u30b0"},{"location":"ja/blogs/release-v132/#alb","text":"Load Balanced Web Service \u306e Manifest \u3067\u3001\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30eb\u30c9 http.alb \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002Copilot \u304c Environment \u5185\u306b\u65b0\u3057\u3044 Application Load Balancer \u3092\u4f5c\u6210\u3057\u3001\u3059\u3079\u3066\u306e Load Balanced Web Service \u9593\u3067\u5171\u6709\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u7279\u5b9a\u306e Load Balanced Web Service (LBWS) \u7528\u306b\u65e2\u5b58\u306e\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5411\u3051 ALB \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002LBWS Manifest \u306b\u3001VPC \u306b\u5b58\u5728\u3059\u308b\u65e2\u5b58\u306e ALB \u306e ARN \u307e\u305f\u306f ALB \u540d\u3092\u6307\u5b9a\u3057\u307e\u3059: http : alb : [ name or ARN ] \u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f ALB \u306b\u3064\u3044\u3066\u306f\u3001Copilot \u306f\u8a3c\u660e\u66f8\u306a\u3069\u306e DNS \u95a2\u9023\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3057\u307e\u305b\u3093\u3002","title":"ALB \u306e\u30a4\u30f3\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v133/","text":"AWS Copilot v1.33: run local --use-task-role \u3068 run local depends_on \u306e\u30b5\u30dd\u30fc\u30c8 \u6295\u7a3f\u65e5: 2024 \u5e74 1 \u6708 8 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.33 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3,100 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.33 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: run local --use-task-role : --use-task-role \u30d5\u30e9\u30b0\u306b\u3088\u308a\u3001ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u30c6\u30b9\u30c8\u4f53\u9a13\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 run local depends_on support : \u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u5b9f\u884c\u6642\u306b Service Manifest \u5185\u306e depends_on \u3092\u8003\u616e\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092 \u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 copilot run local \u5b9f\u884c\u6642\u306e ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u5229\u7528 copilot run local \u30b3\u30de\u30f3\u30c9\u3067 --use-task-role \u30d5\u30e9\u30b0\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u6709\u52b9\u306b\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u30c7\u30d7\u30ed\u30a4\u3057\u305f Service \u304b\u3089 IAM \u6a29\u9650\u3092\u53d6\u5f97\u3057\u3001 run local \u3067\u4f5c\u6210\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u306b\u6ce8\u5165\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u304c\u30af\u30e9\u30a6\u30c9\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3068\u540c\u3058\u6a29\u9650\u3092\u5229\u7528\u3059\u308b\u4e8b\u3092\u610f\u5473\u3057\u3066\u304a\u308a\u3001 \u3088\u308a\u6b63\u78ba\u306b\u30c6\u30b9\u30c8\u304c\u884c\u3048\u307e\u3059\u3002 copilot run local \u5b9f\u884c\u6642\u306e \u30b3\u30f3\u30c6\u30ca\u4f9d\u5b58\u95a2\u4fc2\u306e\u30b5\u30dd\u30fc\u30c8 copilot run local \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u3001Service Manifest \u5185\u3067\u6307\u5b9a\u3055\u308c\u305f depends_on \u3092\u8003\u616e\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u4f8b: image: build: ./Dockerfile depends_on: nginx: start nginx: image: build: ./web/Dockerfile essential: true depends_on: startup: success startup: image: build: ./front/Dockerfile essential: false \u3053\u306e\u4f8b\u3067\u306f\u3001nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u305f\u5f8c\u306b\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\u307e\u305f\u3001startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u305f\u5f8c\u306b nginx \u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002","title":"Release v1.33"},{"location":"ja/blogs/release-v133/#aws-copilot-v133-run-local-use-task-role-run-local-depends_on","text":"\u6295\u7a3f\u65e5: 2024 \u5e74 1 \u6708 8 \u65e5 AWS Copilot \u30b3\u30a2\u30c1\u30fc\u30e0\u306f Copilot v1.33 \u306e\u30ea\u30ea\u30fc\u30b9\u3092\u767a\u8868\u3057\u307e\u3059\u3002 \u79c1\u305f\u3061\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u306a \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30c1\u30e3\u30c3\u30c8 \u306f\u6210\u9577\u3057\u3066\u304a\u308a\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u306f 500 \u4eba\u4ee5\u4e0a\u3001 GitHub \u3067\u306f 3,100 \u4ee5\u4e0a\u306e\u30b9\u30bf\u30fc\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80\u3002 AWS Copilot \u3078\u3054\u652f\u63f4\u3001\u3054\u652f\u6301\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u7686\u69d8\u304a\u4e00\u4eba\u304a\u4e00\u4eba\u306b\u611f\u8b1d\u3092\u3044\u305f\u3057\u307e\u3059\u3002 Copilot v1.33 \u3067\u306f\u3088\u308a\u67d4\u8edf\u3067\u52b9\u7387\u7684\u306a\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u5927\u304d\u306a\u6a5f\u80fd\u5f37\u5316\u304c\u884c\u308f\u308c\u307e\u3057\u305f: run local --use-task-role : --use-task-role \u30d5\u30e9\u30b0\u306b\u3088\u308a\u3001ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u30c6\u30b9\u30c8\u4f53\u9a13\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f\u3001 \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 run local depends_on support : \u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u5b9f\u884c\u6642\u306b Service Manifest \u5185\u306e depends_on \u3092\u8003\u616e\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f \u3053\u3061\u3089\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092 \u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 AWS Copilot \u3068\u306f\uff1f AWS Copilot CLI \u306f AWS \u4e0a\u3067\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot \u306e\u57fa\u790e\u3068\u306a\u308b\u306e\u306f\u3001 AWS CloudFormation \u3067\u3059\u3002CloudFormation \u306b\u3088\u308a\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092 1 \u56de\u306e\u64cd\u4f5c\u3067\u30b3\u30fc\u30c9\u3068\u3057\u3066\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 Copilot \u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30bf\u30a4\u30d7\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\u3068\u904b\u7528\u306e\u70ba\u306b\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002 \u3088\u308a\u8a73\u7d30\u306a AWS Copilot \u306e\u7d39\u4ecb\u306b\u3064\u3044\u3066\u306f\u3001 Overview \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS Copilot v1.33: run local --use-task-role \u3068 run local depends_on \u306e\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/blogs/release-v133/#copilot-run-local-ecs","text":"copilot run local \u30b3\u30de\u30f3\u30c9\u3067 --use-task-role \u30d5\u30e9\u30b0\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u6709\u52b9\u306b\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u30c7\u30d7\u30ed\u30a4\u3057\u305f Service \u304b\u3089 IAM \u6a29\u9650\u3092\u53d6\u5f97\u3057\u3001 run local \u3067\u4f5c\u6210\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u306b\u6ce8\u5165\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u304c\u30af\u30e9\u30a6\u30c9\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3068\u540c\u3058\u6a29\u9650\u3092\u5229\u7528\u3059\u308b\u4e8b\u3092\u610f\u5473\u3057\u3066\u304a\u308a\u3001 \u3088\u308a\u6b63\u78ba\u306b\u30c6\u30b9\u30c8\u304c\u884c\u3048\u307e\u3059\u3002","title":"copilot run local \u5b9f\u884c\u6642\u306e ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u5229\u7528"},{"location":"ja/blogs/release-v133/#copilot-run-local","text":"copilot run local \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u3001Service Manifest \u5185\u3067\u6307\u5b9a\u3055\u308c\u305f depends_on \u3092\u8003\u616e\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u4f8b: image: build: ./Dockerfile depends_on: nginx: start nginx: image: build: ./web/Dockerfile essential: true depends_on: startup: success startup: image: build: ./front/Dockerfile essential: false \u3053\u306e\u4f8b\u3067\u306f\u3001nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u305f\u5f8c\u306b\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\u307e\u305f\u3001startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u305f\u5f8c\u306b nginx \u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002","title":"copilot run local \u5b9f\u884c\u6642\u306e \u30b3\u30f3\u30c6\u30ca\u4f9d\u5b58\u95a2\u4fc2\u306e\u30b5\u30dd\u30fc\u30c8"},{"location":"ja/community/get-involved/","text":"AWS Copilot \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3078\u3088\u3046\u3053\u305d \u2764\ufe0f [ \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30d6\u30ed\u30b0\u8a18\u4e8b\u3001\u52d5\u753b ] \u306e\u3088\u3046\u306a AWS Copilot CLI \u306b\u95a2\u9023\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u7686\u3067\u5171\u6709\u3057\u307e\u3057\u3087\u3046\ud83d\udc69\u200d\u2708\ufe0f \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3078\u306e\u53c2\u52a0\u65b9\u6cd5\u306f\u4ed6\u306b\u3082\u3042\u308a\u307e\u3059\uff01 GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306b \u3092\u4f5c\u6210\u3057\u3066\u307f\u308b \u3067 Copilot \u306a\u4ef2\u9593\u9054\u3068\u4f1a\u8a71\u3057\u3066\u307f\u3088\u3046","title":"Get Involved"},{"location":"ja/community/guides/","text":"Copilot \u306a\u4ef2\u9593\u305f\u3061\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u52d5\u753b\u3001\u30d6\u30ed\u30b0\u30dd\u30b9\u30c8\u3092\u5171\u6709\u3057\u3088\u3046\uff01 \u30d6\u30ed\u30b0\u30dd\u30b9\u30c8 Title Description Use AWS Graviton processors on AWS Fargate with Copilot by Jason Andrews Use Copilot to run containers on Fargate\u2019s serverless compute with Graviton2 processors and benefit from improved price performance. The AWS Copilot NowTo Guide \u2014 Introduction by Biju Krishnan In a series of blogs, Biju, who focuses on AI Solutions and AI Governance, shares their experience with deploying AI Verify as a two-tier application using Copilot. Scalable Cloud inference endpoint using ONNX and AWS Fargate by Rustem Feyzkhanov Machine Learning engineer Rustem Feyzkhanov couples the ease of Copilot with the flexibility of the Open Neural Network Exchange (ONNX) AI framework. Implementing a pub/sub architecture with AWS Copilot by Rafael Mosca AWS Territory Solutions Architect Rafael Mosca leverages Copilot to quickly and easily implement the pub-sub architecture of a sample e-commerce platform. Clear steps and diagrams make concepts easy to learn. Using Copilot to Deploy, Manage, and Secure Apps on ECS by @christophef Christophe demonstrates how to deploy, manage, and secure your apps in AWS ECS and how favorable it is for most software companies that want to concentrate on building amazing apps and don\u2019t want to spend time managing clusters, pipelines, etc. Deploy Containers using AWS Copilot by @piumsudhara Piumsudhara takes you through detailed steps for building and deploying containerized applications using AWS Copilot. DBT container on AWS ECS by using AWS Copilot CLI by @key.hui Check out how to pack the dbt container and use the Copilot CLI to deploy on ECS. How to set up AWS Copilot to build, release and operate containerized applications on ECS and Fargate using a CLI? by @workfall Check out how AWS Copilot supercharges your application by allowing you to set up infrastructure, build your application with many microservices, set up a pipeline to automate release and monitor the stack and application\u2019s status, and add-ons all from a single CLI. AWS Copilot \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30e2\u30fc\u30c9\u306e AWS App Runner \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f by @Tak1wa [Japanese] Check out how easy it is to use AWS Copilot to deploy an AWS App Runner private service, one that is accessible only from within your environment. AWS Copilot\u3067Focalboard\u3092\u305f\u3066\u3066\u307f\u308b by @__m_sakasa [Japanese] See how to build a Mattermost Focalboard , an open-source project management tool, using Copilot. Prefect Cloud based data pipelines using AWS Copilot on ECS by @Core27_ Core27 takes you through building and deploying a production-grade data stack on Amazon Elastic Container Service. AWS Copilot GitHub Actions by @ksivamuthu Sivamuthu Kumar is back again, this time setting up OpenID Connect to link AWS and GitHub Actions, then using GitHub Actions to install Copilot and deploy an app. Deploy Serverless Containerized NodeJs Apps on AWS ECS Fargate with AWS Copilot by @gaymitb Jaymit Bhoraniya takes you through deploying to AWS, first with basic config, then with a CI/CD pipeline. How to Use Copilot to Deploy Projects on ECS by Christin Itty This tutorial includes a demo repo with a script of Copilot commands, showing you how to launch an entire app (including an Aurora serverless cluster with a PostgreSQL engine) in just one command. AWS Copilot CLI \u3092\u4f7f\u3063\u3066\u8907\u6570\u74b0\u5883\u3067\u65e2\u5b58\u306e DynamoDB \u3092\u4f7f\u3046 by @hkford3 [Japanese] Hidekazu Karino walks us through the deployment of a service to two environments, leveraging an existing DynamoDB table, and setting up a CI/CD pipeline, all with Copilot. \u30ec\u30f3\u30c6\u30a3\u30aa\u306e\u672c\u756a\u74b0\u5883\u3092AWS Copilot/Fargate\u69cb\u6210\u306b\u5207\u308a\u66ff\u3048\u305f\u8a71 by the Rentio development team [Japanese] A real-life account of switching from Convox to Copilot, including the 'why's and the 'how's, what went well and what didn't. Deploy .NET 6 API to AWS App Runner using AWS Copilot CLI by @ksivamuthu Using Copilot and App Runner, Sivamuthu Kumar deploys a .NET API project. Container-to-Container Communication by @mikefiedler Mike takes us through a science experiment of sorts, a \"who will win\" type of battle, to determine if TCP or Unix sockets are better for inter-container communication. AWS Copilot \u3067 ECS(Fargate) \u306b Express(Node.js) \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b by Shoya Shiraki @morugu [Japanese] Follow along this blog post to build an Express Node.js app with Copilot. AWS Copilot \u2013 ECS by @ksivamuthu Here we have a three-part series devoted to Copilot! Sivamuthu Kumar demos launching a .NET coffeeshop app, exploring pipelines, storage, addons, and logs along the way. Deploying a Telegram Bot to AWS ECS with AWS Copilot by Christian Prado Ciokler Christian takes you through building a Node.js app, step-by-step, with Copilot on Docker Desktop Windows Subsystem for Linux (WSL) 2. Deploying a Containerized Web App with AWS Copilot by @edkruegerdata and Dylan Rossi Edward and Dylan start from the basics, including IAM account creation and AWS CLI installation. (Note: you'll also need to install AWS Copilot.) They demonstrate using Postman to test the deployed app. Pilot your containers like a boss with AWS Copilot! by @FlolightC Florian simplifies getting started with AWS Copilot by demoing deployment of a sample app from start to finish, including links to both required and optional resources. Use AWS Copilot CLI to deploy containers on an existing infrastructure - Tutorial by @dannysteenman Danny explains how to use your existing VPC and subnets with AWS Copilot to quickly set up a working container environment. Follow along as he deploys a Django app with an RDS Postgres database and Elasticache Redis cluster. Automatically deploying your container application with AWS Copilot by @nathankpeck Nathan shows how to set up a release pipeline with the CLI that builds, pushes, and deploys an application. Finally, he sets up integration tests for validation before releasing to production. Deploying containers with the AWS Copilot CLI by @maartenbruntink Maarten shows how to use the AWS Copilot CLI to deploy the sample Docker voting app , which showcases how to set up your own Redis and Postgres servers. In the second part , he automates the release process. AWS Copilot: an application-first CLI for containers on AWS by @efekarakus Efe walks through the design tenets of the CLI: why they were chosen, how they map to Copilot features, and the vision for how the CLI will evolve in the future. Introducing AWS Copilot by @nathankpeck Nathan explains how with the AWS Copilot CLI you can go from idea to implementation much faster, with the confidence that the infrastructure you have deployed has production-ready configuration. \u52d5\u753b \u30bf\u30a4\u30c8\u30eb \u6982\u8981 Build, Operate, and Observe a Containerized Application on AWS Fargate by @nathankpeck AWS's indefatigable Nathan Peck is back! In this session for AWS Application Modernization Day, he champions containers and demonstrates the deployment of a load-balanced web service and a load-testing scheduled job. Using Jenkins and AWS Copilot CLI to Deploy to AWS App Runner by @DarinPope Darin, a developer advocate for CloudBees, uses AWS Copilot and a Jenkinsfile to deploy to AWS AppRunner. Deploy a Web App with AWS CoPilot by @edkruegerdata This three-part series includes \"Creating an Administrator User Group in AWS,\" \"Create an IAM Account on AWS,\" and \"Deploying the Web App.\" Container Day: Amazon ECS Edition-- Demo: deploy a modern application on AWS Fargate with ECS Copilot by @efekarakus and @realadamjkeller Efe goes beyond the basics, demoing how to grow an application ; he highlights the alias field, secrets and environment variables, addons, and more. Copilot\u2013 What AWS ECS and Fargate Container Management Should Have Been by @vfarcic Viktor lauds Copilot for its simplicity and ease of use in this clear, step-by-step demo. AWS Copilot CLI v1.8.0 Release Highlights by @realadamjkeller Adam walks through the features that shipped with version 1.8.0 of the AWS Copilot CLI, including alias , the svc status update, and container dependency. DevBeardOps with !Cobus & !Darko: Playing with Containers by @cobusbernard and @darkosubotica Learn alongside Cobus and Darko as they experiment with AWS Copilot, from installation to pipeline setup. Containers from the Couch series by @realadamjkeller , @brentContained , and guests Join Adam and Brent to learn about many of the existing features of AWS Copilot with fun demos. Watch as they set up a three-tier application with autoscaling ; create a continuous delivery pipeline with integration tests ; show how easy it is to 'exec' with Copilot ; and highlight ephemeral storage and scheduled job features. AWS Copilot and another 6 ways to easily deploy apps to AWS by Kirill Shirinkin Kirill Shirinkin explores ways to easily deploy a new product on AWS - including a new favorite one, AWS Copilot. AWS re:Invent 2020: AWS Copilot: Simplifying container development by @efekarakus Learn about the motivation behind AWS Copilot, get an overview of the existing commands and a demo of how to deploy a three-tier application. How to Deploy a .NET Application to Amazon Elastic Container Service (ECS) with AWS Copilot by @ignacioafuentes Get a demo on how to build and deploy a .NET application to Amazon ECS on AWS Fargate. AWS What's Next by @nathankpeck and @efekarakus Nathan and Efe discuss what makes AWS Copilot unique compared to other infrastructure provisioning tools and then demo an overview of the existing commands. \u30b3\u30fc\u30c9\u30fb\u30b5\u30f3\u30d7\u30eb \u30ea\u30dd\u30b8\u30c8\u30ea \u8a73\u7d30 \u7279\u5fb4 Server Side Swift Guides Server Side Swift on AWS with Fargate, Vapor, and MongoDB Atlas deployed with Copilot Fargate, Vapor, MongoDB, API Gateway github.com/kcearns/fargate-node-example A sample Node application that includes a pipeline. Node, pipeline github.com/efekarakus/day2-with-copilot A REST API coffeeshop application that goes beyond the basics, demoed in the \"Container Day\" video , above. alias , secrets, DynamoDB, Redis github.com/bvtujo/copilot-wordpress A WordPress installation launched by AWS Copilot with step-by-step instructions and options for customization. EFS , MySQL RDS cluster, autoscaling #2378 Show-and-tell with sample templates for launching isolated tasks in private subnets. VPC Endpoints, custom environments github.com/copilot-example-voting-app , #1745 A voting application distributed over three ECS services created with AWS Copilot. Amazon Aurora PostgreSQL database, service discovery, autoscaling #1925 Show-and-tell explaining how you can do continuous deployments from branches with AWS Copilot pipelines. Branch-based deploys, AWS CodePipeline \u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7 \u30bf\u30a4\u30c8\u30eb \u8a73\u7d30 Explore the Foundations of AWS Containers Nathan Peck, a Senior Developer Advocate for ECS, walks you through an introduction to containers, using tools like AWS Copilot CLI, Amazon CloudWatch, and AWS App Runner. A sample repo allows you to focus on containerization, and there's even a bonus challenge for eager learners. Deploy .NET Apps with AWS Copilot This lab, part of the AWS Windows Workshop, guides you through creating a .NET 6 project, including deploying CI/CD pipelines. Plenty of screen shots help you see what's happening in the terminal, in VS Code, and on the console. Copilot Rocks This open-source, comprehensive, modular workshop lets you pick and choose from multiple mini-workshops, covering everything from installation to implementing pub/sub patterns. Step-by-step guides offer tips and tricks, clarify with useful diagrams, and delve into advanced patterns. (Source code is hosted here .) ECS Workshop In this workshop, we deploy a three-tier microservices application using the AWS Copilot CLI. (Optional accompanying video here .) Copilot Primer Workshop In this workshop, you will experience AWS Copilot CLI through the creation of a sample to-do list application. With AWS Copilot CLI, you initialize your application, create a development environment and deploy containers onto the environment. You can also deploy your containers from a pipeline.","title":"Guides and Resources"},{"location":"ja/community/guides/#_1","text":"Title Description Use AWS Graviton processors on AWS Fargate with Copilot by Jason Andrews Use Copilot to run containers on Fargate\u2019s serverless compute with Graviton2 processors and benefit from improved price performance. The AWS Copilot NowTo Guide \u2014 Introduction by Biju Krishnan In a series of blogs, Biju, who focuses on AI Solutions and AI Governance, shares their experience with deploying AI Verify as a two-tier application using Copilot. Scalable Cloud inference endpoint using ONNX and AWS Fargate by Rustem Feyzkhanov Machine Learning engineer Rustem Feyzkhanov couples the ease of Copilot with the flexibility of the Open Neural Network Exchange (ONNX) AI framework. Implementing a pub/sub architecture with AWS Copilot by Rafael Mosca AWS Territory Solutions Architect Rafael Mosca leverages Copilot to quickly and easily implement the pub-sub architecture of a sample e-commerce platform. Clear steps and diagrams make concepts easy to learn. Using Copilot to Deploy, Manage, and Secure Apps on ECS by @christophef Christophe demonstrates how to deploy, manage, and secure your apps in AWS ECS and how favorable it is for most software companies that want to concentrate on building amazing apps and don\u2019t want to spend time managing clusters, pipelines, etc. Deploy Containers using AWS Copilot by @piumsudhara Piumsudhara takes you through detailed steps for building and deploying containerized applications using AWS Copilot. DBT container on AWS ECS by using AWS Copilot CLI by @key.hui Check out how to pack the dbt container and use the Copilot CLI to deploy on ECS. How to set up AWS Copilot to build, release and operate containerized applications on ECS and Fargate using a CLI? by @workfall Check out how AWS Copilot supercharges your application by allowing you to set up infrastructure, build your application with many microservices, set up a pipeline to automate release and monitor the stack and application\u2019s status, and add-ons all from a single CLI. AWS Copilot \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30e2\u30fc\u30c9\u306e AWS App Runner \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f by @Tak1wa [Japanese] Check out how easy it is to use AWS Copilot to deploy an AWS App Runner private service, one that is accessible only from within your environment. AWS Copilot\u3067Focalboard\u3092\u305f\u3066\u3066\u307f\u308b by @__m_sakasa [Japanese] See how to build a Mattermost Focalboard , an open-source project management tool, using Copilot. Prefect Cloud based data pipelines using AWS Copilot on ECS by @Core27_ Core27 takes you through building and deploying a production-grade data stack on Amazon Elastic Container Service. AWS Copilot GitHub Actions by @ksivamuthu Sivamuthu Kumar is back again, this time setting up OpenID Connect to link AWS and GitHub Actions, then using GitHub Actions to install Copilot and deploy an app. Deploy Serverless Containerized NodeJs Apps on AWS ECS Fargate with AWS Copilot by @gaymitb Jaymit Bhoraniya takes you through deploying to AWS, first with basic config, then with a CI/CD pipeline. How to Use Copilot to Deploy Projects on ECS by Christin Itty This tutorial includes a demo repo with a script of Copilot commands, showing you how to launch an entire app (including an Aurora serverless cluster with a PostgreSQL engine) in just one command. AWS Copilot CLI \u3092\u4f7f\u3063\u3066\u8907\u6570\u74b0\u5883\u3067\u65e2\u5b58\u306e DynamoDB \u3092\u4f7f\u3046 by @hkford3 [Japanese] Hidekazu Karino walks us through the deployment of a service to two environments, leveraging an existing DynamoDB table, and setting up a CI/CD pipeline, all with Copilot. \u30ec\u30f3\u30c6\u30a3\u30aa\u306e\u672c\u756a\u74b0\u5883\u3092AWS Copilot/Fargate\u69cb\u6210\u306b\u5207\u308a\u66ff\u3048\u305f\u8a71 by the Rentio development team [Japanese] A real-life account of switching from Convox to Copilot, including the 'why's and the 'how's, what went well and what didn't. Deploy .NET 6 API to AWS App Runner using AWS Copilot CLI by @ksivamuthu Using Copilot and App Runner, Sivamuthu Kumar deploys a .NET API project. Container-to-Container Communication by @mikefiedler Mike takes us through a science experiment of sorts, a \"who will win\" type of battle, to determine if TCP or Unix sockets are better for inter-container communication. AWS Copilot \u3067 ECS(Fargate) \u306b Express(Node.js) \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b by Shoya Shiraki @morugu [Japanese] Follow along this blog post to build an Express Node.js app with Copilot. AWS Copilot \u2013 ECS by @ksivamuthu Here we have a three-part series devoted to Copilot! Sivamuthu Kumar demos launching a .NET coffeeshop app, exploring pipelines, storage, addons, and logs along the way. Deploying a Telegram Bot to AWS ECS with AWS Copilot by Christian Prado Ciokler Christian takes you through building a Node.js app, step-by-step, with Copilot on Docker Desktop Windows Subsystem for Linux (WSL) 2. Deploying a Containerized Web App with AWS Copilot by @edkruegerdata and Dylan Rossi Edward and Dylan start from the basics, including IAM account creation and AWS CLI installation. (Note: you'll also need to install AWS Copilot.) They demonstrate using Postman to test the deployed app. Pilot your containers like a boss with AWS Copilot! by @FlolightC Florian simplifies getting started with AWS Copilot by demoing deployment of a sample app from start to finish, including links to both required and optional resources. Use AWS Copilot CLI to deploy containers on an existing infrastructure - Tutorial by @dannysteenman Danny explains how to use your existing VPC and subnets with AWS Copilot to quickly set up a working container environment. Follow along as he deploys a Django app with an RDS Postgres database and Elasticache Redis cluster. Automatically deploying your container application with AWS Copilot by @nathankpeck Nathan shows how to set up a release pipeline with the CLI that builds, pushes, and deploys an application. Finally, he sets up integration tests for validation before releasing to production. Deploying containers with the AWS Copilot CLI by @maartenbruntink Maarten shows how to use the AWS Copilot CLI to deploy the sample Docker voting app , which showcases how to set up your own Redis and Postgres servers. In the second part , he automates the release process. AWS Copilot: an application-first CLI for containers on AWS by @efekarakus Efe walks through the design tenets of the CLI: why they were chosen, how they map to Copilot features, and the vision for how the CLI will evolve in the future. Introducing AWS Copilot by @nathankpeck Nathan explains how with the AWS Copilot CLI you can go from idea to implementation much faster, with the confidence that the infrastructure you have deployed has production-ready configuration.","title":"\u30d6\u30ed\u30b0\u30dd\u30b9\u30c8"},{"location":"ja/community/guides/#_2","text":"\u30bf\u30a4\u30c8\u30eb \u6982\u8981 Build, Operate, and Observe a Containerized Application on AWS Fargate by @nathankpeck AWS's indefatigable Nathan Peck is back! In this session for AWS Application Modernization Day, he champions containers and demonstrates the deployment of a load-balanced web service and a load-testing scheduled job. Using Jenkins and AWS Copilot CLI to Deploy to AWS App Runner by @DarinPope Darin, a developer advocate for CloudBees, uses AWS Copilot and a Jenkinsfile to deploy to AWS AppRunner. Deploy a Web App with AWS CoPilot by @edkruegerdata This three-part series includes \"Creating an Administrator User Group in AWS,\" \"Create an IAM Account on AWS,\" and \"Deploying the Web App.\" Container Day: Amazon ECS Edition-- Demo: deploy a modern application on AWS Fargate with ECS Copilot by @efekarakus and @realadamjkeller Efe goes beyond the basics, demoing how to grow an application ; he highlights the alias field, secrets and environment variables, addons, and more. Copilot\u2013 What AWS ECS and Fargate Container Management Should Have Been by @vfarcic Viktor lauds Copilot for its simplicity and ease of use in this clear, step-by-step demo. AWS Copilot CLI v1.8.0 Release Highlights by @realadamjkeller Adam walks through the features that shipped with version 1.8.0 of the AWS Copilot CLI, including alias , the svc status update, and container dependency. DevBeardOps with !Cobus & !Darko: Playing with Containers by @cobusbernard and @darkosubotica Learn alongside Cobus and Darko as they experiment with AWS Copilot, from installation to pipeline setup. Containers from the Couch series by @realadamjkeller , @brentContained , and guests Join Adam and Brent to learn about many of the existing features of AWS Copilot with fun demos. Watch as they set up a three-tier application with autoscaling ; create a continuous delivery pipeline with integration tests ; show how easy it is to 'exec' with Copilot ; and highlight ephemeral storage and scheduled job features. AWS Copilot and another 6 ways to easily deploy apps to AWS by Kirill Shirinkin Kirill Shirinkin explores ways to easily deploy a new product on AWS - including a new favorite one, AWS Copilot. AWS re:Invent 2020: AWS Copilot: Simplifying container development by @efekarakus Learn about the motivation behind AWS Copilot, get an overview of the existing commands and a demo of how to deploy a three-tier application. How to Deploy a .NET Application to Amazon Elastic Container Service (ECS) with AWS Copilot by @ignacioafuentes Get a demo on how to build and deploy a .NET application to Amazon ECS on AWS Fargate. AWS What's Next by @nathankpeck and @efekarakus Nathan and Efe discuss what makes AWS Copilot unique compared to other infrastructure provisioning tools and then demo an overview of the existing commands.","title":"\u52d5\u753b"},{"location":"ja/community/guides/#_3","text":"\u30ea\u30dd\u30b8\u30c8\u30ea \u8a73\u7d30 \u7279\u5fb4 Server Side Swift Guides Server Side Swift on AWS with Fargate, Vapor, and MongoDB Atlas deployed with Copilot Fargate, Vapor, MongoDB, API Gateway github.com/kcearns/fargate-node-example A sample Node application that includes a pipeline. Node, pipeline github.com/efekarakus/day2-with-copilot A REST API coffeeshop application that goes beyond the basics, demoed in the \"Container Day\" video , above. alias , secrets, DynamoDB, Redis github.com/bvtujo/copilot-wordpress A WordPress installation launched by AWS Copilot with step-by-step instructions and options for customization. EFS , MySQL RDS cluster, autoscaling #2378 Show-and-tell with sample templates for launching isolated tasks in private subnets. VPC Endpoints, custom environments github.com/copilot-example-voting-app , #1745 A voting application distributed over three ECS services created with AWS Copilot. Amazon Aurora PostgreSQL database, service discovery, autoscaling #1925 Show-and-tell explaining how you can do continuous deployments from branches with AWS Copilot pipelines. Branch-based deploys, AWS CodePipeline","title":"\u30b3\u30fc\u30c9\u30fb\u30b5\u30f3\u30d7\u30eb"},{"location":"ja/community/guides/#_4","text":"\u30bf\u30a4\u30c8\u30eb \u8a73\u7d30 Explore the Foundations of AWS Containers Nathan Peck, a Senior Developer Advocate for ECS, walks you through an introduction to containers, using tools like AWS Copilot CLI, Amazon CloudWatch, and AWS App Runner. A sample repo allows you to focus on containerization, and there's even a bonus challenge for eager learners. Deploy .NET Apps with AWS Copilot This lab, part of the AWS Windows Workshop, guides you through creating a .NET 6 project, including deploying CI/CD pipelines. Plenty of screen shots help you see what's happening in the terminal, in VS Code, and on the console. Copilot Rocks This open-source, comprehensive, modular workshop lets you pick and choose from multiple mini-workshops, covering everything from installation to implementing pub/sub patterns. Step-by-step guides offer tips and tricks, clarify with useful diagrams, and delve into advanced patterns. (Source code is hosted here .) ECS Workshop In this workshop, we deploy a three-tier microservices application using the AWS Copilot CLI. (Optional accompanying video here .) Copilot Primer Workshop In this workshop, you will experience AWS Copilot CLI through the creation of a sample to-do list application. With AWS Copilot CLI, you initialize your application, create a development environment and deploy containers onto the environment. You can also deploy your containers from a pipeline.","title":"\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7"},{"location":"ja/docs/credentials/","text":"\u8a8d\u8a3c\u60c5\u5831 AWS Copilot \u306f\u3001AWS API \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30bf\u30c7\u30fc\u30bf \u306e\u4fdd\u5b58\u3068\u691c\u7d22\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5c55\u958b\u3068\u904b\u7528\u306b AWS \u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 AWS\u8a8d\u8a3c\u60c5\u5831\u306e\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 AWS CLI\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3067\u8a73\u3057\u304f\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831 Copilot \u306f \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a8d\u8a3c\u60c5\u5831\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u30c1\u30a7\u30fc\u30f3 \u306b\u6cbf\u3063\u3066\u8a8d\u8a3c\u60c5\u5831\u3092\u691c\u7d22\u3057\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066 Service \u3068 Environment \u304c\u95a2\u9023\u3065\u3051\u3089\u308c\u305f Application \u306e\u30e1\u30bf\u30c7\u30fc\u30bf \u3092\u4fdd\u5b58\u307e\u305f\u306f\u691c\u7d22\u3057\u307e\u3059\u3002 Tips \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3057\u3066 Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002 \u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f [default] \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3059: # ~/.aws/credentials [default] aws_access_key_id = AKIAIOSFODNN7EXAMPLE aws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY # ~/.aws/config [default] region = us-west-2 \u3042\u308b\u3044\u306f AWS_PROFILE \u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u5225\u306e\u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 Application \u7528\u306b [my-app] \u3068\u3044\u3046\u540d\u524d\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092 [default] \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u4ee3\u308f\u308a\u306b\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Note Application \u306b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30eb\u30fc\u30c8\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u7528\u3044\u308b\u3053\u3068\u306f \u3067\u304d\u307e\u305b\u3093 \u3002\u4ee3\u308f\u308a\u306b \u3053\u3061\u3089 \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u307e\u305a IAM \u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # ~/.aws/config [profile my-app] credential_process = /opt/bin/awscreds-custom --username helen region = us-west-2 # \u6307\u5b9a\u3057\u305f\u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u305f Copilot \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c $ export AWS_PROFILE = my-app $ copilot deploy Caution \u74b0\u5883\u5909\u6570 AWS_ACCESS_KEY_ID , AWS_SECRET_ACCESS_KEY , AWS_SESSION_TOKEN \u3092\u76f4\u63a5\u7528\u3044\u308b\u3053\u3068\u306f\u63a8\u5968 \u3057\u307e\u305b\u3093 \u3002\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306e\u8a8d\u8a3c\u60c5\u5831\u304c\u4e0a\u66f8\u304d\u3055\u308c\u305f\u308a\u5931\u52b9\u3057\u305f\u308a\u3059\u308b\u3068 Copilot \u304c Service \u3084 Environment \u3092\u691c\u7d22\u3067\u304d\u306a\u304f\u306a\u308b\u304b\u3089\u3067\u3059\u3002 \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b config \u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u3082\u3063\u3068\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u8a8d\u8a3c\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 Environment \u7528\u306e\u8a8d\u8a3c\u60c5\u5831 Copilot \u306b\u304a\u3051\u308b Environment \u306f Application \u304c\u5b58\u5728\u3059\u308b\u306e\u3068\u306f\u5225\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002Environment \u3092\u6700\u521d\u306b\u4f5c\u6210\u3059\u308b\u969b Copilot \u306f\u3069\u306e\u4e00\u6642\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u307e\u305f\u306f \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3059\u308b\u304b\u5c0b\u306d\u307e\u3059\u3002 $ copilot env init Name: prod-iad Which credentials would you like to use to create prod-iad? > Enter temporary credentials > [ profile default ] > [ profile test ] > [ profile prod-iad ] > [ profile prod-pdx ] Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831 \u3068\u306f\u7570\u306a\u308a\u3001Environment \u7528\u306e AWS \u8a8d\u8a3c\u60c5\u5831\u306f Environment \u306e\u4f5c\u6210\u3068\u524a\u9664\u306e\u6642\u306e\u307f\u5fc5\u8981\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u4e00\u6642\u7684\u306a\u74b0\u5883\u5909\u6570\u304b\u3089\u305d\u308c\u3089\u306e\u5024\u3092\u5b89\u5168\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u304c\u5c0b\u306d\u305f\u308a\u4f7f\u7528\u3057\u305f\u308a\u3059\u308b\u8a8d\u8a3c\u60c5\u5831\u306f\u30d5\u30e9\u30b0\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u30c1\u30a7\u30fc\u30f3\u306f Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u306e\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u304b\u3089\u3067\u3059\u3002","title":"Credentials"},{"location":"ja/docs/credentials/#_1","text":"AWS Copilot \u306f\u3001AWS API \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30bf\u30c7\u30fc\u30bf \u306e\u4fdd\u5b58\u3068\u691c\u7d22\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5c55\u958b\u3068\u904b\u7528\u306b AWS \u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 AWS\u8a8d\u8a3c\u60c5\u5831\u306e\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001 AWS CLI\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3067\u8a73\u3057\u304f\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002","title":"\u8a8d\u8a3c\u60c5\u5831"},{"location":"ja/docs/credentials/#application","text":"Copilot \u306f \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a8d\u8a3c\u60c5\u5831\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u30c1\u30a7\u30fc\u30f3 \u306b\u6cbf\u3063\u3066\u8a8d\u8a3c\u60c5\u5831\u3092\u691c\u7d22\u3057\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066 Service \u3068 Environment \u304c\u95a2\u9023\u3065\u3051\u3089\u308c\u305f Application \u306e\u30e1\u30bf\u30c7\u30fc\u30bf \u3092\u4fdd\u5b58\u307e\u305f\u306f\u691c\u7d22\u3057\u307e\u3059\u3002 Tips \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3057\u3066 Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002 \u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f [default] \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3059: # ~/.aws/credentials [default] aws_access_key_id = AKIAIOSFODNN7EXAMPLE aws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY # ~/.aws/config [default] region = us-west-2 \u3042\u308b\u3044\u306f AWS_PROFILE \u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u5225\u306e\u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 Application \u7528\u306b [my-app] \u3068\u3044\u3046\u540d\u524d\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092 [default] \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u4ee3\u308f\u308a\u306b\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Note Application \u306b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30eb\u30fc\u30c8\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u7528\u3044\u308b\u3053\u3068\u306f \u3067\u304d\u307e\u305b\u3093 \u3002\u4ee3\u308f\u308a\u306b \u3053\u3061\u3089 \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u307e\u305a IAM \u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # ~/.aws/config [profile my-app] credential_process = /opt/bin/awscreds-custom --username helen region = us-west-2 # \u6307\u5b9a\u3057\u305f\u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u305f Copilot \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c $ export AWS_PROFILE = my-app $ copilot deploy Caution \u74b0\u5883\u5909\u6570 AWS_ACCESS_KEY_ID , AWS_SECRET_ACCESS_KEY , AWS_SESSION_TOKEN \u3092\u76f4\u63a5\u7528\u3044\u308b\u3053\u3068\u306f\u63a8\u5968 \u3057\u307e\u305b\u3093 \u3002\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306e\u8a8d\u8a3c\u60c5\u5831\u304c\u4e0a\u66f8\u304d\u3055\u308c\u305f\u308a\u5931\u52b9\u3057\u305f\u308a\u3059\u308b\u3068 Copilot \u304c Service \u3084 Environment \u3092\u691c\u7d22\u3067\u304d\u306a\u304f\u306a\u308b\u304b\u3089\u3067\u3059\u3002 \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b config \u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u3082\u3063\u3068\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u8a8d\u8a3c\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002","title":"Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831"},{"location":"ja/docs/credentials/#environment","text":"Copilot \u306b\u304a\u3051\u308b Environment \u306f Application \u304c\u5b58\u5728\u3059\u308b\u306e\u3068\u306f\u5225\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002Environment \u3092\u6700\u521d\u306b\u4f5c\u6210\u3059\u308b\u969b Copilot \u306f\u3069\u306e\u4e00\u6642\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u307e\u305f\u306f \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3059\u308b\u304b\u5c0b\u306d\u307e\u3059\u3002 $ copilot env init Name: prod-iad Which credentials would you like to use to create prod-iad? > Enter temporary credentials > [ profile default ] > [ profile test ] > [ profile prod-iad ] > [ profile prod-pdx ] Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831 \u3068\u306f\u7570\u306a\u308a\u3001Environment \u7528\u306e AWS \u8a8d\u8a3c\u60c5\u5831\u306f Environment \u306e\u4f5c\u6210\u3068\u524a\u9664\u306e\u6642\u306e\u307f\u5fc5\u8981\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u4e00\u6642\u7684\u306a\u74b0\u5883\u5909\u6570\u304b\u3089\u305d\u308c\u3089\u306e\u5024\u3092\u5b89\u5168\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u304c\u5c0b\u306d\u305f\u308a\u4f7f\u7528\u3057\u305f\u308a\u3059\u308b\u8a8d\u8a3c\u60c5\u5831\u306f\u30d5\u30e9\u30b0\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u30c1\u30a7\u30fc\u30f3\u306f Application \u7528\u306e\u8a8d\u8a3c\u60c5\u5831\u306e\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u304b\u3089\u3067\u3059\u3002","title":"Environment \u7528\u306e\u8a8d\u8a3c\u60c5\u5831"},{"location":"ja/docs/overview/","text":"\u306f\u3058\u3081\u306b AWS Copilot CLI \u3078\u3088\u3046\u3053\u305d \ud83c\udf89 Copilot CLI \u306f\u3001AWS App Runner\u3001Amazon ECS on AWS Fargate \u3092\u5229\u7528\u3057\u305f\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u305d\u3057\u3066\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002 Copilot CLI \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb AWS Copilot \u306f Homebrew \u3082\u3057\u304f\u306f\u30d0\u30a4\u30ca\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002Homebrew \u3092\u5229\u7528\u3057\u306a\u3044\u5834\u5408\u306f\u3001 \u624b\u52d5\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 $ brew install aws/tap/copilot-cli","title":"Overview"},{"location":"ja/docs/overview/#_1","text":"AWS Copilot CLI \u3078\u3088\u3046\u3053\u305d \ud83c\udf89 Copilot CLI \u306f\u3001AWS App Runner\u3001Amazon ECS on AWS Fargate \u3092\u5229\u7528\u3057\u305f\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30ec\u30c7\u30a3\u306a\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u305d\u3057\u3066\u904b\u7528\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u958b\u767a\u306e\u30b9\u30bf\u30fc\u30c8\u304b\u3089\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u305d\u3057\u3066\u672c\u756a\u74b0\u5883\u3078\u306e\u30ea\u30ea\u30fc\u30b9\u307e\u3067\u3001Copilot \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u5168\u4f53\u306e\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002","title":"\u306f\u3058\u3081\u306b"},{"location":"ja/docs/overview/#copilot-cli","text":"AWS Copilot \u306f Homebrew \u3082\u3057\u304f\u306f\u30d0\u30a4\u30ca\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002Homebrew \u3092\u5229\u7528\u3057\u306a\u3044\u5834\u5408\u306f\u3001 \u624b\u52d5\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 $ brew install aws/tap/copilot-cli","title":"Copilot CLI \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ja/docs/commands/app-delete/","text":"app delete $ copilot app delete [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot app delete Application \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -h, --help help for delete --yes Skips confirmation prompt. \u5b9f\u884c\u4f8b Application \u3092\u5f37\u5236\u7684\u306b\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot app delete --yes","title":"app delete"},{"location":"ja/docs/commands/app-delete/#app-delete","text":"$ copilot app delete [ flags ]","title":"app delete"},{"location":"ja/docs/commands/app-delete/#_1","text":"copilot app delete Application \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/app-delete/#_2","text":"-h, --help help for delete --yes Skips confirmation prompt.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/app-delete/#_3","text":"Application \u3092\u5f37\u5236\u7684\u306b\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot app delete --yes","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/app-init/","text":"app init $ copilot app init [ name ] [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot app init \u306f\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Service \u306f Application \u5185\u306b\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002 \u8cea\u554f\u3078\u306e\u56de\u7b54\u306e\u5f8c\u3001CLI \u306f\u3001Service \u7528\u306b\u4f5c\u6210\u3055\u308c\u305f\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u3092\u7ba1\u7406\u3059\u308b\u70ba\u306e AWS Identity and Access Management \u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u65b0\u3057\u3044\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea copilot/ \u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 copilot \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f Service \u7528\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u3068\u8ffd\u52a0\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002 copilot app init \u306f\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u540d\u3084 AWS \u30bf\u30b0\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u7528\u306e IAM \u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306b\u5229\u7528\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5178\u578b\u7684\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001\u540c\u3058\u52d5\u4f5c\u3092\u3059\u308b copilot init \u3092\u5229\u7528\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 Copilot CLI \u306b\u304a\u3051\u308b\u5168\u3066\u306e\u30b3\u30de\u30f3\u30c9\u3068\u540c\u3058\u69d8\u306b\u3001\u5fc5\u8981\u306a\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5168\u3066\u5165\u529b\u3059\u308b\u69d8\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066\u60c5\u5831\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 --domain string Optional. Your existing custom domain name. -h, --help help for init --permissions-boundary Optional. The name or ARN of an existing IAM policy with which to set a permissions boundary for all roles generated within the application. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --domain \u3000\u30d5\u30e9\u30b0\u306f\u3001 Application \u304c\u5229\u7528\u3057\u3066\u3044\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u4e0a\u306e Amazon Route 53 \u306b\u767b\u9332\u3055\u308c\u305f\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a Application \u5185\u306e\u5168\u3066\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u540c\u3058\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u6b21\u306e\u4f8b\u306e\u69d8\u306b Service \u306b\u5bfe\u3057\u3066\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 https://{svcName}.{envName}.{appName}.{domain} --permissions-boundary \u30d5\u30e9\u30b0\u306f Application \u304c\u5229\u7528\u3057\u3066\u3044\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u4e0a\u306b\u3042\u308b IAM \u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30dd\u30ea\u30b7\u30fc\u540d\u306f\u3001Copilot \u306b\u3088\u308a\u4f5c\u6210\u3055\u308c\u308b\u5168\u3066\u306e IAM \u30dd\u30ea\u30b7\u30fc\u306b\u4ed8\u52a0\u3055\u308c\u308b ARN \u540d\u306e\u4e00\u90e8\u306b\u306a\u308a\u307e\u3059\u3002 --resource-tags \u30d5\u30e9\u30b0\u306f\u3001Application \u5185\u306e\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30ab\u30b9\u30bf\u30e0 \u30bf\u30b0 \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u4f8b: copilot app init --resource-tags department=MyDept,team=MyTeam \u5b9f\u884c\u4f8b \"my-app\"\u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot app init my-app Route 53 \u306b\u767b\u9332\u6e08\u307f\u306e\u65e2\u5b58\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u5229\u7528\u3057\u3066\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot app init --domain example.com \u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot app init --resource-tags department = MyDept,team = MyTeam \u51fa\u529b\u4f8b","title":"app init"},{"location":"ja/docs/commands/app-init/#app-init","text":"$ copilot app init [ name ] [ flags ]","title":"app init"},{"location":"ja/docs/commands/app-init/#_1","text":"copilot app init \u306f\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Service \u306f Application \u5185\u306b\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002 \u8cea\u554f\u3078\u306e\u56de\u7b54\u306e\u5f8c\u3001CLI \u306f\u3001Service \u7528\u306b\u4f5c\u6210\u3055\u308c\u305f\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u3092\u7ba1\u7406\u3059\u308b\u70ba\u306e AWS Identity and Access Management \u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u65b0\u3057\u3044\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea copilot/ \u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 copilot \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f Service \u7528\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u3068\u8ffd\u52a0\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002 copilot app init \u306f\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u540d\u3084 AWS \u30bf\u30b0\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u7528\u306e IAM \u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306b\u5229\u7528\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5178\u578b\u7684\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001\u540c\u3058\u52d5\u4f5c\u3092\u3059\u308b copilot init \u3092\u5229\u7528\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/app-init/#_2","text":"Copilot CLI \u306b\u304a\u3051\u308b\u5168\u3066\u306e\u30b3\u30de\u30f3\u30c9\u3068\u540c\u3058\u69d8\u306b\u3001\u5fc5\u8981\u306a\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5168\u3066\u5165\u529b\u3059\u308b\u69d8\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066\u60c5\u5831\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 --domain string Optional. Your existing custom domain name. -h, --help help for init --permissions-boundary Optional. The name or ARN of an existing IAM policy with which to set a permissions boundary for all roles generated within the application. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --domain \u3000\u30d5\u30e9\u30b0\u306f\u3001 Application \u304c\u5229\u7528\u3057\u3066\u3044\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u4e0a\u306e Amazon Route 53 \u306b\u767b\u9332\u3055\u308c\u305f\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a Application \u5185\u306e\u5168\u3066\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u540c\u3058\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u6b21\u306e\u4f8b\u306e\u69d8\u306b Service \u306b\u5bfe\u3057\u3066\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 https://{svcName}.{envName}.{appName}.{domain} --permissions-boundary \u30d5\u30e9\u30b0\u306f Application \u304c\u5229\u7528\u3057\u3066\u3044\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u4e0a\u306b\u3042\u308b IAM \u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30dd\u30ea\u30b7\u30fc\u540d\u306f\u3001Copilot \u306b\u3088\u308a\u4f5c\u6210\u3055\u308c\u308b\u5168\u3066\u306e IAM \u30dd\u30ea\u30b7\u30fc\u306b\u4ed8\u52a0\u3055\u308c\u308b ARN \u540d\u306e\u4e00\u90e8\u306b\u306a\u308a\u307e\u3059\u3002 --resource-tags \u30d5\u30e9\u30b0\u306f\u3001Application \u5185\u306e\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30ab\u30b9\u30bf\u30e0 \u30bf\u30b0 \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u4f8b: copilot app init --resource-tags department=MyDept,team=MyTeam","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/app-init/#_3","text":"\"my-app\"\u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot app init my-app Route 53 \u306b\u767b\u9332\u6e08\u307f\u306e\u65e2\u5b58\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u5229\u7528\u3057\u3066\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot app init --domain example.com \u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot app init --resource-tags department = MyDept,team = MyTeam","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/app-init/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/app-ls/","text":"app ls $ copilot app ls [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot app ls \u306f\u3001AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u3042\u308b\u5168\u3066\u306e Copilot Application \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -h, --help help for ls \u5b9f\u884c\u4f8b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u3042\u308b\u5168\u3066\u306e Application \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot app ls \u51fa\u529b\u4f8b","title":"app ls"},{"location":"ja/docs/commands/app-ls/#app-ls","text":"$ copilot app ls [ flags ]","title":"app ls"},{"location":"ja/docs/commands/app-ls/#_1","text":"copilot app ls \u306f\u3001AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u3042\u308b\u5168\u3066\u306e Copilot Application \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/app-ls/#_2","text":"-h, --help help for ls","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/app-ls/#_3","text":"AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u3042\u308b\u5168\u3066\u306e Application \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot app ls","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/app-ls/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/app-show/","text":"app show $ copilot app show [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot app show \u306f Application \u306e\u8a2d\u5b9a\u3001Environment\u3001Service \u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the application. \u5b9f\u884c\u4f8b \"my-app\"\u3068\u3044\u3046 Application \u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot app show -n my-app \u51fa\u529b\u4f8b","title":"app show"},{"location":"ja/docs/commands/app-show/#app-show","text":"$ copilot app show [ flags ]","title":"app show"},{"location":"ja/docs/commands/app-show/#_1","text":"copilot app show \u306f Application \u306e\u8a2d\u5b9a\u3001Environment\u3001Service \u3092\u51fa\u529b\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/app-show/#_2","text":"-h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the application.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/app-show/#_3","text":"\"my-app\"\u3068\u3044\u3046 Application \u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot app show -n my-app","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/app-show/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/app-upgrade/","text":"app upgrade $ copilot app upgrade [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot app upgrade Application \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6700\u65b0\u306e\u3082\u306e\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -h, --help help for upgrade -n, --name string Name of the application. \u5b9f\u884c\u4f8b Application \"my-app\" \u3092\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u307e\u3059\u3002 $ copilot app upgrade -n my-app","title":"app upgrade"},{"location":"ja/docs/commands/app-upgrade/#app-upgrade","text":"$ copilot app upgrade [ flags ]","title":"app upgrade"},{"location":"ja/docs/commands/app-upgrade/#_1","text":"copilot app upgrade Application \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6700\u65b0\u306e\u3082\u306e\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/app-upgrade/#_2","text":"-h, --help help for upgrade -n, --name string Name of the application.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/app-upgrade/#_3","text":"Application \"my-app\" \u3092\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u307e\u3059\u3002 $ copilot app upgrade -n my-app","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/completion/","text":"completion $ copilot completion [ shell ] [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot completion \u306f\u3001bash \u3084 zsh\u3001fish \u306e\u30b7\u30a7\u30eb\u88dc\u5b8c\u30b3\u30fc\u30c9\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u88dc\u5b8c\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30b3\u30fc\u30c9\u304c\u8a55\u4fa1\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u305d\u308c\u305e\u308c\u306e\u30b7\u30a7\u30eb\u3067\u81ea\u52d5\u88dc\u5b8c\u3092\u8a2d\u5b9a\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u30d8\u30eb\u30d7\u30e1\u30cb\u30e5\u30fc\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d5\u30e9\u30b0 -h, --help help for completion \u4f8b zsh \u306e\u88dc\u5b8c\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ source < ( copilot completion zsh ) $ copilot completion zsh > \" ${ fpath [1] } /_copilot\" # to autoload on startup bash \u306e\u88dc\u5b8c\u3092 homebrew \u3092\u4f7f\u3063\u3066 macOS \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ brew install bash-completion # if running 3.2 $ brew install bash-completion@2 # if running Bash 4.1+ $ copilot completion bash > /usr/local/etc/bash_completion.d bash \u306e\u88dc\u5b8c\u3092 Linux \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ source < ( copilot completion bash ) $ copilot completion bash > copilot.sh $ sudo mv copilot.sh /etc/bash_completion.d/copilot fish \u306e\u88dc\u5b8c\u3092 Linux \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ source < ( copilot completion fish ) $ copilot completion fish > ~/.config/fish/completions/copilot.fish","title":"completion"},{"location":"ja/docs/commands/completion/#completion","text":"$ copilot completion [ shell ] [ flags ]","title":"completion"},{"location":"ja/docs/commands/completion/#_1","text":"copilot completion \u306f\u3001bash \u3084 zsh\u3001fish \u306e\u30b7\u30a7\u30eb\u88dc\u5b8c\u30b3\u30fc\u30c9\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u88dc\u5b8c\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30b3\u30fc\u30c9\u304c\u8a55\u4fa1\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u305d\u308c\u305e\u308c\u306e\u30b7\u30a7\u30eb\u3067\u81ea\u52d5\u88dc\u5b8c\u3092\u8a2d\u5b9a\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u30d8\u30eb\u30d7\u30e1\u30cb\u30e5\u30fc\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/completion/#_2","text":"-h, --help help for completion","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/completion/#_3","text":"zsh \u306e\u88dc\u5b8c\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ source < ( copilot completion zsh ) $ copilot completion zsh > \" ${ fpath [1] } /_copilot\" # to autoload on startup bash \u306e\u88dc\u5b8c\u3092 homebrew \u3092\u4f7f\u3063\u3066 macOS \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ brew install bash-completion # if running 3.2 $ brew install bash-completion@2 # if running Bash 4.1+ $ copilot completion bash > /usr/local/etc/bash_completion.d bash \u306e\u88dc\u5b8c\u3092 Linux \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ source < ( copilot completion bash ) $ copilot completion bash > copilot.sh $ sudo mv copilot.sh /etc/bash_completion.d/copilot fish \u306e\u88dc\u5b8c\u3092 Linux \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 $ source < ( copilot completion fish ) $ copilot completion fish > ~/.config/fish/completions/copilot.fish","title":"\u4f8b"},{"location":"ja/docs/commands/deploy/","text":"copilot deploy $ copilot deploy \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30ed\u30fc\u30ab\u30eb Manifest \u304b\u3089 Service \u53ca\u3073 Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3068\u30ed\u30fc\u30ab\u30eb Manifest \u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001Environment \u306e\u521d\u671f\u5316\u3068\u30c7\u30d7\u30ed\u30a4\u3001\u304a\u3088\u3073\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u652f\u63f4\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001 --init-wkld \u30d5\u30e9\u30b0\u3067\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5fc5\u8981\u306a Environment \u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001 --init-env \u30d5\u30e9\u30b0\u3067\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 --deploy-env \u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066 Environment \u306e\u30c7\u30d7\u30ed\u30a4\u306e\u78ba\u8a8d\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u304b\u3001false ( --deploy-env=false ) \u306b\u8a2d\u5b9a\u3057\u3066 Environment \u306e\u30c7\u30d7\u30ed\u30a4\u81ea\u4f53\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 copilot deploy \u306b\u542b\u307e\u308c\u308b\u624b\u9806\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 Service \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066 Service \u3092\u521d\u671f\u5316 \u30bf\u30fc\u30b2\u30c3\u30c8 Environment \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066\u521d\u671f\u5316 \u5fc5\u8981\u306b\u5fdc\u3058\u3066 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b Environment \u3092\u30c7\u30d7\u30ed\u30a4 Manifest \u306b image.build \u304c\u5b58\u5728\u3059\u308b\u5834\u5408 \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210 --tag \u3067\u6307\u5b9a\u3055\u308c\u305f\u5024\u3001\u307e\u305f\u306f\u6700\u65b0\u306e git sha \u3092\u5229\u7528\u3057\u3066\u30bf\u30b0\u4ed8\u3051(git \u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u5834\u5408) \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 ECR \u306b\u5bfe\u3057\u3066\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u3068 Addon \u3092\u307e\u3068\u3081\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d1\u30c3\u30b1\u30fc\u30b8 ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u3092\u4f5c\u6210/\u66f4\u65b0\u3057\u3001Job \u3084 Service \u3092\u4f5c\u6210/\u66f4\u65b0 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key for the environment account. --aws-secret-access-key string Optional. An AWS secret access key for the environment account. --aws-session-token string Optional. An AWS session token for temporary credentials. --deploy-env bool Deploy the target environment before deploying the workload. --detach bool Optional. Skip displaying CloudFormation deployment progress. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. Not available with the \"Static Site\" service type. -h, --help help for deploy --init-env bool Confirm initializing the target environment if it does not exist. --init-wkld bool Optional. Initialize a workload before deploying it. -n, --name string Name of the service or job. --no-rollback bool Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --profile string Name of the profile for the environment account. --region string Optional. An AWS region where the environment will be created. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info --no-rollback \u30d5\u30e9\u30b0\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u3092\u62db\u304f\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f \u304a\u52e7\u3081\u3057\u307e\u305b\u3093 \u3002 \u81ea\u52d5\u30b9\u30bf\u30c3\u30af\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u3001\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3059\u308b\u3068\u3001\u624b\u52d5\u3067\u30b9\u30bf\u30c3\u30af\u3092\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6b21\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b AWS \u30b3\u30f3\u30bd\u30fc\u30eb\u307e\u305f\u306f AWS CLI \u3092\u5229\u7528\u3057\u3066\u30b9\u30bf\u30c3\u30af\u306e\u30b9\u30bf\u30c3\u30af\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u624b\u52d5\u3067\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u5b9f\u884c\u4f8b \"frontend\" \u3068\u3044\u3046\u540d\u524d\u306e Service \u3092 \"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy --name frontend --env test \"mailer\" \u3068\u3044\u3046\u540d\u524d\u306e Job \u3092\u3001\u8ffd\u52a0\u306e\u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u3092\u4ed8\u52a0\u3057\u3066\u3001\"prod\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy -n mailer -e prod --resource-tags source/revision = bb133e7,deployment/initiator = manual us-west-2 \u30ea\u30fc\u30b8\u30e7\u30f3\u306e \"test\" \u3068\u3044\u3046\u540d\u524d\u306e Environment \u3092\u30ed\u30fc\u30ab\u30eb Manifest \u3092\u4f7f\u7528\u3057\u3066 \"default\" \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u4e0b\u306b\u521d\u671f\u5316\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u3001\"api\" \u3068\u3044\u3046\u540d\u524d\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy --init-env --deploy-env --env test --name api --profile default --region us-west-2 \"backend\" \u3068\u3044\u3046\u540d\u524d\u306e Service \u3092\u521d\u671f\u5316\u3057\u3001\"prod\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy --init-wkld --deploy-env = false --env prod --name backend","title":"deploy"},{"location":"ja/docs/commands/deploy/#copilot-deploy","text":"$ copilot deploy","title":"copilot deploy"},{"location":"ja/docs/commands/deploy/#_1","text":"\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30ed\u30fc\u30ab\u30eb Manifest \u304b\u3089 Service \u53ca\u3073 Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3068\u30ed\u30fc\u30ab\u30eb Manifest \u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001Environment \u306e\u521d\u671f\u5316\u3068\u30c7\u30d7\u30ed\u30a4\u3001\u304a\u3088\u3073\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u652f\u63f4\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001 --init-wkld \u30d5\u30e9\u30b0\u3067\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5fc5\u8981\u306a Environment \u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001 --init-env \u30d5\u30e9\u30b0\u3067\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 --deploy-env \u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066 Environment \u306e\u30c7\u30d7\u30ed\u30a4\u306e\u78ba\u8a8d\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u304b\u3001false ( --deploy-env=false ) \u306b\u8a2d\u5b9a\u3057\u3066 Environment \u306e\u30c7\u30d7\u30ed\u30a4\u81ea\u4f53\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 copilot deploy \u306b\u542b\u307e\u308c\u308b\u624b\u9806\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 Service \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066 Service \u3092\u521d\u671f\u5316 \u30bf\u30fc\u30b2\u30c3\u30c8 Environment \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066\u521d\u671f\u5316 \u5fc5\u8981\u306b\u5fdc\u3058\u3066 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b Environment \u3092\u30c7\u30d7\u30ed\u30a4 Manifest \u306b image.build \u304c\u5b58\u5728\u3059\u308b\u5834\u5408 \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210 --tag \u3067\u6307\u5b9a\u3055\u308c\u305f\u5024\u3001\u307e\u305f\u306f\u6700\u65b0\u306e git sha \u3092\u5229\u7528\u3057\u3066\u30bf\u30b0\u4ed8\u3051(git \u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u5834\u5408) \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 ECR \u306b\u5bfe\u3057\u3066\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u3068 Addon \u3092\u307e\u3068\u3081\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d1\u30c3\u30b1\u30fc\u30b8 ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u3092\u4f5c\u6210/\u66f4\u65b0\u3057\u3001Job \u3084 Service \u3092\u4f5c\u6210/\u66f4\u65b0","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/deploy/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key for the environment account. --aws-secret-access-key string Optional. An AWS secret access key for the environment account. --aws-session-token string Optional. An AWS session token for temporary credentials. --deploy-env bool Deploy the target environment before deploying the workload. --detach bool Optional. Skip displaying CloudFormation deployment progress. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. Not available with the \"Static Site\" service type. -h, --help help for deploy --init-env bool Confirm initializing the target environment if it does not exist. --init-wkld bool Optional. Initialize a workload before deploying it. -n, --name string Name of the service or job. --no-rollback bool Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --profile string Name of the profile for the environment account. --region string Optional. An AWS region where the environment will be created. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info --no-rollback \u30d5\u30e9\u30b0\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u3092\u62db\u304f\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f \u304a\u52e7\u3081\u3057\u307e\u305b\u3093 \u3002 \u81ea\u52d5\u30b9\u30bf\u30c3\u30af\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u3001\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3059\u308b\u3068\u3001\u624b\u52d5\u3067\u30b9\u30bf\u30c3\u30af\u3092\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6b21\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b AWS \u30b3\u30f3\u30bd\u30fc\u30eb\u307e\u305f\u306f AWS CLI \u3092\u5229\u7528\u3057\u3066\u30b9\u30bf\u30c3\u30af\u306e\u30b9\u30bf\u30c3\u30af\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u624b\u52d5\u3067\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/deploy/#_3","text":"\"frontend\" \u3068\u3044\u3046\u540d\u524d\u306e Service \u3092 \"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy --name frontend --env test \"mailer\" \u3068\u3044\u3046\u540d\u524d\u306e Job \u3092\u3001\u8ffd\u52a0\u306e\u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u3092\u4ed8\u52a0\u3057\u3066\u3001\"prod\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy -n mailer -e prod --resource-tags source/revision = bb133e7,deployment/initiator = manual us-west-2 \u30ea\u30fc\u30b8\u30e7\u30f3\u306e \"test\" \u3068\u3044\u3046\u540d\u524d\u306e Environment \u3092\u30ed\u30fc\u30ab\u30eb Manifest \u3092\u4f7f\u7528\u3057\u3066 \"default\" \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u4e0b\u306b\u521d\u671f\u5316\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u3001\"api\" \u3068\u3044\u3046\u540d\u524d\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy --init-env --deploy-env --env test --name api --profile default --region us-west-2 \"backend\" \u3068\u3044\u3046\u540d\u524d\u306e Service \u3092\u521d\u671f\u5316\u3057\u3001\"prod\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot deploy --init-wkld --deploy-env = false --env prod --name backend","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/docs/","text":"docs $ copilot docs [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot docs \u306f\u3001Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u958b\u304d\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -h, --help help for docs","title":"docs"},{"location":"ja/docs/commands/docs/#docs","text":"$ copilot docs [ flags ]","title":"docs"},{"location":"ja/docs/commands/docs/#_1","text":"copilot docs \u306f\u3001Copilot \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u958b\u304d\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/docs/#_2","text":"-h, --help help for docs","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-delete/","text":"env delete $ copilot env delete [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot env delete \u306f\u3001Application\u304b\u3089 Environment \u3092\u524a\u9664\u3057\u307e\u3059\u3002 Environment \u5185\u306b\u5b9f\u884c\u4e2d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u306f\u3058\u3081\u306b copilot svc delete \u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u8cea\u554f\u306b\u7b54\u3048\u305f\u5f8c\u3001Environment \u7528\u306e AWS CloudFormation \u30b9\u30bf\u30c3\u30af\u304c\u524a\u9664\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d5\u30e9\u30b0 -h, --help help for delete -n, --name string Name of the environment. --yes Skips confirmation prompt. -a, --app string Name of the application. \u5b9f\u884c\u4f8b \"test\" Environment \u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot env delete --name test \"test\" Environment \u3092\u30d7\u30ed\u30f3\u30d7\u30c8\u306a\u3057\u3067\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot env delete --name test --yes","title":"env delete"},{"location":"ja/docs/commands/env-delete/#env-delete","text":"$ copilot env delete [ flags ]","title":"env delete"},{"location":"ja/docs/commands/env-delete/#_1","text":"copilot env delete \u306f\u3001Application\u304b\u3089 Environment \u3092\u524a\u9664\u3057\u307e\u3059\u3002 Environment \u5185\u306b\u5b9f\u884c\u4e2d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u306f\u3058\u3081\u306b copilot svc delete \u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u8cea\u554f\u306b\u7b54\u3048\u305f\u5f8c\u3001Environment \u7528\u306e AWS CloudFormation \u30b9\u30bf\u30c3\u30af\u304c\u524a\u9664\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/env-delete/#_2","text":"-h, --help help for delete -n, --name string Name of the environment. --yes Skips confirmation prompt. -a, --app string Name of the application.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-delete/#_3","text":"\"test\" Environment \u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot env delete --name test \"test\" Environment \u3092\u30d7\u30ed\u30f3\u30d7\u30c8\u306a\u3057\u3067\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot env delete --name test --yes","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/env-deploy/","text":"env deploy \u3092 v1.20.0 \u306b\u3066\u8ffd\u52a0 $ copilot env deploy \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot env deploy \u306f\u3001 Environment Manifest \u306e\u8a2d\u5b9a\u3092\u53d7\u3051\u53d6\u308a\u3001Environment \u30a4\u30f3\u30d5\u30e9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. --force Optional. Force update the environment stack template. -h, --help help for deploy -n, --name string Name of the environment. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. \u5b9f\u884c\u4f8b \u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5909\u66f4\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001 --diff \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 $ copilot env deploy --name test --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled Continue with the deployment? (y/N) copilot env package --diff \u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u5dee\u5206\u3060\u3051\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 copilot env package --diff \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u3066\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3059\u3002","title":"env deploy"},{"location":"ja/docs/commands/env-deploy/#env-deploy-v1200","text":"$ copilot env deploy","title":"env deploy \u3092 v1.20.0 \u306b\u3066\u8ffd\u52a0"},{"location":"ja/docs/commands/env-deploy/#_1","text":"copilot env deploy \u306f\u3001 Environment Manifest \u306e\u8a2d\u5b9a\u3092\u53d7\u3051\u53d6\u308a\u3001Environment \u30a4\u30f3\u30d5\u30e9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/env-deploy/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. --force Optional. Force update the environment stack template. -h, --help help for deploy -n, --name string Name of the environment. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-deploy/#_3","text":"\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5909\u66f4\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001 --diff \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 $ copilot env deploy --name test --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled Continue with the deployment? (y/N) copilot env package --diff \u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u5dee\u5206\u3060\u3051\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 copilot env package --diff \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u3066\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3059\u3002","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/env-init/","text":"env init $ copilot env init [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot env init \u306f\u3001Service \u5b9f\u884c\u7528\u306b\u65b0\u3057\u3044 Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u8cea\u554f\u306b\u7b54\u3048\u308b\u3068\u3001CLI \u306f VPC, Application Load Balancer, ECS Cluster \u306a\u3069\u306e Service \u3067\u5171\u6709\u3055\u308c\u308b\u5171\u901a\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30bd\u30fc\u30b9\u8a2d\u5b9a\u3084\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u306a\u3069\u3001 Copilot \u306e Environment \u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u3067\u304d\u307e\u3059\u3002 \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u3092\u4f5c\u6210\u3059\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 AWS Copilot CLI \u306e\u5168\u3066\u306e\u30b3\u30de\u30f3\u30c9\u540c\u69d8\u3001\u5fc5\u9808\u30d5\u30e9\u30b0\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306b\u306f\u305d\u308c\u3089\u306e\u60c5\u5831\u306e\u5165\u529b\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u5fc5\u9808\u30d5\u30e9\u30b0\u3092\u660e\u793a\u7684\u306b\u6e21\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3053\u308c\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 Common Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key. --aws-secret-access-key string Optional. An AWS secret access key. --aws-session-token string Optional. An AWS session token for temporary credentials. --default-config Optional. Skip prompting and use default environment configuration. -n, --name string Name of the environment. --profile string Name of the profile. --region string Optional. An AWS region where the environment will be created. Import Existing Resources Flags --import-cert-arns strings Optional. Apply existing ACM certificates to the internet-facing load balancer. --import-private-subnets strings Optional. Use existing private subnet IDs. --import-public-subnets strings Optional. Use existing public subnet IDs. --import-vpc-id string Optional. Use an existing VPC ID. Configure Default Resources Flags --internal-alb-allow-vpc-ingress Optional. Allow internal ALB ingress from ports 80 and 443. --internal-alb-subnets strings Optional. Specify subnet IDs for an internal load balancer. By default, the load balancer will be placed in your private subnets. Cannot be specified with --default-config or any of the --override flags. --override-az-names strings Optional. Availability Zone names. (default 2 random AZs) --override-private-cidrs strings Optional. CIDR to use for private subnets. (default 10.0.2.0/24,10.0.3.0/24) --override-public-cidrs strings Optional. CIDR to use for public subnets. (default 10.0.0.0/24,10.0.1.0/24) --override-vpc-cidr ipNet Optional. Global CIDR to use for VPC. (default 10.0.0.0/16) Telemetry Flags --container-insights Optional. Enable CloudWatch Container Insights. \u5b9f\u884c\u4f8b AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e \"default\" \u5229\u7528\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066 test Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env init --name test --profile default --default-config AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e \"prod-admin\" \u3092\u5229\u7528\u3057\u3066 prod-iad Environment \u3092\u4f5c\u6210\u3057\u3001 CloudWatch Container Insights\u3000\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002 $ copilot env init --name prod-iad --profile prod-admin --container-insights VPC \u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066 Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env init --import-vpc-id vpc-099c32d2b98cdcf47 \\ --import-public-subnets subnet-013e8b691862966cf,subnet-014661ebb7ab8681a \\ --import-private-subnets subnet-055fafef48fb3c547,subnet-00c9e76f288363e7f \\ --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 CIDR \u3068 AZ \u3092\u4e0a\u66f8\u304d\u3057\u3066\u3001Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env init --override-vpc-cidr 10 .1.0.0/16 \\ --override-az-names us-west-2b,us-west-2c \\ --override-public-cidrs 10 .1.0.0/24,10.1.1.0/24 \\ --override-private-cidrs 10 .1.2.0/24,10.1.3.0/24 \u51fa\u529b\u4f8b","title":"env init"},{"location":"ja/docs/commands/env-init/#env-init","text":"$ copilot env init [ flags ]","title":"env init"},{"location":"ja/docs/commands/env-init/#_1","text":"copilot env init \u306f\u3001Service \u5b9f\u884c\u7528\u306b\u65b0\u3057\u3044 Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u8cea\u554f\u306b\u7b54\u3048\u308b\u3068\u3001CLI \u306f VPC, Application Load Balancer, ECS Cluster \u306a\u3069\u306e Service \u3067\u5171\u6709\u3055\u308c\u308b\u5171\u901a\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30bd\u30fc\u30b9\u8a2d\u5b9a\u3084\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u306a\u3069\u3001 Copilot \u306e Environment \u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u3067\u304d\u307e\u3059\u3002 \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u3092\u4f5c\u6210\u3059\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/env-init/#_2","text":"AWS Copilot CLI \u306e\u5168\u3066\u306e\u30b3\u30de\u30f3\u30c9\u540c\u69d8\u3001\u5fc5\u9808\u30d5\u30e9\u30b0\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306b\u306f\u305d\u308c\u3089\u306e\u60c5\u5831\u306e\u5165\u529b\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u5fc5\u9808\u30d5\u30e9\u30b0\u3092\u660e\u793a\u7684\u306b\u6e21\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3053\u308c\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 Common Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --aws-access-key-id string Optional. An AWS access key. --aws-secret-access-key string Optional. An AWS secret access key. --aws-session-token string Optional. An AWS session token for temporary credentials. --default-config Optional. Skip prompting and use default environment configuration. -n, --name string Name of the environment. --profile string Name of the profile. --region string Optional. An AWS region where the environment will be created. Import Existing Resources Flags --import-cert-arns strings Optional. Apply existing ACM certificates to the internet-facing load balancer. --import-private-subnets strings Optional. Use existing private subnet IDs. --import-public-subnets strings Optional. Use existing public subnet IDs. --import-vpc-id string Optional. Use an existing VPC ID. Configure Default Resources Flags --internal-alb-allow-vpc-ingress Optional. Allow internal ALB ingress from ports 80 and 443. --internal-alb-subnets strings Optional. Specify subnet IDs for an internal load balancer. By default, the load balancer will be placed in your private subnets. Cannot be specified with --default-config or any of the --override flags. --override-az-names strings Optional. Availability Zone names. (default 2 random AZs) --override-private-cidrs strings Optional. CIDR to use for private subnets. (default 10.0.2.0/24,10.0.3.0/24) --override-public-cidrs strings Optional. CIDR to use for public subnets. (default 10.0.0.0/24,10.0.1.0/24) --override-vpc-cidr ipNet Optional. Global CIDR to use for VPC. (default 10.0.0.0/16) Telemetry Flags --container-insights Optional. Enable CloudWatch Container Insights.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-init/#_3","text":"AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e \"default\" \u5229\u7528\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066 test Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env init --name test --profile default --default-config AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e \"prod-admin\" \u3092\u5229\u7528\u3057\u3066 prod-iad Environment \u3092\u4f5c\u6210\u3057\u3001 CloudWatch Container Insights\u3000\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002 $ copilot env init --name prod-iad --profile prod-admin --container-insights VPC \u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066 Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env init --import-vpc-id vpc-099c32d2b98cdcf47 \\ --import-public-subnets subnet-013e8b691862966cf,subnet-014661ebb7ab8681a \\ --import-private-subnets subnet-055fafef48fb3c547,subnet-00c9e76f288363e7f \\ --import-cert-arns arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 CIDR \u3068 AZ \u3092\u4e0a\u66f8\u304d\u3057\u3066\u3001Environment \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env init --override-vpc-cidr 10 .1.0.0/16 \\ --override-az-names us-west-2b,us-west-2c \\ --override-public-cidrs 10 .1.0.0/24,10.1.1.0/24 \\ --override-private-cidrs 10 .1.2.0/24,10.1.3.0/24","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/env-init/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/env-ls/","text":"env ls $ copilot env ls [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot env ls \u306f\u3001Application \u5185\u306e\u5168\u3066\u306e Environment \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -h, --help help for ls --json Optional. Output in JSON format. -a, --app string Name of the application. \u7d50\u679c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30d1\u30fc\u30b9\u3057\u305f\u3044\u5834\u5408 --json \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5b9f\u884c\u4f8b frontend Application \u306e\u5168\u3066\u306e Environment \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot env ls -a frontend \u51fa\u529b\u4f8b","title":"env ls"},{"location":"ja/docs/commands/env-ls/#env-ls","text":"$ copilot env ls [ flags ]","title":"env ls"},{"location":"ja/docs/commands/env-ls/#_1","text":"copilot env ls \u306f\u3001Application \u5185\u306e\u5168\u3066\u306e Environment \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/env-ls/#_2","text":"-h, --help help for ls --json Optional. Output in JSON format. -a, --app string Name of the application. \u7d50\u679c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30d1\u30fc\u30b9\u3057\u305f\u3044\u5834\u5408 --json \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-ls/#_3","text":"frontend Application \u306e\u5168\u3066\u306e Environment \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot env ls -a frontend","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/env-ls/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/env-override/","text":"copilot env override $ copilot env override \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 Envrionment \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001 \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Environment \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u8aac\u660e \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". \u5b9f\u884c\u4f8b Environment \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env override --tool cdk \u51fa\u529b\u4f8b","title":"env override"},{"location":"ja/docs/commands/env-override/#copilot-env-override","text":"$ copilot env override","title":"copilot env override"},{"location":"ja/docs/commands/env-override/#_1","text":"Envrionment \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001 \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Environment \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/env-override/#_2","text":"\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u8a73\u7d30\u8aac\u660e"},{"location":"ja/docs/commands/env-override/#_3","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-override/#_4","text":"Environment \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot env override --tool cdk","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/env-override/#_5","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/env-package/","text":"env package $ copilot env package [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot env package \u306f\u3001Envronment \u306e\u30c7\u30d7\u30ed\u30a4\u306b\u4f7f\u7528\u3055\u308c\u308b CloudFormation \u30b9\u30bf\u30c3\u30af\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u8a2d\u5b9a\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. --force Optional. Force update the environment stack template. -h, --help help for package -n, --name string Name of the environment. --output-dir string Optional. Writes the stack template and template configuration to a directory. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration. \u5b9f\u884c\u4f8b \"prod\" Environment \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u51fa\u529b\u3057\u3001\u30ab\u30b9\u30bf\u30e0\u30ea\u30bd\u30fc\u30b9\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 $ copilot env package -n prod --upload-assets CloudFormation \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u8a2d\u5b9a\u3092 stdout (\u6a19\u6e96\u51fa\u529b) \u3067\u306f\u306a\u304f\u3001\"infrastructure/\" \u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002 $ copilot env package -n test --output-dir ./infrastructure --upload-assets $ ls ./infrastructure test.env.yml test.env.params.json --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u5dee\u5206\u3092\u51fa\u529b\u3057\u3001\u7d42\u4e86\u3057\u307e\u3059\u3002 $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled copilot [noun] package --diff \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"env package"},{"location":"ja/docs/commands/env-package/#env-package","text":"$ copilot env package [ flags ]","title":"env package"},{"location":"ja/docs/commands/env-package/#_1","text":"copilot env package \u306f\u3001Envronment \u306e\u30c7\u30d7\u30ed\u30a4\u306b\u4f7f\u7528\u3055\u308c\u308b CloudFormation \u30b9\u30bf\u30c3\u30af\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u8a2d\u5b9a\u3092\u51fa\u529b\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/env-package/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. --force Optional. Force update the environment stack template. -h, --help help for package -n, --name string Name of the environment. --output-dir string Optional. Writes the stack template and template configuration to a directory. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-package/#_3","text":"\"prod\" Environment \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u51fa\u529b\u3057\u3001\u30ab\u30b9\u30bf\u30e0\u30ea\u30bd\u30fc\u30b9\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 $ copilot env package -n prod --upload-assets CloudFormation \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u8a2d\u5b9a\u3092 stdout (\u6a19\u6e96\u51fa\u529b) \u3067\u306f\u306a\u304f\u3001\"infrastructure/\" \u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002 $ copilot env package -n test --output-dir ./infrastructure --upload-assets $ ls ./infrastructure test.env.yml test.env.params.json --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u5dee\u5206\u3092\u51fa\u529b\u3057\u3001\u7d42\u4e86\u3057\u307e\u3059\u3002 $ copilot env deploy --diff ~ Resources: ~ Cluster: ~ Properties: ~ ClusterSettings: ~ - (changed item) ~ Value: enabled -> disabled copilot [noun] package --diff \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/env-show/","text":"env show $ copilot env show [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot env show \u306f\u3001\u7279\u5b9a\u306e Environment \u306b\u95a2\u3059\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002 Environment \u304c\u3042\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3068\u30a2\u30ab\u30a6\u30f3\u30c8 Environment \u306b\u73fe\u5728\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b Service Environment \u306b\u95a2\u9023\u3059\u308b\u30bf\u30b0 \u30aa\u30d7\u30b7\u30e7\u30f3\u3067 --resources \u30d5\u30e9\u30b0\u3092\u4ed8\u3051\u308b\u3068 Environment \u306b\u95a2\u9023\u3059\u308b AWS \u30ea\u30bd\u30fc\u30b9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest Optional. Output the manifest file used for the deployment. -n, --name string Name of the environment. --resources Optional. Show the resources in your environment. \u7d50\u679c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30d1\u30fc\u30b9\u3057\u305f\u3044\u5834\u5408 --json \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5b9f\u884c\u4f8b \"test\" Environment \u7528\u306e\u8a2d\u5b9a\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot env show -n test \"prod\" Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot env show -n prod --manifest","title":"env show"},{"location":"ja/docs/commands/env-show/#env-show","text":"$ copilot env show [ flags ]","title":"env show"},{"location":"ja/docs/commands/env-show/#_1","text":"copilot env show \u306f\u3001\u7279\u5b9a\u306e Environment \u306b\u95a2\u3059\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002 Environment \u304c\u3042\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3068\u30a2\u30ab\u30a6\u30f3\u30c8 Environment \u306b\u73fe\u5728\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u308b Service Environment \u306b\u95a2\u9023\u3059\u308b\u30bf\u30b0 \u30aa\u30d7\u30b7\u30e7\u30f3\u3067 --resources \u30d5\u30e9\u30b0\u3092\u4ed8\u3051\u308b\u3068 Environment \u306b\u95a2\u9023\u3059\u308b AWS \u30ea\u30bd\u30fc\u30b9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/env-show/#_2","text":"-a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest Optional. Output the manifest file used for the deployment. -n, --name string Name of the environment. --resources Optional. Show the resources in your environment. \u7d50\u679c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30d1\u30fc\u30b9\u3057\u305f\u3044\u5834\u5408 --json \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/env-show/#_3","text":"\"test\" Environment \u7528\u306e\u8a2d\u5b9a\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot env show -n test \"prod\" Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot env show -n prod --manifest","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/init/","text":"init $ copilot init \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot init \u306f\u3001\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092 AWS App Runner \u3084 Amazon ECS on AWS Fargate \u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u5834\u5408\u306e\u51fa\u767a\u70b9\u3068\u306a\u308a\u307e\u3059\u3002Dockerfile \u3092\u542b\u3080\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u3042\u3068\u306f init \u306e\u8cea\u554f\u306b\u7b54\u3048\u3066\u3044\u304f\u3060\u3051\u3067\u3059\u3050\u306b Application \u3092\u4f5c\u6210\u3057\u3001\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u8cea\u554f\u306b\u7b54\u3048\u308b\u3068\u3001 copilot init \u306f ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5c0b\u306d\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30bf\u30c3\u30af\u3068\u30ed\u30fc\u30eb\u3092\u5099\u3048\u305f\u65b0\u3057\u3044 test Environemnt \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001Dockerfile \u3092\u30d3\u30eb\u30c9\u3057\u3066 Amazon ECR \u306b Push \u3057\u3001Service \u3084 Job \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u65e2\u5b58\u306e Application \u3078\u306e Service \u3068 Job \u306e\u8ffd\u52a0\u3082 copilot init \u3067\u884c\u3048\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f Service \u3084 Job \u3092\u8ffd\u52a0\u3059\u308b Application \u306e\u9078\u629e\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002 \u30d5\u30e9\u30b0 Copilot CLI \u306e\u5168\u3066\u306e\u30b3\u30de\u30f3\u30c9\u3068\u540c\u69d8\u306b\u3001\u5fc5\u8981\u306a\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30a2\u30d7\u30ea\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u3059\u3079\u3066\u5165\u529b\u3059\u308b\u3088\u3046\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u4ecb\u3057\u3066\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 -a, --app string Name of the application. --deploy Deploy your service or job to a \"test\" environment. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -n, --name string Name of the service or job. --port uint16 Optional. The port on which your service listens. --retries int Optional. The number of times to try restarting the job on a failure. --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\". -t, --type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Scheduled Job\".","title":"init"},{"location":"ja/docs/commands/init/#init","text":"$ copilot init","title":"init"},{"location":"ja/docs/commands/init/#_1","text":"copilot init \u306f\u3001\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092 AWS App Runner \u3084 Amazon ECS on AWS Fargate \u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u5834\u5408\u306e\u51fa\u767a\u70b9\u3068\u306a\u308a\u307e\u3059\u3002Dockerfile \u3092\u542b\u3080\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u3042\u3068\u306f init \u306e\u8cea\u554f\u306b\u7b54\u3048\u3066\u3044\u304f\u3060\u3051\u3067\u3059\u3050\u306b Application \u3092\u4f5c\u6210\u3057\u3001\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u8cea\u554f\u306b\u7b54\u3048\u308b\u3068\u3001 copilot init \u306f ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5c0b\u306d\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30bf\u30c3\u30af\u3068\u30ed\u30fc\u30eb\u3092\u5099\u3048\u305f\u65b0\u3057\u3044 test Environemnt \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001Dockerfile \u3092\u30d3\u30eb\u30c9\u3057\u3066 Amazon ECR \u306b Push \u3057\u3001Service \u3084 Job \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u65e2\u5b58\u306e Application \u3078\u306e Service \u3068 Job \u306e\u8ffd\u52a0\u3082 copilot init \u3067\u884c\u3048\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f Service \u3084 Job \u3092\u8ffd\u52a0\u3059\u308b Application \u306e\u9078\u629e\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/init/#_2","text":"Copilot CLI \u306e\u5168\u3066\u306e\u30b3\u30de\u30f3\u30c9\u3068\u540c\u69d8\u306b\u3001\u5fc5\u8981\u306a\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30a2\u30d7\u30ea\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u3059\u3079\u3066\u5165\u529b\u3059\u308b\u3088\u3046\u306b\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\u30d5\u30e9\u30b0\u3092\u4ecb\u3057\u3066\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002 -a, --app string Name of the application. --deploy Deploy your service or job to a \"test\" environment. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -n, --name string Name of the service or job. --port uint16 Optional. The port on which your service listens. --retries int Optional. The number of times to try restarting the job on a failure. --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\". -t, --type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Scheduled Job\".","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-delete/","text":"job delete $ copilot job delete [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot job delete \u306f\u7279\u5b9a\u306e Environment \u5185\u3067 Job \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the job. --yes Skips confirmation prompt. \u5b9f\u884c\u4f8b \"report-generator\" Job \u3092 \"my-app\" Application \u304b\u3089\u524a\u9664\u3057\u307e\u3059\u3002\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u5916\u304b\u3089\u3067\u3082\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ copilot job delete --name report-generator --app my-app \"report-generator\" Job \u3092 \"prod\" Environment \u304b\u3089\u306e\u307f\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot job delete --name report-generator --env prod \u78ba\u8a8d\u3092\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u8868\u793a\u305b\u305a \"report-generator\" Job \u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot job delete --name report-generator --yes","title":"job delete"},{"location":"ja/docs/commands/job-delete/#job-delete","text":"$ copilot job delete [ flags ]","title":"job delete"},{"location":"ja/docs/commands/job-delete/#_1","text":"copilot job delete \u306f\u7279\u5b9a\u306e Environment \u5185\u3067 Job \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/job-delete/#_2","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the job. --yes Skips confirmation prompt.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-delete/#_3","text":"\"report-generator\" Job \u3092 \"my-app\" Application \u304b\u3089\u524a\u9664\u3057\u307e\u3059\u3002\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u5916\u304b\u3089\u3067\u3082\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 $ copilot job delete --name report-generator --app my-app \"report-generator\" Job \u3092 \"prod\" Environment \u304b\u3089\u306e\u307f\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot job delete --name report-generator --env prod \u78ba\u8a8d\u3092\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u8868\u793a\u305b\u305a \"report-generator\" Job \u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot job delete --name report-generator --yes","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/job-deploy/","text":"job deploy $ copilot job deploy \u6982\u8981 job deploy \u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30c9\u3068\u8a2d\u5b9a\u3092\u5143\u306b Job \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 job deploy \u306f\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 image.build \u304c Manifest \u306b\u5b58\u5728\u3059\u308b\u5834\u5408 \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u3092\u30d3\u30eb\u30c9\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210 --tag \u3042\u308b\u3044\u306f git \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3044\u308b\u5834\u5408\u306f\u6700\u65b0\u306e git \u30cf\u30c3\u30b7\u30e5\u5024\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u30bf\u30b0\u4ed8\u3051 ECR \u306b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u3068 Addon \u3092\u307e\u3068\u3081\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d1\u30c3\u30b1\u30fc\u30b8 ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9\u3068 Job \u3092\u4f5c\u6210/\u66f4\u65b0 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for deploy -n, --name string Name of the job. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info --no-rollback \u30d5\u30e9\u30b0\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u3092\u62db\u304f\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f \u304a\u52e7\u3081\u3057\u307e\u305b\u3093 \u3002 \u30b9\u30bf\u30c3\u30af\u306e\u81ea\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7121\u52b9\u306a\u5834\u5408\u306b\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3059\u308b\u3068\u3001\u6b21\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b AWS \u30b3\u30f3\u30bd\u30fc\u30eb\u307e\u305f\u306f AWS CLI \u3092\u4f7f\u7528\u3057\u3066\u30b9\u30bf\u30c3\u30af\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u624b\u52d5\u3067\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u5b9f\u884c\u4f8b \"report-gen\" \u3068\u3044\u3046 Job \u3092 \"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot job deploy --name report-gen --env test \u8ffd\u52a0\u306e\u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u3092\u4ed8\u4e0e\u3057\u3066 Job \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot job deploy --resource-tags source/revision = bb133e7,deployment/initiator = manual ` --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5909\u66f4\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot job package --diff \u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u5dee\u5206\u3060\u3051\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 copilot job package --diff \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u3066\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3059\u3002","title":"job deploy"},{"location":"ja/docs/commands/job-deploy/#job-deploy","text":"$ copilot job deploy","title":"job deploy"},{"location":"ja/docs/commands/job-deploy/#_1","text":"job deploy \u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30c9\u3068\u8a2d\u5b9a\u3092\u5143\u306b Job \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 job deploy \u306f\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 image.build \u304c Manifest \u306b\u5b58\u5728\u3059\u308b\u5834\u5408 \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u3092\u30d3\u30eb\u30c9\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210 --tag \u3042\u308b\u3044\u306f git \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3044\u308b\u5834\u5408\u306f\u6700\u65b0\u306e git \u30cf\u30c3\u30b7\u30e5\u5024\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u30bf\u30b0\u4ed8\u3051 ECR \u306b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u3068 Addon \u3092\u307e\u3068\u3081\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d1\u30c3\u30b1\u30fc\u30b8 ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9\u3068 Job \u3092\u4f5c\u6210/\u66f4\u65b0","title":"\u6982\u8981"},{"location":"ja/docs/commands/job-deploy/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for deploy -n, --name string Name of the job. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info --no-rollback \u30d5\u30e9\u30b0\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u3092\u62db\u304f\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f \u304a\u52e7\u3081\u3057\u307e\u305b\u3093 \u3002 \u30b9\u30bf\u30c3\u30af\u306e\u81ea\u52d5\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7121\u52b9\u306a\u5834\u5408\u306b\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3059\u308b\u3068\u3001\u6b21\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b AWS \u30b3\u30f3\u30bd\u30fc\u30eb\u307e\u305f\u306f AWS CLI \u3092\u4f7f\u7528\u3057\u3066\u30b9\u30bf\u30c3\u30af\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u624b\u52d5\u3067\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-deploy/#_3","text":"\"report-gen\" \u3068\u3044\u3046 Job \u3092 \"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot job deploy --name report-gen --env test \u8ffd\u52a0\u306e\u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u3092\u4ed8\u4e0e\u3057\u3066 Job \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot job deploy --resource-tags source/revision = bb133e7,deployment/initiator = manual ` --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5909\u66f4\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot job package --diff \u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u5dee\u5206\u3060\u3051\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 copilot job package --diff \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u3066\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3059\u3002","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/job-init/","text":"job init $ copilot job init \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot job init \u306f\u65b0\u3057\u304f Job \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 Copilot CLI \u306f Manifest \u30d5\u30a1\u30a4\u30eb \u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306e Application \u540d\u304c\u3064\u3044\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092 copilot \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002 Job \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 CLI \u306f\u3055\u3089\u306b\u5168\u3066\u306e Environment \u304b\u3089\u30d7\u30eb\u3067\u304d\u308b\u30dd\u30ea\u30b7\u30fc\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u305f ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\u6700\u5f8c\u306b Job \u306f AWS Systems Manager \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u767b\u9332\u3055\u308c CLI \u304c Job \u3092\u30c8\u30e9\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u305d\u306e\u5f8c\u3059\u3067\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u305f Environment \u304c\u3042\u308b\u306a\u3089\u3001 copilot job deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u305d\u306e Environment \u306b Job \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -t, --job-type string Type of job to create. Must be one of: \"Scheduled Job\". -n, --name string Name of the job. --retries int Optional. The number of times to try restarting the job on a failure. -s, --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\". \u5b9f\u884c\u4f8b 1 \u65e5 1 \u56de\u5b9f\u884c\u3055\u308c\u308b \"reaper\" \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot job init --name reaper --dockerfile ./frontend/Dockerfile --schedule \"@daily\" \u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3092\u6307\u5b9a\u3057\u305f \"report-generator\" \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot job init --name report-generator --schedule \"@monthly\" --retries 3 --timeout 900s","title":"job init"},{"location":"ja/docs/commands/job-init/#job-init","text":"$ copilot job init","title":"job init"},{"location":"ja/docs/commands/job-init/#_1","text":"copilot job init \u306f\u65b0\u3057\u304f Job \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 Copilot CLI \u306f Manifest \u30d5\u30a1\u30a4\u30eb \u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306e Application \u540d\u304c\u3064\u3044\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092 copilot \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002 Job \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 CLI \u306f\u3055\u3089\u306b\u5168\u3066\u306e Environment \u304b\u3089\u30d7\u30eb\u3067\u304d\u308b\u30dd\u30ea\u30b7\u30fc\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u305f ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\u6700\u5f8c\u306b Job \u306f AWS Systems Manager \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u767b\u9332\u3055\u308c CLI \u304c Job \u3092\u30c8\u30e9\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u305d\u306e\u5f8c\u3059\u3067\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u305f Environment \u304c\u3042\u308b\u306a\u3089\u3001 copilot job deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u305d\u306e Environment \u306b Job \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/job-init/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Mutually exclusive with -i, --image. -h, --help help for init -i, --image string The location of an existing Docker image. Mutually exclusive with -d, --dockerfile. -t, --job-type string Type of job to create. Must be one of: \"Scheduled Job\". -n, --name string Name of the job. --retries int Optional. The number of times to try restarting the job on a failure. -s, --schedule string The schedule on which to run this job. Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings. For example: \"0 * * * *\", \"@daily\", \"@weekly\", \"@every 1h30m\". AWS Schedule Expressions of the form \"rate(10 minutes)\" or \"cron(0 12 L * ? 2021)\" are also accepted. --timeout string Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: \"2h\", \"1h30m\", \"900s\".","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-init/#_3","text":"1 \u65e5 1 \u56de\u5b9f\u884c\u3055\u308c\u308b \"reaper\" \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot job init --name reaper --dockerfile ./frontend/Dockerfile --schedule \"@daily\" \u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3092\u6307\u5b9a\u3057\u305f \"report-generator\" \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot job init --name report-generator --schedule \"@monthly\" --retries 3 --timeout 900s","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/job-logs/","text":"job logs $ copilot job logs \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot job logs \u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Job \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30c3\u30b0 -a, --app string Name of the application. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --include-state-machine Optional. Include logs from the state machine executions. --json Optional. Output in JSON format. --last int Optional. The number of executions of the scheduled job for which logs should be shown. (default 1) --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. -n, --name string Name of the job. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs. \u5b9f\u884c\u4f8b \"test\" Environment \u306e \"my-job\" Job \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs -n my-job -e test \u904e\u53bb 1 \u6642\u9593\u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --since 1h \u904e\u53bb 4 \u56de\u5206\u306e Job \u306e\u5b9f\u884c\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --last 4 \u7279\u5b9a\u306e\u30bf\u30b9\u30af ID \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --tasks 709c7ea,1de57fd \u30ed\u30b0\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --follow \u524d\u56de\u5b9f\u884c\u6642\u306e\u30b3\u30f3\u30c6\u30ca\u30ed\u30b0\u3068\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --include-state-machine --last 1","title":"job logs"},{"location":"ja/docs/commands/job-logs/#job-logs","text":"$ copilot job logs","title":"job logs"},{"location":"ja/docs/commands/job-logs/#_1","text":"copilot job logs \u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Job \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/job-logs/#_2","text":"-a, --app string Name of the application. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --include-state-machine Optional. Include logs from the state machine executions. --json Optional. Output in JSON format. --last int Optional. The number of executions of the scheduled job for which logs should be shown. (default 1) --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. -n, --name string Name of the job. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs.","title":"\u30d5\u30e9\u30c3\u30b0"},{"location":"ja/docs/commands/job-logs/#_3","text":"\"test\" Environment \u306e \"my-job\" Job \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs -n my-job -e test \u904e\u53bb 1 \u6642\u9593\u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --since 1h \u904e\u53bb 4 \u56de\u5206\u306e Job \u306e\u5b9f\u884c\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --last 4 \u7279\u5b9a\u306e\u30bf\u30b9\u30af ID \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --tasks 709c7ea,1de57fd \u30ed\u30b0\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --follow \u524d\u56de\u5b9f\u884c\u6642\u306e\u30b3\u30f3\u30c6\u30ca\u30ed\u30b0\u3068\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u5b9f\u884c\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job logs --include-state-machine --last 1","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/job-ls/","text":"job ls $ copilot job ls \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot job ls \u306f\u3001\u7279\u5b9a\u306e Application \u306b\u542b\u307e\u308c\u308b\u5168\u3066\u306e Copilot \u306e Job \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show jobs in the workspace. \u5b9f\u884c\u4f8b \"myapp\" Application \u306b\u542b\u307e\u308c\u308b\u5168\u3066\u306e Job \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job ls --app myapp","title":"job ls"},{"location":"ja/docs/commands/job-ls/#job-ls","text":"$ copilot job ls","title":"job ls"},{"location":"ja/docs/commands/job-ls/#_1","text":"copilot job ls \u306f\u3001\u7279\u5b9a\u306e Application \u306b\u542b\u307e\u308c\u308b\u5168\u3066\u306e Copilot \u306e Job \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/job-ls/#_2","text":"-a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show jobs in the workspace.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-ls/#_3","text":"\"myapp\" Application \u306b\u542b\u307e\u308c\u308b\u5168\u3066\u306e Job \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot job ls --app myapp","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/job-override/","text":"copilot job override $ copilot job override \u6982\u8981 Job \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Job \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u8aac\u660e \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the job. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". \u5b9f\u884c\u4f8b \"report\" Job \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot job override -n report --tool cdk \u51fa\u529b\u4f8b","title":"job override"},{"location":"ja/docs/commands/job-override/#copilot-job-override","text":"$ copilot job override","title":"copilot job override"},{"location":"ja/docs/commands/job-override/#_1","text":"Job \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Job \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u6982\u8981"},{"location":"ja/docs/commands/job-override/#_2","text":"\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u8a73\u7d30\u8aac\u660e"},{"location":"ja/docs/commands/job-override/#_3","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the job. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-override/#_4","text":"\"report\" Job \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot job override -n report --tool cdk","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/job-override/#_5","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/job-package/","text":"job package $ copilot job package \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot job package \u306f Job \u3092 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration. \u5b9f\u884c\u4f8b \"report-generator\" Job \u3092\u4f5c\u6210\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u3001\"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5f62\u3067\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot job package -n report-generator -e test CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u8a2d\u5b9a\u3092 \"infrastructure/\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002 $ copilot job package -n report-generator -e test --output-dir ./infrastructure $ ls ./infrastructure report-generator-test.stack.yml report-generator-test.params.yml --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u5dee\u5206\u3092\u51fa\u529b\u3057\u3001\u7d42\u4e86\u3057\u307e\u3059\u3002 $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" copilot [noun] package --diff \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"job package"},{"location":"ja/docs/commands/job-package/#job-package","text":"$ copilot job package","title":"job package"},{"location":"ja/docs/commands/job-package/#_1","text":"copilot job package \u306f Job \u3092 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/job-package/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-package/#_3","text":"\"report-generator\" Job \u3092\u4f5c\u6210\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u3001\"test\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5f62\u3067\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot job package -n report-generator -e test CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u8a2d\u5b9a\u3092 \"infrastructure/\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002 $ copilot job package -n report-generator -e test --output-dir ./infrastructure $ ls ./infrastructure report-generator-test.stack.yml report-generator-test.params.yml --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u5dee\u5206\u3092\u51fa\u529b\u3057\u3001\u7d42\u4e86\u3057\u307e\u3059\u3002 $ copilot job deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" copilot [noun] package --diff \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/job-run/","text":"job run $ copilot job run \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot job run \u306f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job. \u5b9f\u884c\u4f8b \"report\" \u3068\u3044\u3046\u540d\u524d\u306e Application \u3067 \"report-gen\" \u3068\u3044\u3046\u540d\u524d\u306e Job \u3092 \"test\" Environment \u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot job run -a report -n report-gen -e test","title":"job run"},{"location":"ja/docs/commands/job-run/#job-run","text":"$ copilot job run","title":"job run"},{"location":"ja/docs/commands/job-run/#_1","text":"copilot job run \u306f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/job-run/#_2","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the job.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/job-run/#_3","text":"\"report\" \u3068\u3044\u3046\u540d\u524d\u306e Application \u3067 \"report-gen\" \u3068\u3044\u3046\u540d\u524d\u306e Job \u3092 \"test\" Environment \u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot job run -a report -n report-gen -e test","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-delete/","text":"pipeline delete $ copilot pipeline delete [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot pipeline delete \u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308b Pipeline \u3092\u524a\u9664\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app Name of the application. --delete-secret Deletes AWS Secrets Manager secret associated with a pipeline source repository. -h, --help help for delete -n, --name Name of the pipeline. --yes Skips confirmation prompt. \u5b9f\u884c\u4f8b \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308b Pipeline \u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot pipeline delete","title":"pipeline delete"},{"location":"ja/docs/commands/pipeline-delete/#pipeline-delete","text":"$ copilot pipeline delete [ flags ]","title":"pipeline delete"},{"location":"ja/docs/commands/pipeline-delete/#_1","text":"copilot pipeline delete \u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308b Pipeline \u3092\u524a\u9664\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/pipeline-delete/#_2","text":"-a, --app Name of the application. --delete-secret Deletes AWS Secrets Manager secret associated with a pipeline source repository. -h, --help help for delete -n, --name Name of the pipeline. --yes Skips confirmation prompt.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/pipeline-delete/#_3","text":"\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308b Pipeline \u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot pipeline delete","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-deploy/","text":"pipeline deploy $ copilot pipeline deploy [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot pipeline deploy \u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u5168\u3066\u306e Service \u306b\u5bfe\u3059\u308b Pipeline \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002Pipeline \u7528 Manifest \u306b\u3066 Application \u3068\u7d10\u4ed8\u3051\u3089\u308c\u305f Environment \u7fa4\u3092\u5229\u7528\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -h, --help help for deploy -n, --name string Name of the pipeline. --yes Skips confirmation prompt. \u5b9f\u884c\u4f8b \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e Service \u7fa4\u3068 Job \u7fa4\u306b\u5bfe\u3059\u308b Pipeline \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot pipeline deploy","title":"pipeline deploy"},{"location":"ja/docs/commands/pipeline-deploy/#pipeline-deploy","text":"$ copilot pipeline deploy [ flags ]","title":"pipeline deploy"},{"location":"ja/docs/commands/pipeline-deploy/#_1","text":"copilot pipeline deploy \u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u5168\u3066\u306e Service \u306b\u5bfe\u3059\u308b Pipeline \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002Pipeline \u7528 Manifest \u306b\u3066 Application \u3068\u7d10\u4ed8\u3051\u3089\u308c\u305f Environment \u7fa4\u3092\u5229\u7528\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/pipeline-deploy/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --diff Compares the generated CloudFormation template to the deployed stack. -h, --help help for deploy -n, --name string Name of the pipeline. --yes Skips confirmation prompt.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/pipeline-deploy/#_3","text":"\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e Service \u7fa4\u3068 Job \u7fa4\u306b\u5bfe\u3059\u308b Pipeline \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot pipeline deploy","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-init/","text":"pipeline init $ copilot pipeline init [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot pipeline init \u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u5168\u3066\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Pipeline \u7528\u306e Manifest \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e Manifest \u3067\u306f Application \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f Environment \u304c\u30c7\u30d7\u30ed\u30a4\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306a\u308a\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -e, --environments strings Environments to add to the pipeline. -b, --git-branch string Branch used to trigger your pipeline. -h, --help help for init -n, --name string Name of the pipeline. -p, --pipeline-type string The type of pipeline. Must be either \"Workloads\" or \"Environments\". -u, --url string The repository URL to trigger your pipeline. \u5b9f\u884c\u4f8b \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u5168\u3066\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Pipeline \u7528\u306e Manifest \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot pipeline init \\ --name frontend-main \\ --url https://github.com/gitHubUserName/frontend.git \\ --git-branch main \\ --environments \"test,prod\"","title":"pipeline init"},{"location":"ja/docs/commands/pipeline-init/#pipeline-init","text":"$ copilot pipeline init [ flags ]","title":"pipeline init"},{"location":"ja/docs/commands/pipeline-init/#_1","text":"copilot pipeline init \u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u5168\u3066\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Pipeline \u7528\u306e Manifest \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e Manifest \u3067\u306f Application \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f Environment \u304c\u30c7\u30d7\u30ed\u30a4\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306a\u308a\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/pipeline-init/#_2","text":"-a, --app string Name of the application. -e, --environments strings Environments to add to the pipeline. -b, --git-branch string Branch used to trigger your pipeline. -h, --help help for init -n, --name string Name of the pipeline. -p, --pipeline-type string The type of pipeline. Must be either \"Workloads\" or \"Environments\". -u, --url string The repository URL to trigger your pipeline.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/pipeline-init/#_3","text":"\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306e\u5168\u3066\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Pipeline \u7528\u306e Manifest \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot pipeline init \\ --name frontend-main \\ --url https://github.com/gitHubUserName/frontend.git \\ --git-branch main \\ --environments \"test,prod\"","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-ls/","text":"pipeline ls $ copilot pipeline ls [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot pipeline ls \u306f\u3001Application \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u5168\u3066\u306e Pipeline \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show pipelines in the workspace. \u5b9f\u884c\u4f8b Application \"phonetool\" \u306e\u3059\u3079\u3066\u306e Pipeline \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot pipeline ls -a phonetool","title":"pipeline ls"},{"location":"ja/docs/commands/pipeline-ls/#pipeline-ls","text":"$ copilot pipeline ls [ flags ]","title":"pipeline ls"},{"location":"ja/docs/commands/pipeline-ls/#_1","text":"copilot pipeline ls \u306f\u3001Application \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u5168\u3066\u306e Pipeline \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/pipeline-ls/#_2","text":"-a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show pipelines in the workspace.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/pipeline-ls/#_3","text":"Application \"phonetool\" \u306e\u3059\u3079\u3066\u306e Pipeline \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot pipeline ls -a phonetool","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-override/","text":"copilot pipeline override $ copilot pipeline override \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 Pipeline \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Environment \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u8aac\u660e \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Name of the pipeline. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". \u5b9f\u884c\u4f8b \"myrepo-main\" Pipeline \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot pipeline override -n myrepo-main --tool cdk \u51fa\u529b\u4f8b","title":"pipeline override"},{"location":"ja/docs/commands/pipeline-override/#copilot-pipeline-override","text":"$ copilot pipeline override","title":"copilot pipeline override"},{"location":"ja/docs/commands/pipeline-override/#_1","text":"Pipeline \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Environment \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/pipeline-override/#_2","text":"\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u8a73\u7d30\u8aac\u660e"},{"location":"ja/docs/commands/pipeline-override/#_3","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -h, --help Help for override -n, --name string Name of the pipeline. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/pipeline-override/#_4","text":"\"myrepo-main\" Pipeline \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot pipeline override -n myrepo-main --tool cdk","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-override/#_5","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/pipeline-show/","text":"pipeline show $ copilot pipeline show [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot pipeline show \u306f\u3001Application \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Pipeline \u306e\u69cb\u6210\u60c5\u5831 (\u30a2\u30ab\u30a6\u30f3\u30c8\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u3001\u30b9\u30c6\u30fc\u30b8\u306a\u3069) \u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the pipeline. --resources Optional. Show the resources in your pipeline. \u5b9f\u884c\u4f8b Pipeline \"myapp-mybranch\" \u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u30ea\u30bd\u30fc\u30b9\u60c5\u5831\u3092\u542b\u3081\u3066\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot pipeline show --name myrepo-mybranch --resources \u51fa\u529b\u4f8b","title":"pipeline show"},{"location":"ja/docs/commands/pipeline-show/#pipeline-show","text":"$ copilot pipeline show [ flags ]","title":"pipeline show"},{"location":"ja/docs/commands/pipeline-show/#_1","text":"copilot pipeline show \u306f\u3001Application \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Pipeline \u306e\u69cb\u6210\u60c5\u5831 (\u30a2\u30ab\u30a6\u30f3\u30c8\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u3001\u30b9\u30c6\u30fc\u30b8\u306a\u3069) \u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/pipeline-show/#_2","text":"-a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. -n, --name string Name of the pipeline. --resources Optional. Show the resources in your pipeline.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/pipeline-show/#_3","text":"Pipeline \"myapp-mybranch\" \u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u30ea\u30bd\u30fc\u30b9\u60c5\u5831\u3092\u542b\u3081\u3066\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot pipeline show --name myrepo-mybranch --resources","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-show/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/pipeline-status/","text":"pipeline status $ copilot pipeline status [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot pipeline status \u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Pipeline \u306e\u30b9\u30c6\u30fc\u30b8\u306e\u72b6\u614b\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the pipeline. \u5b9f\u884c\u4f8b Pipeline \"my-repo-my-branch\" \u306e\u72b6\u614b\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot pipeline status -n my-repo-my-branch \u51fa\u529b\u4f8b","title":"pipeline status"},{"location":"ja/docs/commands/pipeline-status/#pipeline-status","text":"$ copilot pipeline status [ flags ]","title":"pipeline status"},{"location":"ja/docs/commands/pipeline-status/#_1","text":"copilot pipeline status \u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Pipeline \u306e\u30b9\u30c6\u30fc\u30b8\u306e\u72b6\u614b\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/pipeline-status/#_2","text":"-a, --app string Name of the application. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the pipeline.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/pipeline-status/#_3","text":"Pipeline \"my-repo-my-branch\" \u306e\u72b6\u614b\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot pipeline status -n my-repo-my-branch","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/pipeline-status/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/run-local/","text":"run local $ copilot run local [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot run local \u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -e, --env string Name of the environment. --env-var-override stringToString Optional. Override environment variables passed to containers. Format: [container]:KEY=VALUE. Omit container name to apply to all containers. (default []) -h, --help help for run -n, --name string Name of the service or job. --port-override list Optional. Override ports exposed by service. Format: <host port>:<service port>. Example: --port-override 5000:80 binds localhost:5000 to the service's port 80. (default []) --proxy Optional. Proxy outbound requests to your environment's VPC. --proxy-network ipNet proxy-network (default 172.20.0.0/16) --watch Optional. Watch changes to local files and restart containers when updated. \u5b9f\u884c\u4f8b Environment \"test\" \u306e Service \"mysvc\" \u3092\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot run local --name mysvc --env test","title":"run local"},{"location":"ja/docs/commands/run-local/#run-local","text":"$ copilot run local [ flags ]","title":"run local"},{"location":"ja/docs/commands/run-local/#_1","text":"copilot run local \u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/run-local/#_2","text":"-a, --app string Name of the application. -e, --env string Name of the environment. --env-var-override stringToString Optional. Override environment variables passed to containers. Format: [container]:KEY=VALUE. Omit container name to apply to all containers. (default []) -h, --help help for run -n, --name string Name of the service or job. --port-override list Optional. Override ports exposed by service. Format: <host port>:<service port>. Example: --port-override 5000:80 binds localhost:5000 to the service's port 80. (default []) --proxy Optional. Proxy outbound requests to your environment's VPC. --proxy-network ipNet proxy-network (default 172.20.0.0/16) --watch Optional. Watch changes to local files and restart containers when updated.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/run-local/#_3","text":"Environment \"test\" \u306e Service \"mysvc\" \u3092\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot run local --name mysvc --env test","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/secret-init/","text":"secret init $ copilot secret init \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot secret init \u306f SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u5185\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306e SecureString \u30d1\u30e9\u30e1\u30fc\u30bf \u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u3057\u307e\u3059. \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u65e2\u5b58\u306e Environment \u3054\u3068\u306b\u7570\u306a\u308b\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u3001\u5404 Environment \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u540c\u3058 Application/Environment \u3067\u5b9f\u884c\u3055\u308c\u308b Service \u307e\u305f\u306f Job \u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 Attention Request-Driven Web Service \u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5229\u7528\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. --cli-input-yaml string Optional. A YAML file in which the secret values are specified. Mutually exclusive with the -n, --name and --values flags. -h, --help help for init -n, --name string The name of the secret. Mutually exclusive with the --cli-input-yaml flag. --overwrite Optional. Whether to overwrite an existing secret. --values stringToString Values of the secret in each environment. Specified as <environment>=<value> separated by commas. Mutually exclusive with the --cli-input-yaml flag. (default []) \u4f7f\u7528\u4f8b \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u540d\u524d\u3001\u305d\u3057\u3066\u5404 Environment \u3054\u3068\u306e\u5024\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002 $ copilot secret init db_password \u3068\u3044\u3046\u540d\u524d\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u8907\u6570\u306e Environment \u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u5404 Environment \u3054\u3068\u306e db_password \u306e\u5024\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002 $ copilot secret init --name db_password input.yml \u304b\u3089\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002YAML \u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f \u30da\u30fc\u30b8\u4e0b\u90e8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 $ copilot secret init --cli-input-yaml input.yml Info --values \u30d5\u30e9\u30b0\u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u4fbf\u5229\u3067\u3059\u304c\u3001\u30b7\u30a7\u30eb\u306e\u5c65\u6b74\u3067\u305d\u306e\u5024\u304c\u78ba\u8a8d\u3067\u304d\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u907f\u3051\u308b\u305f\u3081\u3001 copilot secret init --name \u30b3\u30de\u30f3\u30c9\u306e\u8cea\u554f\u3078\u306e\u56de\u7b54\u306e\u5f62\u3067\u5024\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u3042\u308b\u3044\u306f --cli-input-yaml \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5024\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002 \u4f5c\u6210\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u53c2\u7167\u3059\u308b Copilot \u306f /copilot/<app name>/<env name>/secrets/<secret name> \u3068\u3044\u3046\u540d\u524d\u306e SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Service \u3042\u308b\u3044\u306f Job Manifest \u306e secrets \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u53c2\u7167\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 my-app \u3068\u3044\u3046 Application \u304c\u3042\u308a\u3001\u305d\u306e prod \u3068 dev Environment \u306b db_host \u3068\u3044\u3046\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u3063\u305f\u3068\u3059\u308b\u3068\u3001Service \u306e Manifest \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 environments : prod : secrets : DB_PASSWORD : /copilot/my-app/prod/secrets/db_password dev : secrets : DB_PASSWORD : /copilot/my-app/dev/secrets/db_password \u66f4\u65b0\u3057\u305f Manifest \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001Service \u3042\u308b\u3044\u306f Job \u306f\u74b0\u5883\u5909\u6570 DB_PASSWORD \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u74b0\u5883\u5909\u6570\u306e\u5024\u306b\u306f\u3001 prod Environment \u3067\u306f /copilot/my-app/prod/secrets/db_password SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u3001 dev Environment \u3067\u306f /copilot/my-app/dev/secrets/db_password SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u308c\u306f ECS \u30b3\u30f3\u30c6\u30ca\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u6642\u306b SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97\u3068\u74b0\u5883\u5909\u6570\u3078\u306e\u8a2d\u5b9a\u3092\u81ea\u52d5\u7684\u306b\u884c\u3063\u3066\u304f\u308c\u308b\u305f\u3081\u3067\u3059\u3002 --cli-input-yaml \u30d5\u30e9\u30b0\u306e\u4f7f\u3044\u65b9 --cli-input-yaml \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u30d5\u30a1\u30a4\u30eb\u306b Environment \u5225\u306b\u5b9a\u7fa9\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u540c\u4e00\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u306f\u8907\u6570\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3060\u4e0a\u3067\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3001\u3042\u308b\u3044\u306f\u66f4\u65b0\u3057\u307e\u3059\u3002 YAML \u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 <secret A> : <env 1> : <the value of secret A in env 1> <env 2> : <the value of secret A in env 2> <env 3> : <the value of secret A in env 3> <secret B> : <env 1> : <the value of secret B in env 1> <env 2> : <the value of secret B in env 2> \u4ee5\u4e0b\u306f dev \u3001 test \u3001 prod Environment \u306b db_host \u3068 db_password \u3068\u3044\u3046\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001 dev \u3001 test Environment \u306b notification_email \u3068\u3044\u3046\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b YAML \u306e\u4f8b\u3067\u3059\u3002 \u3053\u306e\u4f8b\u3067\u306f prod Environment \u7528\u306e notification_email \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001 prod Environment \u306b\u306f notification_email \u304c\u4f5c\u6210\u3055\u308c\u307e\u305b\u3093\u3002 db_host : dev : dev.db.host.com test : test.db.host.com prod : prod.db.host.com db_password : dev : dev-db-pwd test : test-db-pwd prod : prod-db-pwd notification_email : dev : dev@email.com test : test@email.com","title":"secret init"},{"location":"ja/docs/commands/secret-init/#secret-init","text":"$ copilot secret init","title":"secret init"},{"location":"ja/docs/commands/secret-init/#_1","text":"copilot secret init \u306f SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u5185\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306e SecureString \u30d1\u30e9\u30e1\u30fc\u30bf \u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u3057\u307e\u3059. \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u65e2\u5b58\u306e Environment \u3054\u3068\u306b\u7570\u306a\u308b\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u3001\u5404 Environment \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u540c\u3058 Application/Environment \u3067\u5b9f\u884c\u3055\u308c\u308b Service \u307e\u305f\u306f Job \u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 Attention Request-Driven Web Service \u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5229\u7528\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/secret-init/#_2","text":"-a, --app string Name of the application. --cli-input-yaml string Optional. A YAML file in which the secret values are specified. Mutually exclusive with the -n, --name and --values flags. -h, --help help for init -n, --name string The name of the secret. Mutually exclusive with the --cli-input-yaml flag. --overwrite Optional. Whether to overwrite an existing secret. --values stringToString Values of the secret in each environment. Specified as <environment>=<value> separated by commas. Mutually exclusive with the --cli-input-yaml flag. (default [])","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/secret-init/#_3","text":"\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u540d\u524d\u3001\u305d\u3057\u3066\u5404 Environment \u3054\u3068\u306e\u5024\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002 $ copilot secret init db_password \u3068\u3044\u3046\u540d\u524d\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u8907\u6570\u306e Environment \u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u5404 Environment \u3054\u3068\u306e db_password \u306e\u5024\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002 $ copilot secret init --name db_password input.yml \u304b\u3089\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002YAML \u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f \u30da\u30fc\u30b8\u4e0b\u90e8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 $ copilot secret init --cli-input-yaml input.yml Info --values \u30d5\u30e9\u30b0\u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u4fbf\u5229\u3067\u3059\u304c\u3001\u30b7\u30a7\u30eb\u306e\u5c65\u6b74\u3067\u305d\u306e\u5024\u304c\u78ba\u8a8d\u3067\u304d\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u907f\u3051\u308b\u305f\u3081\u3001 copilot secret init --name \u30b3\u30de\u30f3\u30c9\u306e\u8cea\u554f\u3078\u306e\u56de\u7b54\u306e\u5f62\u3067\u5024\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u3042\u308b\u3044\u306f --cli-input-yaml \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5024\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002","title":"\u4f7f\u7528\u4f8b"},{"location":"ja/docs/commands/secret-init/#_4","text":"Copilot \u306f /copilot/<app name>/<env name>/secrets/<secret name> \u3068\u3044\u3046\u540d\u524d\u306e SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Service \u3042\u308b\u3044\u306f Job Manifest \u306e secrets \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u53c2\u7167\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 my-app \u3068\u3044\u3046 Application \u304c\u3042\u308a\u3001\u305d\u306e prod \u3068 dev Environment \u306b db_host \u3068\u3044\u3046\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u3063\u305f\u3068\u3059\u308b\u3068\u3001Service \u306e Manifest \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002 environments : prod : secrets : DB_PASSWORD : /copilot/my-app/prod/secrets/db_password dev : secrets : DB_PASSWORD : /copilot/my-app/dev/secrets/db_password \u66f4\u65b0\u3057\u305f Manifest \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001Service \u3042\u308b\u3044\u306f Job \u306f\u74b0\u5883\u5909\u6570 DB_PASSWORD \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u74b0\u5883\u5909\u6570\u306e\u5024\u306b\u306f\u3001 prod Environment \u3067\u306f /copilot/my-app/prod/secrets/db_password SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u3001 dev Environment \u3067\u306f /copilot/my-app/dev/secrets/db_password SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u308c\u306f ECS \u30b3\u30f3\u30c6\u30ca\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u6642\u306b SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97\u3068\u74b0\u5883\u5909\u6570\u3078\u306e\u8a2d\u5b9a\u3092\u81ea\u52d5\u7684\u306b\u884c\u3063\u3066\u304f\u308c\u308b\u305f\u3081\u3067\u3059\u3002","title":"\u4f5c\u6210\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u53c2\u7167\u3059\u308b"},{"location":"ja/docs/commands/secret-init/#-cli-input-yaml","text":"--cli-input-yaml \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u30d5\u30a1\u30a4\u30eb\u306b Environment \u5225\u306b\u5b9a\u7fa9\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u540c\u4e00\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u306f\u8907\u6570\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3060\u4e0a\u3067\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3001\u3042\u308b\u3044\u306f\u66f4\u65b0\u3057\u307e\u3059\u3002 YAML \u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 <secret A> : <env 1> : <the value of secret A in env 1> <env 2> : <the value of secret A in env 2> <env 3> : <the value of secret A in env 3> <secret B> : <env 1> : <the value of secret B in env 1> <env 2> : <the value of secret B in env 2> \u4ee5\u4e0b\u306f dev \u3001 test \u3001 prod Environment \u306b db_host \u3068 db_password \u3068\u3044\u3046\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001 dev \u3001 test Environment \u306b notification_email \u3068\u3044\u3046\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b YAML \u306e\u4f8b\u3067\u3059\u3002 \u3053\u306e\u4f8b\u3067\u306f prod Environment \u7528\u306e notification_email \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001 prod Environment \u306b\u306f notification_email \u304c\u4f5c\u6210\u3055\u308c\u307e\u305b\u3093\u3002 db_host : dev : dev.db.host.com test : test.db.host.com prod : prod.db.host.com db_password : dev : dev-db-pwd test : test-db-pwd prod : prod-db-pwd notification_email : dev : dev@email.com test : test@email.com","title":"--cli-input-yaml \u30d5\u30e9\u30b0\u306e\u4f7f\u3044\u65b9"},{"location":"ja/docs/commands/storage-init/","text":"storage init $ copilot storage init \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot storage init \u306f\u3001Addon \u3068\u3057\u3066\u65b0\u3057\u3044\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Copilot \u306f\u300cDatabase-per-service \u30d1\u30bf\u30fc\u30f3\u300d\u306b\u5f93\u3063\u3066\u3044\u307e\u3059\u3002 copilot storage init \u3067\u6307\u5b9a\u3057\u305f Service \u307e\u305f\u306f Job \u3060\u3051\u304c\u3001\u305d\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u3001Service \u306e\u30b3\u30f3\u30c6\u30ca\u5185\u304b\u3089\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306e\u540d\u524d\u307e\u305f\u306f\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u4ecb\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u5404\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u72ec\u81ea\u306e\u72b6\u6cc1\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u8907\u6570\u306e Service \u9593\u3067\u5171\u6709\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001Copilot \u3067\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5909\u66f4\u3057\u3066\u3001\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f\u3001 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306f\u3001Service \u3084 Job \u306e1\u3064\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot svc deploy --name api \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ea\u30bd\u30fc\u30b9\u306f\u300capi\u300d\u3068\u3068\u3082\u306b\u30bf\u30fc\u30b2\u30c3\u30c8 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f Environment Addon \u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u3001Environment \u3068\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot env deploy --name test \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001test \u3068\u3044\u3046 Environment \u3068\u4e00\u7dd2\u306b\u30ea\u30bd\u30fc\u30b9\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u30ea\u30bd\u30fc\u30b9\u306e\u7a2e\u985e\u306f S3 \u3001 DynamoDB \u3001 Aurora \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001CLI \u306f copilot/service \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u3001 addons \u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u4f5c\u6210\u3057\u307e\u3059\u3002 copilot svc deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u65b0\u898f\u306b\u521d\u671f\u5316\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u304c\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u306e\u3000Environment \u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 storage init \u3067\u6307\u5b9a\u3057\u305f Service \u306e\u307f\u304c\u3001\u305d\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u30d5\u30e9\u30b0 Required Flags -l, --lifecycle string Whether the storage should be created and deleted at the same time as an workload or an environment. Must be one of: \"workload\" or \"environment\". -n, --name string Name of the storage resource to create. -t, --storage-type string Type of storage to add. Must be one of: \"DynamoDB\", \"S3\", \"Aurora\". -w, --workload string Name of the service/job that accesses the storage resource. DynamoDB Flags --lsi stringArray Optional. Attribute to use as an alternate sort key. May be specified up to 5 times. Must be of the format '<keyName>:<dataType>'. --no-lsi Optional. Don't ask about configuring alternate sort keys. --no-sort Optional. Skip configuring sort keys. --partition-key string Partition key for the DDB table. Must be of the format '<keyName>:<dataType>'. --sort-key string Optional. Sort key for the DDB table. Must be of the format '<keyName>:<dataType>'. Aurora Serverless Flags --engine string The database engine used in the cluster. Must be either \"MySQL\" or \"PostgreSQL\". --initial-db string The initial database to create in the cluster. --parameter-group string Optional. The name of the parameter group to associate with the cluster. --serverless-version string Optional. Aurora Serverless version. Must be either \"v1\" or \"v2\". (default \"v2\") Optional Flags --add-ingress-from string The workload that needs access to an environment storage resource. Must be specified with \"--name\" and \"--storage-type\". Can be specified with \"--engine\". \u4f7f\u7528\u4f8b \"frontend\" Service \u306b \"my-bucket\" \u3068\u3044\u3046\u540d\u524d\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init -n my-bucket -t S3 -w frontend -l workload copilot storage init \u306f\u3001Addon \u3068\u3057\u3066\u65b0\u3057\u3044\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\"api\" Service \u304c\u30d5\u30ed\u30f3\u30c8\u3059\u308b \"my-bucket\" \u3068\u3044\u3046\u540d\u524d\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092 Environment \u5358\u4f4d\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init \\ -t S3 -n my-bucket \\ -w api -l environment \"frontend\" Service \u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u305f \"my-table\" \u3068\u3044\u3046\u540d\u524d\u306e\u57fa\u672c\u7684\u306a DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u3001\u30bd\u30fc\u30c8\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init -t DynamoDB -n my-table \\ -w frontend -l workload \\ --partition-key Email:S \\ --sort-key UserId:N \\ --no-lsi \u8907\u6570\u306e\u4ee3\u66ff\u30bd\u30fc\u30c8\u30ad\u30fc\u3092\u6301\u3064 DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init -t DynamoDB -n my-table \\ + -w frontend \\ --partition-key Email:S \\ --sort-key UserId:N \\ --lsi Points:N \\ --lsi Goodness:N \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a8\u30f3\u30b8\u30f3\u306b PostgreSQL \u3092\u4f7f\u7528\u3057\u3066\u3001RDS Aurora Serverless v2 \u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init \\ -n my-cluster -t Aurora -w frontend --engine PostgreSQL \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a8\u30f3\u30b8\u30f3\u306b MySQL \u3092\u4f7f\u7528\u3057\u3001\u521d\u671f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d\u3092 testdb \u3068\u3057\u3066\u3001RDS Aurora Serverless v1 \u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init \\ -n my-cluster -t Aurora --serverless-version v1 -w frontend --engine MySQL --initial-db testdb \u30b3\u30de\u30f3\u30c9\u5185\u90e8\u3067\u306e\u52d5\u4f5c Copilot \u306f S3 \u30d0\u30b1\u30c3\u30c8\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001\u307e\u305f\u306f Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u6307\u5b9a\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059 copilot [svc/job/env] deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001CLI \u306f\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4ed6\u306e\u3059\u3079\u3066\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u30de\u30fc\u30b8\u3057\u3066\u3001Service \u307e\u305f\u306f Environment \u306b\u95a2\u9023\u3059\u308b\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u306e\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30b9\u30bf\u30c3\u30af\u306b\u306f\u3001Service \u307e\u305f\u306f Environment \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e Addon \u30ea\u30bd\u30fc\u30b9 \u304c\u8a18\u8ff0\u3055\u308c\u3001Service \u307e\u305f\u306f Environment \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u5834\u6240\u306b\u5c55\u958b\u3055\u308c\u307e\u3059\u3002 \u30b7\u30ca\u30ea\u30aa\u306e\u4f8b Service \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f S3 \u30b9\u30c8\u30ec\u30fc\u30b8 $ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle workload Service \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f S3 \u30d0\u30b1\u30c3\u30c8\u7528\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002 $ copilot svc deploy --name fe --env test $ copilot svc deploy --name fe --env prod \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001test Environment \u3068 prod Environment \u306e2\u3064\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u5c55\u958b\u3055\u308c\u3001\u305d\u308c\u305e\u308c\u306e Environment \u306e fe Service \u304b\u3089\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Environment \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f S3 \u30b9\u30c8\u30ec\u30fc\u30b8 \u3053\u308c\u306f\u3001\u5b9f\u884c\u5f8c\u306b\u3001 $ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle environment 2 \u3064\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u30021 \u3064\u306f \"test\" Environment\u3001\u3082\u3046 1 \u3064\u306f \"prod\" Environment \u3067\u3001\u305d\u308c\u305e\u308c\u306e \"fe\" Service \u304b\u3089\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002","title":"storage init"},{"location":"ja/docs/commands/storage-init/#storage-init","text":"$ copilot storage init","title":"storage init"},{"location":"ja/docs/commands/storage-init/#_1","text":"copilot storage init \u306f\u3001Addon \u3068\u3057\u3066\u65b0\u3057\u3044\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Copilot \u306f\u300cDatabase-per-service \u30d1\u30bf\u30fc\u30f3\u300d\u306b\u5f93\u3063\u3066\u3044\u307e\u3059\u3002 copilot storage init \u3067\u6307\u5b9a\u3057\u305f Service \u307e\u305f\u306f Job \u3060\u3051\u304c\u3001\u305d\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u3001Service \u306e\u30b3\u30f3\u30c6\u30ca\u5185\u304b\u3089\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306e\u540d\u524d\u307e\u305f\u306f\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u4ecb\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u5404\u30e6\u30fc\u30b6\u30fc\u306b\u306f\u72ec\u81ea\u306e\u72b6\u6cc1\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u8907\u6570\u306e Service \u9593\u3067\u5171\u6709\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001Copilot \u3067\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5909\u66f4\u3057\u3066\u3001\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f\u3001 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306f\u3001Service \u3084 Job \u306e1\u3064\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3068\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot svc deploy --name api \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ea\u30bd\u30fc\u30b9\u306f\u300capi\u300d\u3068\u3068\u3082\u306b\u30bf\u30fc\u30b2\u30c3\u30c8 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f Environment Addon \u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u3001Environment \u3068\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot env deploy --name test \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001test \u3068\u3044\u3046 Environment \u3068\u4e00\u7dd2\u306b\u30ea\u30bd\u30fc\u30b9\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u30ea\u30bd\u30fc\u30b9\u306e\u7a2e\u985e\u306f S3 \u3001 DynamoDB \u3001 Aurora \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001CLI \u306f copilot/service \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u3001 addons \u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u4f5c\u6210\u3057\u307e\u3059\u3002 copilot svc deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u65b0\u898f\u306b\u521d\u671f\u5316\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u304c\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u306e\u3000Environment \u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 storage init \u3067\u6307\u5b9a\u3057\u305f Service \u306e\u307f\u304c\u3001\u305d\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/storage-init/#_2","text":"Required Flags -l, --lifecycle string Whether the storage should be created and deleted at the same time as an workload or an environment. Must be one of: \"workload\" or \"environment\". -n, --name string Name of the storage resource to create. -t, --storage-type string Type of storage to add. Must be one of: \"DynamoDB\", \"S3\", \"Aurora\". -w, --workload string Name of the service/job that accesses the storage resource. DynamoDB Flags --lsi stringArray Optional. Attribute to use as an alternate sort key. May be specified up to 5 times. Must be of the format '<keyName>:<dataType>'. --no-lsi Optional. Don't ask about configuring alternate sort keys. --no-sort Optional. Skip configuring sort keys. --partition-key string Partition key for the DDB table. Must be of the format '<keyName>:<dataType>'. --sort-key string Optional. Sort key for the DDB table. Must be of the format '<keyName>:<dataType>'. Aurora Serverless Flags --engine string The database engine used in the cluster. Must be either \"MySQL\" or \"PostgreSQL\". --initial-db string The initial database to create in the cluster. --parameter-group string Optional. The name of the parameter group to associate with the cluster. --serverless-version string Optional. Aurora Serverless version. Must be either \"v1\" or \"v2\". (default \"v2\") Optional Flags --add-ingress-from string The workload that needs access to an environment storage resource. Must be specified with \"--name\" and \"--storage-type\". Can be specified with \"--engine\".","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/storage-init/#_3","text":"\"frontend\" Service \u306b \"my-bucket\" \u3068\u3044\u3046\u540d\u524d\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init -n my-bucket -t S3 -w frontend -l workload copilot storage init \u306f\u3001Addon \u3068\u3057\u3066\u65b0\u3057\u3044\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\"api\" Service \u304c\u30d5\u30ed\u30f3\u30c8\u3059\u308b \"my-bucket\" \u3068\u3044\u3046\u540d\u524d\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092 Environment \u5358\u4f4d\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init \\ -t S3 -n my-bucket \\ -w api -l environment \"frontend\" Service \u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u305f \"my-table\" \u3068\u3044\u3046\u540d\u524d\u306e\u57fa\u672c\u7684\u306a DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u3001\u30bd\u30fc\u30c8\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init -t DynamoDB -n my-table \\ -w frontend -l workload \\ --partition-key Email:S \\ --sort-key UserId:N \\ --no-lsi \u8907\u6570\u306e\u4ee3\u66ff\u30bd\u30fc\u30c8\u30ad\u30fc\u3092\u6301\u3064 DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init -t DynamoDB -n my-table \\ + -w frontend \\ --partition-key Email:S \\ --sort-key UserId:N \\ --lsi Points:N \\ --lsi Goodness:N \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a8\u30f3\u30b8\u30f3\u306b PostgreSQL \u3092\u4f7f\u7528\u3057\u3066\u3001RDS Aurora Serverless v2 \u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init \\ -n my-cluster -t Aurora -w frontend --engine PostgreSQL \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a8\u30f3\u30b8\u30f3\u306b MySQL \u3092\u4f7f\u7528\u3057\u3001\u521d\u671f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d\u3092 testdb \u3068\u3057\u3066\u3001RDS Aurora Serverless v1 \u30af\u30e9\u30b9\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot storage init \\ -n my-cluster -t Aurora --serverless-version v1 -w frontend --engine MySQL --initial-db testdb","title":"\u4f7f\u7528\u4f8b"},{"location":"ja/docs/commands/storage-init/#_4","text":"Copilot \u306f S3 \u30d0\u30b1\u30c3\u30c8\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001\u307e\u305f\u306f Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u6307\u5b9a\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059 copilot [svc/job/env] deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001CLI \u306f\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4ed6\u306e\u3059\u3079\u3066\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u30de\u30fc\u30b8\u3057\u3066\u3001Service \u307e\u305f\u306f Environment \u306b\u95a2\u9023\u3059\u308b\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u306e\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30b9\u30bf\u30c3\u30af\u306b\u306f\u3001Service \u307e\u305f\u306f Environment \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e Addon \u30ea\u30bd\u30fc\u30b9 \u304c\u8a18\u8ff0\u3055\u308c\u3001Service \u307e\u305f\u306f Environment \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u5834\u6240\u306b\u5c55\u958b\u3055\u308c\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u5185\u90e8\u3067\u306e\u52d5\u4f5c"},{"location":"ja/docs/commands/storage-init/#_5","text":"","title":"\u30b7\u30ca\u30ea\u30aa\u306e\u4f8b"},{"location":"ja/docs/commands/storage-init/#service-s3","text":"$ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle workload Service \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f S3 \u30d0\u30b1\u30c3\u30c8\u7528\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002 $ copilot svc deploy --name fe --env test $ copilot svc deploy --name fe --env prod \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001test Environment \u3068 prod Environment \u306e2\u3064\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u5c55\u958b\u3055\u308c\u3001\u305d\u308c\u305e\u308c\u306e Environment \u306e fe Service \u304b\u3089\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"Service \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f S3 \u30b9\u30c8\u30ec\u30fc\u30b8"},{"location":"ja/docs/commands/storage-init/#environment-s3","text":"\u3053\u308c\u306f\u3001\u5b9f\u884c\u5f8c\u306b\u3001 $ copilot storage init --storage-type S3 --name bucket \\ --workload fe --lifecycle environment 2 \u3064\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u30021 \u3064\u306f \"test\" Environment\u3001\u3082\u3046 1 \u3064\u306f \"prod\" Environment \u3067\u3001\u305d\u308c\u305e\u308c\u306e \"fe\" Service \u304b\u3089\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002","title":"Environment \u306b\u95a2\u9023\u3065\u3051\u3089\u308c\u305f S3 \u30b9\u30c8\u30ec\u30fc\u30b8"},{"location":"ja/docs/commands/svc-delete/","text":"svc delete $ copilot svc delete [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc delete \u306f\u3001\u7279\u5b9a\u306e Environment \u5185\u306e Service \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Skips confirmation prompt. \u5b9f\u884c\u4f8b \"test\" \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5168\u3066\u306e Environment \u304b\u3089\u5f37\u5236\u7684\u306b\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot svc delete --name test --yes","title":"svc delete"},{"location":"ja/docs/commands/svc-delete/#svc-delete","text":"$ copilot svc delete [ flags ]","title":"svc delete"},{"location":"ja/docs/commands/svc-delete/#_1","text":"copilot svc delete \u306f\u3001\u7279\u5b9a\u306e Environment \u5185\u306e Service \u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-delete/#_2","text":"-e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Skips confirmation prompt.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-delete/#_3","text":"\"test\" \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5168\u3066\u306e Environment \u304b\u3089\u5f37\u5236\u7684\u306b\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot svc delete --name test --yes","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-deploy/","text":"svc deploy $ copilot svc deploy \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc deploy \u306f\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30c9\u3084\u8a2d\u5b9a\u3092\u5143\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 Service \u30c7\u30d7\u30ed\u30a4\u306e\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 image.build \u304c Manifest \u306b\u5b58\u5728\u3059\u308b\u5834\u5408 \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u3092\u30d3\u30eb\u30c9\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210 --tag \u306e\u5024\u3001\u307e\u305f\u306f\u6700\u65b0\u306e git sha (git \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u4f5c\u696d\u3057\u3066\u3044\u308b\u5834\u5408) \u3092\u5229\u7528\u3057\u3066\u30bf\u30b0\u4ed8\u3051 \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 ECR \u306b\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u3068 Addon \u3092\u307e\u3068\u3081\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d1\u30c3\u30b1\u30fc\u30b8 ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u3068\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210 / \u66f4\u65b0 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. -h, --help help for deploy -n, --name string Name of the service. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info --no-rollback \u30d5\u30e9\u30b0\u306f production \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u306f \u63a8\u5968\u3055\u308c\u307e\u305b\u3093 \u3002 \u30b5\u30fc\u30d3\u30b9\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u81ea\u52d5\u7684\u306a\u30b9\u30bf\u30c3\u30af\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u72b6\u6cc1\u3067\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u6b21\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u524d\u306b\u3001AWS Console \u3084 AWS CLI \u3092\u5229\u7528\u3057\u3066\u3001\u624b\u52d5\u3067\u30b9\u30bf\u30c3\u30af\u3092\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u5b9f\u884c\u4f8b --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5909\u66f4\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot svc package --diff \u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u5dee\u5206\u3060\u3051\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 copilot svc package --diff \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u3066\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3059\u3002","title":"svc deploy"},{"location":"ja/docs/commands/svc-deploy/#svc-deploy","text":"$ copilot svc deploy","title":"svc deploy"},{"location":"ja/docs/commands/svc-deploy/#_1","text":"copilot svc deploy \u306f\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30c9\u3084\u8a2d\u5b9a\u3092\u5143\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 Service \u30c7\u30d7\u30ed\u30a4\u306e\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 image.build \u304c Manifest \u306b\u5b58\u5728\u3059\u308b\u5834\u5408 \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u3092\u30d3\u30eb\u30c9\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210 --tag \u306e\u5024\u3001\u307e\u305f\u306f\u6700\u65b0\u306e git sha (git \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u4f5c\u696d\u3057\u3066\u3044\u308b\u5834\u5408) \u3092\u5229\u7528\u3057\u3066\u30bf\u30b0\u4ed8\u3051 \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 ECR \u306b\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u3068 Addon \u3092\u307e\u3068\u3081\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d1\u30c3\u30b1\u30fc\u30b8 ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u3068\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210 / \u66f4\u65b0","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-deploy/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. --detach Optional. Skip displaying CloudFormation deployment progress. --diff Compares the generated CloudFormation template to the deployed stack. --diff-yes Skip interactive approval of diff before deploying. -e, --env string Name of the environment. --force Optional. Force a new service deployment using the existing image. -h, --help help for deploy -n, --name string Name of the service. --no-rollback Optional. Disable automatic stack rollback in case of deployment failure. We do not recommend using this flag for a production environment. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --tag string Optional. The tag for the container images Copilot builds from Dockerfiles. Info --no-rollback \u30d5\u30e9\u30b0\u306f production \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u306f \u63a8\u5968\u3055\u308c\u307e\u305b\u3093 \u3002 \u30b5\u30fc\u30d3\u30b9\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u81ea\u52d5\u7684\u306a\u30b9\u30bf\u30c3\u30af\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u72b6\u6cc1\u3067\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u6b21\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u524d\u306b\u3001AWS Console \u3084 AWS CLI \u3092\u5229\u7528\u3057\u3066\u3001\u624b\u52d5\u3067\u30b9\u30bf\u30c3\u30af\u3092\u958b\u59cb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-deploy/#_3","text":"--diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5909\u66f4\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" Continue with the deployment? (y/N) copilot svc package --diff \u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u5dee\u5206\u3060\u3051\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 copilot svc package --diff \u306f\u5dee\u5206\u3092\u8868\u793a\u3057\u3066\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3059\u3002","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-exec/","text":"svc exec $ copilot svc exec \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc exec \u306f\u3001Service \u3067\u5b9f\u884c\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --container string Optional. The specific container you want to exec in. By default the first essential container will be used. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in. --yes Optional. Whether to update the Session Manager Plugin. \u5b9f\u884c\u4f8b \"frontend\" Service \u306e\u30bf\u30b9\u30af\u306b\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 $ copilot svc exec -a my-app -e test -n frontend \"backend\" Service \u5185\u306e ID \"8c38184\" \u304b\u3089\u59cb\u307e\u308b\u30bf\u30b9\u30af\u3067 'ls' \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot svc exec -a my-app -e test --name backend --task-id 8c38184 --command \"ls\" \u51fa\u529b\u4f8b Info Service \u30c7\u30d7\u30ed\u30a4\u524d\u306b Manifest \u3067 exec: true \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u308c\u306b\u3088\u308a Service \u306e Fargate Platform Version \u304c 1.4.0 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u308c\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3068\u3001 ECS \u30b5\u30fc\u30d3\u30b9\u306e\u30ea\u30d7\u30ec\u30a4\u30b9 \u3068\u306a\u308a\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u767a\u751f\u3057\u307e\u3059\u3002 exec \u306f Windows \u30b3\u30f3\u30c6\u30ca\u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002","title":"svc exec"},{"location":"ja/docs/commands/svc-exec/#svc-exec","text":"$ copilot svc exec","title":"svc exec"},{"location":"ja/docs/commands/svc-exec/#_1","text":"copilot svc exec \u306f\u3001Service \u3067\u5b9f\u884c\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-exec/#_2","text":"-a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --container string Optional. The specific container you want to exec in. By default the first essential container will be used. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in. --yes Optional. Whether to update the Session Manager Plugin.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-exec/#_3","text":"\"frontend\" Service \u306e\u30bf\u30b9\u30af\u306b\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 $ copilot svc exec -a my-app -e test -n frontend \"backend\" Service \u5185\u306e ID \"8c38184\" \u304b\u3089\u59cb\u307e\u308b\u30bf\u30b9\u30af\u3067 'ls' \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot svc exec -a my-app -e test --name backend --task-id 8c38184 --command \"ls\"","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-exec/#_4","text":"Info Service \u30c7\u30d7\u30ed\u30a4\u524d\u306b Manifest \u3067 exec: true \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u308c\u306b\u3088\u308a Service \u306e Fargate Platform Version \u304c 1.4.0 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u308c\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3068\u3001 ECS \u30b5\u30fc\u30d3\u30b9\u306e\u30ea\u30d7\u30ec\u30a4\u30b9 \u3068\u306a\u308a\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u767a\u751f\u3057\u307e\u3059\u3002 exec \u306f Windows \u30b3\u30f3\u30c6\u30ca\u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/svc-init/","text":"svc init $ copilot svc init \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc init \u306f\u3001\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u65b0\u3057\u3044 Service \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 CLI \u306f\u30ed\u30fc\u30ab\u30eb\u306e copilot \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b Service \u540d\u306e\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b Manifest \u30d5\u30a1\u30a4\u30eb \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u81ea\u7531\u306b Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u3001Service \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f CLI \u306f\u5168\u3066\u306e Environment \u304b\u3089\u30d7\u30eb\u53ef\u80fd\u306b\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3092\u3082\u3064 ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002 \u305d\u3057\u3066 Service \u306f CLI \u304b\u3089\u30c8\u30e9\u30c3\u30af\u3059\u308b\u305f\u3081 AWS System Manager Parameter Store \u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002 \u305d\u306e\u5f8c\u3001\u65e2\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u305f Environment \u304c\u3042\u308b\u5834\u5408\u306f copilot deploy \u3092\u5b9f\u884c\u3057\u3066 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002 \u30d5\u30e9\u30b0 Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Cannot be specified with --image. -h, --help help for init -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --ingress-type string Required for a Request-Driven Web Service. Allowed source of traffic to your service. Must be one of Environment or Internet. -n, --name string Name of the service. --no-subscribe Optional. Turn off selection for adding subscriptions for worker services. --port uint16 The port on which your service listens. --sources stringArray List of relative paths to source directories or files. Must be specified with '--svc-type \"Static Site\"'. --subscribe-topics stringArray Optional. SNS topics to subscribe to from other services in your application. Must be of format '<svcName>:<topicName>'. -t, --svc-type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Worker Service\", \"Static Site\". \"frontend\" \u3068\u3057\u3066 Load Balanced Web Service \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot svc init --name frontend --svc-type \"Load Balanced Web Service\" --dockerfile ./frontend/Dockerfile \u51fa\u529b\u4f8b","title":"svc init"},{"location":"ja/docs/commands/svc-init/#svc-init","text":"$ copilot svc init","title":"svc init"},{"location":"ja/docs/commands/svc-init/#_1","text":"copilot svc init \u306f\u3001\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u65b0\u3057\u3044 Service \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 CLI \u306f\u30ed\u30fc\u30ab\u30eb\u306e copilot \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b Service \u540d\u306e\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b Manifest \u30d5\u30a1\u30a4\u30eb \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u81ea\u7531\u306b Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u3001Service \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f CLI \u306f\u5168\u3066\u306e Environment \u304b\u3089\u30d7\u30eb\u53ef\u80fd\u306b\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3092\u3082\u3064 ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002 \u305d\u3057\u3066 Service \u306f CLI \u304b\u3089\u30c8\u30e9\u30c3\u30af\u3059\u308b\u305f\u3081 AWS System Manager Parameter Store \u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002 \u305d\u306e\u5f8c\u3001\u65e2\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u305f Environment \u304c\u3042\u308b\u5834\u5408\u306f copilot deploy \u3092\u5b9f\u884c\u3057\u3066 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-init/#_2","text":"Flags --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -d, --dockerfile string Path to the Dockerfile. Cannot be specified with --image. -h, --help help for init -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --ingress-type string Required for a Request-Driven Web Service. Allowed source of traffic to your service. Must be one of Environment or Internet. -n, --name string Name of the service. --no-subscribe Optional. Turn off selection for adding subscriptions for worker services. --port uint16 The port on which your service listens. --sources stringArray List of relative paths to source directories or files. Must be specified with '--svc-type \"Static Site\"'. --subscribe-topics stringArray Optional. SNS topics to subscribe to from other services in your application. Must be of format '<svcName>:<topicName>'. -t, --svc-type string Type of service to create. Must be one of: \"Request-Driven Web Service\", \"Load Balanced Web Service\", \"Backend Service\", \"Worker Service\", \"Static Site\". \"frontend\" \u3068\u3057\u3066 Load Balanced Web Service \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot svc init --name frontend --svc-type \"Load Balanced Web Service\" --dockerfile ./frontend/Dockerfile","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-init/#_3","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/svc-logs/","text":"svc logs $ copilot svc logs \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc logs \u306f\u30c7\u30d7\u30ed\u30a4\u6e08\u307f\u306e Service \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 (\u30ed\u30b0\u306f Static Site Service \u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002) \u30d5\u30e9\u30b0 -a, --app string Name of the application. (default \"testing-buildspec\") --container string Optional. Return only logs from a specific container. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --json Optional. Output in JSON format. --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. --log-group string Optional. Only return logs from specific log group. -n, --name string Name of the service. -p, --previous Optional. Print logs for the last stopped task if exists. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs. \u5b9f\u884c\u4f8b \"test\" Environment \u306e \"my-svc\" Service \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot svc logs -n my-svc -e test \u904e\u53bb 1 \u6642\u9593\u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot svc logs --since 1h 2006-01-02T15:04:05 \u304b\u3089 2006-01-02T15:05:05 \u307e\u3067\u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot svc logs --start-time 2006 -01-02T15:04:05+00:00 --end-time 2006 -01-02T15:05:05+00:00","title":"svc logs"},{"location":"ja/docs/commands/svc-logs/#svc-logs","text":"$ copilot svc logs","title":"svc logs"},{"location":"ja/docs/commands/svc-logs/#_1","text":"copilot svc logs \u306f\u30c7\u30d7\u30ed\u30a4\u6e08\u307f\u306e Service \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 (\u30ed\u30b0\u306f Static Site Service \u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002)","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-logs/#_2","text":"-a, --app string Name of the application. (default \"testing-buildspec\") --container string Optional. Return only logs from a specific container. --end-time string Optional. Only return logs before a specific date (RFC3339). Defaults to all logs. Only one of end-time / follow may be used. -e, --env string Name of the environment. --follow Optional. Specifies if the logs should be streamed. -h, --help help for logs --json Optional. Output in JSON format. --limit int Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set. --log-group string Optional. Only return logs from specific log group. -n, --name string Name of the service. -p, --previous Optional. Print logs for the last stopped task if exists. --since duration Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs. Only one of start-time / since may be used. --start-time string Optional. Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of start-time / since may be used. --tasks strings Optional. Only return logs from specific task IDs.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-logs/#_3","text":"\"test\" Environment \u306e \"my-svc\" Service \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot svc logs -n my-svc -e test \u904e\u53bb 1 \u6642\u9593\u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot svc logs --since 1h 2006-01-02T15:04:05 \u304b\u3089 2006-01-02T15:05:05 \u307e\u3067\u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot svc logs --start-time 2006 -01-02T15:04:05+00:00 --end-time 2006 -01-02T15:05:05+00:00","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-ls/","text":"svc ls $ copilot svc ls \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc ls \u306f\u7279\u5b9a\u306e Application \u306e\u3059\u3079\u3066\u306e Service \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show services in the workspace. \u51fa\u529b\u4f8b","title":"svc ls"},{"location":"ja/docs/commands/svc-ls/#svc-ls","text":"$ copilot svc ls","title":"svc ls"},{"location":"ja/docs/commands/svc-ls/#_1","text":"copilot svc ls \u306f\u7279\u5b9a\u306e Application \u306e\u3059\u3079\u3066\u306e Service \u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-ls/#_2","text":"-a, --app string Name of the application. -h, --help help for ls --json Optional. Output in JSON format. --local Only show services in the workspace.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-ls/#_3","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/svc-override/","text":"svc override $ copilot svc override \u6982\u8981 Service \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Service \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u8aac\u660e \u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the service. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\". \u5b9f\u884c\u4f8b \"frontend\" Service \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot svc override -n frontend --tool cdk \u51fa\u529b\u4f8b","title":"svc override"},{"location":"ja/docs/commands/svc-override/#svc-override","text":"$ copilot svc override","title":"svc override"},{"location":"ja/docs/commands/svc-override/#_1","text":"Service \u306e Infrastructure-as-Code (IaC) \u62e1\u5f35\u30d5\u30a1\u30a4\u30eb\u306e\u30b9\u30ad\u30e3\u30d5\u30a9\u30eb\u30c9\u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u3001 Copilot \u304c\u751f\u6210\u3057\u305f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3057\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u3001\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001 Service \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u524a\u9664\u3084\u65b0\u898f\u30ea\u30bd\u30fc\u30b9\u306e\u8ffd\u52a0\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u6982\u8981"},{"location":"ja/docs/commands/svc-override/#_2","text":"\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306b\u3064\u3044\u3066\u3001\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306f YAML \u30d1\u30c3\u30c1 \u3084\u3001 AWS Cloud Development Kit \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u8a73\u7d30\u8aac\u660e"},{"location":"ja/docs/commands/svc-override/#_3","text":"-a, --app string Name of the application. --cdk-language string Optional. The Cloud Development Kit language. (default \"typescript\") -e, --env string Optional. Name of the environment to use when retrieving resources in a template. Defaults to a random environment. -h, --help Help for override -n, --name string Name of the service. --skip-resources Optional. Skip asking for which resources to override and generate empty IaC extension files. --tool string Infrastructure as Code tool to override a template. Must be one of: \"cdk\" or \"yamlpatch\".","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-override/#_4","text":"\"frontend\" Service \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044 Cloud Development Kit \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ copilot svc override -n frontend --tool cdk","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-override/#_5","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/svc-package/","text":"svc package $ copilot svc package \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc package \u306f\u4efb\u610f\u306e Environment \u306b Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 --allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the service. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The service's image tag. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration. \u5b9f\u884c\u4f8b CloudFormaiton \u30b9\u30bf\u30c3\u30af\u3068\u8a2d\u5b9a\u3092\u8868\u793a\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\"infrastructure/\" \u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002 $ copilot svc package -n frontend -e test --output-dir ./infrastructure $ ls ./infrastructure frontend.stack.yml frontend-test.config.yml --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u5dee\u5206\u3092\u51fa\u529b\u3057\u3001\u7d42\u4e86\u3057\u307e\u3059\u3002 $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" copilot [noun] package --diff \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"svc package"},{"location":"ja/docs/commands/svc-package/#svc-package","text":"$ copilot svc package","title":"svc package"},{"location":"ja/docs/commands/svc-package/#_1","text":"copilot svc package \u306f\u4efb\u610f\u306e Environment \u306b Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-package/#_2","text":"--allow-downgrade Optional. Allow using an older version of Copilot to update Copilot components updated by a newer version of Copilot. -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for package -n, --name string Name of the service. --output-dir string Optional. Writes the stack template and template configuration to a directory. --tag string Optional. The service's image tag. --upload-assets Optional. Whether to upload assets (container images, Lambda functions, etc.). Uploaded asset locations are filled in the template configuration.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-package/#_3","text":"CloudFormaiton \u30b9\u30bf\u30c3\u30af\u3068\u8a2d\u5b9a\u3092\u8868\u793a\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\"infrastructure/\" \u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002 $ copilot svc package -n frontend -e test --output-dir ./infrastructure $ ls ./infrastructure frontend.stack.yml frontend-test.config.yml --diff \u3092\u4f7f\u7528\u3057\u3066\u3001\u5dee\u5206\u3092\u51fa\u529b\u3057\u3001\u7d42\u4e86\u3057\u307e\u3059\u3002 $ copilot svc deploy --diff ~ Resources: ~ TaskDefinition: ~ Properties: ~ ContainerDefinitions: ~ - (changed item) ~ Environment: (4 unchanged items) + - Name: LOG_LEVEL + Value: \"info\" copilot [noun] package --diff \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 0 = no diffs found 1 = diffs found 2 = error producing diffs","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-pause/","text":"svc pause $ copilot svc pause [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 Note svc pause \u306f \"Request-Driven Web Service\" \u30bf\u30a4\u30d7\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 copilot svc pause \u306f\u7279\u5b9a\u306e Environment \u306e Service \u306b\u7d10\u3065\u3051\u3089\u308c\u305f App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for pause -n, --name string Name of the service. --yes Skips confirmation prompt. \u5b9f\u884c\u4f8b \u5b9f\u884c\u4e2d\u306e App Runner \u30b5\u30fc\u30d3\u30b9\u3001\"my-svc\" \u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002 $ copilot svc pause -n my-svc","title":"svc pause"},{"location":"ja/docs/commands/svc-pause/#svc-pause","text":"$ copilot svc pause [ flags ]","title":"svc pause"},{"location":"ja/docs/commands/svc-pause/#_1","text":"Note svc pause \u306f \"Request-Driven Web Service\" \u30bf\u30a4\u30d7\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 copilot svc pause \u306f\u7279\u5b9a\u306e Environment \u306e Service \u306b\u7d10\u3065\u3051\u3089\u308c\u305f App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-pause/#_2","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for pause -n, --name string Name of the service. --yes Skips confirmation prompt.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-pause/#_3","text":"\u5b9f\u884c\u4e2d\u306e App Runner \u30b5\u30fc\u30d3\u30b9\u3001\"my-svc\" \u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002 $ copilot svc pause -n my-svc","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-resume/","text":"svc resume $ copilot svc resume [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 Note svc resume \u306f \"Request-Driven Web Service\" \u30bf\u30a4\u30d7\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 copilot svc resume \u306f\u7279\u5b9a\u306e Environment \u306e Service \u306b\u7d10\u3065\u3051\u3089\u308c\u305f\u4e00\u6642\u505c\u6b62\u4e2d\u306e App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u518d\u958b\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for resume -n, --name string Name of the service. \u5b9f\u884c\u4f8b \u4e00\u6642\u505c\u6b62\u4e2d\u306e App Runner \u30b5\u30fc\u30d3\u30b9\u3001\"my-svc\" \u3092\u518d\u958b\u3057\u307e\u3059\u3002 $ copilot svc resume -n my-svc","title":"svc resume"},{"location":"ja/docs/commands/svc-resume/#svc-resume","text":"$ copilot svc resume [ flags ]","title":"svc resume"},{"location":"ja/docs/commands/svc-resume/#_1","text":"Note svc resume \u306f \"Request-Driven Web Service\" \u30bf\u30a4\u30d7\u3067\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 copilot svc resume \u306f\u7279\u5b9a\u306e Environment \u306e Service \u306b\u7d10\u3065\u3051\u3089\u308c\u305f\u4e00\u6642\u505c\u6b62\u4e2d\u306e App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u518d\u958b\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-resume/#_2","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for resume -n, --name string Name of the service.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-resume/#_3","text":"\u4e00\u6642\u505c\u6b62\u4e2d\u306e App Runner \u30b5\u30fc\u30d3\u30b9\u3001\"my-svc\" \u3092\u518d\u958b\u3057\u307e\u3059\u3002 $ copilot svc resume -n my-svc","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-show/","text":"svc show $ copilot svc show \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc show \u306f\u30c7\u30d7\u30ed\u30a4\u6e08\u307f\u306e Service \u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002Service \u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3001\u8a2d\u5b9a\u3001\u5909\u6570\u3084 Environment \u3054\u3068\u306e\u95a2\u9023\u3059\u308b S3 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u542b\u307e\u308c\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest string Optional. Name of the environment in which the service was deployed; output the manifest file used for that deployment. -n, --name string Name of the service. --resources Optional. Show the resources in your service. \u5b9f\u884c\u4f8b \u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Environment \u3067 Service \u8a2d\u5b9a\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot svc show -n api \"prod\" Environment \u306b \"api\" Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot svc show -n api --manifest prod \u51fa\u529b\u4f8b","title":"svc show"},{"location":"ja/docs/commands/svc-show/#svc-show","text":"$ copilot svc show","title":"svc show"},{"location":"ja/docs/commands/svc-show/#_1","text":"copilot svc show \u306f\u30c7\u30d7\u30ed\u30a4\u6e08\u307f\u306e Service \u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002Service \u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3001\u8a2d\u5b9a\u3001\u5909\u6570\u3084 Environment \u3054\u3068\u306e\u95a2\u9023\u3059\u308b S3 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u542b\u307e\u308c\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-show/#_2","text":"-a, --app string Name of the application. -h, --help help for show --json Optional. Output in JSON format. --manifest string Optional. Name of the environment in which the service was deployed; output the manifest file used for that deployment. -n, --name string Name of the service. --resources Optional. Show the resources in your service.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-show/#_3","text":"\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Environment \u3067 Service \u8a2d\u5b9a\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot svc show -n api \"prod\" Environment \u306b \"api\" Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 $ copilot svc show -n api --manifest prod","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/svc-show/#_4","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/svc-status/","text":"svc status $ copilot svc status \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot svc status \u306f\u30c7\u30d7\u30ed\u30a4\u6e08\u307f Service \u306e\u3078\u30eb\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3001Service \u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u3001\u30bf\u30b9\u30af\u3001\u95a2\u9023\u3059\u308b\u30a2\u30e9\u30fc\u30e0\u3084\u3001\u30ed\u30b0\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u304c\u542b\u307e\u308c\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the service. \u51fa\u529b\u4f8b","title":"svc status"},{"location":"ja/docs/commands/svc-status/#svc-status","text":"$ copilot svc status","title":"svc status"},{"location":"ja/docs/commands/svc-status/#_1","text":"copilot svc status \u306f\u30c7\u30d7\u30ed\u30a4\u6e08\u307f Service \u306e\u3078\u30eb\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u30bf\u30b9\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3001Service \u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u3001\u30bf\u30b9\u30af\u3001\u95a2\u9023\u3059\u308b\u30a2\u30e9\u30fc\u30e0\u3084\u3001\u30ed\u30b0\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u304c\u542b\u307e\u308c\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/svc-status/#_2","text":"-a, --app string Name of the application. -e, --env string Name of the environment. -h, --help help for status --json Optional. Output in JSON format. -n, --name string Name of the service.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/svc-status/#_3","text":"","title":"\u51fa\u529b\u4f8b"},{"location":"ja/docs/commands/task-delete/","text":"task delete $ copilot task delete \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot task delete \u306f\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3057\u3001\u95a2\u9023\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002 Info v1.2.0 \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Copilot \u3067\u4f5c\u6210\u3055\u308c\u305f\u30bf\u30b9\u30af\u306f copilot task delete \u3067\u505c\u6b62\u3067\u304d\u307e\u305b\u3093\u3002v1.2.0 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u8d77\u52d5\u3057\u305f\u30bf\u30b9\u30af\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u304a\u5ba2\u69d8\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u306b ECS \u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u624b\u52d5\u3067\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. --default Optional. Delete a task which was launched in the default cluster and subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Optional. Skips confirmation prompt. \u5b9f\u884c\u4f8b \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u304b\u3089\u3001\"test\" \u30bf\u30b9\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot task delete --name test --default prod Environment \u304b\u3089\u3001\"db-migrate\" \u30bf\u30b9\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot task delete --name db-migrate --env prod \u78ba\u8a8d\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u305b\u305a\u306b\u3001\"test\" \u30bf\u30b9\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot task delete --name test --yes","title":"task delete"},{"location":"ja/docs/commands/task-delete/#task-delete","text":"$ copilot task delete","title":"task delete"},{"location":"ja/docs/commands/task-delete/#_1","text":"copilot task delete \u306f\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3057\u3001\u95a2\u9023\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u307e\u3059\u3002 Info v1.2.0 \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Copilot \u3067\u4f5c\u6210\u3055\u308c\u305f\u30bf\u30b9\u30af\u306f copilot task delete \u3067\u505c\u6b62\u3067\u304d\u307e\u305b\u3093\u3002v1.2.0 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u8d77\u52d5\u3057\u305f\u30bf\u30b9\u30af\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u304a\u5ba2\u69d8\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u306b ECS \u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u624b\u52d5\u3067\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/task-delete/#_2","text":"-a, --app string Name of the application. --default Optional. Delete a task which was launched in the default cluster and subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for delete -n, --name string Name of the service. --yes Optional. Skips confirmation prompt.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/task-delete/#_3","text":"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u304b\u3089\u3001\"test\" \u30bf\u30b9\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot task delete --name test --default prod Environment \u304b\u3089\u3001\"db-migrate\" \u30bf\u30b9\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot task delete --name db-migrate --env prod \u78ba\u8a8d\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a\u305b\u305a\u306b\u3001\"test\" \u30bf\u30b9\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ copilot task delete --name test --yes","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/task-exec/","text":"task exec $ copilot task exec \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot task exec \u306f\u5b9f\u884c\u4e2d\u306e\u30bf\u30b9\u30af\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --default Optional. Execute commands in running tasks in default cluster and default subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in. \u5b9f\u884c\u4f8b \u73fe\u5728\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u914d\u4e0b\u306e \"test\" Environment \u3067\u3001\u30bf\u30b9\u30af\u30b0\u30eb\u30fc\u30d7 \"db-migrate\" \u5185\u306e\u30bf\u30b9\u30af\u3078\u5bfe\u8a71\u578b\u306e bash \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 $ copilot task exec -e test -n db-migrate \u30bf\u30b9\u30af\u30b0\u30eb\u30fc\u30d7 \"db-migrate\" \u5185\u306e\u3001ID \"1848c38\" \u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6301\u3064\u30bf\u30b9\u30af\u3067 'cat progress.csv' \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task exec --name db-migrate --task-id 1848c38 --command \"cat progress.csv\" \u30c7\u30d5\u30a9\u30eb\u30c8\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u3067\u52d5\u4f5c\u3059\u308b\u3001ID \"38c3818\" \u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6301\u3064\u30bf\u30b9\u30af\u3078\u5bfe\u8a71\u578b\u306e bash \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 $ copilot task exec --default --task-id 38c3818 Info copilot task exec \u306f\u7279\u5b9a\u306e\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u6a29\u9650\u304c\u306a\u3044\u3068\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002\u65e2\u5b58\u306e\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001 copilot task exec \u3092\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u4ee5\u4e0b\u306e\u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Action\" : [ \"ssmmessages:CreateControlChannel\" , \"ssmmessages:OpenControlChannel\" , \"ssmmessages:CreateDataChannel\" , \"ssmmessages:OpenDataChannel\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" }, { \"Action\" : [ \"logs:CreateLogStream\" , \"logs:DescribeLogGroups\" , \"logs:DescribeLogStreams\" , \"logs:PutLogEvents\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" } ] }","title":"task exec"},{"location":"ja/docs/commands/task-exec/#task-exec","text":"$ copilot task exec","title":"task exec"},{"location":"ja/docs/commands/task-exec/#_1","text":"copilot task exec \u306f\u5b9f\u884c\u4e2d\u306e\u30bf\u30b9\u30af\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/task-exec/#_2","text":"-a, --app string Name of the application. -c, --command string Optional. The command that is passed to a running container. (default \"/bin/bash\") --default Optional. Execute commands in running tasks in default cluster and default subnets. Cannot be specified with 'app' or 'env'. -e, --env string Name of the environment. -h, --help help for exec -n, --name string Name of the service, job, or task group. --task-id string Optional. ID of the task you want to exec in.","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/task-exec/#_3","text":"\u73fe\u5728\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u914d\u4e0b\u306e \"test\" Environment \u3067\u3001\u30bf\u30b9\u30af\u30b0\u30eb\u30fc\u30d7 \"db-migrate\" \u5185\u306e\u30bf\u30b9\u30af\u3078\u5bfe\u8a71\u578b\u306e bash \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 $ copilot task exec -e test -n db-migrate \u30bf\u30b9\u30af\u30b0\u30eb\u30fc\u30d7 \"db-migrate\" \u5185\u306e\u3001ID \"1848c38\" \u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6301\u3064\u30bf\u30b9\u30af\u3067 'cat progress.csv' \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task exec --name db-migrate --task-id 1848c38 --command \"cat progress.csv\" \u30c7\u30d5\u30a9\u30eb\u30c8\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u3067\u52d5\u4f5c\u3059\u308b\u3001ID \"38c3818\" \u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6301\u3064\u30bf\u30b9\u30af\u3078\u5bfe\u8a71\u578b\u306e bash \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 $ copilot task exec --default --task-id 38c3818 Info copilot task exec \u306f\u7279\u5b9a\u306e\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u6a29\u9650\u304c\u306a\u3044\u3068\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002\u65e2\u5b58\u306e\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001 copilot task exec \u3092\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u4ee5\u4e0b\u306e\u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Action\" : [ \"ssmmessages:CreateControlChannel\" , \"ssmmessages:OpenControlChannel\" , \"ssmmessages:CreateDataChannel\" , \"ssmmessages:OpenDataChannel\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" }, { \"Action\" : [ \"logs:CreateLogStream\" , \"logs:DescribeLogGroups\" , \"logs:DescribeLogStreams\" , \"logs:PutLogEvents\" ], \"Resource\" : \"*\" , \"Effect\" : \"Allow\" } ] }","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/task-run/","text":"task run $ copilot task run \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot task run \u306f\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u30bf\u30b9\u30af\u3092\u30c7\u30d7\u30ed\u30a4\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002 task run \u306b\u95a2\u9023\u3059\u308b\u4e00\u822c\u7684\u306a\u624b\u9806\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002 \u30bf\u30b9\u30af\u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u306e\u4f5c\u6210 \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068 ECR \u3078\u306e\u30d7\u30c3\u30b7\u30e5 \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u4f5c\u6210\u3001\u307e\u305f\u306f\u66f4\u65b0 \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u3001\u958b\u59cb\u3055\u308c\u308b\u306e\u3092\u5f85\u3064 \u30bf\u30b9\u30af\u304c 0 \u4ee5\u5916\u306e\u7d42\u4e86\u30b3\u30fc\u30c9\u3067\u7d42\u4e86\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u7d42\u4e86\u30b3\u30fc\u30c9\u3092\u8ee2\u9001\u3059\u308b Info \u540c\u3058\u30b0\u30eb\u30fc\u30d7\u540d\u306e\u30bf\u30b9\u30af\u306f\u540c\u3058\u30ea\u30bd\u30fc\u30b9\u30bb\u30c3\u30c8\u3092\u5171\u6709\u3057\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u30bb\u30c3\u30c8\u306b\u306f\u4f8b\u3048\u3070 CloudFormation \u30b9\u30bf\u30c3\u30af\u3001ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3001CloudWatch \u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3001\u30bf\u30b9\u30af\u5b9a\u7fa9\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002 --env \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u7279\u5b9a\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u3001\u305d\u306e\u30bf\u30b9\u30af\u306f\u30c7\u30d7\u30ed\u30a4\u5148 Environment \u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u3092\u5229\u7528\u3057\u307e\u3059 --default \u30d5\u30e9\u30b0\u306e\u5229\u7528\u6642\u306b\u300c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u5b58\u5728\u3057\u306a\u3044\u300d\u65e8\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001AWS CLI \u3067 aws ecs create-cluster \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089\u518d\u5ea6 copilot run task \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d5\u30e9\u30b0 Name Flags -n, --task-group-name string Optional. The group name of the task. Tasks with the same group name share the same set of resources. (default directory name) Build Flags --build-context string Path to the Docker build context. Cannot be specified with --image. --dockerfile string Path to the Dockerfile. Cannot be specified with --image. (default \"Dockerfile\") -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --tag string Optional. The container image tag in addition to \"latest\". Placement Flags --app string Optional. Name of the application. Cannot be specified with --default, --subnets or --security-groups. --cluster string Optional. The short name or full ARN of the cluster to run the task in. Cannot be specified with --app, --env or --default. --default Optional. Run tasks in default cluster and default subnets. Cannot be specified with --app, --env or --subnets. --env string Optional. Name of the environment. Cannot be specified with --default, --subnets or --security-groups. --security-groups strings Optional. Additional security group IDs for the task to use. Can be specified multiple times. --subnets strings Optional. The subnet IDs for the task to use. Can be specified multiple times. Cannot be specified with --app, --env or --default. Task Configuration Flags --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when 'secrets' flag is specified --command string Optional. The command that is passed to \"docker run\" to override the default command. --count int Optional. The number of tasks to set up. (default 1) --cpu int Optional. The number of CPU units to reserve for each task. (default 256) --entrypoint string Optional. The entrypoint that is passed to \"docker run\" to override the default entrypoint. --env-file string Optional. A path to an environment variable (.env) file with each line being of the form of VARIABLE=VALUE. Values specified with --env-vars take precedence over --env-file. --env-vars stringToString Optional. Environment variables specified by key=value separated by commas. (default []) --execution-role string Optional. The ARN of the role that grants the container agent permission to make AWS API calls. --memory int Optional. The amount of memory to reserve in MiB for each task. (default 512) --platform-arch string Optional. Architecture of the task. Must be specified along with 'platform-os'. --platform-os string Optional. Operating system of the task. Must be specified along with 'platform-arch'. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --secrets stringToString Optional. Secrets to inject into the container. Specified by key=value separated by commas. (default []). For secrets stored in AWS Parameter Store you can either specify names or ARNs. For the secrets stored in AWS Secrets Manager you need to specify ARNs. --task-role string Optional. The ARN of the role for the task to use. Utility Flags --follow Optional. Specifies if the logs should be streamed. --generate-cmd string Optional. Generate a command with a pre-filled value for each flag. To use it for an ECS service, specify --generate-cmd <cluster name>/<service name>. Alternatively, if the service or job is created with Copilot, specify --generate-cmd <application>/<environment>/<service or job name>. Cannot be specified with any other flags. --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when '--secret' flag is specified \u5b9f\u884c\u4f8b \u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u3092\u4f7f\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u3001\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u5f8c\u306f\u30ed\u30b0\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u306b\u306f\u8cea\u554f\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b Environment \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 $ copilot task run --follow \u73fe\u5728\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u914d\u4e0b\u306e \"test\" Environment \u3067\u3001\"db-migrate\" \u3068\u3044\u3046\u540d\u524d\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run -n db-migrate --env test --follow 2GB \u306e\u30e1\u30e2\u30ea\u3001\u65e2\u5b58\u306e\u30a4\u30e1\u30fc\u30b8\u3001\u304a\u3088\u3073\u30ab\u30b9\u30bf\u30e0\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066 4 \u3064\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --count 4 --memory 2048 --image = rds-migrate --task-role migrate-role --follow \u74b0\u5883\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --env-vars name = myName,user = myUser \u6307\u5b9a\u3057\u305f\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u3066\u3001\u73fe\u5728\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u914d\u4e0b\u3067\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --subnets subnet-123,subnet-456 --security-groups sg-123,sg-456 \u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --command \"python migrate-script.py\" Windows 2019 \u30bf\u30b9\u30af\u3092\u6700\u5c0f\u306e CPU \u3068\u30e1\u30e2\u30ea\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --platform-os WINDOWS_SERVER_2019_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 Windows 2022 \u30bf\u30b9\u30af\u3092\u6700\u5c0f\u306e CPU \u3068\u30e1\u30e2\u30ea\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --platform-os WINDOWS_SERVER_2022_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 AWS Secrets Manager \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u6ce8\u5165\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --secrets AuroraSecret = arn:aws:secretsmanager:us-east-1:535307839111:secret:AuroraSecret","title":"task run"},{"location":"ja/docs/commands/task-run/#task-run","text":"$ copilot task run","title":"task run"},{"location":"ja/docs/commands/task-run/#_1","text":"copilot task run \u306f\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u30bf\u30b9\u30af\u3092\u30c7\u30d7\u30ed\u30a4\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002 task run \u306b\u95a2\u9023\u3059\u308b\u4e00\u822c\u7684\u306a\u624b\u9806\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002 \u30bf\u30b9\u30af\u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u306e\u4f5c\u6210 \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068 ECR \u3078\u306e\u30d7\u30c3\u30b7\u30e5 \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u4f5c\u6210\u3001\u307e\u305f\u306f\u66f4\u65b0 \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u3001\u958b\u59cb\u3055\u308c\u308b\u306e\u3092\u5f85\u3064 \u30bf\u30b9\u30af\u304c 0 \u4ee5\u5916\u306e\u7d42\u4e86\u30b3\u30fc\u30c9\u3067\u7d42\u4e86\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u7d42\u4e86\u30b3\u30fc\u30c9\u3092\u8ee2\u9001\u3059\u308b Info \u540c\u3058\u30b0\u30eb\u30fc\u30d7\u540d\u306e\u30bf\u30b9\u30af\u306f\u540c\u3058\u30ea\u30bd\u30fc\u30b9\u30bb\u30c3\u30c8\u3092\u5171\u6709\u3057\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u30bb\u30c3\u30c8\u306b\u306f\u4f8b\u3048\u3070 CloudFormation \u30b9\u30bf\u30c3\u30af\u3001ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3001CloudWatch \u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3001\u30bf\u30b9\u30af\u5b9a\u7fa9\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002 --env \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u7279\u5b9a\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u3001\u305d\u306e\u30bf\u30b9\u30af\u306f\u30c7\u30d7\u30ed\u30a4\u5148 Environment \u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u3092\u5229\u7528\u3057\u307e\u3059 --default \u30d5\u30e9\u30b0\u306e\u5229\u7528\u6642\u306b\u300c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u5b58\u5728\u3057\u306a\u3044\u300d\u65e8\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001AWS CLI \u3067 aws ecs create-cluster \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089\u518d\u5ea6 copilot run task \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/task-run/#_2","text":"Name Flags -n, --task-group-name string Optional. The group name of the task. Tasks with the same group name share the same set of resources. (default directory name) Build Flags --build-context string Path to the Docker build context. Cannot be specified with --image. --dockerfile string Path to the Dockerfile. Cannot be specified with --image. (default \"Dockerfile\") -i, --image string The location of an existing Docker image. Cannot be specified with --dockerfile or --build-context. --tag string Optional. The container image tag in addition to \"latest\". Placement Flags --app string Optional. Name of the application. Cannot be specified with --default, --subnets or --security-groups. --cluster string Optional. The short name or full ARN of the cluster to run the task in. Cannot be specified with --app, --env or --default. --default Optional. Run tasks in default cluster and default subnets. Cannot be specified with --app, --env or --subnets. --env string Optional. Name of the environment. Cannot be specified with --default, --subnets or --security-groups. --security-groups strings Optional. Additional security group IDs for the task to use. Can be specified multiple times. --subnets strings Optional. The subnet IDs for the task to use. Can be specified multiple times. Cannot be specified with --app, --env or --default. Task Configuration Flags --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when 'secrets' flag is specified --command string Optional. The command that is passed to \"docker run\" to override the default command. --count int Optional. The number of tasks to set up. (default 1) --cpu int Optional. The number of CPU units to reserve for each task. (default 256) --entrypoint string Optional. The entrypoint that is passed to \"docker run\" to override the default entrypoint. --env-file string Optional. A path to an environment variable (.env) file with each line being of the form of VARIABLE=VALUE. Values specified with --env-vars take precedence over --env-file. --env-vars stringToString Optional. Environment variables specified by key=value separated by commas. (default []) --execution-role string Optional. The ARN of the role that grants the container agent permission to make AWS API calls. --memory int Optional. The amount of memory to reserve in MiB for each task. (default 512) --platform-arch string Optional. Architecture of the task. Must be specified along with 'platform-os'. --platform-os string Optional. Operating system of the task. Must be specified along with 'platform-arch'. --resource-tags stringToString Optional. Labels with a key and value separated by commas. Allows you to categorize resources. (default []) --secrets stringToString Optional. Secrets to inject into the container. Specified by key=value separated by commas. (default []). For secrets stored in AWS Parameter Store you can either specify names or ARNs. For the secrets stored in AWS Secrets Manager you need to specify ARNs. --task-role string Optional. The ARN of the role for the task to use. Utility Flags --follow Optional. Specifies if the logs should be streamed. --generate-cmd string Optional. Generate a command with a pre-filled value for each flag. To use it for an ECS service, specify --generate-cmd <cluster name>/<service name>. Alternatively, if the service or job is created with Copilot, specify --generate-cmd <application>/<environment>/<service or job name>. Cannot be specified with any other flags. --acknowledge-secrets-access Optional. Skip the confirmation question and grant access to the secrets specified by --secrets flag. This flag is useful only when '--secret' flag is specified","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/commands/task-run/#_3","text":"\u30ed\u30fc\u30ab\u30eb\u306e Dockerfile \u3092\u4f7f\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u3001\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u5f8c\u306f\u30ed\u30b0\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u306b\u306f\u8cea\u554f\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b Environment \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 $ copilot task run --follow \u73fe\u5728\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u914d\u4e0b\u306e \"test\" Environment \u3067\u3001\"db-migrate\" \u3068\u3044\u3046\u540d\u524d\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run -n db-migrate --env test --follow 2GB \u306e\u30e1\u30e2\u30ea\u3001\u65e2\u5b58\u306e\u30a4\u30e1\u30fc\u30b8\u3001\u304a\u3088\u3073\u30ab\u30b9\u30bf\u30e0\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066 4 \u3064\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --count 4 --memory 2048 --image = rds-migrate --task-role migrate-role --follow \u74b0\u5883\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --env-vars name = myName,user = myUser \u6307\u5b9a\u3057\u305f\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u3066\u3001\u73fe\u5728\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u914d\u4e0b\u3067\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --subnets subnet-123,subnet-456 --security-groups sg-123,sg-456 \u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --command \"python migrate-script.py\" Windows 2019 \u30bf\u30b9\u30af\u3092\u6700\u5c0f\u306e CPU \u3068\u30e1\u30e2\u30ea\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --platform-os WINDOWS_SERVER_2019_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 Windows 2022 \u30bf\u30b9\u30af\u3092\u6700\u5c0f\u306e CPU \u3068\u30e1\u30e2\u30ea\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --platform-os WINDOWS_SERVER_2022_CORE --platform-arch X86_64 --cpu 1024 --memory 2048 AWS Secrets Manager \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u6ce8\u5165\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot task run --secrets AuroraSecret = arn:aws:secretsmanager:us-east-1:535307839111:secret:AuroraSecret","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/commands/version/","text":"version $ copilot version [ flags ] \u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981 copilot version Copilot CLI \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3001\u30d3\u30eb\u30c9\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u30d5\u30e9\u30b0 -h, --help help for version","title":"version"},{"location":"ja/docs/commands/version/#version","text":"$ copilot version [ flags ]","title":"version"},{"location":"ja/docs/commands/version/#_1","text":"copilot version Copilot CLI \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3001\u30d3\u30eb\u30c9\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u8868\u793a\u3057\u307e\u3059\u3002","title":"\u30b3\u30de\u30f3\u30c9\u306e\u6982\u8981"},{"location":"ja/docs/commands/version/#_2","text":"-h, --help help for version","title":"\u30d5\u30e9\u30b0"},{"location":"ja/docs/concepts/applications/","text":"Application Application \u306f\u3001Service\u3001Environment\u3001Pipeline \u3068\u3044\u3063\u305f\u6982\u5ff5\u3092\u53d6\u308a\u307e\u3068\u3081\u308b\u6982\u5ff5\u3067\u3059\u3002\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30b5\u30fc\u30d3\u30b9\uff11\u3064\u3067\u3059\u3079\u3066\u306e\u3053\u3068\u3092\u3084\u308b\u3082\u306e\u3067\u3042\u308b\u304b\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u96c6\u307e\u308a\u3067\u3042\u308b\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001Copilot \u306f Service \u3084\u305d\u308c\u3089\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b Environment \u3092\uff11\u3064\u306e Application \u3068\u3057\u3066\u53d6\u308a\u307e\u3068\u3081\u307e\u3059\u3002 \u4f8b\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u3053\u3053\u3067\u306f\u6295\u7968\u3092\u53d7\u3051\u4ed8\u3051\u3001\u7d50\u679c\u3092\u96c6\u8a08\u3059\u308b\u6295\u7968\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002 \u6295\u7968\u306e\u53d7\u3051\u4ed8\u3051\u3068\u7d50\u679c\u306e\u96c6\u8a08\u3068\u3044\u3046\uff12\u3064\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u6301\u3064\u6295\u7968\u30a2\u30d7\u30ea\u306f\u3001 copilot init \u30b3\u30de\u30f3\u30c9\uff12\u56de\u3067\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\u307e\u305a\u6700\u521d\u306b copilot init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u306e Service \u304c\u6240\u5c5e\u3059\u308b\u3053\u3068\u306b\u306a\u308b Application \u306e\u540d\u524d\u3092\u8cea\u554f\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u6295\u7968\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001Application \u3092 \"vote\" \u3001\u305d\u3057\u3066\u6295\u7968\u3092\u53d7\u3051\u4ed8\u3051\u308b Service \u3092 \"collector\" \u3068\u540d\u4ed8\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\uff12\u56de\u76ee\u306e init \u3067\u306f\u3001\u65e2\u5b58\u306e \"vote\" Application \u306b\u65b0\u3057\u3044 Service \u3092\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u3001\u4eca\u5ea6\u306f Service \u540d\u306e\u307f\u3092\u8cea\u554f\u3055\u308c\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u96c6\u8a08\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u306e\u3067 \"aggregator\" \u3068\u540d\u4ed8\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002 \u3042\u306a\u305f\u306e Application \u8a2d\u5b9a(\u3053\u3053\u306b\u8907\u6570\u306e Service \u3084 Environment \u304c\u6240\u5c5e\u3057\u307e\u3059)\u306f\u3001AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u4e2d\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3042\u306a\u305f\u4ee5\u5916\u306e\u958b\u767a\u8005\u3082 \"vote\" \u30a2\u30d7\u30ea\u306e\u958b\u767a\u306b\u53c2\u52a0\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u4f8b\u3048\u3070\u3042\u306a\u305f\u304c\uff11\u3064\u306e Service \u958b\u767a\u306b\u53d6\u308a\u7d44\u3080\u4e00\u65b9\u3067\u3001\u30c1\u30fc\u30e0\u30e1\u30a4\u30c8\u306f\u5225\u306e Service \u958b\u767a\u3092\u9032\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Application \u306e\u4f5c\u6210 Attention \u65e2\u5b58\u306b\u4ed6\u306e\u76ee\u7684\u3067\u4f5c\u6210\u3057\u305f copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u5834\u5408\u3001Copilot \u304c\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ed8\u8fd1\u306b copilot/ \u3068\u3044\u3046\u540d\u524d\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u3053\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 Application \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3001 copilot init \u30b3\u30de\u30f3\u30c9\u3067\u884c\u3048\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u65b0\u3057\u3044 Application \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u304b\u3001\u3042\u308b\u3044\u306f\u65e2\u5b58\u306e Application \u3092\u5229\u7528\u3059\u308b\u304b\u3092\u8cea\u554f\u3055\u308c\u307e\u3059\u3002 copilot init Application \u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Copilot \u306f\u305d\u306e\u60c5\u5831\u3092\u3042\u306a\u305f\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306e SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002Application \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306b\u5229\u7528\u3057\u305f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u300cApplication \u30a2\u30ab\u30a6\u30f3\u30c8\u300d\u3068\u547c\u3073\u3001\u3053\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u4eba\u3067\u3042\u308c\u3070\u8ab0\u3067\u3082\u305d\u306e Application \u306e\u958b\u767a\u306b\u53c2\u52a0\u3067\u304d\u307e\u3059\u3002 Application \u306e\u914d\u4e0b\u306b\u4f5c\u3089\u308c\u308b AWS \u30ea\u30bd\u30fc\u30b9\u306b\u306f copilot-app \u3068\u3044\u3046 AWS \u30ea\u30bd\u30fc\u30b9\u30bf\u30b0 \u304c\u4ed8\u4e0e\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u5404\u30ea\u30bd\u30fc\u30b9\u304c\u3069\u306e Application \u306b\u6240\u5c5e\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u77e5\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002 Application \u306e\u540d\u524d\u306f\u305d\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306e\u5168\u3066\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u304a\u3044\u3066\u4e00\u610f\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u8ffd\u52a0\u306e Application \u8a2d\u5b9a copilot app init \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u7d30\u304b\u3044\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Application\u3001Service\u3001Environment \u306b\u3066\u4f5c\u6210\u3055\u308c\u308b AWS \u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3059\u308b AWS \u30ea\u30bd\u30fc\u30b9\u30bf\u30b0 \u3092\u5229\u7528\u3057\u305f\u8ffd\u52a0\u306e\u30bf\u30b0\u4ed8\u3051 \"Load Balanced Web Service\" \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5229\u7528\u6642\u306e\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u540d\u8a2d\u5b9a Application \u5185\u306b\u4f5c\u3089\u308c\u308b\u5168\u3066\u306e\u30ed\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u3001\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u65e2\u5b58\u306e IAM \u30dd\u30ea\u30b7\u30fc\u306e\u6307\u5b9a $ copilot app init \\ --domain my-awesome-app.aws \\ --resource-tags department = MyDept,team = MyTeam \\ --permissions-boundary my-pb-policy \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3 Copilot \u304c\u4f5c\u6210\u3059\u308b\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u306e\u307b\u3068\u3093\u3069\u306f\u7279\u5b9a\u306e Environment \u3084 Service \u306b\u5c5e\u3057\u307e\u3059\u304c\u3001Application \u5168\u4f53\u306b\u307e\u305f\u304c\u3063\u3066\u5229\u7528\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3082\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 ECR \u30ea\u30dd\u30b8\u30c8\u30ea Service \u3067\u5229\u7528\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u683c\u7d0d\u3059\u308b ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30ea\u30fc\u30b8\u30e7\u30f3\u5225\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002Application \u5185\u306e\u5404 Service \u306f\u305d\u308c\u305e\u308c\u5c02\u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u3054\u3068\u306b\u6301\u3061\u307e\u3059\u3002 \u4e0a\u56f3\u3067\u306f\u3001\u3042\u308b Application \u304c\uff13\u3064\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u305d\u308c\u305e\u308c Environment \u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5404\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u306f Application \u5185\u306e Service \u3068\u540c\u6570\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u4f5c\u3089\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u56f3\u306b\u304a\u3044\u3066\u306f ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u304c\uff11\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306b\uff13\u3064\u3042\u308a\u307e\u3059\u306e\u3067\u3001Service \u3082\uff13\u3064\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 \u65b0\u305f\u306a Service \u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001Copilot \u306f\u5229\u7528\u5bfe\u8c61\u306e\u5404\u30ea\u30fc\u30b8\u30e7\u30f3\u306b ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3042\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u306e\u969c\u5bb3\u767a\u751f\u304c\u5225\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3068\u3001\u3042\u308b\u3044\u306f\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u8de8\u3044\u3060\u30a4\u30e1\u30fc\u30b8\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u8ee2\u9001\u6599\u91d1\u306e\u767a\u751f\u3092\u907f\u3051\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3089\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3000Environment \u304c\u4f5c\u6210\u3055\u308c\u305f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u306f\u306a\u304f\u3001\u300cApplication \u30a2\u30ab\u30a6\u30f3\u30c8\u300d\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3042\u308f\u305b\u3066\u3001\u5404 Environment \u7528 AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u304b\u3089\u306e\u30a4\u30e1\u30fc\u30b8 pull \u3092\u8a31\u53ef\u3059\u308b IAM \u30dd\u30ea\u30b7\u30fc\u3082\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306e\u30ea\u30ea\u30fc\u30b9 Copilot \u306f Application \u5185\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u5168\u3066\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b KMS \u30ad\u30fc\u3068 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u306f CodePipeline \u304c\u30ea\u30fc\u30b8\u30e7\u30f3\u8de8\u304e\u3001\u3042\u308b\u3044\u306f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u8de8\u304e\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002Application \u5185\u306e\u5168\u3066\u306e Pipeline \u306f\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5171\u6709\u3057\u307e\u3059\u3002 ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u540c\u69d8\u3001\u3053\u308c\u3089\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3068 KMS \u30ad\u30fc\u306f\u540c\u4e00 AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u3001\u3042\u308b\u3044\u306f\u5225 AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306e\u5404 Environment \u304b\u3089\u6697\u53f7\u5316\u3055\u308c\u305f\u30c7\u30d7\u30ed\u30a4\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u3092\u8aad\u3080\u3053\u3068\u3092\u8a31\u53ef\u3059\u308b IAM \u30dd\u30ea\u30b7\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001CodePipeline \u304c\u30ea\u30fc\u30b8\u30e7\u30f3\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u8de8\u3044\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 Application \u306e\u4e2d\u8eab\u3092\u6398\u308a\u4e0b\u3052\u3066\u307f\u3088\u3046 Application \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001Copilot \u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u78ba\u8a8d\u306e\u624b\u6bb5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002 \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306b\u4f5c\u6210\u3055\u308c\u305f Application \u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u305f\u3044 \u73fe\u5728\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30fb\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306b\u3042\u308b\u5168\u3066\u306e Application \u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f copilot app ls \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002 $ copilot app ls vote ecs-kudos Application \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044 copilot app show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Application \u5185\u306e Service \u3084 Environment \u3092\u542b\u3093\u3060\u30b5\u30de\u30ea\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot app show About Name vote Version v1.1.0 URI vote-app.aws Environments Name AccountID Region ---- --------- ------ test 000000000000 us-east-1 Workloads Name Type Environments ---- ---- ------------ collector Load Balanced Web Service prod aggregator Backend Service test, prod Pipelines Name ----","title":"Applications"},{"location":"ja/docs/concepts/applications/#application","text":"Application \u306f\u3001Service\u3001Environment\u3001Pipeline \u3068\u3044\u3063\u305f\u6982\u5ff5\u3092\u53d6\u308a\u307e\u3068\u3081\u308b\u6982\u5ff5\u3067\u3059\u3002\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30b5\u30fc\u30d3\u30b9\uff11\u3064\u3067\u3059\u3079\u3066\u306e\u3053\u3068\u3092\u3084\u308b\u3082\u306e\u3067\u3042\u308b\u304b\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u96c6\u307e\u308a\u3067\u3042\u308b\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001Copilot \u306f Service \u3084\u305d\u308c\u3089\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b Environment \u3092\uff11\u3064\u306e Application \u3068\u3057\u3066\u53d6\u308a\u307e\u3068\u3081\u307e\u3059\u3002 \u4f8b\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u3053\u3053\u3067\u306f\u6295\u7968\u3092\u53d7\u3051\u4ed8\u3051\u3001\u7d50\u679c\u3092\u96c6\u8a08\u3059\u308b\u6295\u7968\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002 \u6295\u7968\u306e\u53d7\u3051\u4ed8\u3051\u3068\u7d50\u679c\u306e\u96c6\u8a08\u3068\u3044\u3046\uff12\u3064\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u6301\u3064\u6295\u7968\u30a2\u30d7\u30ea\u306f\u3001 copilot init \u30b3\u30de\u30f3\u30c9\uff12\u56de\u3067\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\u307e\u305a\u6700\u521d\u306b copilot init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u306e Service \u304c\u6240\u5c5e\u3059\u308b\u3053\u3068\u306b\u306a\u308b Application \u306e\u540d\u524d\u3092\u8cea\u554f\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u6295\u7968\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001Application \u3092 \"vote\" \u3001\u305d\u3057\u3066\u6295\u7968\u3092\u53d7\u3051\u4ed8\u3051\u308b Service \u3092 \"collector\" \u3068\u540d\u4ed8\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\uff12\u56de\u76ee\u306e init \u3067\u306f\u3001\u65e2\u5b58\u306e \"vote\" Application \u306b\u65b0\u3057\u3044 Service \u3092\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u3001\u4eca\u5ea6\u306f Service \u540d\u306e\u307f\u3092\u8cea\u554f\u3055\u308c\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u96c6\u8a08\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u306e\u3067 \"aggregator\" \u3068\u540d\u4ed8\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002 \u3042\u306a\u305f\u306e Application \u8a2d\u5b9a(\u3053\u3053\u306b\u8907\u6570\u306e Service \u3084 Environment \u304c\u6240\u5c5e\u3057\u307e\u3059)\u306f\u3001AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u4e2d\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3042\u306a\u305f\u4ee5\u5916\u306e\u958b\u767a\u8005\u3082 \"vote\" \u30a2\u30d7\u30ea\u306e\u958b\u767a\u306b\u53c2\u52a0\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u4f8b\u3048\u3070\u3042\u306a\u305f\u304c\uff11\u3064\u306e Service \u958b\u767a\u306b\u53d6\u308a\u7d44\u3080\u4e00\u65b9\u3067\u3001\u30c1\u30fc\u30e0\u30e1\u30a4\u30c8\u306f\u5225\u306e Service \u958b\u767a\u3092\u9032\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Application"},{"location":"ja/docs/concepts/applications/#application_1","text":"Attention \u65e2\u5b58\u306b\u4ed6\u306e\u76ee\u7684\u3067\u4f5c\u6210\u3057\u305f copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u5834\u5408\u3001Copilot \u304c\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ed8\u8fd1\u306b copilot/ \u3068\u3044\u3046\u540d\u524d\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u3053\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 Application \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3001 copilot init \u30b3\u30de\u30f3\u30c9\u3067\u884c\u3048\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u65b0\u3057\u3044 Application \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u304b\u3001\u3042\u308b\u3044\u306f\u65e2\u5b58\u306e Application \u3092\u5229\u7528\u3059\u308b\u304b\u3092\u8cea\u554f\u3055\u308c\u307e\u3059\u3002 copilot init Application \u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Copilot \u306f\u305d\u306e\u60c5\u5831\u3092\u3042\u306a\u305f\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306e SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002Application \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306b\u5229\u7528\u3057\u305f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u300cApplication \u30a2\u30ab\u30a6\u30f3\u30c8\u300d\u3068\u547c\u3073\u3001\u3053\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u4eba\u3067\u3042\u308c\u3070\u8ab0\u3067\u3082\u305d\u306e Application \u306e\u958b\u767a\u306b\u53c2\u52a0\u3067\u304d\u307e\u3059\u3002 Application \u306e\u914d\u4e0b\u306b\u4f5c\u3089\u308c\u308b AWS \u30ea\u30bd\u30fc\u30b9\u306b\u306f copilot-app \u3068\u3044\u3046 AWS \u30ea\u30bd\u30fc\u30b9\u30bf\u30b0 \u304c\u4ed8\u4e0e\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u5404\u30ea\u30bd\u30fc\u30b9\u304c\u3069\u306e Application \u306b\u6240\u5c5e\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u77e5\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002 Application \u306e\u540d\u524d\u306f\u305d\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306e\u5168\u3066\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u304a\u3044\u3066\u4e00\u610f\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"Application \u306e\u4f5c\u6210"},{"location":"ja/docs/concepts/applications/#application_2","text":"copilot app init \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u7d30\u304b\u3044\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Application\u3001Service\u3001Environment \u306b\u3066\u4f5c\u6210\u3055\u308c\u308b AWS \u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3059\u308b AWS \u30ea\u30bd\u30fc\u30b9\u30bf\u30b0 \u3092\u5229\u7528\u3057\u305f\u8ffd\u52a0\u306e\u30bf\u30b0\u4ed8\u3051 \"Load Balanced Web Service\" \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5229\u7528\u6642\u306e\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u540d\u8a2d\u5b9a Application \u5185\u306b\u4f5c\u3089\u308c\u308b\u5168\u3066\u306e\u30ed\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u3001\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30d0\u30a6\u30f3\u30c0\u30ea\u30fc\u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u65e2\u5b58\u306e IAM \u30dd\u30ea\u30b7\u30fc\u306e\u6307\u5b9a $ copilot app init \\ --domain my-awesome-app.aws \\ --resource-tags department = MyDept,team = MyTeam \\ --permissions-boundary my-pb-policy","title":"\u8ffd\u52a0\u306e Application \u8a2d\u5b9a"},{"location":"ja/docs/concepts/applications/#_1","text":"Copilot \u304c\u4f5c\u6210\u3059\u308b\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u306e\u307b\u3068\u3093\u3069\u306f\u7279\u5b9a\u306e Environment \u3084 Service \u306b\u5c5e\u3057\u307e\u3059\u304c\u3001Application \u5168\u4f53\u306b\u307e\u305f\u304c\u3063\u3066\u5229\u7528\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3082\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002","title":"\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3"},{"location":"ja/docs/concepts/applications/#ecr","text":"Service \u3067\u5229\u7528\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u683c\u7d0d\u3059\u308b ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30ea\u30fc\u30b8\u30e7\u30f3\u5225\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002Application \u5185\u306e\u5404 Service \u306f\u305d\u308c\u305e\u308c\u5c02\u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u3054\u3068\u306b\u6301\u3061\u307e\u3059\u3002 \u4e0a\u56f3\u3067\u306f\u3001\u3042\u308b Application \u304c\uff13\u3064\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u305d\u308c\u305e\u308c Environment \u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5404\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u306f Application \u5185\u306e Service \u3068\u540c\u6570\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u4f5c\u3089\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u56f3\u306b\u304a\u3044\u3066\u306f ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u304c\uff11\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306b\uff13\u3064\u3042\u308a\u307e\u3059\u306e\u3067\u3001Service \u3082\uff13\u3064\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002 \u65b0\u305f\u306a Service \u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001Copilot \u306f\u5229\u7528\u5bfe\u8c61\u306e\u5404\u30ea\u30fc\u30b8\u30e7\u30f3\u306b ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3042\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u306e\u969c\u5bb3\u767a\u751f\u304c\u5225\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3068\u3001\u3042\u308b\u3044\u306f\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u8de8\u3044\u3060\u30a4\u30e1\u30fc\u30b8\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u8ee2\u9001\u6599\u91d1\u306e\u767a\u751f\u3092\u907f\u3051\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3089\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3000Environment \u304c\u4f5c\u6210\u3055\u308c\u305f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u306f\u306a\u304f\u3001\u300cApplication \u30a2\u30ab\u30a6\u30f3\u30c8\u300d\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3042\u308f\u305b\u3066\u3001\u5404 Environment \u7528 AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u304b\u3089\u306e\u30a4\u30e1\u30fc\u30b8 pull \u3092\u8a31\u53ef\u3059\u308b IAM \u30dd\u30ea\u30b7\u30fc\u3082\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002","title":"ECR \u30ea\u30dd\u30b8\u30c8\u30ea"},{"location":"ja/docs/concepts/applications/#_2","text":"Copilot \u306f Application \u5185\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u5168\u3066\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b KMS \u30ad\u30fc\u3068 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u306f CodePipeline \u304c\u30ea\u30fc\u30b8\u30e7\u30f3\u8de8\u304e\u3001\u3042\u308b\u3044\u306f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u8de8\u304e\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u307e\u3059\u3002Application \u5185\u306e\u5168\u3066\u306e Pipeline \u306f\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5171\u6709\u3057\u307e\u3059\u3002 ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u540c\u69d8\u3001\u3053\u308c\u3089\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3068 KMS \u30ad\u30fc\u306f\u540c\u4e00 AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u3001\u3042\u308b\u3044\u306f\u5225 AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306e\u5404 Environment \u304b\u3089\u6697\u53f7\u5316\u3055\u308c\u305f\u30c7\u30d7\u30ed\u30a4\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u3092\u8aad\u3080\u3053\u3068\u3092\u8a31\u53ef\u3059\u308b IAM \u30dd\u30ea\u30b7\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001CodePipeline \u304c\u30ea\u30fc\u30b8\u30e7\u30f3\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u8de8\u3044\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","title":"\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306e\u30ea\u30ea\u30fc\u30b9"},{"location":"ja/docs/concepts/applications/#application_3","text":"Application \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001Copilot \u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u78ba\u8a8d\u306e\u624b\u6bb5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002","title":"Application \u306e\u4e2d\u8eab\u3092\u6398\u308a\u4e0b\u3052\u3066\u307f\u3088\u3046"},{"location":"ja/docs/concepts/applications/#application_4","text":"\u73fe\u5728\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30fb\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306b\u3042\u308b\u5168\u3066\u306e Application \u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f copilot app ls \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002 $ copilot app ls vote ecs-kudos","title":"\u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u306b\u4f5c\u6210\u3055\u308c\u305f Application \u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/concepts/applications/#application_5","text":"copilot app show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Application \u5185\u306e Service \u3084 Environment \u3092\u542b\u3093\u3060\u30b5\u30de\u30ea\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002 $ copilot app show About Name vote Version v1.1.0 URI vote-app.aws Environments Name AccountID Region ---- --------- ------ test 000000000000 us-east-1 Workloads Name Type Environments ---- ---- ------------ collector Load Balanced Web Service prod aggregator Backend Service test, prod Pipelines Name ----","title":"Application \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/concepts/environments/","text":"Environment \u306f\u3058\u3081\u3066 copilot init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3042\u308f\u305b\u3066 test Environment \u3092\u4f5c\u6210\u3059\u308b\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002\u3053\u306e test Environment \u306b\u306f\u30bb\u30ad\u30e5\u30a2\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(e.g. VPC\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7)\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a AWS \u30ea\u30bd\u30fc\u30b9\u3084\u3001\u8907\u6570\u306e Service \u3067\u306e\u5171\u6709\u3092\u76ee\u7684\u3068\u3057\u305f Application Load Balancer \u3084 ECS \u30af\u30e9\u30b9\u30bf\u306e\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3082\u542b\u307e\u308c\u307e\u3059\u3002Service \u3092\u3053\u306e test Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001\u3053\u306e Service \u306f test Environment \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002Application \u306f\u8907\u6570\u306e Environment \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u3001\u305d\u308c\u305e\u308c\u304c\u4e92\u3044\u306b\u72ec\u7acb\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u305d\u306e\u4ed6\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u3092\u6301\u3061\u307e\u3059\u3002 \u3042\u306a\u305f\u306e Copilot \u306e\u5229\u7528\u958b\u59cb\u306b\u3042\u308f\u305b\u3066 Copilot \u306f test Environment (\u30c6\u30b9\u30c8\u74b0\u5883)\u3092\u4f5c\u6210\u3057\u307e\u3059\u304c\u3001\u3053\u308c\u3068\u306f\u7570\u306a\u308b Environment\u3001\u4f8b\u3048\u3070 production Environment (\u672c\u756a\u74b0\u5883)\u3092\u65b0\u305f\u306b\u4f5c\u308b\u3068\u3044\u3046\u306e\u306f\u3054\u304f\u4e00\u822c\u7684\u306a\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3053\u306e production Environment \u306f test Environment \u3068\u306f\u5b8c\u5168\u306b\u72ec\u7acb\u3057\u305f\u3082\u306e\u3067\u3001 production Environment \u7528\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30bf\u30c3\u30af\u3084\u305d\u3053\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b Service \u3092\u6301\u3061\u307e\u3059\u3002\u72ec\u7acb\u3057\u305f\u30c6\u30b9\u30c8\u74b0\u5883\u3068\u672c\u756a\u74b0\u5883\u3092\u6301\u3064\u3053\u3068\u3067\u3001\u307e\u305a\u306f\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u554f\u984c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u4e0a\u3067\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0b\u306b\u8f09\u305b\u305f\u56f3\u306f\u3001 API \u3068 Backend \u3068\u3044\u3046\uff12\u3064\u306e Service \u3092\u6301\u3064 MyApp \u3068\u3044\u3046 Application \u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\uff12\u3064\u306e Service \u306f test \u3068 production \u3068\u3044\u3046\uff12\u3064\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u307e\u3059\u3002 test Environment \u3067\u306f\u4e21\u65b9\u306e Service \u304c\uff11\u3064\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u4e00\u65b9\u3067\u3001 production Environment \u3067\u306f\u305d\u308c\u305e\u308c\u304c\uff13\u3064\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u306e\u3088\u3046\u306b\u3001Service \u306f\u30c7\u30d7\u30ed\u30a4\u5148\u306e Environment \u3054\u3068\u306b\u7570\u306a\u308b\u8a2d\u5b9a\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f \u74b0\u5883\u5909\u6570\u306e\u5229\u7528\u30ac\u30a4\u30c9 \u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Environment \u306e\u4f5c\u6210 Application \u5185\u306b\u65b0\u3057\u3044 Environment \u3092\u4f5c\u308b\u306b\u306f\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3066 copilot env init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4f5c\u6210\u3059\u308b Environment \u306e\u540d\u524d\u3001\u305d\u3057\u3066\u3053\u306e Environment \u306e\u4f5c\u6210\u306b\u5229\u7528\u3059\u308b AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092 Copilot \u304c\u5c0b\u306d\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306f AWS \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3067\u3001\u7279\u5b9a\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u3068\u7d10\u3065\u3044\u305f\u8a2d\u5b9a\u3067\u3059\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u3076\u3068\u3001\u305d\u306e\u65b0\u3057\u3044 Environment \u306f\u9078\u629e\u3055\u308c\u305f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3068\u7d10\u3065\u3044\u305f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 $ copilot env init copilot env init \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u5f8c\u306f\u3001Copilot \u304c 2 \u3064\u306e IAM \u30ed\u30fc\u30eb\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u69d8\u5b50\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u305d\u306e 2 \u3064\u306e\u30ed\u30fc\u30eb\u306f Environment \u306e\u66f4\u65b0\u3068\u7ba1\u7406\u306b\u5fc5\u8981\u306a\u3082\u306e\u3067\u3059\u3002Environment \u304c Application \u3068\u7570\u306a\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u4f5c\u6210\u3055\u308c\u305f\u5834\u5408\u3001Envrionment \u306f Application \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30ea\u30f3\u30af\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u4eca\u5f8c Copilot \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u304c\u3053\u306e Environment \u30a2\u30ab\u30a6\u30f3\u30c8\u305d\u306e\u3082\u306e\u306b\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u306a\u304f\u3068\u3082 Application \u306b\u30ea\u30f3\u30af\u3055\u308c\u305f Environment \u3068\u3057\u3066\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Copilot \u306f copilot/environments/[env name]/manifest.yml \u306b Environment Manifest \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Environment \u306e\u30c7\u30d7\u30ed\u30a4 \u30c7\u30d7\u30ed\u30a4\u3092\u3059\u308b\u524d\u306b\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u3001 Environment Manifest \u3092\u4fee\u6b63\u3057\u3066 Environment \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 $ copilot env deploy \u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u306f\u3001 Copilot \u306f Environment \u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u30ea\u30bd\u30fc\u30b9\u3001\u4f8b\u3048\u3070 ECS \u30af\u30e9\u30b9\u30bf\u30fc\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 DNS \u540d\u524d\u7a7a\u9593\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u5f8c\u306f\u3001Envrionment Manifest \u3092\u4fee\u6b63\u3057\u3001\u518d\u3073 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001\u518d\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002 Service \u306e\u30c7\u30d7\u30ed\u30a4 \u65b0\u3057\u3044 Environment \u3092\u4f5c\u3063\u305f\u6642\u70b9\u3067\u306f\u307e\u3060\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Service \u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044 Service \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089 copilot deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3069\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u306e\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002 Environment \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3 VPC \u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30ea\u30bd\u30fc\u30b9 \u5404 Environment \u306f\u305d\u308c\u305e\u308c\u304c\u30de\u30eb\u30c1 AZ \u69cb\u6210\u306e VPC \u3092\u6301\u3061\u307e\u3059\u3002VPC \u306f Environment \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u5883\u754c\u3067\u3042\u308a\u3001VPC \u5185\u306b\u5165\u3063\u3066\u304f\u308b\u3042\u308b\u3044\u306f\u51fa\u3066\u3044\u304f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8a31\u53ef\u3059\u308b\u3001\u307e\u305f\u306f\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059\u3002Copilot \u306f VPC \u3092\uff12\u3064\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002 AWS best practices \u306b\u5f93\u3044\u3001\u5404 AZ \u306f\u30d1\u30d6\u30ea\u30c3\u30af\u3068\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Service \u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u305f\u3081\u306b\u3001Environment \u5185\u306e\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u306e\u307f\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u307e\u3059\u3002ECS \u30bf\u30b9\u30af\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u3001NAT \u30b2\u30fc\u30c8\u30a6\u30a8\u30a4\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3053\u3068\u3067\u30b3\u30b9\u30c8\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u914d\u7f6e\u306f Manifest \u5185\u306e network.vpc.placement \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3068 DNS Load Balanced Web Service \u307e\u305f\u306f\u3001Manifest \u306b http \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a18\u8f09\u3057\u305f Backend Service \u3092\u4f5c\u308b\u3068\u3001Copilot \u306f Environment \u5185\u306e\u8ca0\u8377\u5206\u6563\u3059\u308b Service \u3067\u5171\u6709\u3055\u308c\u308b Application Load Balancer \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Load Balanced Web Service \u306e ALB \u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u3002\u305d\u308c\u306b\u5bfe\u3057\u3066\u3001Backend Service \u306e ALB \u306f\u5185\u90e8\u5411\u3051\u3067\u3059\u3002Load Balancer \u306f VPC \u5185\u306e\u4ed6\u306e Copilot Service \u3068\u901a\u4fe1\u53ef\u80fd\u3067\u3059\u3002 \u6240\u6709\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u540d\u3092 Route 53 \u306b\u767b\u9332\u3059\u308b\u3088\u3046\u3001Application \u4f5c\u6210\u6642\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u540d\u306e\u5229\u7528\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001Copilot \u306f\u5404 Environment \u306e\u4f5c\u6210\u6642\u306b environment-name.app-name.your-domain.com \u306e\u3088\u3046\u306a\u5f62\u3067\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3092\u767b\u9332\u3057\u3001ACM \u3092\u901a\u3057\u3066\u767a\u884c\u3057\u305f\u8a3c\u660e\u66f8\u3092 Application Load Balancer \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a Service \u304c HTTPS \u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Manifest \u3067 http \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u8a2d\u5b9a\u3055\u308c\u305f Backend Service \u304c Environment \u5185\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u5834\u5408\u3001\u5185\u90e8 ALB \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002HTTPS \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001 copilot env init \u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u3001 --import-cert-arns \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u3001 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u5185\u90e8 ALB \u306b\u95a2\u3059\u308b\u8a73\u7d30\u306f \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3059\u3067\u306b VPC \u5185\u306b ALB \u304c\u3042\u308a\u3001Copilot \u304c ALB \u3092\u4f5c\u6210\u3059\u308b\u4ee3\u308f\u308a\u306b\u65e2\u5b58\u306e ALB \u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001Environment \u3078\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b\u3001Load Balanced Web Service (\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5411\u3051 ALB) \u307e\u305f\u306f\u3001Backend Service (\u5185\u90e8\u5411\u3051 ALB) \u306e Manifest \u3067\u65e2\u5b58\u306e ALB \u306e\u540d\u524d\u307e\u305f\u306f ARN \u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 http : path : '/' alb : [ name or ARN ] \u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f ALB \u306f\u3001\u3059\u3079\u3066\u306e Load Balanced Web Service \u9593\u3067\u5171\u6709\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u65e2\u5b58\u306e ALB \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f Service \u306b\u306e\u307f\u95a2\u9023\u4ed8\u3051\u3089\u308c\u307e\u3059\u3002 Environment \u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u65e2\u5b58\u306e Environment \u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3001\u30b3\u30de\u30f3\u30c9\u3067\u30d5\u30e9\u30b0\u3092\u4f7f\u3046\u3001 Environment Manifest \u3092\u5909\u66f4\u3059\u308b\u3068\u3044\u3063\u305f\u65b9\u6cd5\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3082\u3057\u3001\u73fe\u5728\u8a2d\u5b9a\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3088\u308a\u3082\u591a\u304f\u306e\u7a2e\u985e\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u304a\u6c17\u8efd\u306b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u6dfb\u3048\u305f GitHub \u30a4\u30b7\u30e5\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff01 \u3082\u3063\u3068\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\u3001 Environment \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b \u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Environment \u306e\u4e2d\u8eab\u3092\u6398\u308a\u4e0b\u3052\u3066\u307f\u3088\u3046 Environment \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001Copilot \u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u78ba\u8a8d\u306e\u624b\u6bb5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002 Application \u5185\u306b\u3042\u308b Environment \u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u305f\u3044 Application \u5185\u306b\u3042\u308b\u5168\u3066\u306e Environment \u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f copilot env ls \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002 $ copilot env ls test production Environment \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044 copilot env show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Environment \u306e\u30b5\u30de\u30ea\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f test Environment \u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b\u51fa\u529b\u306e\u4f8b\u3067\u3059\u304c\u3001\u3053\u306e Environment \u304c\u4f5c\u6210\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u3001\u3042\u308b\u3044\u306f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Service \u3084 Environment \u5185\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u4ed8\u4e0e\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u60c5\u5831\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001 --resources \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e Environment \u306b\u7d10\u3065\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ copilot env show --name test About Name test Region us-west-2 Account ID 693652174720 Workloads Name Type ---- ---- api Load Balanced Web Service backend Backend Service Tags Key Value --- ----- copilot-application my-app copilot-environment test","title":"Environments"},{"location":"ja/docs/concepts/environments/#environment","text":"\u306f\u3058\u3081\u3066 copilot init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3042\u308f\u305b\u3066 test Environment \u3092\u4f5c\u6210\u3059\u308b\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002\u3053\u306e test Environment \u306b\u306f\u30bb\u30ad\u30e5\u30a2\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(e.g. VPC\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7)\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a AWS \u30ea\u30bd\u30fc\u30b9\u3084\u3001\u8907\u6570\u306e Service \u3067\u306e\u5171\u6709\u3092\u76ee\u7684\u3068\u3057\u305f Application Load Balancer \u3084 ECS \u30af\u30e9\u30b9\u30bf\u306e\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3082\u542b\u307e\u308c\u307e\u3059\u3002Service \u3092\u3053\u306e test Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001\u3053\u306e Service \u306f test Environment \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002Application \u306f\u8907\u6570\u306e Environment \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u3001\u305d\u308c\u305e\u308c\u304c\u4e92\u3044\u306b\u72ec\u7acb\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u305d\u306e\u4ed6\u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u3092\u6301\u3061\u307e\u3059\u3002 \u3042\u306a\u305f\u306e Copilot \u306e\u5229\u7528\u958b\u59cb\u306b\u3042\u308f\u305b\u3066 Copilot \u306f test Environment (\u30c6\u30b9\u30c8\u74b0\u5883)\u3092\u4f5c\u6210\u3057\u307e\u3059\u304c\u3001\u3053\u308c\u3068\u306f\u7570\u306a\u308b Environment\u3001\u4f8b\u3048\u3070 production Environment (\u672c\u756a\u74b0\u5883)\u3092\u65b0\u305f\u306b\u4f5c\u308b\u3068\u3044\u3046\u306e\u306f\u3054\u304f\u4e00\u822c\u7684\u306a\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u3053\u306e production Environment \u306f test Environment \u3068\u306f\u5b8c\u5168\u306b\u72ec\u7acb\u3057\u305f\u3082\u306e\u3067\u3001 production Environment \u7528\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30bf\u30c3\u30af\u3084\u305d\u3053\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b Service \u3092\u6301\u3061\u307e\u3059\u3002\u72ec\u7acb\u3057\u305f\u30c6\u30b9\u30c8\u74b0\u5883\u3068\u672c\u756a\u74b0\u5883\u3092\u6301\u3064\u3053\u3068\u3067\u3001\u307e\u305a\u306f\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u554f\u984c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u4e0a\u3067\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u4e0b\u306b\u8f09\u305b\u305f\u56f3\u306f\u3001 API \u3068 Backend \u3068\u3044\u3046\uff12\u3064\u306e Service \u3092\u6301\u3064 MyApp \u3068\u3044\u3046 Application \u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\uff12\u3064\u306e Service \u306f test \u3068 production \u3068\u3044\u3046\uff12\u3064\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u307e\u3059\u3002 test Environment \u3067\u306f\u4e21\u65b9\u306e Service \u304c\uff11\u3064\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u4e00\u65b9\u3067\u3001 production Environment \u3067\u306f\u305d\u308c\u305e\u308c\u304c\uff13\u3064\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u306e\u3088\u3046\u306b\u3001Service \u306f\u30c7\u30d7\u30ed\u30a4\u5148\u306e Environment \u3054\u3068\u306b\u7570\u306a\u308b\u8a2d\u5b9a\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f \u74b0\u5883\u5909\u6570\u306e\u5229\u7528\u30ac\u30a4\u30c9 \u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Environment"},{"location":"ja/docs/concepts/environments/#environment_1","text":"Application \u5185\u306b\u65b0\u3057\u3044 Environment \u3092\u4f5c\u308b\u306b\u306f\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3066 copilot env init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4f5c\u6210\u3059\u308b Environment \u306e\u540d\u524d\u3001\u305d\u3057\u3066\u3053\u306e Environment \u306e\u4f5c\u6210\u306b\u5229\u7528\u3059\u308b AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092 Copilot \u304c\u5c0b\u306d\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306f AWS \u540d\u524d\u4ed8\u304d\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb \u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3067\u3001\u7279\u5b9a\u306e AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u3068\u7d10\u3065\u3044\u305f\u8a2d\u5b9a\u3067\u3059\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u3076\u3068\u3001\u305d\u306e\u65b0\u3057\u3044 Environment \u306f\u9078\u629e\u3055\u308c\u305f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3068\u7d10\u3065\u3044\u305f AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 $ copilot env init copilot env init \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u5f8c\u306f\u3001Copilot \u304c 2 \u3064\u306e IAM \u30ed\u30fc\u30eb\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u69d8\u5b50\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u305d\u306e 2 \u3064\u306e\u30ed\u30fc\u30eb\u306f Environment \u306e\u66f4\u65b0\u3068\u7ba1\u7406\u306b\u5fc5\u8981\u306a\u3082\u306e\u3067\u3059\u3002Environment \u304c Application \u3068\u7570\u306a\u308b AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u4f5c\u6210\u3055\u308c\u305f\u5834\u5408\u3001Envrionment \u306f Application \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u30ea\u30f3\u30af\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u4eca\u5f8c Copilot \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u304c\u3053\u306e Environment \u30a2\u30ab\u30a6\u30f3\u30c8\u305d\u306e\u3082\u306e\u306b\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u306a\u304f\u3068\u3082 Application \u306b\u30ea\u30f3\u30af\u3055\u308c\u305f Environment \u3068\u3057\u3066\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Copilot \u306f copilot/environments/[env name]/manifest.yml \u306b Environment Manifest \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002","title":"Environment \u306e\u4f5c\u6210"},{"location":"ja/docs/concepts/environments/#environment_2","text":"\u30c7\u30d7\u30ed\u30a4\u3092\u3059\u308b\u524d\u306b\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u3001 Environment Manifest \u3092\u4fee\u6b63\u3057\u3066 Environment \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 $ copilot env deploy \u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u306f\u3001 Copilot \u306f Environment \u306e\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\u30ea\u30bd\u30fc\u30b9\u3001\u4f8b\u3048\u3070 ECS \u30af\u30e9\u30b9\u30bf\u30fc\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 DNS \u540d\u524d\u7a7a\u9593\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u5f8c\u306f\u3001Envrionment Manifest \u3092\u4fee\u6b63\u3057\u3001\u518d\u3073 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001\u518d\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002","title":"Environment \u306e\u30c7\u30d7\u30ed\u30a4"},{"location":"ja/docs/concepts/environments/#service","text":"\u65b0\u3057\u3044 Environment \u3092\u4f5c\u3063\u305f\u6642\u70b9\u3067\u306f\u307e\u3060\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Service \u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044 Service \u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089 copilot deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3069\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u306e\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002","title":"Service \u306e\u30c7\u30d7\u30ed\u30a4"},{"location":"ja/docs/concepts/environments/#environment_3","text":"","title":"Environment \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3"},{"location":"ja/docs/concepts/environments/#vpc","text":"\u5404 Environment \u306f\u305d\u308c\u305e\u308c\u304c\u30de\u30eb\u30c1 AZ \u69cb\u6210\u306e VPC \u3092\u6301\u3061\u307e\u3059\u3002VPC \u306f Environment \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u5883\u754c\u3067\u3042\u308a\u3001VPC \u5185\u306b\u5165\u3063\u3066\u304f\u308b\u3042\u308b\u3044\u306f\u51fa\u3066\u3044\u304f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8a31\u53ef\u3059\u308b\u3001\u307e\u305f\u306f\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059\u3002Copilot \u306f VPC \u3092\uff12\u3064\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002 AWS best practices \u306b\u5f93\u3044\u3001\u5404 AZ \u306f\u30d1\u30d6\u30ea\u30c3\u30af\u3068\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Service \u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u305f\u3081\u306b\u3001Environment \u5185\u306e\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u306e\u307f\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u307e\u3059\u3002ECS \u30bf\u30b9\u30af\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u3001NAT \u30b2\u30fc\u30c8\u30a6\u30a8\u30a4\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u3053\u3068\u3067\u30b3\u30b9\u30c8\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u914d\u7f6e\u306f Manifest \u5185\u306e network.vpc.placement \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002","title":"VPC \u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30ea\u30bd\u30fc\u30b9"},{"location":"ja/docs/concepts/environments/#dns","text":"Load Balanced Web Service \u307e\u305f\u306f\u3001Manifest \u306b http \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a18\u8f09\u3057\u305f Backend Service \u3092\u4f5c\u308b\u3068\u3001Copilot \u306f Environment \u5185\u306e\u8ca0\u8377\u5206\u6563\u3059\u308b Service \u3067\u5171\u6709\u3055\u308c\u308b Application Load Balancer \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Load Balanced Web Service \u306e ALB \u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u3002\u305d\u308c\u306b\u5bfe\u3057\u3066\u3001Backend Service \u306e ALB \u306f\u5185\u90e8\u5411\u3051\u3067\u3059\u3002Load Balancer \u306f VPC \u5185\u306e\u4ed6\u306e Copilot Service \u3068\u901a\u4fe1\u53ef\u80fd\u3067\u3059\u3002 \u6240\u6709\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u540d\u3092 Route 53 \u306b\u767b\u9332\u3059\u308b\u3088\u3046\u3001Application \u4f5c\u6210\u6642\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u540d\u306e\u5229\u7528\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001Copilot \u306f\u5404 Environment \u306e\u4f5c\u6210\u6642\u306b environment-name.app-name.your-domain.com \u306e\u3088\u3046\u306a\u5f62\u3067\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3092\u767b\u9332\u3057\u3001ACM \u3092\u901a\u3057\u3066\u767a\u884c\u3057\u305f\u8a3c\u660e\u66f8\u3092 Application Load Balancer \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a Service \u304c HTTPS \u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Manifest \u3067 http \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u8a2d\u5b9a\u3055\u308c\u305f Backend Service \u304c Environment \u5185\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u5834\u5408\u3001\u5185\u90e8 ALB \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002HTTPS \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001 copilot env init \u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u3001 --import-cert-arns \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u3001 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u5185\u90e8 ALB \u306b\u95a2\u3059\u308b\u8a73\u7d30\u306f \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3059\u3067\u306b VPC \u5185\u306b ALB \u304c\u3042\u308a\u3001Copilot \u304c ALB \u3092\u4f5c\u6210\u3059\u308b\u4ee3\u308f\u308a\u306b\u65e2\u5b58\u306e ALB \u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001Environment \u3078\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b\u3001Load Balanced Web Service (\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5411\u3051 ALB) \u307e\u305f\u306f\u3001Backend Service (\u5185\u90e8\u5411\u3051 ALB) \u306e Manifest \u3067\u65e2\u5b58\u306e ALB \u306e\u540d\u524d\u307e\u305f\u306f ARN \u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 http : path : '/' alb : [ name or ARN ] \u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f ALB \u306f\u3001\u3059\u3079\u3066\u306e Load Balanced Web Service \u9593\u3067\u5171\u6709\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u65e2\u5b58\u306e ALB \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f Service \u306b\u306e\u307f\u95a2\u9023\u4ed8\u3051\u3089\u308c\u307e\u3059\u3002","title":"\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3068 DNS"},{"location":"ja/docs/concepts/environments/#environment_4","text":"\u65e2\u5b58\u306e Environment \u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3001\u30b3\u30de\u30f3\u30c9\u3067\u30d5\u30e9\u30b0\u3092\u4f7f\u3046\u3001 Environment Manifest \u3092\u5909\u66f4\u3059\u308b\u3068\u3044\u3063\u305f\u65b9\u6cd5\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3082\u3057\u3001\u73fe\u5728\u8a2d\u5b9a\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3088\u308a\u3082\u591a\u304f\u306e\u7a2e\u985e\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u304a\u6c17\u8efd\u306b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u6dfb\u3048\u305f GitHub \u30a4\u30b7\u30e5\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff01 \u3082\u3063\u3068\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\u3001 Environment \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b \u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Environment \u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"ja/docs/concepts/environments/#environment_5","text":"Environment \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001Copilot \u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u78ba\u8a8d\u306e\u624b\u6bb5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002","title":"Environment \u306e\u4e2d\u8eab\u3092\u6398\u308a\u4e0b\u3052\u3066\u307f\u3088\u3046"},{"location":"ja/docs/concepts/environments/#application-environment","text":"Application \u5185\u306b\u3042\u308b\u5168\u3066\u306e Environment \u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f copilot env ls \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002 $ copilot env ls test production","title":"Application \u5185\u306b\u3042\u308b Environment \u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/concepts/environments/#environment_6","text":"copilot env show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Environment \u306e\u30b5\u30de\u30ea\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f test Environment \u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b\u51fa\u529b\u306e\u4f8b\u3067\u3059\u304c\u3001\u3053\u306e Environment \u304c\u4f5c\u6210\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u30ea\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u3001\u3042\u308b\u3044\u306f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Service \u3084 Environment \u5185\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u4ed8\u4e0e\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u30bf\u30b0\u60c5\u5831\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3055\u3089\u306b\u3001 --resources \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e Environment \u306b\u7d10\u3065\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ copilot env show --name test About Name test Region us-west-2 Account ID 693652174720 Workloads Name Type ---- ---- api Load Balanced Web Service backend Backend Service Tags Key Value --- ----- copilot-application my-app copilot-environment test","title":"Environment \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/concepts/jobs/","text":"Job Job \u306f\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u8d77\u52d5\u3055\u308c\u308b Amazon ECS \u30bf\u30b9\u30af\u3092\u8868\u3059\u6982\u5ff5\u3067\u3059\u3002Copilot \u306f\u73fe\u6642\u70b9\u3067\u306f \"Scheduled Jobs\" (\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3055\u308c\u308b Job)\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u56fa\u5b9a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u3001\u3042\u308b\u3044\u306f\u9593\u9694\u3092\u6307\u5b9a\u3057\u3066\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002 Job \u306e\u4f5c\u6210 Job \u3092\u4f5c\u6210\u3059\u308b\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f Dockerfile \u304c\u7f6e\u304b\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067 init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002 $ copilot init Job \u306e\u3069\u306e Application \u306b\u6240\u5c5e\u3055\u305b\u308b\u304b\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f\u4f5c\u6210\u3057\u305f\u3044 Job \u306e \u30bf\u30a4\u30d7 \u3092\u5c0b\u306d\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u6307\u5b9a\u53ef\u80fd\u306a\u30bf\u30a4\u30d7\u306f \"Scheduled Job\" \u306e\u307f\u3067\u3059\u3002 Manifest \u3068\u8a2d\u5b9a copilot init \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u304c\u5b8c\u4e86\u3059\u308b\u3068\u3001 manifest.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c copilot/[job name]/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 Scheduled Job \u306e Manifest \u306f\u30b7\u30f3\u30d7\u30eb\u306a\u5ba3\u8a00\u7684\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u306e\u4e00\u822c\u7684\u306a\u5171\u901a\u8a2d\u5b9a\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u3044\u3064 Job \u3092\u5b9f\u884c\u3057\u305f\u3044\u306e\u304b\u3001\u5272\u308a\u5f53\u3066\u308b\u30ea\u30bd\u30fc\u30b9\u30b5\u30a4\u30ba\u3001\u51e6\u7406\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u3084\u5931\u6557\u6642\u306b\u4f55\u56de\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3092\u8a66\u307f\u308b\u304b\u3068\u3044\u3063\u305f\u3053\u3068\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Job \u306e\u30c7\u30d7\u30ed\u30a4 \u8981\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u305f\u3089\u3001deploy \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u305d\u308c\u3089\u306e\u5909\u66f4\u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002 $ copilot deploy \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u7d9a\u3051\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f5c\u696d\u304c\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9 Job \u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u5909\u63db \u8ffd\u52a0\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0 \u30c7\u30d7\u30ed\u30a4 Job \u306b\u95a2\u9023\u3059\u308b\u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3 \u65b0\u3057\u3044 Job \u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3001\u3042\u308b\u3044\u306f\u4f55\u3089\u304b\u306e\u7406\u7531\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3001 job run \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot job run Job \u3092\u524a\u9664\u305b\u305a\u3001\u4e00\u6642\u7684\u306b Job \u3092\u7121\u52b9\u5316\u3057\u305f\u3044\u5834\u5408\u3001 Manifest \u5185\u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092 none \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 on : schedule : \"none\" \u8a2d\u5b9a\u3057\u305f Job \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8868\u793a\u3057\u305f\u3044\u5834\u5408\u3001 job package \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot job package Job \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044 Copilot \u3067\u306f\u5185\u90e8\u7684\u306b CloudFormation \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u4f5c\u6210\u3055\u308c\u308b\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306f Copilot \u306b\u3088\u3063\u3066\u30bf\u30b0\u4ed8\u3051\u3055\u308c\u3066\u3044\u307e\u3059\u3002\"Scheduled Jobs\" \u306b\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u3001\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3001\u30bf\u30b9\u30af\u5b9f\u884c\u30ed\u30fc\u30eb\u3001\u30bf\u30b9\u30af\u306e\u51e6\u7406\u304c\u5931\u6557\u3057\u305f\u969b\u306b\u30ea\u30c8\u30e9\u30a4\u3092\u53ef\u80fd\u306b\u3059\u308b Step Functions \u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3001\u305d\u3057\u3066\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3092\u5b9f\u884c\u3059\u308b EventBridge \u30eb\u30fc\u30eb\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u542b\u307e\u308c\u307e\u3059\u3002 Job \u306e\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u305f\u3044 Job \u306e\u30ed\u30b0\u306e\u78ba\u8a8d\u3082\u7c21\u5358\u3067\u3059\u3002 copilot job logs \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Job \u306e\u6700\u65b0\u306e\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 --follow \u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306b\u65b0\u3057\u304f\u547c\u3073\u51fa\u3055\u308c\u305f Job \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u3001\u30ed\u30b0\u3092\u8ffd\u8de1\u3067\u304d\u307e\u3059\u3002 $ copilot job logs copilot/myjob/37236ed Doing some work copilot/myjob/37236ed Did some work copilot/myjob/37236ed Exited... copilot/myjob/123e300 Doing some work copilot/myjob/123e300 Did some work copilot/myjob/123e300 Did some additional work copilot/myjob/123e300 Exited","title":"Jobs"},{"location":"ja/docs/concepts/jobs/#job","text":"Job \u306f\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u8d77\u52d5\u3055\u308c\u308b Amazon ECS \u30bf\u30b9\u30af\u3092\u8868\u3059\u6982\u5ff5\u3067\u3059\u3002Copilot \u306f\u73fe\u6642\u70b9\u3067\u306f \"Scheduled Jobs\" (\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3055\u308c\u308b Job)\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u56fa\u5b9a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u3001\u3042\u308b\u3044\u306f\u9593\u9694\u3092\u6307\u5b9a\u3057\u3066\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002","title":"Job"},{"location":"ja/docs/concepts/jobs/#job_1","text":"Job \u3092\u4f5c\u6210\u3059\u308b\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f Dockerfile \u304c\u7f6e\u304b\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067 init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002 $ copilot init Job \u306e\u3069\u306e Application \u306b\u6240\u5c5e\u3055\u305b\u308b\u304b\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f\u4f5c\u6210\u3057\u305f\u3044 Job \u306e \u30bf\u30a4\u30d7 \u3092\u5c0b\u306d\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u6307\u5b9a\u53ef\u80fd\u306a\u30bf\u30a4\u30d7\u306f \"Scheduled Job\" \u306e\u307f\u3067\u3059\u3002","title":"Job \u306e\u4f5c\u6210"},{"location":"ja/docs/concepts/jobs/#manifest","text":"copilot init \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u304c\u5b8c\u4e86\u3059\u308b\u3068\u3001 manifest.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c copilot/[job name]/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 Scheduled Job \u306e Manifest \u306f\u30b7\u30f3\u30d7\u30eb\u306a\u5ba3\u8a00\u7684\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u306e\u4e00\u822c\u7684\u306a\u5171\u901a\u8a2d\u5b9a\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u3044\u3064 Job \u3092\u5b9f\u884c\u3057\u305f\u3044\u306e\u304b\u3001\u5272\u308a\u5f53\u3066\u308b\u30ea\u30bd\u30fc\u30b9\u30b5\u30a4\u30ba\u3001\u51e6\u7406\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u3084\u5931\u6557\u6642\u306b\u4f55\u56de\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3092\u8a66\u307f\u308b\u304b\u3068\u3044\u3063\u305f\u3053\u3068\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002","title":"Manifest \u3068\u8a2d\u5b9a"},{"location":"ja/docs/concepts/jobs/#job_2","text":"\u8981\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u305f\u3089\u3001deploy \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u305d\u308c\u3089\u306e\u5909\u66f4\u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002 $ copilot deploy \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u7d9a\u3051\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f5c\u696d\u304c\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9 Job \u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u5909\u63db \u8ffd\u52a0\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0 \u30c7\u30d7\u30ed\u30a4","title":"Job \u306e\u30c7\u30d7\u30ed\u30a4"},{"location":"ja/docs/concepts/jobs/#job_3","text":"\u65b0\u3057\u3044 Job \u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3001\u3042\u308b\u3044\u306f\u4f55\u3089\u304b\u306e\u7406\u7531\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3001 job run \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot job run Job \u3092\u524a\u9664\u305b\u305a\u3001\u4e00\u6642\u7684\u306b Job \u3092\u7121\u52b9\u5316\u3057\u305f\u3044\u5834\u5408\u3001 Manifest \u5185\u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092 none \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 on : schedule : \"none\" \u8a2d\u5b9a\u3057\u305f Job \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8868\u793a\u3057\u305f\u3044\u5834\u5408\u3001 job package \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot job package","title":"Job \u306b\u95a2\u9023\u3059\u308b\u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3"},{"location":"ja/docs/concepts/jobs/#job_4","text":"Copilot \u3067\u306f\u5185\u90e8\u7684\u306b CloudFormation \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u4f5c\u6210\u3055\u308c\u308b\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306f Copilot \u306b\u3088\u3063\u3066\u30bf\u30b0\u4ed8\u3051\u3055\u308c\u3066\u3044\u307e\u3059\u3002\"Scheduled Jobs\" \u306b\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u3001\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3001\u30bf\u30b9\u30af\u5b9f\u884c\u30ed\u30fc\u30eb\u3001\u30bf\u30b9\u30af\u306e\u51e6\u7406\u304c\u5931\u6557\u3057\u305f\u969b\u306b\u30ea\u30c8\u30e9\u30a4\u3092\u53ef\u80fd\u306b\u3059\u308b Step Functions \u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3001\u305d\u3057\u3066\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3092\u5b9f\u884c\u3059\u308b EventBridge \u30eb\u30fc\u30eb\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u542b\u307e\u308c\u307e\u3059\u3002","title":"Job \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/concepts/jobs/#job_5","text":"Job \u306e\u30ed\u30b0\u306e\u78ba\u8a8d\u3082\u7c21\u5358\u3067\u3059\u3002 copilot job logs \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Job \u306e\u6700\u65b0\u306e\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 --follow \u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306b\u65b0\u3057\u304f\u547c\u3073\u51fa\u3055\u308c\u305f Job \u306e\u30ed\u30b0\u3092\u8868\u793a\u3057\u3001\u30ed\u30b0\u3092\u8ffd\u8de1\u3067\u304d\u307e\u3059\u3002 $ copilot job logs copilot/myjob/37236ed Doing some work copilot/myjob/37236ed Did some work copilot/myjob/37236ed Exited... copilot/myjob/123e300 Doing some work copilot/myjob/123e300 Did some work copilot/myjob/123e300 Did some additional work copilot/myjob/123e300 Exited","title":"Job \u306e\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/concepts/overview/","text":"\u30b3\u30f3\u30bb\u30d7\u30c8 Copilot \u3092\u5229\u7528\u3059\u308b\u3068\u3001\u7c21\u5358\u306b\u30b3\u30f3\u30c6\u30ca\u3092 AWS \u4e0a\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3001\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\"Getting Started\" \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u898b\u3066\u304d\u305f\u3053\u3068\u306f\u3001\u305d\u306e\u65c5\u8def\u306e\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\u540c\u3058\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\uff11\u3064\u306f\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u3001\u3082\u3046\uff11\u3064\u306f\u672c\u756a\u74b0\u5883\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\u65b0\u3057\u3044\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\uff1f\u8ffd\u52a0\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3082\u542b\u3081\u305f\u3059\u3079\u3066\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u3069\u306e\u3088\u3046\u306b\u7ba1\u7406\u3057\u307e\u3059\u304b\uff1f\u3053\u3053\u304b\u3089\u306f Copilot \u306e\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u4e16\u754c\u306b\u98db\u3073\u8fbc\u307f\u3001Copilot \u304c\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u3053\u308c\u3089\u306e\u3053\u3068\u3092\u624b\u52a9\u3051\u3057\u3066\u304f\u308c\u308b\u306e\u304b\u7406\u89e3\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002 Application Application \u306f Service \u3068 Environment\uff08\u5f8c\u8ff0\uff09\u3092\u5305\u62ec\u3059\u308b\u6982\u5ff5\u3067\u3059\u3002Copilot \u3092\u3053\u308c\u304b\u3089\u4f7f\u3044\u59cb\u3081\u3088\u3046\u3068\u3044\u3046\u3068\u304d\u3001\u3042\u306a\u305f\u304c\u6700\u521d\u306b\u884c\u3046\u3053\u3068\u304c Application \u306e\u547d\u540d\u3067\u3059\u3002Application \u306e\u540d\u524d\u306f\u3042\u306a\u305f\u304c\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u30d7\u30ed\u30c0\u30af\u30c8\u306e\u30cf\u30a4\u30ec\u30d9\u30eb\u306a\u6982\u8981\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002 \"frontend\" \u3068 \"api\" \u3068\u3044\u3046\uff12\u3064\u306e Service \u3092\u6301\u3064 \"chat\" \u3068\u3044\u3046\u540d\u524d\u306e Application\u3001\u306e\u3088\u3046\u306a\u4f8b\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u306d\u3002\u4f8b\u3068\u3057\u3066\u6319\u3052\u305f \"frontend\" \u3068 \"api\" \u306e\uff12\u3064\u306e Service \u306f\u3001\u4f8b\u3048\u3070 \"test\" \u3068 \"production\" \u3068\u3044\u3046 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 Environment \u5642\u306b\u3088\u308b\u3068\u3001\u30d0\u30b0\u306e\u306a\u3044\u5b8c\u74a7\u306a\u30b3\u30fc\u30c9\u3092\u6700\u521d\u304b\u3089\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u4eba\u3068\u3044\u3046\u306e\u304c\u4e16\u306e\u4e2d\u306b\u306f\u3044\u308b\u305d\u3046\u3067\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u65b9\u3005\u306b\u306f\u8131\u5e3d\u3057\u307e\u3059\u304c\u3001\u79c1\u305f\u3061\u306f\u65b0\u3057\u3044\u30b3\u30fc\u30c9\u3092\u672c\u756a\u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u3088\u308a\u3082\u524d\u306b\u9867\u5ba2\u5411\u3051\u3067\u306f\u306a\u3044\u5834\u6240\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3053\u3068\u304c\u91cd\u8981\u3060\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002Copilot \u306e\u4e16\u754c\u3067\u306f\u3001\u79c1\u305f\u3061\u306f Environment \u3092\u4f7f\u3063\u3066\u3053\u308c\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u5404 Environment \u3067\u306f\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306e \u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3067\u304d\u308b \u305f\u3081\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u3084\u672c\u756a\u74b0\u5883\u3068\u3044\u3063\u305f\u3082\u306e\u3092\u4f5c\u308c\u307e\u3059\u3002\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u5168\u3066\u304c\u554f\u984c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3089\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3063\u305f\u6d41\u308c\u3067\u3059\u3002\u5404 Environment \u306f\u4e92\u3044\u306b\u72ec\u7acb\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u305f\u3068\u3048\u30d0\u30b0\u3092\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u6df7\u5165\u3055\u305b\u305f\u3068\u3057\u3066\u3082\u672c\u756a\u74b0\u5883\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304a\u5ba2\u69d8\u306b\u3068\u3063\u3066\u306f\u306a\u3093\u306e\u5f71\u97ff\u3082\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u3053\u307e\u3067\u306f\u5358\u4e00\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u3064\u3044\u3066\u8a71\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u3082\u3057\u3042\u306a\u305f\u304c\u3055\u3089\u306b\u3082\u3046\uff11\u3064\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u304f\u306a\u3063\u305f\u3068\u3057\u305f\u3089\u3069\u3046\u3067\u3057\u3087\u3046\uff1f\u3053\u3053\u3067\u306f\u3059\u3067\u306b\u3042\u308b\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u5229\u7528\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u8db3\u3059\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u60f3\u50cf\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u5404 Environment \u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u5168\u3066\u306e\u30b5\u30fc\u30d3\u30b9\u3067\u5171\u6709\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u7fa4\u3001\u4f8b\u3048\u3070\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff08VPC\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306a\u3069\uff09\u3001ECS \u30af\u30e9\u30b9\u30bf\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u542b\u307e\u308c\u307e\u3059\u3002 \u4eee\u306b\u3042\u306a\u305f\u304c\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u306e\u4e21\u65b9\u3092\u540c\u4e00\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001\u305d\u308c\u3089\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u540c\u4e00\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084 ECS \u30af\u30e9\u30b9\u30bf\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 Service Copilot \u306b\u304a\u3051\u308b Service \u306f\u3001AWS \u4e0a\u3067\u5b9f\u884c\u3057\u305f\u3044\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u3068\u305d\u308c\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u3092\u6307\u3059\u6982\u5ff5\u3067\u3059\u3002Copilot \u3067\u3042\u306a\u305f\u304c Service \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001Copilot \u306f\u3069\u306e\u3088\u3046\u306a\u300c\u30bf\u30a4\u30d7\u300d\u306e Service \u3092\u4f5c\u308a\u305f\u3044\u306e\u304b\u3092\u3042\u306a\u305f\u306b\u5c0b\u306d\u307e\u3059\u3002\u3053\u306e Service \u306e\u300c\u30bf\u30a4\u30d7\u300d\u306f\u3001\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u4f5c\u6210\u3055\u308c\u308b\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u6c7a\u5b9a\u3059\u308b\u8981\u7d20\u3068\u306a\u308a\u307e\u3059\u3002\u4eee\u306b\u3042\u306a\u305f\u304c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u8d8a\u3057\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u308b\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001Copilot \u306f Application Load Balancer \u3068 AWS Fargate \u3092\u5229\u7528\u3059\u308b Amazon ECS \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3069\u306e\u3088\u3046\u306a\u30bf\u30a4\u30d7\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u3044\u308b\u306e\u304b\u3092 Copilot \u306b\u6559\u3048\u308b\u3068\u3001Copilot \u306f\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u306b\u542b\u307e\u308c\u308b Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092 Amazon ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u30bb\u30ad\u30e5\u30a2\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002Copilot \u306f\u305d\u308c\u3068\u540c\u6642\u306b\u3042\u306a\u305f\u306e Service \u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u683c\u7d0d\u3057\u305f Manifest \u3068\u547c\u3070\u308c\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Service \u306b\u5272\u308a\u5f53\u3066\u305f\u3044\u30e1\u30e2\u30ea\u3084 CPU \u306e\u91cf\u3001\u3042\u308b\u3044\u306f Service \u3092\u3044\u304f\u3064\u4e26\u5217\u3067\u5b9f\u884c\u3057\u305f\u3044\u306e\u304b\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u8a2d\u5b9a\u3082\u3053\u3053\u306b\u542b\u307e\u308c\u307e\u3059\u3002 Job Job \u306f\u3001\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u8d77\u52d5\u3055\u308c\u308b\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u306a Amazon ECS \u30bf\u30b9\u30af\u3092\u6307\u3059\u6982\u5ff5\u3067\u3059\u3002Job \u306e\u4f5c\u696d\u304c\u5b8c\u4e86\u3059\u308b\u3068\u305d\u306e\u30bf\u30b9\u30af\u306f\u524a\u9664\u3055\u308c\u307e\u3059\u3002Service \u540c\u69d8\u3001Copilot \u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u3092\u30af\u30a4\u30c3\u30af\u306a\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u3042\u306a\u305f\u306b\u8cea\u554f\u3057\u307e\u3059\u3002Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u4efb\u610f\u306e\u3001\u3042\u308b\u3044\u306f\u3088\u308a\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 Pipeline \u3053\u3053\u307e\u3067\u306e\u6982\u5ff5\u3067\u3001\u3044\u304f\u3064\u304b\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u8907\u6570\u306e Service \u3092\u6301\u3064 Application \u3092\u624b\u306b\u5165\u308c\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u6982\u5ff5\u3092\u7dad\u6301\u3057\u3064\u3064\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3063\u3066\u3044\u304f\u306e\u306f\u5927\u5909\u306a\u4f5c\u696d\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u3002\u305d\u3053\u3067 Copilot \u3067\u306f\u3001\u3042\u306a\u305f\u304c Git \u30ea\u30dd\u30b8\u30c8\u30ea(\u73fe\u6642\u70b9\u3067\u306f GitHub\u3001BitBucket\u3001CodeCommit \u3092\u30b5\u30dd\u30fc\u30c8)\u306b\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3089 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u308c\u308b\u30ea\u30ea\u30fc\u30b9\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u304c Pipeline \u3068\u3044\u3046\u6982\u5ff5\u3067\u3059\u3002\u30b3\u30fc\u30c9\u306e\u30d7\u30c3\u30b7\u30e5\u304c\u691c\u77e5\u3055\u308c\u308b\u3068\u3001Pipeline \u306f Service \u3092\u30d3\u30eb\u30c9\u3001\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 ECR \u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3001Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u3057\u3066\u3088\u304f\u307f\u3089\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u306e\uff11\u3064\u306f\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002","title":"Overview"},{"location":"ja/docs/concepts/overview/#_1","text":"Copilot \u3092\u5229\u7528\u3059\u308b\u3068\u3001\u7c21\u5358\u306b\u30b3\u30f3\u30c6\u30ca\u3092 AWS \u4e0a\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3001\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\"Getting Started\" \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u898b\u3066\u304d\u305f\u3053\u3068\u306f\u3001\u305d\u306e\u65c5\u8def\u306e\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\u540c\u3058\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\uff11\u3064\u306f\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u3001\u3082\u3046\uff11\u3064\u306f\u672c\u756a\u74b0\u5883\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\u65b0\u3057\u3044\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\uff1f\u8ffd\u52a0\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3082\u542b\u3081\u305f\u3059\u3079\u3066\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u3069\u306e\u3088\u3046\u306b\u7ba1\u7406\u3057\u307e\u3059\u304b\uff1f\u3053\u3053\u304b\u3089\u306f Copilot \u306e\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u4e16\u754c\u306b\u98db\u3073\u8fbc\u307f\u3001Copilot \u304c\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u3053\u308c\u3089\u306e\u3053\u3068\u3092\u624b\u52a9\u3051\u3057\u3066\u304f\u308c\u308b\u306e\u304b\u7406\u89e3\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002","title":"\u30b3\u30f3\u30bb\u30d7\u30c8"},{"location":"ja/docs/concepts/overview/#application","text":"Application \u306f Service \u3068 Environment\uff08\u5f8c\u8ff0\uff09\u3092\u5305\u62ec\u3059\u308b\u6982\u5ff5\u3067\u3059\u3002Copilot \u3092\u3053\u308c\u304b\u3089\u4f7f\u3044\u59cb\u3081\u3088\u3046\u3068\u3044\u3046\u3068\u304d\u3001\u3042\u306a\u305f\u304c\u6700\u521d\u306b\u884c\u3046\u3053\u3068\u304c Application \u306e\u547d\u540d\u3067\u3059\u3002Application \u306e\u540d\u524d\u306f\u3042\u306a\u305f\u304c\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u30d7\u30ed\u30c0\u30af\u30c8\u306e\u30cf\u30a4\u30ec\u30d9\u30eb\u306a\u6982\u8981\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002 \"frontend\" \u3068 \"api\" \u3068\u3044\u3046\uff12\u3064\u306e Service \u3092\u6301\u3064 \"chat\" \u3068\u3044\u3046\u540d\u524d\u306e Application\u3001\u306e\u3088\u3046\u306a\u4f8b\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u306d\u3002\u4f8b\u3068\u3057\u3066\u6319\u3052\u305f \"frontend\" \u3068 \"api\" \u306e\uff12\u3064\u306e Service \u306f\u3001\u4f8b\u3048\u3070 \"test\" \u3068 \"production\" \u3068\u3044\u3046 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002","title":"Application"},{"location":"ja/docs/concepts/overview/#environment","text":"\u5642\u306b\u3088\u308b\u3068\u3001\u30d0\u30b0\u306e\u306a\u3044\u5b8c\u74a7\u306a\u30b3\u30fc\u30c9\u3092\u6700\u521d\u304b\u3089\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u4eba\u3068\u3044\u3046\u306e\u304c\u4e16\u306e\u4e2d\u306b\u306f\u3044\u308b\u305d\u3046\u3067\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u65b9\u3005\u306b\u306f\u8131\u5e3d\u3057\u307e\u3059\u304c\u3001\u79c1\u305f\u3061\u306f\u65b0\u3057\u3044\u30b3\u30fc\u30c9\u3092\u672c\u756a\u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u3088\u308a\u3082\u524d\u306b\u9867\u5ba2\u5411\u3051\u3067\u306f\u306a\u3044\u5834\u6240\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3053\u3068\u304c\u91cd\u8981\u3060\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002Copilot \u306e\u4e16\u754c\u3067\u306f\u3001\u79c1\u305f\u3061\u306f Environment \u3092\u4f7f\u3063\u3066\u3053\u308c\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u5404 Environment \u3067\u306f\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306e \u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3067\u304d\u308b \u305f\u3081\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u3084\u672c\u756a\u74b0\u5883\u3068\u3044\u3063\u305f\u3082\u306e\u3092\u4f5c\u308c\u307e\u3059\u3002\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u5168\u3066\u304c\u554f\u984c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3089\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3063\u305f\u6d41\u308c\u3067\u3059\u3002\u5404 Environment \u306f\u4e92\u3044\u306b\u72ec\u7acb\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u305f\u3068\u3048\u30d0\u30b0\u3092\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u6df7\u5165\u3055\u305b\u305f\u3068\u3057\u3066\u3082\u672c\u756a\u74b0\u5883\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304a\u5ba2\u69d8\u306b\u3068\u3063\u3066\u306f\u306a\u3093\u306e\u5f71\u97ff\u3082\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u3053\u307e\u3067\u306f\u5358\u4e00\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u3064\u3044\u3066\u8a71\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u3082\u3057\u3042\u306a\u305f\u304c\u3055\u3089\u306b\u3082\u3046\uff11\u3064\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u304f\u306a\u3063\u305f\u3068\u3057\u305f\u3089\u3069\u3046\u3067\u3057\u3087\u3046\uff1f\u3053\u3053\u3067\u306f\u3059\u3067\u306b\u3042\u308b\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u5229\u7528\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u8db3\u3059\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u60f3\u50cf\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u5404 Environment \u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u5168\u3066\u306e\u30b5\u30fc\u30d3\u30b9\u3067\u5171\u6709\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u7fa4\u3001\u4f8b\u3048\u3070\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff08VPC\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306a\u3069\uff09\u3001ECS \u30af\u30e9\u30b9\u30bf\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u542b\u307e\u308c\u307e\u3059\u3002 \u4eee\u306b\u3042\u306a\u305f\u304c\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u306e\u4e21\u65b9\u3092\u540c\u4e00\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001\u305d\u308c\u3089\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u540c\u4e00\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084 ECS \u30af\u30e9\u30b9\u30bf\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002","title":"Environment"},{"location":"ja/docs/concepts/overview/#service","text":"Copilot \u306b\u304a\u3051\u308b Service \u306f\u3001AWS \u4e0a\u3067\u5b9f\u884c\u3057\u305f\u3044\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u3068\u305d\u308c\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u3092\u6307\u3059\u6982\u5ff5\u3067\u3059\u3002Copilot \u3067\u3042\u306a\u305f\u304c Service \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001Copilot \u306f\u3069\u306e\u3088\u3046\u306a\u300c\u30bf\u30a4\u30d7\u300d\u306e Service \u3092\u4f5c\u308a\u305f\u3044\u306e\u304b\u3092\u3042\u306a\u305f\u306b\u5c0b\u306d\u307e\u3059\u3002\u3053\u306e Service \u306e\u300c\u30bf\u30a4\u30d7\u300d\u306f\u3001\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u4f5c\u6210\u3055\u308c\u308b\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u6c7a\u5b9a\u3059\u308b\u8981\u7d20\u3068\u306a\u308a\u307e\u3059\u3002\u4eee\u306b\u3042\u306a\u305f\u304c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u8d8a\u3057\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u308b\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001Copilot \u306f Application Load Balancer \u3068 AWS Fargate \u3092\u5229\u7528\u3059\u308b Amazon ECS \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3069\u306e\u3088\u3046\u306a\u30bf\u30a4\u30d7\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u3044\u308b\u306e\u304b\u3092 Copilot \u306b\u6559\u3048\u308b\u3068\u3001Copilot \u306f\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u306b\u542b\u307e\u308c\u308b Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092 Amazon ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u30bb\u30ad\u30e5\u30a2\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002Copilot \u306f\u305d\u308c\u3068\u540c\u6642\u306b\u3042\u306a\u305f\u306e Service \u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u683c\u7d0d\u3057\u305f Manifest \u3068\u547c\u3070\u308c\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Service \u306b\u5272\u308a\u5f53\u3066\u305f\u3044\u30e1\u30e2\u30ea\u3084 CPU \u306e\u91cf\u3001\u3042\u308b\u3044\u306f Service \u3092\u3044\u304f\u3064\u4e26\u5217\u3067\u5b9f\u884c\u3057\u305f\u3044\u306e\u304b\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u8a2d\u5b9a\u3082\u3053\u3053\u306b\u542b\u307e\u308c\u307e\u3059\u3002","title":"Service"},{"location":"ja/docs/concepts/overview/#job","text":"Job \u306f\u3001\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u8d77\u52d5\u3055\u308c\u308b\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u306a Amazon ECS \u30bf\u30b9\u30af\u3092\u6307\u3059\u6982\u5ff5\u3067\u3059\u3002Job \u306e\u4f5c\u696d\u304c\u5b8c\u4e86\u3059\u308b\u3068\u305d\u306e\u30bf\u30b9\u30af\u306f\u524a\u9664\u3055\u308c\u307e\u3059\u3002Service \u540c\u69d8\u3001Copilot \u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30bf\u30b9\u30af\u3092\u30af\u30a4\u30c3\u30af\u306a\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u3042\u306a\u305f\u306b\u8cea\u554f\u3057\u307e\u3059\u3002Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u4efb\u610f\u306e\u3001\u3042\u308b\u3044\u306f\u3088\u308a\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002","title":"Job"},{"location":"ja/docs/concepts/overview/#pipeline","text":"\u3053\u3053\u307e\u3067\u306e\u6982\u5ff5\u3067\u3001\u3044\u304f\u3064\u304b\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u8907\u6570\u306e Service \u3092\u6301\u3064 Application \u3092\u624b\u306b\u5165\u308c\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u6982\u5ff5\u3092\u7dad\u6301\u3057\u3064\u3064\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3063\u3066\u3044\u304f\u306e\u306f\u5927\u5909\u306a\u4f5c\u696d\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u3002\u305d\u3053\u3067 Copilot \u3067\u306f\u3001\u3042\u306a\u305f\u304c Git \u30ea\u30dd\u30b8\u30c8\u30ea(\u73fe\u6642\u70b9\u3067\u306f GitHub\u3001BitBucket\u3001CodeCommit \u3092\u30b5\u30dd\u30fc\u30c8)\u306b\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3089 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u308c\u308b\u30ea\u30ea\u30fc\u30b9\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u304c Pipeline \u3068\u3044\u3046\u6982\u5ff5\u3067\u3059\u3002\u30b3\u30fc\u30c9\u306e\u30d7\u30c3\u30b7\u30e5\u304c\u691c\u77e5\u3055\u308c\u308b\u3068\u3001Pipeline \u306f Service \u3092\u30d3\u30eb\u30c9\u3001\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092 ECR \u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3001Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u3057\u3066\u3088\u304f\u307f\u3089\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u306e\uff11\u3064\u306f\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002","title":"Pipeline"},{"location":"ja/docs/concepts/pipelines/","text":"\u81ea\u52d5\u5316\u3055\u308c\u305f\u30ea\u30ea\u30fc\u30b9\u30d7\u30ed\u30bb\u30b9\u3092\u6301\u3064\u3053\u3068\u306f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30c7\u30ea\u30d0\u30ea\u306e\u91cd\u8981\u306a\u89b3\u70b9\u306e\uff11\u3064\u3067\u3059\u3002Copilot \u306f\u3053\u308c\u3089\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u53ef\u80fd\u306a\u9650\u308a\u7c21\u5358\u306b\u3059\u308b\u3053\u3068\u3092\u8ffd\u6c42\u3057\u3066\u3044\u307e\u3059 \ud83d\ude80 \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f GitHub\u3001Bitbucket\u3001CodeCommit \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u304c\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u305f\u969b\u306b\u81ea\u52d5\u7684\u306a\u30d3\u30eb\u30c9\u3092\u5b9f\u884c\u3057\u3001Environment \u3078\u306e\u30c7\u30d7\u30ed\u30a4\u3068\u81ea\u52d5\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b CodePipeline \u3092 Copilot \u3092\u4f7f\u3063\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u4f8b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002 Attention AWS CodePipeline \u306f OS \u30d5\u30a1\u30df\u30ea\u30fc\u304c Windows \u306e Service \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002 CodePipeline \u306f\u3001Build Stage \u3067 Linux \u30d9\u30fc\u30b9\u306e AWS CodeBuild \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u73fe\u6642\u70b9\u3067\u306f Copilot Pipeline \u3067 Windows \u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3067\u304d\u307e\u305b\u3093\u3002 Why? \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30ea\u30ea\u30fc\u30b9\u306b\u3064\u3044\u3066\u306e\u54f2\u5b66\u7684\u3059\u304e\u308b\u8a71\u306f\u3057\u307e\u305b\u3093\u304c\u3001\u679c\u305f\u3057\u3066\u30ea\u30ea\u30fc\u30b9\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u6301\u3064\u610f\u5473\u3068\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f copilot deploy \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3048\u3070\u624b\u5143\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u304b\u3089 Amazon ECS on AWS Fargate \u3078\u76f4\u63a5\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u306e\u306b\u3001\u306a\u305c\u308f\u3056\u308f\u3056\u4ef2\u4ecb\u3059\u308b\u4ed5\u7d44\u307f\u3092\u631f\u3080\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u826f\u3044\u8cea\u554f\u3067\u3059\u3002\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3068\u3063\u3066\u306f\u3001\u624b\u52d5\u3067\u306e deploy \u3067\u5341\u5206\u306a\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\u4e00\u65b9\u3067\u3001\u4f8b\u3048\u3070\u8907\u6570\u306e Environment \u3084\u3042\u308b\u3044\u306f\u81ea\u52d5\u30c6\u30b9\u30c8\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304d\u30ea\u30ea\u30fc\u30b9\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u8907\u96d1\u5316\u3057\u3066\u304f\u308b\u3068\u3001\u305d\u306e\u9000\u5c48\u306a\u4f5c\u696d\u3092\u4f55\u3089\u304b\u306e\u4ed5\u7d44\u307f\u306b\u30aa\u30d5\u30ed\u30fc\u30c9\u3057\u305f\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002\uff12\u3064\u306e Service \u304c\uff12\u3064\u306e(\u4f8b\u3048\u3070\u30c6\u30b9\u30c8\u74b0\u5883\u3068\u672c\u756a\u74b0\u5883\u306e\u3088\u3046\u306a) Environment \u5185\u306b\u305d\u308c\u305e\u308c\u3042\u308b\u3068\u3057\u3066\u3001\u305d\u308c\u3089\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u3092\u624b\u3067\u5b9f\u65bd\u3059\u308b\u3053\u3068\u306f\u9a5a\u304f\u307b\u3069\u306b\u9762\u5012\u306a\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002 CodePipeline \u306e\u3088\u3046\u306a\u81ea\u52d5\u5316\u3055\u308c\u305f\u30ea\u30ea\u30fc\u30b9\u30c4\u30fc\u30eb\u306f\u3001\u3042\u306a\u305f\u306e\u30ea\u30ea\u30fc\u30b9\u4f5c\u696d\u3092\u7ba1\u7406\u53ef\u80fd\u306a\u3082\u306e\u306b\u3059\u308b\u624b\u52a9\u3051\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u305f\u3068\u3048\u30ea\u30ea\u30fc\u30b9\u4f5c\u696d\u81ea\u4f53\u304c\u305d\u308c\u307b\u3069\u8907\u96d1\u306a\u3082\u306e\u3067\u306f\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001 git push \u3055\u3048\u3059\u308c\u3070\u5909\u66f4\u3092\u81ea\u52d5\u7684\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u4f53\u9a13\u306f\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u9b54\u6cd5\u306e\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3088\u306d \ud83c\udf08 Pipeline \u306e\u69cb\u6210 Copilot \u306f\u3044\u304f\u3064\u304b\u306e\u30b3\u30de\u30f3\u30c9\u3067 CodePipeline \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\u4f5c\u696d\u3092\u59cb\u3081\u308b\u524d\u306b\u3001\u307e\u305a\u306f\u6700\u7d42\u7684\u306b\u4f5c\u6210\u3055\u308c\u308b Pipeline \u306e\u69cb\u6210\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002Pipeline \u306f\u6b21\u306b\u6319\u3052\u308b\u57fa\u672c\u7684\u306a\u69cb\u9020\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 Source Stage - \u8a2d\u5b9a\u3057\u305f GitHub\u3001Bitbucket\u3001\u3042\u308b\u3044\u306f CodeCommit \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3001Pipeline \u306e\u5b9f\u884c\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002 Build Stage - \u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30b3\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u3001Service \u7528\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001\u3059\u3079\u3066\u306e Environment \u306e Amazon ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\u52a0\u3048\u3066\u3001 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3084\u3001 Lambda \u95a2\u6570 zip \u30d5\u30a1\u30a4\u30eb\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb \u306a\u3069\u306e\u3059\u3079\u3066\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u30ea\u30dd\u30b8\u30c8\u30ea\u30db\u30b9\u30c8\u304b\u3089 pull \u3055\u308c\u305f\u5f8c\u306b\u3001 Service \u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001 \u5404\u74b0\u5883\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\u52a0\u3048\u3066\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001Lambda \u95a2\u6570 zip \u30d5\u30a1\u30a4\u30eb\u3001\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u3059\u3079\u3066\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c S3\u3000\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 Deploy Stages - \u30d3\u30eb\u30c9\u304c\u7d42\u308f\u308b\u3068\u3001\u4e00\u90e8\u3042\u308b\u3044\u306f\u3059\u3079\u3066\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3084\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u306b\u624b\u52d5\u627f\u8a8d\u3092\u631f\u3080\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 Copilot \u3092\u4f7f\u3063\u3066 CodePipeline \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u6e08\u307e\u305b\u305f\u3089\u3001\u3042\u3068\u306f GitHub\u3001Bitbucket\u3001\u3042\u308b\u3044\u306f CodeCommit \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u3042\u3068\u306f CodePipeline \u304c\u30c7\u30d7\u30ed\u30a4\u307e\u3067\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002 CodePipeline \u306b\u3064\u3044\u3066\u3088\u308a\u6df1\u304f\u5b66\u3073\u305f\u3044\u5834\u5408\u306f\u3001 CodePipeline \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 3 \u30b9\u30c6\u30c3\u30d7\u3067\u4f5c\u308b Pipeline Pipeline \u306e\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u624b\u9806\u306f\uff13\u3064\u3067\u3059\u3002 \u6700\u521d\u306b Pipeline \u306e\u4f5c\u6210\u6e96\u5099\u3068\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002 \u6b21\u306b\u3001 copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30df\u30c3\u30c8\u3057\u3066\u3001\u30ea\u30e2\u30fc\u30c8 Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002 \u6700\u5f8c\u306b\u30af\u30e9\u30a6\u30c9\u4e0a\u3078 Pipeline \u3092\u4f5c\u6210\u3057\u3066\u5b8c\u4e86\u3067\u3059\uff01 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u3067\u4ee5\u4e0b\u306e\uff13\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 $ copilot pipeline init $ git add copilot/ && git commit -m \"Adding pipeline artifacts\" && git push $ copilot pipeline deploy Note \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u3001 pipeline deploy \u3092\u5b9f\u884c\u3059\u308b\u9593\u306b\u3001\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9( Service \u307e\u305f\u306f Job ) \u3092\u958b\u59cb\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u2728 Application \u30a2\u30ab\u30a6\u30f3\u30c8 \u306b\u65b0\u3057\u3044 Pipeline \u304c\u4f5c\u6210\u3055\u308c\u305f\u306f\u305a\u3067\u3059\uff01\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u3001\u3082\u3046\u5c11\u3057\u6df1\u304f\u77e5\u308a\u305f\u3044\u3067\u3059\u3088\u306d\uff1f\u8aad\u307f\u9032\u3081\u307e\u3057\u3087\u3046\uff01 \u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u898b\u308b Pipeline \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 \u30b9\u30c6\u30c3\u30d7 1: Pipeline \u306e\u8a2d\u5b9a Pipeline \u306e\u8a2d\u5b9a\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30ec\u30d9\u30eb\u3067\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3082\u3057\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306b\u3042\u308b Service \u304c\uff11\u3064\u306e\u5834\u5408\u3001Pipeline \u306f\u305d\u306e Service \u306b\u3064\u3044\u3066\u306e\u307f\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3082\u3057\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306b\u8907\u6570\u306e Service \u304c\u3042\u308b\u5834\u5408\u3001Pipeline \u306f\u305d\u308c\u3089\u5168\u3066\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002Pipeline \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u59cb\u3081\u308b\u306b\u306f\u3001Service (\u3042\u308b\u3044\u306f Service \u7fa4)\u304c\u3042\u308b Application \u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b cd \u30b3\u30de\u30f3\u30c9\u306a\u3069\u3067\u5165\u308a\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 copilot pipeline init \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u3067\u306f\u307e\u3060\u30af\u30e9\u30a6\u30c9\u4e0a\u306e Pipeline \u306f\u4f5c\u6210\u3057\u307e\u305b\u3093\u304c\u3001Pipeline \u4f5c\u6210\u306b\u5fc5\u8981\u306a\u3044\u304f\u3064\u304b\u306e\u30d5\u30a1\u30a4\u30eb\u3092 copilot/pipelines \u4ee5\u4e0b\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002 Pipeline name : \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u540d\u524d\u3092 [repository name]-[branch name] \u3068\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002( \u5c0b\u306d\u3089\u308c\u305f\u5834\u5408\u3001 \u30c7\u30d5\u30a9\u30eb\u30c8\u540d\u3092\u53d7\u3051\u5165\u308c\u308b\u306b\u306f 'Enter' \u30dc\u30bf\u30f3\u3092\u5165\u529b\u3057\u307e\u3059)\u3002\u3053\u308c\u306b\u3088\u308a\u8907\u6570\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u305f\u5834\u5408\u306b\u3001\u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u5f93\u3046\u5834\u5408\u306b\u3046\u307e\u304f\u6a5f\u80fd\u3067\u3057\u307e\u3059\u3002 Pipeline type : 'Workloads' \u307e\u305f\u306f ' Environments ' \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001Pipeline \u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u305f\u3068\u304d\u306b\u4f55\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002 Release order : \u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u3092\u5c0b\u306d\u3089\u308c\u307e\u3059 - \u3069\u306e Environment \u304b\u3089\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u65bd\u3057\u305f\u3044\u304b\u3001\u305d\u306e\u9806\u756a\u306b\u3042\u308f\u305b\u3066 Environment \u3092\u9078\u629e\u3057\u307e\u3057\u3087\u3046\u3002(\u8907\u6570\u306e Environment \u306b\u5bfe\u3057\u3066\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093)\u3002\u6700\u521d\u306b test Environment \u3078\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u305d\u306e\u5f8c prod Environment \u3078\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3063\u305f\u8a2d\u5b9a\u304c\u3088\u304f\u3042\u308b\u9806\u756a\u3067\u3057\u3087\u3046\u3002 Tracking repository : \u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u3092\u9078\u629e\u3059\u308b\u3068\u3001\u6b21\u306b\u3069\u306e Git \u30ea\u30dd\u30b8\u30c8\u30ea\u3092 CodePipeline \u304b\u3089\u30c8\u30e9\u30c3\u30af\u3057\u305f\u3044\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u9078\u3076\u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u304c\u3001CodePipeline \u306e Pipeline \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u306a\u308a\u307e\u3059\u3002(\u8a2d\u5b9a\u3057\u305f\u3044\u5bfe\u8c61\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3053\u3053\u3067\u30ea\u30b9\u30c8\u306b\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u3001 --url \u30d5\u30e9\u30b0\u3067\u660e\u793a\u7684\u306b Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306e URL \u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002) Tracking branch : \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3059\u308b\u3068\u3001 Copilot \u306f\u73fe\u5728\u306e\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1\u3092\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5229\u7528\u3059\u308b\u30d6\u30e9\u30f3\u30c1\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30b9\u30c6\u30c3\u30d7 2 \u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 \u30b9\u30c6\u30c3\u30d7 2: Pipeline \u7528 Manifest \u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0 (\u30aa\u30d7\u30b7\u30e7\u30f3) Service \u306f\u30b7\u30f3\u30d7\u30eb\u306a Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u6301\u3061\u307e\u3059\u3002\u540c\u69d8\u306b\u3001Pipeline \u306b\u3082 Manifest \u304c\u3042\u308a\u307e\u3059\u3002 pipeline init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 copilot/pipelines/[your pipeline name] \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b manifest.yml \u3068 buildspec.yml \u3068\u3044\u3046\uff12\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 manifest.yml \u306e\u4e2d\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002 (\u3053\u3053\u3067\u306f \"api-frontend\" \u3068\u3044\u3046 Service \u304c \"test\" \u3068 \"prod\" \u306e\uff12\u3064\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3082\u306e\u3068\u4eee\u5b9a\u3057\u307e\u3057\u3087\u3046) # Pipeline \u540d \"demo-api-frontend-main\" \u306e Manifest # \u3053\u306e YAML \u30d5\u30a1\u30a4\u30eb\u306f Pipeline \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u8ffd\u8de1\u3059\u308b\u30bd\u30fc\u30b9\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u3001Environment \u306e\u30c7\u30d7\u30ed\u30a4\u9806\u5e8f\u3092\u6307\u5b9a\u3057\u307e\u3059 # \u8a73\u7d30\u306f\u3053\u3061\u3089: https://aws.github.io/copilot-cli/ja/docs/manifest/pipeline/ # Pipeline \u540d name : demo-api-frontend-main # \u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u30b9\u30ad\u30fc\u30de\u30d0\u30fc\u30b8\u30e7\u30f3 version : 1 # \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f Pipeline \u306e\u5b9f\u884c\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059 source : # \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u540d\u3092\u8a18\u8ff0\u3057\u307e\u3059 # (\u4f8b: GitHub, Bitbucket, CodeCommit) provider : GitHub # \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5834\u6240\u3092\u8ffd\u52a0\u3067\u6307\u5b9a\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3059 properties : branch : main repository : https://github.com/kohidave/demo-api-frontend # \u30aa\u30d7\u30b7\u30e7\u30f3: \u65e2\u5b58\u306e CodeStar Connections \u3067\u4f5c\u6210\u3055\u308c\u305f\u63a5\u7d9a\u540d\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059 # connection_name: a-connection # \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f Pipeline \u306e\u30c7\u30d7\u30ed\u30a4\u5148\u3068\u306a\u308b Environment \u306e\u9806\u5e8f\u3092\u5b9a\u7fa9\u3057\u307e\u3059 stages : - # Environment \u540d name : test test_commands : - make test - echo \"woo! Tests passed\" - # Environment \u540d name : prod # requires_approval: true manifest.yml \u3067\u5229\u7528\u53ef\u80fd\u306a\u5168\u3066\u306e\u8a2d\u5b9a\u9805\u76ee\u306b\u3064\u3044\u3066\u306f Pipeline Manifest \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u5927\u304d\u304f 3 \u3064\u306e\u30d1\u30fc\u30c4\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u521d\u306e name \u30d5\u30a3\u30fc\u30eb\u30c9\u306f Pipeline \u306b\u4f5c\u6210\u3055\u308c\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u540d\u79f0\u3067\u3059\u3002\u305d\u3057\u3066 source \u30bb\u30af\u30b7\u30e7\u30f3\u306f Pipeline \u304c\u30c8\u30e9\u30c3\u30af\u3059\u308b\u30bd\u30fc\u30b9\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u305d\u306e\u30d6\u30e9\u30f3\u30c1\u3068\u3044\u3063\u305f\u8a73\u7d30\u3092\u5b9a\u7fa9\u3057\u3001\u6700\u5f8c\u306e stages \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3053\u306e Pipeline \u304c\u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u305d\u306e\u3082\u306e\u307e\u305f\u306f Pipeline \u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u969b\u306e\u30c7\u30d7\u30ed\u30a4\u5148\u306e Environment \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u3044\u3064\u3067\u3082\u5909\u66f4\u53ef\u80fd\u3067\u3059\u304c\u3001\u5909\u66f4\u5f8c\u306f Git \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30b3\u30df\u30c3\u30c8\u3068\u30d7\u30c3\u30b7\u30e5\u3001\u305d\u306e\u5f8c copilot pipeline deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u3068\u3057\u3066\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u307e\u305f\u306f\u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u3092\u5909\u66f4\u3057\u305f\u3044\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f\u3092\u6307\u5b9a\u3057\u305f\u3044\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u5f8c\u306b\u5b9f\u884c\u3059\u308b Pipeline \u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u305f\u3044\u3001\u30c8\u30e9\u30c3\u30af\u3059\u308b\u30d6\u30e9\u30f3\u30c1\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u969b\u306b\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u307e\u305f\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u306b\u624b\u52d5\u306e\u627f\u8a8d\u30b9\u30c6\u30c3\u30d7\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059 ( \u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u3092\u53c2\u7167)\u3002\u3042\u308b\u3044\u306f\u3082\u3057\u3059\u3067\u306b CodeStar Connections \u306b\u63a5\u7d9a\u6e08\u307f\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3042\u308a\u3001Copilot \u3067\u65b0\u305f\u306b\u4f5c\u6210\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u65e2\u5b58\u306e\u3082\u306e\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u63a5\u7d9a\u540d\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u30b9\u30c6\u30c3\u30d7 3: Buildspec \u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0 (\u30aa\u30d7\u30b7\u30e7\u30f3) pipeline init \u30b3\u30de\u30f3\u30c9\u3067\u306f\u3001 manifest.yml \u3068\u4e00\u7dd2\u306b buildspec.yml \u3082 copilot/pipelines/[your pipeline name] \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u306e buldspec.yml \u306b\u306f\u30d3\u30eb\u30c9\u3068\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d7\u30c3\u30b7\u30e5\u306b\u95a2\u3059\u308b\u6307\u793a\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3057 docker build \u3068\u4e00\u7dd2\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3084\u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30af\u306e\u3088\u3046\u306a\u8ffd\u52a0\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3001buildspec \u306e build \u30d5\u30a7\u30fc\u30ba\u306b\u305d\u308c\u3089\u306e\u30b3\u30de\u30f3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5b9f\u969b\u306b\u3053\u306e buildspec \u304c\u5b9f\u884c\u3055\u308c\u308b\u969b\u306b\u306f\u3001\u5f8c\u65b9\u4e92\u63db\u6027\u306e\u89b3\u70b9\u304b\u3089 pipeline init \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u306b\u5229\u7528\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Copilot \u30d0\u30a4\u30ca\u30ea\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3001\u5229\u7528\u3055\u308c\u307e\u3059\u3002 \u3042\u308b\u3044\u306f\u3001CodeBuild \u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u72ec\u81ea\u306e buildspec \u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 manifest.yml file \u3067\u3001\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 build : buildspec : \u30b9\u30c6\u30c3\u30d7 4: \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30c3\u30b7\u30e5\u3059\u308b manifest.yml \u3001 buildspec.yml \u3001\u305d\u3057\u3066 .workspace \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u305f\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002 copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u542b\u307e\u308c\u305f\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3001Pipeline \u304c build \u30b9\u30c6\u30fc\u30b8\u3092\u6b63\u3057\u304f\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002 \u30b9\u30c6\u30c3\u30d7 5: Pipeline \u306e\u4f5c\u6210 \u3053\u3053\u304b\u3089\u304c\u697d\u3057\u3044\u30d1\u30fc\u30c8\u3067\u3059\uff01\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\uff01 copilot pipeline deploy \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u3042\u306a\u305f\u306e manifest.yml \u3092\u89e3\u6790\u3057\u3001 Application \u3068\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u30ea\u30fc\u30b8\u30e7\u30f3 \u306e CodePipeline \u306b Pipeline \u3092\u4f5c\u6210\u3057\u3001Pipeline \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002AWS \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3001\u3042\u308b\u3044\u306f copilot pipeline status \u30b3\u30de\u30f3\u30c9\u3067 Pipeline \u306e\u5b9f\u884c\u72b6\u6cc1\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 Info \u3082\u3057\u3042\u306a\u305f\u304c GitHub \u3042\u308b\u3044\u306f Bitbucket \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001Copilot \u306f CodeStar Connections \u3092\u5229\u7528\u3057\u3066\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u306e\u63a5\u7d9a\u3092\u4f5c\u6210\u3059\u308b\u624b\u52a9\u3051\u3092\u3057\u307e\u3059\u3002\u3053\u306e\u904e\u7a0b\u3067 GitHub \u3084 Bitbucket \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b AWS \u304c\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u8a8d\u8a3c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 (e.g. GitHub \u306e\u5834\u5408\u3001\"AWS Connector for GitHub\")\u3002Copilot \u3068 AWS \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306b\u3057\u305f\u304c\u3063\u3066\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002 \u30b9\u30c6\u30c3\u30d7 6: Pipeline \u306e Copilot \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b (\u30aa\u30d7\u30b7\u30e7\u30f3) Pipeline \u3092\u4f5c\u6210\u3057\u305f\u5f8c\u3001 buildspec.yml \u306e\u4ee5\u4e0b\u306e\u884c\u3092\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001Pipeline \u3067\u4f7f\u7528\u3059\u308b Copilot \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7ba1\u7406\u3067\u304d\u307e\u3059\u3002 ... # Copilot Linux \u30d0\u30a4\u30ca\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059 - wget -q https://ecs-cli-v2-release.s3.amazonaws.com/copilot-linux-v1.16.0 - mv ./copilot-linux-v1.16.0 ./copilot-linux ... \u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u624b\u52d5\u3067\u306e\u627f\u8a8d \u627f\u8a8d\u30b9\u30c6\u30c3\u30d7\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001 require_approval \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 'true' \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u306a\u304a CodePipeline \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u624b\u52d5\u3067\u64cd\u4f5c\u3057\u306a\u3044\u9650\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002 \u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3 v1.30.0 \u3067\u306f\u3001\u5404\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u307e\u305f\u306f Environment \u306e\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306b\u304a\u3044\u3066\u3001Pipeline \u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u633f\u5165\u3067\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u79fb\u884c\u3001\u30c6\u30b9\u30c8\u3001\u305d\u306e\u4ed6\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092 Pipeline Manifest \u306b\u76f4\u63a5\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 stages : - name : test require_approval : true pre_deployments : db_migration : # \u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u79f0 buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # buildspec \u3078\u306e\u30d1\u30b9 deployments : # \u4efb\u610f\u9805\u76ee\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # \u4efb\u610f\u9805\u76ee\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u9806\u5e8f buildspec Manifest \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3067 buildspec \u30d5\u30a1\u30a4\u30eb \u306e\u30d1\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002Copilot \u306e\u74b0\u5883\u5909\u6570 $COPILOT_APPLICATION_NAME \u3068 $COPILOT_ENVIRONMENT_NAME \u306f\u3001\u3053\u308c\u3089\u306e buildspecs \u5185\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u671f\u5f85\u3059\u308b \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u306e\u9806\u5e8f \u3092\u6307\u5b9a\u3059\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001 depends_on \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u9806\u5e8f\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 Info \u30c7\u30d7\u30ed\u30a4\u306e\u524d\u5f8c\u3084\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u7528\u306b\u751f\u6210\u3055\u308c\u305f CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001Pipeline \u3084 Application \u3068\u540c\u3058\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u306e VPC \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e buildspec \u3067 Copilot \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u304b\u3001\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u3067\u76f4\u63a5 Copilot \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u9806\u5e8f\u6307\u5b9a deployments \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u307e\u305f\u306f Environment \u306e\u30c7\u30d7\u30ed\u30a4\u9806\u5e8f\u3092 (Pipeline \u306e\u30bf\u30a4\u30d7\u306b\u5fdc\u3058\u3066) \u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d7\u30ed\u30a4\u306f\u4e26\u884c\u3057\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 (\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001[\u3053\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b]](../../blogs/release-v118.ja.md#controlling-order-of-deployments-in-a-pipeline)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002) \u30c6\u30b9\u30c8 \u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u306f\u3054\u304f\u4e00\u90e8\u3067\u3001\u5fc5\u305a\u3057\u3082\u5225\u306e buildspec \u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u5834\u5408\u306f\u3001 test_commands \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5c0e\u5165\u5f8c\u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u306f\u5c11\u6570\u306e\u307f\u3067\u3001\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u306a\u3044\u5834\u5408\u5225\u306e buildspec \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001 test_commands \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002 Warning \u30b9\u30c6\u30fc\u30b8\u5185\u306e post_deployments \u30d5\u30a3\u30fc\u30eb\u30c9\u3068 test_commands \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u524d\u3001\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001\u304a\u3088\u3073\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u306f\u3001 aws/codebuild/amazonlinux2-x86_64-standard:5.0 \u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066 CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u3001Amazon Linux 2 \u306e\u307b\u3068\u3093\u3069\u306e\u30b3\u30de\u30f3\u30c9 ( make \u3092\u542b\u3080) \u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u3092 Docker \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304b\uff1fCopilot \u3067\u306f CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e Docker \u30b5\u30dd\u30fc\u30c8\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u306e\u3067\u3001 docker build \u30b3\u30de\u30f3\u30c9\u3082\u540c\u69d8\u306b\u5229\u7528\u53ef\u80fd\u3067\u3059\u3002 \u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001Pipeline \u306f make test \u30b3\u30de\u30f3\u30c9\u3092\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3066\u5b9f\u884c\u3057\u3001\u30b3\u30de\u30f3\u30c9\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306e\u307f prod \u30b9\u30c6\u30fc\u30b8\u306b\u9032\u307f\u307e\u3059\u3002 name : demo-api-frontend-main version : 1 source : provider : GitHub properties : branch : main repository : https://github.com/kohidave/demo-api-frontend stages : - name : test # make test \u30b3\u30de\u30f3\u30c9\u3068 echo \u30b3\u30de\u30f3\u30c9\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306e\u307f # prod \u30b9\u30c6\u30fc\u30b8\u306b\u9032\u307f\u307e\u3059 test_commands : - make test - echo \"woo! Tests passed\" - name : prod Info AWS \u306e Nathan Peck \u304c\u7d20\u6674\u3089\u3057\u3044\u4f8b\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4f8b\u3067\u306f test_commands \u306b\u7279\u306b\u6ce8\u76ee\u3057\u3066\u3044\u307e\u3059\uff1ahttps://aws.amazon.com/blogs/containers/automatically-deploying-your-container-application-with-aws-copilot/ Pipeline \u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 \u3053\u308c\u3089\u306e\u30ab\u30b9\u30bf\u30e0\u8a2d\u5b9a\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3059\u3079\u3066\u4f7f\u3063\u3066\u3082\u3001\u671f\u5f85\u3059\u308b Ppeline \u3092\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001Copilot \u306e\u4e00\u6642\u56de\u907f\u7684\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308b Pipeline \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 \u3092\u3001 CDK \u307e\u305f\u306f YAML \u3092\u4f7f\u3063\u3066 Pipeline \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002","title":"Pipelines"},{"location":"ja/docs/concepts/pipelines/#why","text":"\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30ea\u30ea\u30fc\u30b9\u306b\u3064\u3044\u3066\u306e\u54f2\u5b66\u7684\u3059\u304e\u308b\u8a71\u306f\u3057\u307e\u305b\u3093\u304c\u3001\u679c\u305f\u3057\u3066\u30ea\u30ea\u30fc\u30b9\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u6301\u3064\u610f\u5473\u3068\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f copilot deploy \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3048\u3070\u624b\u5143\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u304b\u3089 Amazon ECS on AWS Fargate \u3078\u76f4\u63a5\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u306e\u306b\u3001\u306a\u305c\u308f\u3056\u308f\u3056\u4ef2\u4ecb\u3059\u308b\u4ed5\u7d44\u307f\u3092\u631f\u3080\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u826f\u3044\u8cea\u554f\u3067\u3059\u3002\u3042\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3068\u3063\u3066\u306f\u3001\u624b\u52d5\u3067\u306e deploy \u3067\u5341\u5206\u306a\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\u4e00\u65b9\u3067\u3001\u4f8b\u3048\u3070\u8907\u6570\u306e Environment \u3084\u3042\u308b\u3044\u306f\u81ea\u52d5\u30c6\u30b9\u30c8\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304d\u30ea\u30ea\u30fc\u30b9\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c\u8907\u96d1\u5316\u3057\u3066\u304f\u308b\u3068\u3001\u305d\u306e\u9000\u5c48\u306a\u4f5c\u696d\u3092\u4f55\u3089\u304b\u306e\u4ed5\u7d44\u307f\u306b\u30aa\u30d5\u30ed\u30fc\u30c9\u3057\u305f\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002\uff12\u3064\u306e Service \u304c\uff12\u3064\u306e(\u4f8b\u3048\u3070\u30c6\u30b9\u30c8\u74b0\u5883\u3068\u672c\u756a\u74b0\u5883\u306e\u3088\u3046\u306a) Environment \u5185\u306b\u305d\u308c\u305e\u308c\u3042\u308b\u3068\u3057\u3066\u3001\u305d\u308c\u3089\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u3092\u624b\u3067\u5b9f\u65bd\u3059\u308b\u3053\u3068\u306f\u9a5a\u304f\u307b\u3069\u306b\u9762\u5012\u306a\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002 CodePipeline \u306e\u3088\u3046\u306a\u81ea\u52d5\u5316\u3055\u308c\u305f\u30ea\u30ea\u30fc\u30b9\u30c4\u30fc\u30eb\u306f\u3001\u3042\u306a\u305f\u306e\u30ea\u30ea\u30fc\u30b9\u4f5c\u696d\u3092\u7ba1\u7406\u53ef\u80fd\u306a\u3082\u306e\u306b\u3059\u308b\u624b\u52a9\u3051\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u305f\u3068\u3048\u30ea\u30ea\u30fc\u30b9\u4f5c\u696d\u81ea\u4f53\u304c\u305d\u308c\u307b\u3069\u8907\u96d1\u306a\u3082\u306e\u3067\u306f\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001 git push \u3055\u3048\u3059\u308c\u3070\u5909\u66f4\u3092\u81ea\u52d5\u7684\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u4f53\u9a13\u306f\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u9b54\u6cd5\u306e\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3088\u306d \ud83c\udf08","title":"Why?"},{"location":"ja/docs/concepts/pipelines/#pipeline","text":"Copilot \u306f\u3044\u304f\u3064\u304b\u306e\u30b3\u30de\u30f3\u30c9\u3067 CodePipeline \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\u4f5c\u696d\u3092\u59cb\u3081\u308b\u524d\u306b\u3001\u307e\u305a\u306f\u6700\u7d42\u7684\u306b\u4f5c\u6210\u3055\u308c\u308b Pipeline \u306e\u69cb\u6210\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002Pipeline \u306f\u6b21\u306b\u6319\u3052\u308b\u57fa\u672c\u7684\u306a\u69cb\u9020\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 Source Stage - \u8a2d\u5b9a\u3057\u305f GitHub\u3001Bitbucket\u3001\u3042\u308b\u3044\u306f CodeCommit \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3001Pipeline \u306e\u5b9f\u884c\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002 Build Stage - \u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30b3\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u3001Service \u7528\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001\u3059\u3079\u3066\u306e Environment \u306e Amazon ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\u52a0\u3048\u3066\u3001 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3084\u3001 Lambda \u95a2\u6570 zip \u30d5\u30a1\u30a4\u30eb\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb \u306a\u3069\u306e\u3059\u3079\u3066\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u30ea\u30dd\u30b8\u30c8\u30ea\u30db\u30b9\u30c8\u304b\u3089 pull \u3055\u308c\u305f\u5f8c\u306b\u3001 Service \u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u304c\u30d3\u30eb\u30c9\u3055\u308c\u3001 \u5404\u74b0\u5883\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\u52a0\u3048\u3066\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3001Lambda \u95a2\u6570 zip \u30d5\u30a1\u30a4\u30eb\u3001\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u3059\u3079\u3066\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u304c S3\u3000\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 Deploy Stages - \u30d3\u30eb\u30c9\u304c\u7d42\u308f\u308b\u3068\u3001\u4e00\u90e8\u3042\u308b\u3044\u306f\u3059\u3079\u3066\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3084\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u306b\u624b\u52d5\u627f\u8a8d\u3092\u631f\u3080\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 Copilot \u3092\u4f7f\u3063\u3066 CodePipeline \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u6e08\u307e\u305b\u305f\u3089\u3001\u3042\u3068\u306f GitHub\u3001Bitbucket\u3001\u3042\u308b\u3044\u306f CodeCommit \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u3042\u3068\u306f CodePipeline \u304c\u30c7\u30d7\u30ed\u30a4\u307e\u3067\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002 CodePipeline \u306b\u3064\u3044\u3066\u3088\u308a\u6df1\u304f\u5b66\u3073\u305f\u3044\u5834\u5408\u306f\u3001 CodePipeline \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Pipeline \u306e\u69cb\u6210"},{"location":"ja/docs/concepts/pipelines/#3-pipeline","text":"Pipeline \u306e\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u624b\u9806\u306f\uff13\u3064\u3067\u3059\u3002 \u6700\u521d\u306b Pipeline \u306e\u4f5c\u6210\u6e96\u5099\u3068\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002 \u6b21\u306b\u3001 copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30df\u30c3\u30c8\u3057\u3066\u3001\u30ea\u30e2\u30fc\u30c8 Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30d7\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002 \u6700\u5f8c\u306b\u30af\u30e9\u30a6\u30c9\u4e0a\u3078 Pipeline \u3092\u4f5c\u6210\u3057\u3066\u5b8c\u4e86\u3067\u3059\uff01 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u3067\u4ee5\u4e0b\u306e\uff13\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 $ copilot pipeline init $ git add copilot/ && git commit -m \"Adding pipeline artifacts\" && git push $ copilot pipeline deploy Note \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u304c Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u3001 pipeline deploy \u3092\u5b9f\u884c\u3059\u308b\u9593\u306b\u3001\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9( Service \u307e\u305f\u306f Job ) \u3092\u958b\u59cb\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u2728 Application \u30a2\u30ab\u30a6\u30f3\u30c8 \u306b\u65b0\u3057\u3044 Pipeline \u304c\u4f5c\u6210\u3055\u308c\u305f\u306f\u305a\u3067\u3059\uff01\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u3001\u3082\u3046\u5c11\u3057\u6df1\u304f\u77e5\u308a\u305f\u3044\u3067\u3059\u3088\u306d\uff1f\u8aad\u307f\u9032\u3081\u307e\u3057\u3087\u3046\uff01","title":"3 \u30b9\u30c6\u30c3\u30d7\u3067\u4f5c\u308b Pipeline"},{"location":"ja/docs/concepts/pipelines/#pipeline_1","text":"","title":"\u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u898b\u308b Pipeline \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"},{"location":"ja/docs/concepts/pipelines/#1-pipeline","text":"Pipeline \u306e\u8a2d\u5b9a\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30ec\u30d9\u30eb\u3067\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3082\u3057\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306b\u3042\u308b Service \u304c\uff11\u3064\u306e\u5834\u5408\u3001Pipeline \u306f\u305d\u306e Service \u306b\u3064\u3044\u3066\u306e\u307f\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3082\u3057\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u5185\u306b\u8907\u6570\u306e Service \u304c\u3042\u308b\u5834\u5408\u3001Pipeline \u306f\u305d\u308c\u3089\u5168\u3066\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002Pipeline \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u59cb\u3081\u308b\u306b\u306f\u3001Service (\u3042\u308b\u3044\u306f Service \u7fa4)\u304c\u3042\u308b Application \u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b cd \u30b3\u30de\u30f3\u30c9\u306a\u3069\u3067\u5165\u308a\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 copilot pipeline init \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u3067\u306f\u307e\u3060\u30af\u30e9\u30a6\u30c9\u4e0a\u306e Pipeline \u306f\u4f5c\u6210\u3057\u307e\u305b\u3093\u304c\u3001Pipeline \u4f5c\u6210\u306b\u5fc5\u8981\u306a\u3044\u304f\u3064\u304b\u306e\u30d5\u30a1\u30a4\u30eb\u3092 copilot/pipelines \u4ee5\u4e0b\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002 Pipeline name : \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u540d\u524d\u3092 [repository name]-[branch name] \u3068\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002( \u5c0b\u306d\u3089\u308c\u305f\u5834\u5408\u3001 \u30c7\u30d5\u30a9\u30eb\u30c8\u540d\u3092\u53d7\u3051\u5165\u308c\u308b\u306b\u306f 'Enter' \u30dc\u30bf\u30f3\u3092\u5165\u529b\u3057\u307e\u3059)\u3002\u3053\u308c\u306b\u3088\u308a\u8907\u6570\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u305f\u5834\u5408\u306b\u3001\u30d6\u30e9\u30f3\u30c1\u3054\u3068\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u5f93\u3046\u5834\u5408\u306b\u3046\u307e\u304f\u6a5f\u80fd\u3067\u3057\u307e\u3059\u3002 Pipeline type : 'Workloads' \u307e\u305f\u306f ' Environments ' \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001Pipeline \u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u305f\u3068\u304d\u306b\u4f55\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002 Release order : \u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u3092\u5c0b\u306d\u3089\u308c\u307e\u3059 - \u3069\u306e Environment \u304b\u3089\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u65bd\u3057\u305f\u3044\u304b\u3001\u305d\u306e\u9806\u756a\u306b\u3042\u308f\u305b\u3066 Environment \u3092\u9078\u629e\u3057\u307e\u3057\u3087\u3046\u3002(\u8907\u6570\u306e Environment \u306b\u5bfe\u3057\u3066\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093)\u3002\u6700\u521d\u306b test Environment \u3078\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u305d\u306e\u5f8c prod Environment \u3078\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3063\u305f\u8a2d\u5b9a\u304c\u3088\u304f\u3042\u308b\u9806\u756a\u3067\u3057\u3087\u3046\u3002 Tracking repository : \u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u3092\u9078\u629e\u3059\u308b\u3068\u3001\u6b21\u306b\u3069\u306e Git \u30ea\u30dd\u30b8\u30c8\u30ea\u3092 CodePipeline \u304b\u3089\u30c8\u30e9\u30c3\u30af\u3057\u305f\u3044\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u9078\u3076\u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30d7\u30c3\u30b7\u30e5\u304c\u3001CodePipeline \u306e Pipeline \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u306a\u308a\u307e\u3059\u3002(\u8a2d\u5b9a\u3057\u305f\u3044\u5bfe\u8c61\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3053\u3053\u3067\u30ea\u30b9\u30c8\u306b\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u3001 --url \u30d5\u30e9\u30b0\u3067\u660e\u793a\u7684\u306b Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306e URL \u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002) Tracking branch : \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3059\u308b\u3068\u3001 Copilot \u306f\u73fe\u5728\u306e\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1\u3092\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5229\u7528\u3059\u308b\u30d6\u30e9\u30f3\u30c1\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30b9\u30c6\u30c3\u30d7 2 \u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002","title":"\u30b9\u30c6\u30c3\u30d7 1: Pipeline \u306e\u8a2d\u5b9a"},{"location":"ja/docs/concepts/pipelines/#2-pipeline-manifest","text":"Service \u306f\u30b7\u30f3\u30d7\u30eb\u306a Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u6301\u3061\u307e\u3059\u3002\u540c\u69d8\u306b\u3001Pipeline \u306b\u3082 Manifest \u304c\u3042\u308a\u307e\u3059\u3002 pipeline init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 copilot/pipelines/[your pipeline name] \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b manifest.yml \u3068 buildspec.yml \u3068\u3044\u3046\uff12\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 manifest.yml \u306e\u4e2d\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002 (\u3053\u3053\u3067\u306f \"api-frontend\" \u3068\u3044\u3046 Service \u304c \"test\" \u3068 \"prod\" \u306e\uff12\u3064\u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3082\u306e\u3068\u4eee\u5b9a\u3057\u307e\u3057\u3087\u3046) # Pipeline \u540d \"demo-api-frontend-main\" \u306e Manifest # \u3053\u306e YAML \u30d5\u30a1\u30a4\u30eb\u306f Pipeline \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u8ffd\u8de1\u3059\u308b\u30bd\u30fc\u30b9\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u3001Environment \u306e\u30c7\u30d7\u30ed\u30a4\u9806\u5e8f\u3092\u6307\u5b9a\u3057\u307e\u3059 # \u8a73\u7d30\u306f\u3053\u3061\u3089: https://aws.github.io/copilot-cli/ja/docs/manifest/pipeline/ # Pipeline \u540d name : demo-api-frontend-main # \u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u30b9\u30ad\u30fc\u30de\u30d0\u30fc\u30b8\u30e7\u30f3 version : 1 # \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f Pipeline \u306e\u5b9f\u884c\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059 source : # \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u540d\u3092\u8a18\u8ff0\u3057\u307e\u3059 # (\u4f8b: GitHub, Bitbucket, CodeCommit) provider : GitHub # \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5834\u6240\u3092\u8ffd\u52a0\u3067\u6307\u5b9a\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3059 properties : branch : main repository : https://github.com/kohidave/demo-api-frontend # \u30aa\u30d7\u30b7\u30e7\u30f3: \u65e2\u5b58\u306e CodeStar Connections \u3067\u4f5c\u6210\u3055\u308c\u305f\u63a5\u7d9a\u540d\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059 # connection_name: a-connection # \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f Pipeline \u306e\u30c7\u30d7\u30ed\u30a4\u5148\u3068\u306a\u308b Environment \u306e\u9806\u5e8f\u3092\u5b9a\u7fa9\u3057\u307e\u3059 stages : - # Environment \u540d name : test test_commands : - make test - echo \"woo! Tests passed\" - # Environment \u540d name : prod # requires_approval: true manifest.yml \u3067\u5229\u7528\u53ef\u80fd\u306a\u5168\u3066\u306e\u8a2d\u5b9a\u9805\u76ee\u306b\u3064\u3044\u3066\u306f Pipeline Manifest \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u5927\u304d\u304f 3 \u3064\u306e\u30d1\u30fc\u30c4\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u521d\u306e name \u30d5\u30a3\u30fc\u30eb\u30c9\u306f Pipeline \u306b\u4f5c\u6210\u3055\u308c\u308b\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u540d\u79f0\u3067\u3059\u3002\u305d\u3057\u3066 source \u30bb\u30af\u30b7\u30e7\u30f3\u306f Pipeline \u304c\u30c8\u30e9\u30c3\u30af\u3059\u308b\u30bd\u30fc\u30b9\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u305d\u306e\u30d6\u30e9\u30f3\u30c1\u3068\u3044\u3063\u305f\u8a73\u7d30\u3092\u5b9a\u7fa9\u3057\u3001\u6700\u5f8c\u306e stages \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3053\u306e Pipeline \u304c\u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u305d\u306e\u3082\u306e\u307e\u305f\u306f Pipeline \u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u969b\u306e\u30c7\u30d7\u30ed\u30a4\u5148\u306e Environment \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u3044\u3064\u3067\u3082\u5909\u66f4\u53ef\u80fd\u3067\u3059\u304c\u3001\u5909\u66f4\u5f8c\u306f Git \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30b3\u30df\u30c3\u30c8\u3068\u30d7\u30c3\u30b7\u30e5\u3001\u305d\u306e\u5f8c copilot pipeline deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u3068\u3057\u3066\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u307e\u305f\u306f\u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u3092\u5909\u66f4\u3057\u305f\u3044\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f\u3092\u6307\u5b9a\u3057\u305f\u3044\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u5f8c\u306b\u5b9f\u884c\u3059\u308b Pipeline \u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u305f\u3044\u3001\u30c8\u30e9\u30c3\u30af\u3059\u308b\u30d6\u30e9\u30f3\u30c1\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u969b\u306b\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u307e\u305f\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u306b\u624b\u52d5\u306e\u627f\u8a8d\u30b9\u30c6\u30c3\u30d7\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059 ( \u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u3092\u53c2\u7167)\u3002\u3042\u308b\u3044\u306f\u3082\u3057\u3059\u3067\u306b CodeStar Connections \u306b\u63a5\u7d9a\u6e08\u307f\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3042\u308a\u3001Copilot \u3067\u65b0\u305f\u306b\u4f5c\u6210\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u65e2\u5b58\u306e\u3082\u306e\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u63a5\u7d9a\u540d\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002","title":"\u30b9\u30c6\u30c3\u30d7 2: Pipeline \u7528 Manifest \u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0 (\u30aa\u30d7\u30b7\u30e7\u30f3)"},{"location":"ja/docs/concepts/pipelines/#3-buildspec","text":"pipeline init \u30b3\u30de\u30f3\u30c9\u3067\u306f\u3001 manifest.yml \u3068\u4e00\u7dd2\u306b buildspec.yml \u3082 copilot/pipelines/[your pipeline name] \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u306e buldspec.yml \u306b\u306f\u30d3\u30eb\u30c9\u3068\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d7\u30c3\u30b7\u30e5\u306b\u95a2\u3059\u308b\u6307\u793a\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3057 docker build \u3068\u4e00\u7dd2\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3084\u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30af\u306e\u3088\u3046\u306a\u8ffd\u52a0\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3001buildspec \u306e build \u30d5\u30a7\u30fc\u30ba\u306b\u305d\u308c\u3089\u306e\u30b3\u30de\u30f3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5b9f\u969b\u306b\u3053\u306e buildspec \u304c\u5b9f\u884c\u3055\u308c\u308b\u969b\u306b\u306f\u3001\u5f8c\u65b9\u4e92\u63db\u6027\u306e\u89b3\u70b9\u304b\u3089 pipeline init \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u306b\u5229\u7528\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Copilot \u30d0\u30a4\u30ca\u30ea\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3001\u5229\u7528\u3055\u308c\u307e\u3059\u3002 \u3042\u308b\u3044\u306f\u3001CodeBuild \u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u72ec\u81ea\u306e buildspec \u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 manifest.yml file \u3067\u3001\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 build : buildspec :","title":"\u30b9\u30c6\u30c3\u30d7 3: Buildspec \u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0 (\u30aa\u30d7\u30b7\u30e7\u30f3)"},{"location":"ja/docs/concepts/pipelines/#4","text":"manifest.yml \u3001 buildspec.yml \u3001\u305d\u3057\u3066 .workspace \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u305f\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002 copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u542b\u307e\u308c\u305f\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3001Pipeline \u304c build \u30b9\u30c6\u30fc\u30b8\u3092\u6b63\u3057\u304f\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002","title":"\u30b9\u30c6\u30c3\u30d7 4: \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30c3\u30b7\u30e5\u3059\u308b"},{"location":"ja/docs/concepts/pipelines/#5-pipeline","text":"\u3053\u3053\u304b\u3089\u304c\u697d\u3057\u3044\u30d1\u30fc\u30c8\u3067\u3059\uff01\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\uff01 copilot pipeline deploy \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u3042\u306a\u305f\u306e manifest.yml \u3092\u89e3\u6790\u3057\u3001 Application \u3068\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u30ea\u30fc\u30b8\u30e7\u30f3 \u306e CodePipeline \u306b Pipeline \u3092\u4f5c\u6210\u3057\u3001Pipeline \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002AWS \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3001\u3042\u308b\u3044\u306f copilot pipeline status \u30b3\u30de\u30f3\u30c9\u3067 Pipeline \u306e\u5b9f\u884c\u72b6\u6cc1\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 Info \u3082\u3057\u3042\u306a\u305f\u304c GitHub \u3042\u308b\u3044\u306f Bitbucket \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001Copilot \u306f CodeStar Connections \u3092\u5229\u7528\u3057\u3066\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u306e\u63a5\u7d9a\u3092\u4f5c\u6210\u3059\u308b\u624b\u52a9\u3051\u3092\u3057\u307e\u3059\u3002\u3053\u306e\u904e\u7a0b\u3067 GitHub \u3084 Bitbucket \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b AWS \u304c\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u8a8d\u8a3c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 (e.g. GitHub \u306e\u5834\u5408\u3001\"AWS Connector for GitHub\")\u3002Copilot \u3068 AWS \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306b\u3057\u305f\u304c\u3063\u3066\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002","title":"\u30b9\u30c6\u30c3\u30d7 5: Pipeline \u306e\u4f5c\u6210"},{"location":"ja/docs/concepts/pipelines/#6-pipeline-copilot","text":"Pipeline \u3092\u4f5c\u6210\u3057\u305f\u5f8c\u3001 buildspec.yml \u306e\u4ee5\u4e0b\u306e\u884c\u3092\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001Pipeline \u3067\u4f7f\u7528\u3059\u308b Copilot \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7ba1\u7406\u3067\u304d\u307e\u3059\u3002 ... # Copilot Linux \u30d0\u30a4\u30ca\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059 - wget -q https://ecs-cli-v2-release.s3.amazonaws.com/copilot-linux-v1.16.0 - mv ./copilot-linux-v1.16.0 ./copilot-linux ...","title":"\u30b9\u30c6\u30c3\u30d7 6: Pipeline \u306e Copilot \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b (\u30aa\u30d7\u30b7\u30e7\u30f3)"},{"location":"ja/docs/concepts/pipelines/#_1","text":"","title":"\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"ja/docs/concepts/pipelines/#_2","text":"\u627f\u8a8d\u30b9\u30c6\u30c3\u30d7\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001 require_approval \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 'true' \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u306a\u304a CodePipeline \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u624b\u52d5\u3067\u64cd\u4f5c\u3057\u306a\u3044\u9650\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002","title":"\u624b\u52d5\u3067\u306e\u627f\u8a8d"},{"location":"ja/docs/concepts/pipelines/#_3","text":"v1.30.0 \u3067\u306f\u3001\u5404\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u307e\u305f\u306f Environment \u306e\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306b\u304a\u3044\u3066\u3001Pipeline \u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u633f\u5165\u3067\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u79fb\u884c\u3001\u30c6\u30b9\u30c8\u3001\u305d\u306e\u4ed6\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092 Pipeline Manifest \u306b\u76f4\u63a5\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 stages : - name : test require_approval : true pre_deployments : db_migration : # \u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u79f0 buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/buildspec.yml # buildspec \u3078\u306e\u30d1\u30b9 deployments : # \u4efb\u610f\u9805\u76ee\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f orders : warehouse : frontend : depends_on : [ orders , warehouse ] post_deployments : db_migration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/post_buildspec.yml integration : buildspec : copilot/pipelines/demo-api-frontend-main/buildspecs/integ-buildspec.yml depends_on : [ db_migration ] # \u4efb\u610f\u9805\u76ee\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u9806\u5e8f buildspec Manifest \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3067 buildspec \u30d5\u30a1\u30a4\u30eb \u306e\u30d1\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002Copilot \u306e\u74b0\u5883\u5909\u6570 $COPILOT_APPLICATION_NAME \u3068 $COPILOT_ENVIRONMENT_NAME \u306f\u3001\u3053\u308c\u3089\u306e buildspecs \u5185\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u671f\u5f85\u3059\u308b \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u306e\u9806\u5e8f \u3092\u6307\u5b9a\u3059\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001 depends_on \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u9806\u5e8f\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 Info \u30c7\u30d7\u30ed\u30a4\u306e\u524d\u5f8c\u3084\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u7528\u306b\u751f\u6210\u3055\u308c\u305f CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001Pipeline \u3084 Application \u3068\u540c\u3058\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002\u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\u306e Environment \u306e VPC \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e buildspec \u3067 Copilot \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u304b\u3001\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u3067\u76f4\u63a5 Copilot \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002","title":"\u30c7\u30d7\u30ed\u30a4\u524d\u5f8c\u306e\u30a2\u30af\u30b7\u30e7\u30f3"},{"location":"ja/docs/concepts/pipelines/#_4","text":"deployments \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u307e\u305f\u306f Environment \u306e\u30c7\u30d7\u30ed\u30a4\u9806\u5e8f\u3092 (Pipeline \u306e\u30bf\u30a4\u30d7\u306b\u5fdc\u3058\u3066) \u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d7\u30ed\u30a4\u306f\u4e26\u884c\u3057\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002 (\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001[\u3053\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b]](../../blogs/release-v118.ja.md#controlling-order-of-deployments-in-a-pipeline)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002)","title":"\u9806\u5e8f\u6307\u5b9a"},{"location":"ja/docs/concepts/pipelines/#_5","text":"\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u306f\u3054\u304f\u4e00\u90e8\u3067\u3001\u5fc5\u305a\u3057\u3082\u5225\u306e buildspec \u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u5834\u5408\u306f\u3001 test_commands \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u5c0e\u5165\u5f8c\u306e\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u306f\u5c11\u6570\u306e\u307f\u3067\u3001\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u306a\u3044\u5834\u5408\u5225\u306e buildspec \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001 test_commands \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002 Warning \u30b9\u30c6\u30fc\u30b8\u5185\u306e post_deployments \u30d5\u30a3\u30fc\u30eb\u30c9\u3068 test_commands \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u524d\u3001\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001\u304a\u3088\u3073\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u306f\u3001 aws/codebuild/amazonlinux2-x86_64-standard:5.0 \u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066 CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u3001Amazon Linux 2 \u306e\u307b\u3068\u3093\u3069\u306e\u30b3\u30de\u30f3\u30c9 ( make \u3092\u542b\u3080) \u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u3092 Docker \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304b\uff1fCopilot \u3067\u306f CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e Docker \u30b5\u30dd\u30fc\u30c8\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u306e\u3067\u3001 docker build \u30b3\u30de\u30f3\u30c9\u3082\u540c\u69d8\u306b\u5229\u7528\u53ef\u80fd\u3067\u3059\u3002 \u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001Pipeline \u306f make test \u30b3\u30de\u30f3\u30c9\u3092\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3066\u5b9f\u884c\u3057\u3001\u30b3\u30de\u30f3\u30c9\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306e\u307f prod \u30b9\u30c6\u30fc\u30b8\u306b\u9032\u307f\u307e\u3059\u3002 name : demo-api-frontend-main version : 1 source : provider : GitHub properties : branch : main repository : https://github.com/kohidave/demo-api-frontend stages : - name : test # make test \u30b3\u30de\u30f3\u30c9\u3068 echo \u30b3\u30de\u30f3\u30c9\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306e\u307f # prod \u30b9\u30c6\u30fc\u30b8\u306b\u9032\u307f\u307e\u3059 test_commands : - make test - echo \"woo! Tests passed\" - name : prod Info AWS \u306e Nathan Peck \u304c\u7d20\u6674\u3089\u3057\u3044\u4f8b\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4f8b\u3067\u306f test_commands \u306b\u7279\u306b\u6ce8\u76ee\u3057\u3066\u3044\u307e\u3059\uff1ahttps://aws.amazon.com/blogs/containers/automatically-deploying-your-container-application-with-aws-copilot/","title":"\u30c6\u30b9\u30c8"},{"location":"ja/docs/concepts/pipelines/#pipeline_2","text":"\u3053\u308c\u3089\u306e\u30ab\u30b9\u30bf\u30e0\u8a2d\u5b9a\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3059\u3079\u3066\u4f7f\u3063\u3066\u3082\u3001\u671f\u5f85\u3059\u308b Ppeline \u3092\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001Copilot \u306e\u4e00\u6642\u56de\u907f\u7684\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308b Pipeline \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 \u3092\u3001 CDK \u307e\u305f\u306f YAML \u3092\u4f7f\u3063\u3066 Pipeline \u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002","title":"Pipeline \u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"},{"location":"ja/docs/concepts/services/","text":"\u30b3\u30f3\u30c6\u30ca\u306e\u7d20\u6674\u3089\u3057\u3044\u7279\u5fb4\u306e\uff11\u3064\u306f\u3001\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u7d42\u308f\u3063\u305f\u3089\u305d\u308c\u3092\u7c21\u5358\u306b docker run \u30b3\u30de\u30f3\u30c9\u3067\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u306b\u3066\u5b9f\u884c\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002Copilot \u306f\u3001 copilot init \u30b3\u30de\u30f3\u30c9\u3067\u3053\u306e\u30b3\u30f3\u30c6\u30ca\u306e AWS \u4e0a\u3067\u306e\u5bb9\u6613\u306a\u5b9f\u884c\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3001Amazon ECR \u3078\u306e\u30d7\u30c3\u30b7\u30e5\u3001\u30b5\u30fc\u30d3\u30b9\u306e\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u304b\u3064\u30bb\u30ad\u30e5\u30a2\u306a\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u3044\u3046\u4e00\u9023\u306e\u6d41\u308c\u304c Copilot \u306b\u3088\u3063\u3066\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002 Service \u306e\u4f5c\u6210 Service \u3092\u4f5c\u6210\u3057\u3066 AWS \u4e0a\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u306f\u8907\u6570\u3042\u308a\u307e\u3059\u3002\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f\u3001Dockerfile \u304c\u7f6e\u304b\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067 init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002 $ copilot init \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u308c\u304b\u3089\u4f5c\u308b Service \u3092\u3069\u306e Application \u306b\u6240\u5c5e\u3055\u305b\u305f\u3044\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002Application \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u65b0\u898f\u3067\u306e\u4f5c\u6210\u3092\u4fc3\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001Copilot \u306f\u3042\u306a\u305f\u304c\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u308b Service \u306e \u30bf\u30a4\u30d7 \u3092\u5c0b\u306d\u307e\u3059\u3002 Service \u306e\u30bf\u30a4\u30d7\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f Dockerfile \u5185\u3067\u8a18\u8ff0\u3055\u308c\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3084\u958b\u653e\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u691c\u77e5\u3057\u3001\u305d\u306e\u307e\u307e\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u3042\u306a\u305f\u306b\u78ba\u8a8d\u3057\u307e\u3059\u3002 Service \u30bf\u30a4\u30d7\u306e\u9078\u629e \u3053\u3053\u306b\u8fbf\u308a\u7740\u304f\u307e\u3067\u306e\u9593\u306b\u3001\u300cCopilot \u306f Service \u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u3092\u81ea\u52d5\u7684\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u300d\u3068\u3044\u3063\u305f\u8aac\u660e\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u3067\u306f\u3001Copilot \u306f\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u304c\u4f55\u304b\u3092\u77e5\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u305d\u306e\u79d8\u5bc6\u306f\u3001Service \u306e\u4f5c\u6210\u6642\u306b Copilot \u304c Service \u306e \u30bf\u30a4\u30d7 \u3092\u5c0b\u306d\u3066\u3044\u308b\u3053\u3068\u306b\u3042\u308a\u307e\u3059\u3002 \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u63a5\u7d9a\u53ef\u80fd\u306a Service \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a Service \u3092\u4f5c\u308b\u969b\u306e\u9078\u629e\u80a2\u306b\u306f\u6b21\u306e 3 \u3064\u304c\u3042\u308a\u307e\u3059\u3002 \"Request-Driven Web Service\" - Service \u5b9f\u884c\u74b0\u5883\u3068\u3057\u3066 AWS App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \"Static Site\" - \u9759\u7684 Web \u30b5\u30a4\u30c8\u7528\u306b\u5c02\u7528\u306e CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3068 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002 \"Load Balanced Web Service\" - Service \u5b9f\u884c\u74b0\u5883\u3068\u3057\u3066 Appplication Load Balancer (ALB)\u3001Network Load Balancer\u3001\u307e\u305f\u306f\u305d\u306e\u4e21\u65b9\u3092\u4f5c\u6210\u3057\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3001ECS \u30b5\u30fc\u30d3\u30b9 (Fargate) \u3092\u5229\u7528\u3057\u307e\u3059\u3002 Request-Driven Web Service AWS App Runner \u3092\u5229\u7528\u3059\u308b Service \u3067\u3001\u53d7\u3051\u4ed8\u3051\u308b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u5fdc\u3058\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3057\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u306a\u3044\u5834\u5408\u306f\u8a2d\u5b9a\u3055\u308c\u305f\u6700\u4f4e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u307e\u3067\u30b9\u30b1\u30fc\u30eb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u306e\u5927\u304d\u306a\u5909\u5316\u3084\u6052\u5e38\u7684\u306a\u5c11\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u898b\u8fbc\u307e\u308c\u308b HTTP \u30b5\u30fc\u30d3\u30b9\u306b\u3068\u3063\u3066\u3082\u3088\u308a\u30b3\u30b9\u30c8\u52b9\u7387\u306e\u9ad8\u3044\u9078\u629e\u80a2\u3067\u3059\u3002 ECS \u3068\u306f\u7570\u306a\u308a\u3001 App Runner \u30b5\u30fc\u30d3\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f VPC \u3068\u306f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 Egress \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092 VPC \u7d4c\u7531\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f\u3001 Manifest \u5185\u306e network \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 Static Site Amazon CloudFront \u3067\u914d\u4fe1\u3055\u308c\u3001S3 \u3067\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u305f\u9759\u7684 Web \u30b5\u30a4\u30c8\u3067\u3059\u3002Copilot \u306f\u3001\u9759\u7684 Web \u30b5\u30a4\u30c8\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u7528\u306b\u69cb\u6210\u3055\u308c\u305f\u65b0\u3057\u3044 S3 \u30d0\u30b1\u30c3\u30c8\u3078\u9759\u7684\u30a2\u30bb\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 CloudFront \u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (CDN) \u3092\u4f7f\u7528\u3057\u305f\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u3088\u308a\u3001\u30b3\u30b9\u30c8\u3068\u901f\u5ea6\u3092\u6700\u9069\u5316\u3057\u307e\u3059\u3002\u518d\u30c7\u30d7\u30ed\u30a4\u306e\u305f\u3073\u306b\u3001\u4ee5\u524d\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u7121\u52b9\u5316\u3055\u308c\u307e\u3059\u3002 Load Balanced Web Service Application Load Balancer\u3001Network Load Balancer\u3001\u307e\u305f\u306f\u4e21\u65b9\u3092\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5165\u308a\u53e3\u3068\u3057\u3066 Fargate \u4e0a\u3067\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b ECS \u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 \u5b89\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u898b\u8fbc\u307e\u308c\u308b\u5834\u5408\u3001Service \u304b\u3089 VPC \u5185\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u3042\u308b\u3044\u306f\u3088\u308a\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u306e\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u9069\u3057\u305f HTTP \u307e\u305f\u306f TCP \u30b5\u30fc\u30d3\u30b9\u306e\u9078\u629e\u80a2\u3067\u3059\u3002 Application Load Balancer \u306f Environment \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3042\u308a\u3001Environment \u5185\u306e\u5168\u3066\u306e Load Balanced Web Service \u3067\u5171\u6709\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002v1.32.0 \u3067\u306f\u3001 Load Balanced Web Service \u306e Manifest \u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u65e2\u5b58\u306e ALB \u3092 Service \u30ec\u30d9\u30eb\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5bfe\u7167\u7684\u306b\u3001 Network Load Balancer \u306f Service \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3042\u308a\u3001 Service \u9593\u3067\u306f\u5171\u6709\u3055\u308c\u307e\u305b\u3093\u3002 \u4e0b\u56f3\u306f Application Load Balancer \u306e\u307f\u3092\u542b\u3080 Load Balanced Web Service \u306e\u56f3\u3067\u3059\u3002 Backend Service VPC \u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3055\u305b\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c\u3001Application \u5185\u306e\u4ed6\u306e Service \u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3044\u3046\u5834\u5408\u306f\u3001 Backend Service \u3092 \u4f5c\u308a\u307e\u3057\u3087\u3046\u3002Copilot \u306f AWS Fargate \u3067\u5b9f\u884c\u3055\u308c\u308b ECS \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u304c\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u5411\u3051\u3066\u958b\u653e\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u304a\u3001Backend Service \u3067\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b Backend Service \u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Worker Service Worker Services \u306f pub/sub \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u306b\u3088\u308b\u975e\u540c\u671f\u306e\u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u30a4\u30d9\u30f3\u30c8\u3092 Amazon SNS \u30c8\u30d4\u30c3\u30af \u306b \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 \u3067\u304d\u3001\u305d\u308c\u3092 \"Worker Service\" \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Worker Service \u306f\u6b21\u306e\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002 \u30c8\u30d4\u30c3\u30af\u306b\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u901a\u77e5\u3092\u51e6\u7406\u3059\u308b 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e Amazon SQS \u30ad\u30e5\u30fc \u3068\u3001\u5931\u6557\u3057\u305f\u901a\u77e5\u3092\u51e6\u7406\u3059\u308b \u30c7\u30c3\u30c9\u30ec\u30bf\u30fc\u30ad\u30e5\u30fc SQS \u30ad\u30e5\u30fc\u3092\u30dd\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u975e\u540c\u671f\u3067\u51e6\u7406\u3059\u308b\u6a29\u9650\u3092\u6301\u3064 AWS Fargate \u4e0a\u306e Amazon ECS \u30b5\u30fc\u30d3\u30b9 Manifest \u3068\u8a2d\u5b9a copilot init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u304c manifest.yml \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092 copilot/[service name]/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u4f5c\u6210\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u306f Service \u7528\u306e\u5171\u901a\u8a2d\u5b9a\u3084\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6301\u3061\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308b\u304b\u306f\u3042\u306a\u305f\u304c\u9078\u629e\u3057\u305f Service \u306e\u30bf\u30a4\u30d7\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u304c\u3001\u5171\u901a\u306e\u8a2d\u5b9a\u306b\u306f\u4f8b\u3048\u3070 Service \u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u3084 CPU \u306e\u30ea\u30bd\u30fc\u30b9\u91cf\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3001\u74b0\u5883\u5909\u6570\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u542b\u307e\u308c\u307e\u3059\u3002 front-end \u3068\u3044\u3046\u540d\u524d\u306e Load Balanced Web Service \u7528\u306b\u4f5c\u3089\u308c\u305f Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002 name : front-end type : Load Balanced Web Service image : # Service \u7528\u306e Dockerfile \u307e\u3067\u306e\u30d1\u30b9 build : ./Dockerfile # \u30b3\u30f3\u30c6\u30ca\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u958b\u653e\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7 port : 8080 http : # \u3053\u306e\u30d1\u30b9\u306b\u5c4a\u3044\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c Service \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059 # \u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f \"/\" \u3092\u30d1\u30b9\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059 path : '/' # \u4efb\u610f\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30d1\u30b9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059. \u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059. # healthcheck: '/' # \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570 cpu : 256 # \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf (MiB) memory : 512 # Service \u3068\u3057\u3066\u5b9f\u884c\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u30bf\u30b9\u30af\u6570 count : 1 # \u4ee5\u4e0b\u306f\u3088\u308a\u9ad8\u5ea6\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u7528\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u9805\u76ee\u3067\u3059 # variables : # \u30ad\u30fc\u30fb\u5024\u306e\u30da\u30a2\u3067\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059 LOG_LEVEL : info #secrets: # AWS Systems Manager (SSM) \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u304b\u3089\u79d8\u5bc6\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059 # GITHUB_TOKEN: GH_SECRET_TOKEN # \u30ad\u30fc\u306b\u74b0\u5883\u5909\u6570\u540d\u3001\u5024\u306b\u306f SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u8a18\u8ff0\u3057\u307e\u3059 # Environment \u3054\u3068\u306b\u4e0a\u8a18\u3067\u8a2d\u5b9a\u3055\u308c\u305f\u5024\u3092\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059 environments : prod : count : 2 # \"prod\" Environment \u3067\u306f\u30bf\u30b9\u30af\u30922\u3064\u5b9f\u884c\u3057\u307e\u3059 Manifest \u30d5\u30a1\u30a4\u30eb\u306e\u4ed5\u69d8\u306b\u3064\u3044\u3066\u5b66\u3076\u306b\u306f\u3001 Manifest \u30da\u30fc\u30b8\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Service \u306e\u30c7\u30d7\u30ed\u30a4 Service \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u305f\u3089\u3001\u3042\u308b\u3044\u306f Manifest \u30d5\u30a1\u30a4\u30eb\u306b\u5909\u66f4\u3092\u52a0\u3048\u305f\u3089\u3001deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002 $ copilot deploy \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u7d9a\u3051\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f5c\u696d\u304c\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9 Service \u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u5909\u63db \u8ffd\u52a0\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0 Service \u3068\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306e CloudFormation \u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4 \u3082\u3057\u3059\u3067\u306b Environment \u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u3069\u306e Environment \u306b\u5bfe\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3055\u308c\u307e\u3059\u3002 Service \u306e\u4e2d\u8eab\u3092\u6398\u308a\u4e0b\u3052\u3066\u307f\u3088\u3046 Service \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u5b9f\u884c\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001Copilot \u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u78ba\u8a8d\u306e\u624b\u6bb5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002 Service \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044 copilot svc show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Service \u306e\u30b5\u30de\u30ea\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f Load Balanced Web Service \u3067\u306e\u51fa\u529b\u306e\u4f8b\u3067\u3059\u3002\u5404 Environment \u3054\u3068\u306e Service \u8a2d\u5b9a\u3001\u8a2d\u5b9a\u6e08\u307f\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u30a2\u30e9\u30fc\u30e0\u3001Service \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3001\u3042\u308b\u3044\u306f\u74b0\u5883\u5909\u6570\u3084 Service \u306b\u6e21\u3055\u308c\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306a\u3069\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u3001 --resources \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e Service \u306b\u7d10\u3065\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ copilot svc show About Application my-app Name front-end Type Load Balanced Web Service Configurations Environment Tasks CPU (vCPU) Memory (MiB) Port ----------- ----- ---------- ------------ ---- test 1 0.25 512 80 Rollback Alarms Name Environment Description ---- ----------- ----------- my-app-test-front-end-CopilotRol test Roll back ECS service if CPU utilizat lbackCPUAlarm ion is greater than or equal to 50% t wice in 3 minutes. Routes Environment URL ----------- --- test http://my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.my-app.local:8080 test Service Discovery Variables Name Container Environment Value ---- --------- ----------- ----- COPILOT_APPLICATION_NAME front-end test my-app COPILOT_ENVIRONMENT_NAME \" test test COPILOT_LB_DNS \" test my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com COPILOT_SERVICE_DISCOVERY_ENDPOINT \" test test.my-app.local COPILOT_SERVICE_NAME \" test front-end Secrets Name Container Environment Value ---- --------- ----------- ----- GITHUB_WEBHOOK_SECRET front-end test parameter/GH_WEBHOOK_SECRET copilot svc show \u306e\u51fa\u529b\u306f\u3001Service \u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Static Site \u306e\u30b5\u30de\u30ea\u60c5\u5831\u306b\u306f\u3001 S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30c4\u30ea\u30fc\u8868\u793a\u304c\u542b\u307e\u308c\u307e\u3059\u3002 % copilot svc show Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg ``` # ## Service \u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u305f\u3044 Service \u306e\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u306f Healthy \u3060\u308d\u3046\u304b\uff1f\u306a\u306b\u304b\u30a2\u30e9\u30fc\u30e0\u304c\u767a\u706b\u3057\u3066\u3044\u306a\u3044\u304b\uff1f\u306a\u3069\u3001Service \u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002Copilot \u3067\u306f\u3001`copilot svc status` \u3067\u305d\u306e\u3088\u3046\u306a\u60c5\u5831\u306e\u30b5\u30de\u30ea\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 ```console $ copilot svc status Service: front-end Task Summary Running \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 desired tasks are running Health \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes HTTP health checks \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes container health checks Tasks ID Status Revision Started At Cont. Health HTTP Health -- ------ -------- ---------- ------------ ----------- 37236ed3 RUNNING 9 12 minutes ago HEALTHY HEALTHY Alarms Name Type Condition Last Updated Health ---- ---- --------- ------------ ------ TargetTracking-service/my-app- Auto Scaling CPUUtilization > 70.00 for 3 d 5 minutes ago OK test-Cluster-0jTKWTNBKviF/my-a atapoints within 3 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmHigh-f0f31c7b-74 61-415c-9dfd-81b983cbe0df TargetTracking-service/my-app- Auto Scaling CPUUtilization < 63.00 for 15 5 minutes ago ALARM test-Cluster-0jTKWTNBKviF/my-a datapoints within 15 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmLow-698f9f17-6c0 c-4db1-8f1d-e23de97f5459 copilot svc show \u3068\u540c\u69d8\u306b\u3001 copilot svc status \u306e\u51fa\u529b\u306f\u30b5\u30fc\u30d3\u30b9\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Request-Driven Web Service \u306e\u51fa\u529b\u306b\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u30ed\u30b0\u304c\u542b\u307e\u308c\u307e\u3059\u3002 Static Site \u306e\u51fa\u529b\u306b\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6570\u3068\u30b5\u30a4\u30ba\u304c\u542b\u307e\u308c\u307e\u3059\u3002 Service \u306e\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u305f\u3044 Service \u306e\u30ed\u30b0\u306e\u78ba\u8a8d\u3082\u7c21\u5358\u3067\u3059\u3002 copilot svc logs \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u76f4\u8fd1\u306e Service \u30ed\u30b0\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 --follow \u30d5\u30e9\u30b0\u3092\u3042\u308f\u305b\u3066\u5229\u7528\u3059\u308b\u3068\u3001Service \u5074\u306e\u30ed\u30b0\u306e\u51fa\u529b\u3092\u30e9\u30a4\u30d6\u306b\u8ffd\u3044\u304b\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 $ copilot svc logs 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! Info \u30ed\u30b0\u306f Static Site Service \u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002","title":"Services"},{"location":"ja/docs/concepts/services/#service","text":"Service \u3092\u4f5c\u6210\u3057\u3066 AWS \u4e0a\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u306f\u8907\u6570\u3042\u308a\u307e\u3059\u3002\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f\u3001Dockerfile \u304c\u7f6e\u304b\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067 init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002 $ copilot init \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u308c\u304b\u3089\u4f5c\u308b Service \u3092\u3069\u306e Application \u306b\u6240\u5c5e\u3055\u305b\u305f\u3044\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u3002Application \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u65b0\u898f\u3067\u306e\u4f5c\u6210\u3092\u4fc3\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001Copilot \u306f\u3042\u306a\u305f\u304c\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u308b Service \u306e \u30bf\u30a4\u30d7 \u3092\u5c0b\u306d\u307e\u3059\u3002 Service \u306e\u30bf\u30a4\u30d7\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f Dockerfile \u5185\u3067\u8a18\u8ff0\u3055\u308c\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3084\u958b\u653e\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u691c\u77e5\u3057\u3001\u305d\u306e\u307e\u307e\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u3042\u306a\u305f\u306b\u78ba\u8a8d\u3057\u307e\u3059\u3002","title":"Service \u306e\u4f5c\u6210"},{"location":"ja/docs/concepts/services/#service_1","text":"\u3053\u3053\u306b\u8fbf\u308a\u7740\u304f\u307e\u3067\u306e\u9593\u306b\u3001\u300cCopilot \u306f Service \u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30bd\u30fc\u30b9\u3092\u81ea\u52d5\u7684\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u300d\u3068\u3044\u3063\u305f\u8aac\u660e\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u3067\u306f\u3001Copilot \u306f\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u5fc5\u8981\u306a\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u304c\u4f55\u304b\u3092\u77e5\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f \u305d\u306e\u79d8\u5bc6\u306f\u3001Service \u306e\u4f5c\u6210\u6642\u306b Copilot \u304c Service \u306e \u30bf\u30a4\u30d7 \u3092\u5c0b\u306d\u3066\u3044\u308b\u3053\u3068\u306b\u3042\u308a\u307e\u3059\u3002","title":"Service \u30bf\u30a4\u30d7\u306e\u9078\u629e"},{"location":"ja/docs/concepts/services/#service_2","text":"\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a Service \u3092\u4f5c\u308b\u969b\u306e\u9078\u629e\u80a2\u306b\u306f\u6b21\u306e 3 \u3064\u304c\u3042\u308a\u307e\u3059\u3002 \"Request-Driven Web Service\" - Service \u5b9f\u884c\u74b0\u5883\u3068\u3057\u3066 AWS App Runner \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \"Static Site\" - \u9759\u7684 Web \u30b5\u30a4\u30c8\u7528\u306b\u5c02\u7528\u306e CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3068 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002 \"Load Balanced Web Service\" - Service \u5b9f\u884c\u74b0\u5883\u3068\u3057\u3066 Appplication Load Balancer (ALB)\u3001Network Load Balancer\u3001\u307e\u305f\u306f\u305d\u306e\u4e21\u65b9\u3092\u4f5c\u6210\u3057\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3001ECS \u30b5\u30fc\u30d3\u30b9 (Fargate) \u3092\u5229\u7528\u3057\u307e\u3059\u3002","title":"\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u63a5\u7d9a\u53ef\u80fd\u306a Service"},{"location":"ja/docs/concepts/services/#request-driven-web-service","text":"AWS App Runner \u3092\u5229\u7528\u3059\u308b Service \u3067\u3001\u53d7\u3051\u4ed8\u3051\u308b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u5fdc\u3058\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3057\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u306a\u3044\u5834\u5408\u306f\u8a2d\u5b9a\u3055\u308c\u305f\u6700\u4f4e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u307e\u3067\u30b9\u30b1\u30fc\u30eb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u306e\u5927\u304d\u306a\u5909\u5316\u3084\u6052\u5e38\u7684\u306a\u5c11\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u898b\u8fbc\u307e\u308c\u308b HTTP \u30b5\u30fc\u30d3\u30b9\u306b\u3068\u3063\u3066\u3082\u3088\u308a\u30b3\u30b9\u30c8\u52b9\u7387\u306e\u9ad8\u3044\u9078\u629e\u80a2\u3067\u3059\u3002 ECS \u3068\u306f\u7570\u306a\u308a\u3001 App Runner \u30b5\u30fc\u30d3\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f VPC \u3068\u306f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 Egress \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092 VPC \u7d4c\u7531\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f\u3001 Manifest \u5185\u306e network \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002","title":"Request-Driven Web Service"},{"location":"ja/docs/concepts/services/#static-site","text":"Amazon CloudFront \u3067\u914d\u4fe1\u3055\u308c\u3001S3 \u3067\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u305f\u9759\u7684 Web \u30b5\u30a4\u30c8\u3067\u3059\u3002Copilot \u306f\u3001\u9759\u7684 Web \u30b5\u30a4\u30c8\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u7528\u306b\u69cb\u6210\u3055\u308c\u305f\u65b0\u3057\u3044 S3 \u30d0\u30b1\u30c3\u30c8\u3078\u9759\u7684\u30a2\u30bb\u30c3\u30c8\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 CloudFront \u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (CDN) \u3092\u4f7f\u7528\u3057\u305f\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u3088\u308a\u3001\u30b3\u30b9\u30c8\u3068\u901f\u5ea6\u3092\u6700\u9069\u5316\u3057\u307e\u3059\u3002\u518d\u30c7\u30d7\u30ed\u30a4\u306e\u305f\u3073\u306b\u3001\u4ee5\u524d\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u7121\u52b9\u5316\u3055\u308c\u307e\u3059\u3002","title":"Static Site"},{"location":"ja/docs/concepts/services/#load-balanced-web-service","text":"Application Load Balancer\u3001Network Load Balancer\u3001\u307e\u305f\u306f\u4e21\u65b9\u3092\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5165\u308a\u53e3\u3068\u3057\u3066 Fargate \u4e0a\u3067\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b ECS \u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 \u5b89\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u91cf\u304c\u898b\u8fbc\u307e\u308c\u308b\u5834\u5408\u3001Service \u304b\u3089 VPC \u5185\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u3042\u308b\u3044\u306f\u3088\u308a\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u306e\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u9069\u3057\u305f HTTP \u307e\u305f\u306f TCP \u30b5\u30fc\u30d3\u30b9\u306e\u9078\u629e\u80a2\u3067\u3059\u3002 Application Load Balancer \u306f Environment \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3042\u308a\u3001Environment \u5185\u306e\u5168\u3066\u306e Load Balanced Web Service \u3067\u5171\u6709\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002v1.32.0 \u3067\u306f\u3001 Load Balanced Web Service \u306e Manifest \u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u65e2\u5b58\u306e ALB \u3092 Service \u30ec\u30d9\u30eb\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5bfe\u7167\u7684\u306b\u3001 Network Load Balancer \u306f Service \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3042\u308a\u3001 Service \u9593\u3067\u306f\u5171\u6709\u3055\u308c\u307e\u305b\u3093\u3002 \u4e0b\u56f3\u306f Application Load Balancer \u306e\u307f\u3092\u542b\u3080 Load Balanced Web Service \u306e\u56f3\u3067\u3059\u3002","title":"Load Balanced Web Service"},{"location":"ja/docs/concepts/services/#backend-service","text":"VPC \u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3055\u305b\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c\u3001Application \u5185\u306e\u4ed6\u306e Service \u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3044\u3046\u5834\u5408\u306f\u3001 Backend Service \u3092 \u4f5c\u308a\u307e\u3057\u3087\u3046\u3002Copilot \u306f AWS Fargate \u3067\u5b9f\u884c\u3055\u308c\u308b ECS \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u304c\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u5411\u3051\u3066\u958b\u653e\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u304a\u3001Backend Service \u3067\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b Backend Service \u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Backend Service"},{"location":"ja/docs/concepts/services/#worker-service","text":"Worker Services \u306f pub/sub \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u306b\u3088\u308b\u975e\u540c\u671f\u306e\u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u30a4\u30d9\u30f3\u30c8\u3092 Amazon SNS \u30c8\u30d4\u30c3\u30af \u306b \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 \u3067\u304d\u3001\u305d\u308c\u3092 \"Worker Service\" \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Worker Service \u306f\u6b21\u306e\u8981\u7d20\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002 \u30c8\u30d4\u30c3\u30af\u306b\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u901a\u77e5\u3092\u51e6\u7406\u3059\u308b 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e Amazon SQS \u30ad\u30e5\u30fc \u3068\u3001\u5931\u6557\u3057\u305f\u901a\u77e5\u3092\u51e6\u7406\u3059\u308b \u30c7\u30c3\u30c9\u30ec\u30bf\u30fc\u30ad\u30e5\u30fc SQS \u30ad\u30e5\u30fc\u3092\u30dd\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u975e\u540c\u671f\u3067\u51e6\u7406\u3059\u308b\u6a29\u9650\u3092\u6301\u3064 AWS Fargate \u4e0a\u306e Amazon ECS \u30b5\u30fc\u30d3\u30b9","title":"Worker Service"},{"location":"ja/docs/concepts/services/#manifest","text":"copilot init \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Copilot \u304c manifest.yml \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092 copilot/[service name]/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u4f5c\u6210\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u306e Manifest \u30d5\u30a1\u30a4\u30eb\u306f Service \u7528\u306e\u5171\u901a\u8a2d\u5b9a\u3084\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6301\u3061\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308b\u304b\u306f\u3042\u306a\u305f\u304c\u9078\u629e\u3057\u305f Service \u306e\u30bf\u30a4\u30d7\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u304c\u3001\u5171\u901a\u306e\u8a2d\u5b9a\u306b\u306f\u4f8b\u3048\u3070 Service \u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u3084 CPU \u306e\u30ea\u30bd\u30fc\u30b9\u91cf\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3001\u74b0\u5883\u5909\u6570\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u542b\u307e\u308c\u307e\u3059\u3002 front-end \u3068\u3044\u3046\u540d\u524d\u306e Load Balanced Web Service \u7528\u306b\u4f5c\u3089\u308c\u305f Manifest \u30d5\u30a1\u30a4\u30eb\u3092\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002 name : front-end type : Load Balanced Web Service image : # Service \u7528\u306e Dockerfile \u307e\u3067\u306e\u30d1\u30b9 build : ./Dockerfile # \u30b3\u30f3\u30c6\u30ca\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u958b\u653e\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7 port : 8080 http : # \u3053\u306e\u30d1\u30b9\u306b\u5c4a\u3044\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c Service \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059 # \u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f \"/\" \u3092\u30d1\u30b9\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059 path : '/' # \u4efb\u610f\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30d1\u30b9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059. \u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059. # healthcheck: '/' # \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570 cpu : 256 # \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf (MiB) memory : 512 # Service \u3068\u3057\u3066\u5b9f\u884c\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u30bf\u30b9\u30af\u6570 count : 1 # \u4ee5\u4e0b\u306f\u3088\u308a\u9ad8\u5ea6\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u7528\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u9805\u76ee\u3067\u3059 # variables : # \u30ad\u30fc\u30fb\u5024\u306e\u30da\u30a2\u3067\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059 LOG_LEVEL : info #secrets: # AWS Systems Manager (SSM) \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u304b\u3089\u79d8\u5bc6\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059 # GITHUB_TOKEN: GH_SECRET_TOKEN # \u30ad\u30fc\u306b\u74b0\u5883\u5909\u6570\u540d\u3001\u5024\u306b\u306f SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u8a18\u8ff0\u3057\u307e\u3059 # Environment \u3054\u3068\u306b\u4e0a\u8a18\u3067\u8a2d\u5b9a\u3055\u308c\u305f\u5024\u3092\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059 environments : prod : count : 2 # \"prod\" Environment \u3067\u306f\u30bf\u30b9\u30af\u30922\u3064\u5b9f\u884c\u3057\u307e\u3059 Manifest \u30d5\u30a1\u30a4\u30eb\u306e\u4ed5\u69d8\u306b\u3064\u3044\u3066\u5b66\u3076\u306b\u306f\u3001 Manifest \u30da\u30fc\u30b8\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Manifest \u3068\u8a2d\u5b9a"},{"location":"ja/docs/concepts/services/#service_3","text":"Service \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u305f\u3089\u3001\u3042\u308b\u3044\u306f Manifest \u30d5\u30a1\u30a4\u30eb\u306b\u5909\u66f4\u3092\u52a0\u3048\u305f\u3089\u3001deploy \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066 Service \u3092\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002 $ copilot deploy \u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u7d9a\u3051\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f5c\u696d\u304c\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9 Service \u7528\u306e ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30d7\u30c3\u30b7\u30e5 Manifest \u30d5\u30a1\u30a4\u30eb\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u5909\u63db \u8ffd\u52a0\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0 Service \u3068\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306e CloudFormation \u306b\u3088\u308b\u30c7\u30d7\u30ed\u30a4 \u3082\u3057\u3059\u3067\u306b Environment \u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u3069\u306e Environment \u306b\u5bfe\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3055\u308c\u307e\u3059\u3002","title":"Service \u306e\u30c7\u30d7\u30ed\u30a4"},{"location":"ja/docs/concepts/services/#service_4","text":"Service \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u5b9f\u884c\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001Copilot \u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u78ba\u8a8d\u306e\u624b\u6bb5\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u304c\u3088\u304f\u5229\u7528\u3055\u308c\u307e\u3059\u3002","title":"Service \u306e\u4e2d\u8eab\u3092\u6398\u308a\u4e0b\u3052\u3066\u307f\u3088\u3046"},{"location":"ja/docs/concepts/services/#service_5","text":"copilot svc show \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Service \u306e\u30b5\u30de\u30ea\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f Load Balanced Web Service \u3067\u306e\u51fa\u529b\u306e\u4f8b\u3067\u3059\u3002\u5404 Environment \u3054\u3068\u306e Service \u8a2d\u5b9a\u3001\u8a2d\u5b9a\u6e08\u307f\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u30a2\u30e9\u30fc\u30e0\u3001Service \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3001\u3042\u308b\u3044\u306f\u74b0\u5883\u5909\u6570\u3084 Service \u306b\u6e21\u3055\u308c\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306a\u3069\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u3001 --resources \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e Service \u306b\u7d10\u3065\u3051\u3089\u308c\u305f\u3059\u3079\u3066\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 $ copilot svc show About Application my-app Name front-end Type Load Balanced Web Service Configurations Environment Tasks CPU (vCPU) Memory (MiB) Port ----------- ----- ---------- ------------ ---- test 1 0.25 512 80 Rollback Alarms Name Environment Description ---- ----------- ----------- my-app-test-front-end-CopilotRol test Roll back ECS service if CPU utilizat lbackCPUAlarm ion is greater than or equal to 50% t wice in 3 minutes. Routes Environment URL ----------- --- test http://my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com Internal Service Endpoints Endpoint Environment Type -------- ----------- ---- front-end:80 test Service Connect front-end.test.my-app.local:8080 test Service Discovery Variables Name Container Environment Value ---- --------- ----------- ----- COPILOT_APPLICATION_NAME front-end test my-app COPILOT_ENVIRONMENT_NAME \" test test COPILOT_LB_DNS \" test my-ap-Publi-1RV8QEBNTEQCW-1762184596.ca-central-1.elb.amazonaws.com COPILOT_SERVICE_DISCOVERY_ENDPOINT \" test test.my-app.local COPILOT_SERVICE_NAME \" test front-end Secrets Name Container Environment Value ---- --------- ----------- ----- GITHUB_WEBHOOK_SECRET front-end test parameter/GH_WEBHOOK_SECRET copilot svc show \u306e\u51fa\u529b\u306f\u3001Service \u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Static Site \u306e\u30b5\u30de\u30ea\u60c5\u5831\u306b\u306f\u3001 S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30c4\u30ea\u30fc\u8868\u793a\u304c\u542b\u307e\u308c\u307e\u3059\u3002 % copilot svc show Service name: static-site About Application my-app Name static-site Type Static Site Routes Environment URL ----------- --- test https://d399t9j1xbplme.cloudfront.net/ S3 Bucket Objects Environment test . \u251c\u2500\u2500 ReadMe.md \u251c\u2500\u2500 error.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 Images \u2502 \u251c\u2500\u2500 SomeImage.PNG \u2502 \u2514\u2500\u2500 AnotherImage.PNG \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 Style.css \u2502 \u251c\u2500\u2500 all.min.css \u2502 \u2514\u2500\u2500 bootstrap.min.css \u2514\u2500\u2500 images \u2514\u2500\u2500 bg-masthead.jpg ``` # ## Service \u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u305f\u3044 Service \u306e\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u306f Healthy \u3060\u308d\u3046\u304b\uff1f\u306a\u306b\u304b\u30a2\u30e9\u30fc\u30e0\u304c\u767a\u706b\u3057\u3066\u3044\u306a\u3044\u304b\uff1f\u306a\u3069\u3001Service \u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002Copilot \u3067\u306f\u3001`copilot svc status` \u3067\u305d\u306e\u3088\u3046\u306a\u60c5\u5831\u306e\u30b5\u30de\u30ea\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 ```console $ copilot svc status Service: front-end Task Summary Running \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 desired tasks are running Health \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes HTTP health checks \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 1/1 passes container health checks Tasks ID Status Revision Started At Cont. Health HTTP Health -- ------ -------- ---------- ------------ ----------- 37236ed3 RUNNING 9 12 minutes ago HEALTHY HEALTHY Alarms Name Type Condition Last Updated Health ---- ---- --------- ------------ ------ TargetTracking-service/my-app- Auto Scaling CPUUtilization > 70.00 for 3 d 5 minutes ago OK test-Cluster-0jTKWTNBKviF/my-a atapoints within 3 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmHigh-f0f31c7b-74 61-415c-9dfd-81b983cbe0df TargetTracking-service/my-app- Auto Scaling CPUUtilization < 63.00 for 15 5 minutes ago ALARM test-Cluster-0jTKWTNBKviF/my-a datapoints within 15 minutes pp-test-front-end-Service-r5h6 hMZVbWkz-AlarmLow-698f9f17-6c0 c-4db1-8f1d-e23de97f5459 copilot svc show \u3068\u540c\u69d8\u306b\u3001 copilot svc status \u306e\u51fa\u529b\u306f\u30b5\u30fc\u30d3\u30b9\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 Request-Driven Web Service \u306e\u51fa\u529b\u306b\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u30ed\u30b0\u304c\u542b\u307e\u308c\u307e\u3059\u3002 Static Site \u306e\u51fa\u529b\u306b\u306f\u3001S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6570\u3068\u30b5\u30a4\u30ba\u304c\u542b\u307e\u308c\u307e\u3059\u3002","title":"Service \u306b\u542b\u307e\u308c\u308b\u3082\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/concepts/services/#service_6","text":"Service \u306e\u30ed\u30b0\u306e\u78ba\u8a8d\u3082\u7c21\u5358\u3067\u3059\u3002 copilot svc logs \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u76f4\u8fd1\u306e Service \u30ed\u30b0\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 --follow \u30d5\u30e9\u30b0\u3092\u3042\u308f\u305b\u3066\u5229\u7528\u3059\u308b\u3068\u3001Service \u5074\u306e\u30ed\u30b0\u306e\u51fa\u529b\u3092\u30e9\u30a4\u30d6\u306b\u8ffd\u3044\u304b\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 $ copilot svc logs 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! 37236ed 10.0.0.30 \ud83d\ude91 Health-check ok! Info \u30ed\u30b0\u306f Static Site Service \u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002","title":"Service \u306e\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u305f\u3044"},{"location":"ja/docs/developing/content-delivery/","text":"\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1 Copilot \u306f\u3001Amazon CloudFront \u3092\u4ecb\u3057\u305f Content Delivery Network \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ea\u30bd\u30fc\u30b9\u306f Copilot \u306b\u3088\u3063\u3066 Environment \u30ec\u30d9\u30eb\u3067\u7ba1\u7406\u3055\u308c\u3001\u30e6\u30fc\u30b6\u30fc\u306f Environment Manifest \u3092\u901a\u3058\u3066 CloudFront \u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Copilot \u306b\u3088\u308b CloudFront \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3 Copilot \u304c CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 \u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Application Load Balancer \u306e\u4ee3\u308f\u308a\u306b Application \u3078\u306e\u65b0\u3057\u3044\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308b\u3088\u3046\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001CloudFront \u306f\u4e16\u754c\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30a8\u30c3\u30b8\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d4c\u7531\u3057\u3066\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u3088\u308a\u901f\u304f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u65e2\u5b58\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067 CloudFront \u3092\u4f7f\u3046\u306b\u306f? Copilot v1.20 \u304b\u3089\u3001 copilot env init \u3067 Environment Manifest \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u306e Manifest \u306b cdn: true \u3068\u3044\u3046\u5024\u3092\u6307\u5b9a\u3057\u3001 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u57fa\u672c\u7684\u306a CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 Manifest \u306e\u8a2d\u5b9a\u4f8b Basic Imported Certificates cdn : true http : public : security_groups : ingress : restrict_to : cdn : true cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd http : certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-bldz-0an1-afki-p7ll1myafd - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/56654321-cv8f-adf3-j7gd-adf876af95 CloudFront \u3067 HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f? CloudFront \u3067 HTTPS \u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e http.certificates \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u540c\u3058\u3088\u3046\u306b\u3001Environment Manifest \u306e cdn.certificate \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u8a3c\u660e\u66f8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3068\u306f\u7570\u306a\u308a\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u8a3c\u660e\u66f8\u306f 1 \u3064\u3060\u3051\u3067\u3059\u3002\u3053\u306e\u305f\u3081\u3001\u305d\u306e Environment \u3067 Service \u304c\u4f7f\u7528\u3059\u308b\u5404\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001CNAME \u30ec\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044\u8a3c\u660e\u66f8 (\u30ea\u30fc\u30b8\u30e7\u30f3\u306f us-east-1 ) \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 Info CloudFront \u306f\u3001 us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 Info CloudFront \u7528\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3001Environment Manager \u30ed\u30fc\u30eb\u306b\u6a29\u9650\u304c\u8ffd\u52a0\u3055\u308c\u3001Copilot \u304c DescribeCertificate API call \u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001Application \u306e\u4f5c\u6210\u6642\u306b --domain \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Copilot \u306b\u8a3c\u660e\u66f8\u306e\u7ba1\u7406\u3092\u4efb\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001CloudFront \u5bfe\u5fdc Environment \u306b\u5c55\u958b\u3059\u308b\u3059\u3079\u3066\u306e Service \u306b http.alias \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e 2 \u3064\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001Copilot \u306f CloudFront \u304c SSL/TLS \u8a3c\u660e\u66f8 \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30d3\u30e5\u30fc\u30ef\u30fc\u306e\u8a3c\u660e\u66f8\u3092\u691c\u8a3c\u3057\u3001HTTPS \u63a5\u7d9a\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Ingress \u5236\u9650\u3068\u306f? \u7279\u5b9a\u306e\u9001\u4fe1\u5143\u304b\u3089\u306e\u53d7\u4fe1\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u5236\u9650\u3067\u304d\u307e\u3059\u3002CloudFront \u306e\u5834\u5408\u3001Copilot \u306f AWS \u30de\u30cd\u30fc\u30b8\u30c9\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u30ea\u30b9\u30c8 \u3092\u4f7f\u7528\u3057\u3066\u3001CloudFront \u30a8\u30c3\u30b8\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u95a2\u9023\u3059\u308b CIDR IP \u30a2\u30c9\u30ec\u30b9\u306e\u30bb\u30c3\u30c8\u306b\u8a31\u53ef\u3055\u308c\u305f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u5236\u9650\u3057\u307e\u3059\u3002 restrict_to.cdn: true \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u3001CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001Service \u306b\u5bfe\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8105\u5a01\u304b\u3089\u4fdd\u8b77\u3055\u308c\u307e\u3059\u3002 CloudFront \u3067 TLS \u3092\u7d42\u7aef\u3055\u305b\u308b\u306b\u306f\uff1f Attention Load Balanced Web Service \u306e HTTP to HTTPS redirection \u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002 CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\u524d\u306b\u3001\u5168\u3066\u306e Load Balanced Web Service \u5bfe\u3057\u3066\u3001\u500b\u5225\u306b svc deploy \u3092\u5b9f\u884c\u3057\u3066\u518d\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3044\u307e\u3059\u3002 \u5168\u3066\u306e Load Balanced Web Service \u304c HTTP \u3092 HTTPS \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u3001Environment Manifest \u5185\u3067 CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3092\u5b89\u5168\u306b\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 env deploy \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 Environment Manifest \u3092\u6b21\u306e\u69d8\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067 CloudFront \u3092 TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 cdn : terminate_tls : true CloudFront \u2192 Application Load Balancer (ALB) \u2192 ECS \u306e\u901a\u4fe1\u306f\u3001HTTP \u306e\u307f\u306b\u306a\u308a\u307e\u3059\u3002\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306b\u5730\u7406\u7684\u306b\u8fd1\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067 TLS \u3092\u7d42\u7aef\u3055\u305b\u308b\u4e8b\u3067\u3001 TLS \u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u3092\u9ad8\u901f\u5316\u3055\u305b\u308b\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002 S3 \u30d0\u30b1\u30c3\u30c8\u3067 CloudFront \u3092\u4f7f\u3046\u306b\u306f\uff1f Environment Manifest \u3067 cdn.static_assets \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001CloudFront \u304c Amazon S3 \u30d0\u30b1\u30c3\u30c8\u3068\u9023\u643a\u3057\u3001\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u9ad8\u901f\u306b\u914d\u4fe1\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 \u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u306e\u5229\u7528 Attention \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u89b3\u70b9\u304b\u3089\u3001 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 \u306a S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306e Environment Manifest \u306e\u4f8b\u3067\u306f\u3001\u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092 CloudFront \u7528\u306b\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002 \u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092 CloudFront \u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e Environment Manifest \u8a2d\u5b9a\u4f8b cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* static_assets.location \u306f S3 \u30d0\u30b1\u30c3\u30c8\u306e DNS \u30c9\u30e1\u30a4\u30f3\u540d (\u4f8b\u3048\u3070\u3001 EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com \u306a\u3069) \u306b\u3057\u307e\u3059\u3002 Application \u306b\u95a2\u9023\u3059\u308b\u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3 \u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001CloudFront \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u3059\u30a8\u30a4\u30ea\u30a2\u30b9\u306e A \u30ec\u30b3\u30fc\u30c9\u3092\u5fd8\u308c\u305a\u306b\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Environment Manifest \u3067 Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u306f\u3001(\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30d0\u30b1\u30c3\u30c8\u306e\u5834\u5408) S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u66f4\u65b0\u3057\u3066\u3001CloudFront \u304c\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 CloudFront \u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b S3 \u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u306e\u4f8b { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::EXAMPLE-BUCKET/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } } CloudFront \u3092\u4f7f\u7528\u3057\u3066\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u306b\u306f\uff1f copilot init \u307e\u305f\u306f copilot svc init \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f\u500b\u5225\u306e\u5c02\u7528 CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3068\u3001\u30a2\u30bb\u30c3\u30c8\u3092\u542b\u3080 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002\u518d\u30c7\u30d7\u30ed\u30a4\u306e\u305f\u3073\u306b\u3001\u3088\u308a\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u958b\u767a\u306e\u305f\u3081\u306b\u3001Copilot \u306f\u65e2\u5b58\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002","title":"Content Delivery"},{"location":"ja/docs/developing/content-delivery/#_1","text":"Copilot \u306f\u3001Amazon CloudFront \u3092\u4ecb\u3057\u305f Content Delivery Network \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ea\u30bd\u30fc\u30b9\u306f Copilot \u306b\u3088\u3063\u3066 Environment \u30ec\u30d9\u30eb\u3067\u7ba1\u7406\u3055\u308c\u3001\u30e6\u30fc\u30b6\u30fc\u306f Environment Manifest \u3092\u901a\u3058\u3066 CloudFront \u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1"},{"location":"ja/docs/developing/content-delivery/#copilot-cloudfront","text":"Copilot \u304c CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 \u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Application Load Balancer \u306e\u4ee3\u308f\u308a\u306b Application \u3078\u306e\u65b0\u3057\u3044\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308b\u3088\u3046\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001CloudFront \u306f\u4e16\u754c\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30a8\u30c3\u30b8\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d4c\u7531\u3057\u3066\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u3088\u308a\u901f\u304f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Copilot \u306b\u3088\u308b CloudFront \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3"},{"location":"ja/docs/developing/content-delivery/#cloudfront","text":"Copilot v1.20 \u304b\u3089\u3001 copilot env init \u3067 Environment Manifest \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u306e Manifest \u306b cdn: true \u3068\u3044\u3046\u5024\u3092\u6307\u5b9a\u3057\u3001 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u57fa\u672c\u7684\u306a CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3 Manifest \u306e\u8a2d\u5b9a\u4f8b Basic Imported Certificates cdn : true http : public : security_groups : ingress : restrict_to : cdn : true cdn : certificate : arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/13245665-h74x-4ore-jdnz-avs87dl11jd http : certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-bldz-0an1-afki-p7ll1myafd - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/56654321-cv8f-adf3-j7gd-adf876af95","title":"\u65e2\u5b58\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067 CloudFront \u3092\u4f7f\u3046\u306b\u306f?"},{"location":"ja/docs/developing/content-delivery/#cloudfront-https","text":"CloudFront \u3067 HTTPS \u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e http.certificates \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u540c\u3058\u3088\u3046\u306b\u3001Environment Manifest \u306e cdn.certificate \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u8a3c\u660e\u66f8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3068\u306f\u7570\u306a\u308a\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u308b\u8a3c\u660e\u66f8\u306f 1 \u3064\u3060\u3051\u3067\u3059\u3002\u3053\u306e\u305f\u3081\u3001\u305d\u306e Environment \u3067 Service \u304c\u4f7f\u7528\u3059\u308b\u5404\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001CNAME \u30ec\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044\u8a3c\u660e\u66f8 (\u30ea\u30fc\u30b8\u30e7\u30f3\u306f us-east-1 ) \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 Info CloudFront \u306f\u3001 us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u305f\u8a3c\u660e\u66f8\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 Info CloudFront \u7528\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3001Environment Manager \u30ed\u30fc\u30eb\u306b\u6a29\u9650\u304c\u8ffd\u52a0\u3055\u308c\u3001Copilot \u304c DescribeCertificate API call \u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001Application \u306e\u4f5c\u6210\u6642\u306b --domain \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Copilot \u306b\u8a3c\u660e\u66f8\u306e\u7ba1\u7406\u3092\u4efb\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001CloudFront \u5bfe\u5fdc Environment \u306b\u5c55\u958b\u3059\u308b\u3059\u3079\u3066\u306e Service \u306b http.alias \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e 2 \u3064\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001Copilot \u306f CloudFront \u304c SSL/TLS \u8a3c\u660e\u66f8 \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30d3\u30e5\u30fc\u30ef\u30fc\u306e\u8a3c\u660e\u66f8\u3092\u691c\u8a3c\u3057\u3001HTTPS \u63a5\u7d9a\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"CloudFront \u3067 HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f?"},{"location":"ja/docs/developing/content-delivery/#ingress","text":"\u7279\u5b9a\u306e\u9001\u4fe1\u5143\u304b\u3089\u306e\u53d7\u4fe1\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u5236\u9650\u3067\u304d\u307e\u3059\u3002CloudFront \u306e\u5834\u5408\u3001Copilot \u306f AWS \u30de\u30cd\u30fc\u30b8\u30c9\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u30ea\u30b9\u30c8 \u3092\u4f7f\u7528\u3057\u3066\u3001CloudFront \u30a8\u30c3\u30b8\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u95a2\u9023\u3059\u308b CIDR IP \u30a2\u30c9\u30ec\u30b9\u306e\u30bb\u30c3\u30c8\u306b\u8a31\u53ef\u3055\u308c\u305f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u5236\u9650\u3057\u307e\u3059\u3002 restrict_to.cdn: true \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u3001CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001Service \u306b\u5bfe\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8105\u5a01\u304b\u3089\u4fdd\u8b77\u3055\u308c\u307e\u3059\u3002","title":"Ingress \u5236\u9650\u3068\u306f?"},{"location":"ja/docs/developing/content-delivery/#cloudfront-tls","text":"Attention Load Balanced Web Service \u306e HTTP to HTTPS redirection \u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002 CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\u524d\u306b\u3001\u5168\u3066\u306e Load Balanced Web Service \u5bfe\u3057\u3066\u3001\u500b\u5225\u306b svc deploy \u3092\u5b9f\u884c\u3057\u3066\u518d\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3044\u307e\u3059\u3002 \u5168\u3066\u306e Load Balanced Web Service \u304c HTTP \u3092 HTTPS \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u3001Environment Manifest \u5185\u3067 CloudFront TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3092\u5b89\u5168\u306b\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 env deploy \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 Environment Manifest \u3092\u6b21\u306e\u69d8\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067 CloudFront \u3092 TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 cdn : terminate_tls : true CloudFront \u2192 Application Load Balancer (ALB) \u2192 ECS \u306e\u901a\u4fe1\u306f\u3001HTTP \u306e\u307f\u306b\u306a\u308a\u307e\u3059\u3002\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u306b\u5730\u7406\u7684\u306b\u8fd1\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067 TLS \u3092\u7d42\u7aef\u3055\u305b\u308b\u4e8b\u3067\u3001 TLS \u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u3092\u9ad8\u901f\u5316\u3055\u305b\u308b\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002","title":"CloudFront \u3067 TLS \u3092\u7d42\u7aef\u3055\u305b\u308b\u306b\u306f\uff1f"},{"location":"ja/docs/developing/content-delivery/#s3-cloudfront","text":"Environment Manifest \u3067 cdn.static_assets \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001CloudFront \u304c Amazon S3 \u30d0\u30b1\u30c3\u30c8\u3068\u9023\u643a\u3057\u3001\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u9ad8\u901f\u306b\u914d\u4fe1\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002","title":"S3 \u30d0\u30b1\u30c3\u30c8\u3067 CloudFront \u3092\u4f7f\u3046\u306b\u306f\uff1f"},{"location":"ja/docs/developing/content-delivery/#s3","text":"Attention \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u89b3\u70b9\u304b\u3089\u3001 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 \u306a S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306e Environment Manifest \u306e\u4f8b\u3067\u306f\u3001\u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092 CloudFront \u7528\u306b\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002 \u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092 CloudFront \u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e Environment Manifest \u8a2d\u5b9a\u4f8b cdn : static_assets : location : cf-s3-ecs-demo-bucket.s3.us-west-2.amazonaws.com alias : example.com path : static/* static_assets.location \u306f S3 \u30d0\u30b1\u30c3\u30c8\u306e DNS \u30c9\u30e1\u30a4\u30f3\u540d (\u4f8b\u3048\u3070\u3001 EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com \u306a\u3069) \u306b\u3057\u307e\u3059\u3002 Application \u306b\u95a2\u9023\u3059\u308b\u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3 \u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001CloudFront \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u6307\u3059\u30a8\u30a4\u30ea\u30a2\u30b9\u306e A \u30ec\u30b3\u30fc\u30c9\u3092\u5fd8\u308c\u305a\u306b\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Environment Manifest \u3067 Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u306f\u3001(\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30d0\u30b1\u30c3\u30c8\u306e\u5834\u5408) S3 \u30d0\u30b1\u30c3\u30c8\u306e\u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u3092\u66f4\u65b0\u3057\u3066\u3001CloudFront \u304c\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 CloudFront \u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b S3 \u30d0\u30b1\u30c3\u30c8\u30dd\u30ea\u30b7\u30fc\u306e\u4f8b { \"Version\" : \"2012-10-17\" , \"Statement\" : { \"Sid\" : \"AllowCloudFrontServicePrincipalReadOnly\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"cloudfront.amazonaws.com\" }, \"Action\" : \"s3:GetObject\" , \"Resource\" : \"arn:aws:s3:::EXAMPLE-BUCKET/*\" , \"Condition\" : { \"StringEquals\" : { \"AWS:SourceArn\" : \"arn:aws:cloudfront::111122223333:distribution/EDFDVBD6EXAMPLE\" } } } }","title":"\u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u306e\u5229\u7528"},{"location":"ja/docs/developing/content-delivery/#cloudfront-web","text":"copilot init \u307e\u305f\u306f copilot svc init \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001Static Site \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f\u500b\u5225\u306e\u5c02\u7528 CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3068\u3001\u30a2\u30bb\u30c3\u30c8\u3092\u542b\u3080 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002\u518d\u30c7\u30d7\u30ed\u30a4\u306e\u305f\u3073\u306b\u3001\u3088\u308a\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u958b\u767a\u306e\u305f\u3081\u306b\u3001Copilot \u306f\u65e2\u5b58\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002","title":"CloudFront \u3092\u4f7f\u7528\u3057\u3066\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u306b\u306f\uff1f"},{"location":"ja/docs/developing/custom-environment-resources/","text":"Environment \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b Copilot \u3092\u4f7f\u3063\u3066\u65b0\u3057\u304f Environment \u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u65e2\u5b58\u306e VPC \u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002(\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b env init \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306e\u30d5\u30e9\u30b0 \u307e\u305f\u306f\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u8cea\u554f\u306b\u7b54\u3048\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002) % copilot env init What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. Yes, but I' d like configure the default resources ( CIDR ranges ) . > No, I ' d like to import existing resources ( VPC, subnets ) . \u30a4\u30f3\u30dd\u30fc\u30c8\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u306a\u3044\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u7528\u306b 2 \u3064\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3068 2 \u3064\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6301\u3064 VPC\u30012 \u3064\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6301\u305f\u306a\u3044 VPC (default VPC \u306a\u3069)\u3001\u307e\u305f\u306f 2 \u3064\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u3067\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6301\u305f\u306a\u3044 VPC \u3092\u53d6\u308a\u8fbc\u3080\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002(\u5206\u96e2\u3055\u308c\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\u3088\u308a\u8a73\u7d30\u306b\u77e5\u308a\u305f\u3044\u65b9\u306f\u3001 \u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002) Copilot \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ea\u30bd\u30fc\u30b9\u306e\u5909\u66f4 \u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u9078\u629e\u3059\u308b\u3068\u3001 Copilot \u306f AWS \u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5f93\u3063\u3066 2 \u3064\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u305f VPC \u3068 2 \u3064\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u304a\u3088\u3073\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u8ffd\u52a0\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u3084 CIDR \u7bc4\u56f2\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u5909\u66f4\u3092\u9078\u629e\u3067\u304d\u307e\u3059\u3002 $ copilot env init --container-insights What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. > Yes, but I' d like configure the default resources ( CIDR ranges ) . No, I ' d like to import existing resources ( VPC, subnets ) . What VPC CIDR would you like to use? [ ? for help ] ( 10 .0.0.0/16 ) Which availability zones would you like to use? [ Use arrows to move, space to select , type to filter, ? for more help ] [ x ] us-west-2a [ x ] us-west-2b > [ x ] us-west-2c [ ] us-west-2d What CIDR would you like to use for your public subnets? [ ? for help ] ( 10 .0.0.0/24,10.0.1.0/24 ) 10 .0.0.0/24,10.0.1.0/24,10.0.2.0/24 What CIDR would you like to use for your private subnets? [ ? for help ] ( 10 .0.2.0/24,10.0.3.0/24 ) 10 .0.3.0/24,10.0.4.0/24,10.0.5.0/24 \u5236\u7d04 \u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u306f\u3001 VPC \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u3068\u3001 Amazon VPC FAQ \u306e\u300c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u300d\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u306b\u6e96\u62e0\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u3054\u5229\u7528\u306e\u5834\u5408\u306f\u3001 \u3053\u3061\u3089 \u306b\u3042\u308b\u3088\u3046\u306b enableDnsHostname \u3068 enableDnsSupport \u3092 true \u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8 \u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u9762\u3057\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f VPC \u306b NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u304c\u5fc5\u8981\u3067\u3059\u3002","title":"Custom Environment Resources"},{"location":"ja/docs/developing/custom-environment-resources/#environment","text":"Copilot \u3092\u4f7f\u3063\u3066\u65b0\u3057\u304f Environment \u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u65e2\u5b58\u306e VPC \u30ea\u30bd\u30fc\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002(\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b env init \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306e\u30d5\u30e9\u30b0 \u307e\u305f\u306f\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u8cea\u554f\u306b\u7b54\u3048\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002) % copilot env init What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. Yes, but I' d like configure the default resources ( CIDR ranges ) . > No, I ' d like to import existing resources ( VPC, subnets ) . \u30a4\u30f3\u30dd\u30fc\u30c8\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u306a\u3044\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u7528\u306b 2 \u3064\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3068 2 \u3064\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6301\u3064 VPC\u30012 \u3064\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6301\u305f\u306a\u3044 VPC (default VPC \u306a\u3069)\u3001\u307e\u305f\u306f 2 \u3064\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u307f\u3067\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6301\u305f\u306a\u3044 VPC \u3092\u53d6\u308a\u8fbc\u3080\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002(\u5206\u96e2\u3055\u308c\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\u3088\u308a\u8a73\u7d30\u306b\u77e5\u308a\u305f\u3044\u65b9\u306f\u3001 \u3053\u3061\u3089 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002)","title":"Environment \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b"},{"location":"ja/docs/developing/custom-environment-resources/#copilot","text":"\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u9078\u629e\u3059\u308b\u3068\u3001 Copilot \u306f AWS \u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5f93\u3063\u3066 2 \u3064\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u305f VPC \u3068 2 \u3064\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u304a\u3088\u3073\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u8ffd\u52a0\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u3084 CIDR \u7bc4\u56f2\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u5909\u66f4\u3092\u9078\u629e\u3067\u304d\u307e\u3059\u3002 $ copilot env init --container-insights What is your environment 's name? env-name Which credentials would you like to use to create name? [profile default] Would you like to use the default configuration for a new environment? - A new VPC with 2 AZs, 2 public subnets and 2 private subnets - A new ECS Cluster - New IAM Roles to manage services and jobs in your environment [Use arrows to move, type to filter] Yes, use default. > Yes, but I' d like configure the default resources ( CIDR ranges ) . No, I ' d like to import existing resources ( VPC, subnets ) . What VPC CIDR would you like to use? [ ? for help ] ( 10 .0.0.0/16 ) Which availability zones would you like to use? [ Use arrows to move, space to select , type to filter, ? for more help ] [ x ] us-west-2a [ x ] us-west-2b > [ x ] us-west-2c [ ] us-west-2d What CIDR would you like to use for your public subnets? [ ? for help ] ( 10 .0.0.0/24,10.0.1.0/24 ) 10 .0.0.0/24,10.0.1.0/24,10.0.2.0/24 What CIDR would you like to use for your private subnets? [ ? for help ] ( 10 .0.2.0/24,10.0.3.0/24 ) 10 .0.3.0/24,10.0.4.0/24,10.0.5.0/24","title":"Copilot \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ea\u30bd\u30fc\u30b9\u306e\u5909\u66f4"},{"location":"ja/docs/developing/custom-environment-resources/#_1","text":"\u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u306f\u3001 VPC \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u3068\u3001 Amazon VPC FAQ \u306e\u300c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u300d\u306e\u30bb\u30af\u30b7\u30e7\u30f3 \u306b\u6e96\u62e0\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u3054\u5229\u7528\u306e\u5834\u5408\u306f\u3001 \u3053\u3061\u3089 \u306b\u3042\u308b\u3088\u3046\u306b enableDnsHostname \u3068 enableDnsSupport \u3092 true \u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8 \u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u9762\u3057\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5834\u5408\u306f VPC \u306b NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4 \u304c\u5fc5\u8981\u3067\u3059\u3002","title":"\u5236\u7d04"},{"location":"ja/docs/developing/domain/","text":"\u30c9\u30e1\u30a4\u30f3 Load Balanced Web Service Copilot \u3067\u306f\u3001Load Balanced Web Service \u306b\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u304c 2 \u3064\u3042\u308a\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u6642\u306b --domain \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u3067 Route 53 \u30c9\u30e1\u30a4\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment Manifest \u306e http.[public/private].certificates \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u691c\u8a3c\u6e08\u307f\u306e ACM \u8a3c\u660e\u66f8\u3092 Environment \u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 Attention \u73fe\u6642\u70b9\u3067\u306f\u3001 copilot app init \u3092\u5b9f\u884c\u3057\u305f\u6642\u306e\u307f\u306b Route 53\u3000\u30c9\u30e1\u30a4\u30f3\u304c\u95a2\u9023\u3065\u3051\u3089\u308c\u307e\u3059\u3002 Application \u306e\u30c9\u30e1\u30a4\u30f3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3044\u5834\u5408 ( #3045 ) \u3001\u65b0\u3057\u3044\u30c9\u30e1\u30a4\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u308b\u305f\u3081\u306b --domain \u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\u3001 copilot app delete \u3092\u5b9f\u884c\u3057\u3066\u53e4\u3044 Application \u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Load Balanced Web Service Application \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001 copilot app init \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b Application \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Load Balanced Web Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Application \u306b\u95a2\u9023\u3059\u308b\u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b Application \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001 copilot app init --domain \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b Application \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Service \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u540d Load Balanced Web Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 ${SvcName}.${EnvName}.${AppName}.${DomainName} \u4e0a\u8a18\u306f\u3001Application Load Balancer \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3067\u3059\u3002 ${SvcName}-nlb.${EnvName}.${AppName}.${DomainName} \u3053\u308c\u306f\u3001Network Load Balancer \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3067\u3059\u3002 \u5177\u4f53\u7684\u306b\u306f\u3001 https://kudo.test.coolapp.example.aws \u3084 kudo-nlb.test.coolapp.example.aws:443 \u3068\u306a\u308a\u307e\u3059\u3002 \u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba Copilot \u304c Service \u306b\u5272\u308a\u5f53\u3066\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001 Manifest \u306e alias \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u7de8\u96c6\u3057\u3066\u3001Service \u306e\u30ab\u30b9\u30bf\u30e0 \u30a8\u30a4\u30ea\u30a2\u30b9 \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f Service \u306b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 # copilot/{service name}/manifest.yml \u306e\u306a\u304b\u3067 http : path : '/' alias : example.aws \u540c\u69d8\u306b\u3001Service \u304c Network Load Balancer \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 nlb : port : 443/tls alias : example-v1.aws \u305f\u3060\u3057\u3001 \u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u6a29\u9650\u3092 Route 53 \u306b\u59d4\u4efb\u3057\u3066\u3044\u308b \u305f\u3081\u3001\u6307\u5b9a\u3059\u308b\u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u3001\u4ee5\u4e0b\u306e Copilot \u5bfe\u5fdc\u30d1\u30bf\u30fc\u30f3\u306e\u3044\u305a\u308c\u304b\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002 {domain} , such as example.aws {subdomain}.{domain} , such as v1.example.aws {appName}.{domain} , such as coolapp.example.aws {subdomain}.{appName}.{domain} , such as v1.coolapp.example.aws {envName}.{appName}.{domain} , such as test.coolapp.example.aws {subdomain}.{envName}.{appName}.{domain} , such as v1.test.coolapp.example.aws \u88cf\u3067\u4f55\u304c\u304a\u304d\u3066\u3044\u308b\u304b \u88cf\u5074\u3067\u306f Copilot \u306f Application \u3092\u4f5c\u6210\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u3067 ${AppName}.${DomainName} \u3068\u3044\u3046\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u7528\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3057 Environment \u304c\u3042\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u3067 ${EnvName}.${AppName}.${DomainName} \u3068\u3044\u3046\u65b0\u3057\u3044 Environment \u7528\u306e\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u305f\u3081\u306b\u5225\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3057 Environment \u7528\u306e\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306b\u4f7f\u3046 ACM \u8a3c\u660e\u66f8\u306e\u4f5c\u6210\u3068\u691c\u8a3c\u3057 ACM \u8a3c\u660e\u66f8\u3092 \u30a8\u30a4\u30ea\u30a2\u30b9\u304c Application Load Balancer\u3000( http.alias ) \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001HTTPS \u30ea\u30b9\u30ca\u30fc\u3068\u95a2\u9023\u3065\u3051\u3066 HTTP \u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092 HTTPS \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057 \u30a8\u30a4\u30ea\u30a2\u30b9\u304c nlb.alias \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u3066\u3001 TLS \u30bf\u30fc\u30df\u30fc\u30cd\u30fc\u30b7\u30e7\u30f3\u304c\u6709\u52b9\u306a\u5834\u5408\u3001 Network Load Balancer \u306e TLS \u30ea\u30b9\u30ca\u30fc\u3068\u95a2\u9023\u3065\u3051\u3066 \u30a8\u30a4\u30ea\u30a2\u30b9\u7528\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u306e A \u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002 \u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b \u65e2\u5b58\u306e\u6709\u52b9\u306a\u8a3c\u660e\u66f8\u306b\u542b\u307e\u308c\u308b\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b \u751f\u6210\u3055\u308c\u308b ACM \u8a3c\u660e\u66f8\u3092\u3088\u308a\u7d30\u304b\u304f\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u3084\u3001 default alias options \u304c\u5341\u5206\u306b\u67d4\u8edf\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u542b\u3080\u6709\u52b9\u306a ACM \u8a3c\u660e\u66f8\u3092 Environment \u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment \u30de\u30cb\u30d5\u30a7\u30b9\u30c8 \u3067 http.[public/private].certificates \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 type : Environment http : public : certificates : - arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 Service \u306e Manifest \u306b\u304a\u3044\u3066\u3001\u6b21\u306e\u3069\u3061\u3089\u304b\u3092\u884c\u3044\u307e\u3059\u3002 Copilot \u304c A \u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b \u30db\u30b9\u30c8\u30be\u30fc\u30f3 \u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml http : path : '/' alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 hosted_zone \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u305b\u305a\u306b Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001 \u305d\u306e Environment \u306b\u4f5c\u6210\u3057\u305f ALB \uff08Application Load Balancer\uff09 \u306e DNS \u3092\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u30c9\u30e1\u30a4\u30f3\u304c\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u6240\u306b A \u30ec\u30b3\u30fc\u30c9\u3068\u3057\u3066\u624b\u52d5\u3067\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d6\u30ed\u30b0\u8a18\u4e8b\u306b\u3082 2 \u3064\u76ee\u306e \u4f8b \u3092\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059\u3002 Request-Driven Web Service Request-Driven Web Service \u306b \u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3 \u3092\u8ffd\u52a0\u3082\u3067\u304d\u307e\u3059\u3002Load Balanced Web Service \u3068\u540c\u69d8\u306b\u3001Manifest \u306e alias \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml http : path : '/' alias : web.example.aws Load Balanced Web Service \u540c\u69d8\u3001Request-Driven Web Service \u304c\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u306f Application \u304c\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1aexample.aws) \u3068\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Info \u73fe\u6642\u70b9\u3067\u306f\u3001 web.example.aws \u306e\u3088\u3046\u306a 1 \u30ec\u30d9\u30eb\u306e\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 Environment \u30ec\u30d9\u30eb\u306e\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1a web.${envName}.${appName}.example.aws ) \u3084\u3001Application \u30ec\u30d9\u30eb\u306e\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1a web.${appName}.example.aws )\u3001 \u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1a example.aws ) \u306f\u307e\u3060\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u304c Application \u540d\u3068\u885d\u7a81\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002 Copilot \u306f\u5185\u90e8\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u30c9\u30e1\u30a4\u30f3\u3092 app runner service \u306b\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002 \u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306b\u30c9\u30e1\u30a4\u30f3\u30ec\u30b3\u30fc\u30c9\u3068\u691c\u8a3c\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002","title":"Domain"},{"location":"ja/docs/developing/domain/#_1","text":"","title":"\u30c9\u30e1\u30a4\u30f3"},{"location":"ja/docs/developing/domain/#load-balanced-web-service","text":"Copilot \u3067\u306f\u3001Load Balanced Web Service \u306b\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u304c 2 \u3064\u3042\u308a\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u6642\u306b --domain \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u3067 Route 53 \u30c9\u30e1\u30a4\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment Manifest \u306e http.[public/private].certificates \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u691c\u8a3c\u6e08\u307f\u306e ACM \u8a3c\u660e\u66f8\u3092 Environment \u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 Attention \u73fe\u6642\u70b9\u3067\u306f\u3001 copilot app init \u3092\u5b9f\u884c\u3057\u305f\u6642\u306e\u307f\u306b Route 53\u3000\u30c9\u30e1\u30a4\u30f3\u304c\u95a2\u9023\u3065\u3051\u3089\u308c\u307e\u3059\u3002 Application \u306e\u30c9\u30e1\u30a4\u30f3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3044\u5834\u5408 ( #3045 ) \u3001\u65b0\u3057\u3044\u30c9\u30e1\u30a4\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u308b\u305f\u3081\u306b --domain \u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044 Application \u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\u3001 copilot app delete \u3092\u5b9f\u884c\u3057\u3066\u53e4\u3044 Application \u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"Load Balanced Web Service"},{"location":"ja/docs/developing/domain/#load-balanced-web-service_1","text":"Application \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001 copilot app init \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b Application \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Load Balanced Web Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"Load Balanced Web Service"},{"location":"ja/docs/developing/domain/#application","text":"Application \u3067\u8aac\u660e\u3057\u305f\u3088\u3046\u306b\u3001 copilot app init --domain \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b Application \u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Service \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u540d Load Balanced Web Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 ${SvcName}.${EnvName}.${AppName}.${DomainName} \u4e0a\u8a18\u306f\u3001Application Load Balancer \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3067\u3059\u3002 ${SvcName}-nlb.${EnvName}.${AppName}.${DomainName} \u3053\u308c\u306f\u3001Network Load Balancer \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3067\u3059\u3002 \u5177\u4f53\u7684\u306b\u306f\u3001 https://kudo.test.coolapp.example.aws \u3084 kudo-nlb.test.coolapp.example.aws:443 \u3068\u306a\u308a\u307e\u3059\u3002","title":"Application \u306b\u95a2\u9023\u3059\u308b\u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b"},{"location":"ja/docs/developing/domain/#_2","text":"Copilot \u304c Service \u306b\u5272\u308a\u5f53\u3066\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001 Manifest \u306e alias \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u7de8\u96c6\u3057\u3066\u3001Service \u306e\u30ab\u30b9\u30bf\u30e0 \u30a8\u30a4\u30ea\u30a2\u30b9 \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f Service \u306b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 # copilot/{service name}/manifest.yml \u306e\u306a\u304b\u3067 http : path : '/' alias : example.aws \u540c\u69d8\u306b\u3001Service \u304c Network Load Balancer \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 nlb : port : 443/tls alias : example-v1.aws \u305f\u3060\u3057\u3001 \u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u6a29\u9650\u3092 Route 53 \u306b\u59d4\u4efb\u3057\u3066\u3044\u308b \u305f\u3081\u3001\u6307\u5b9a\u3059\u308b\u30a8\u30a4\u30ea\u30a2\u30b9\u306f\u3001\u4ee5\u4e0b\u306e Copilot \u5bfe\u5fdc\u30d1\u30bf\u30fc\u30f3\u306e\u3044\u305a\u308c\u304b\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002 {domain} , such as example.aws {subdomain}.{domain} , such as v1.example.aws {appName}.{domain} , such as coolapp.example.aws {subdomain}.{appName}.{domain} , such as v1.coolapp.example.aws {envName}.{appName}.{domain} , such as test.coolapp.example.aws {subdomain}.{envName}.{appName}.{domain} , such as v1.test.coolapp.example.aws","title":"\u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"ja/docs/developing/domain/#_3","text":"\u88cf\u5074\u3067\u306f Copilot \u306f Application \u3092\u4f5c\u6210\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u3067 ${AppName}.${DomainName} \u3068\u3044\u3046\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u7528\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3057 Environment \u304c\u3042\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u5185\u3067 ${EnvName}.${AppName}.${DomainName} \u3068\u3044\u3046\u65b0\u3057\u3044 Environment \u7528\u306e\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u305f\u3081\u306b\u5225\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3057 Environment \u7528\u306e\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306b\u4f7f\u3046 ACM \u8a3c\u660e\u66f8\u306e\u4f5c\u6210\u3068\u691c\u8a3c\u3057 ACM \u8a3c\u660e\u66f8\u3092 \u30a8\u30a4\u30ea\u30a2\u30b9\u304c Application Load Balancer\u3000( http.alias ) \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001HTTPS \u30ea\u30b9\u30ca\u30fc\u3068\u95a2\u9023\u3065\u3051\u3066 HTTP \u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092 HTTPS \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057 \u30a8\u30a4\u30ea\u30a2\u30b9\u304c nlb.alias \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u3066\u3001 TLS \u30bf\u30fc\u30df\u30fc\u30cd\u30fc\u30b7\u30e7\u30f3\u304c\u6709\u52b9\u306a\u5834\u5408\u3001 Network Load Balancer \u306e TLS \u30ea\u30b9\u30ca\u30fc\u3068\u95a2\u9023\u3065\u3051\u3066 \u30a8\u30a4\u30ea\u30a2\u30b9\u7528\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u306e A \u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u88cf\u3067\u4f55\u304c\u304a\u304d\u3066\u3044\u308b\u304b"},{"location":"ja/docs/developing/domain/#_4","text":"","title":"\u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b"},{"location":"ja/docs/developing/domain/#_5","text":"\u751f\u6210\u3055\u308c\u308b ACM \u8a3c\u660e\u66f8\u3092\u3088\u308a\u7d30\u304b\u304f\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u3084\u3001 default alias options \u304c\u5341\u5206\u306b\u67d4\u8edf\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u542b\u3080\u6709\u52b9\u306a ACM \u8a3c\u660e\u66f8\u3092 Environment \u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment \u30de\u30cb\u30d5\u30a7\u30b9\u30c8 \u3067 http.[public/private].certificates \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 type : Environment http : public : certificates : - arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012 Service \u306e Manifest \u306b\u304a\u3044\u3066\u3001\u6b21\u306e\u3069\u3061\u3089\u304b\u3092\u884c\u3044\u307e\u3059\u3002 Copilot \u304c A \u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b \u30db\u30b9\u30c8\u30be\u30fc\u30f3 \u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml http : path : '/' alias : example.aws hosted_zone : Z0873220N255IR3MTNR4 hosted_zone \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u305b\u305a\u306b Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001 \u305d\u306e Environment \u306b\u4f5c\u6210\u3057\u305f ALB \uff08Application Load Balancer\uff09 \u306e DNS \u3092\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u30c9\u30e1\u30a4\u30f3\u304c\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u6240\u306b A \u30ec\u30b3\u30fc\u30c9\u3068\u3057\u3066\u624b\u52d5\u3067\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30d6\u30ed\u30b0\u8a18\u4e8b\u306b\u3082 2 \u3064\u76ee\u306e \u4f8b \u3092\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059\u3002","title":"\u65e2\u5b58\u306e\u6709\u52b9\u306a\u8a3c\u660e\u66f8\u306b\u542b\u307e\u308c\u308b\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b"},{"location":"ja/docs/developing/domain/#request-driven-web-service","text":"Request-Driven Web Service \u306b \u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3 \u3092\u8ffd\u52a0\u3082\u3067\u304d\u307e\u3059\u3002Load Balanced Web Service \u3068\u540c\u69d8\u306b\u3001Manifest \u306e alias \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml http : path : '/' alias : web.example.aws Load Balanced Web Service \u540c\u69d8\u3001Request-Driven Web Service \u304c\u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u306f Application \u304c\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1aexample.aws) \u3068\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Info \u73fe\u6642\u70b9\u3067\u306f\u3001 web.example.aws \u306e\u3088\u3046\u306a 1 \u30ec\u30d9\u30eb\u306e\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 Environment \u30ec\u30d9\u30eb\u306e\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1a web.${envName}.${appName}.example.aws ) \u3084\u3001Application \u30ec\u30d9\u30eb\u306e\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1a web.${appName}.example.aws )\u3001 \u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3 (\u4f8b\uff1a example.aws ) \u306f\u307e\u3060\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u304c Application \u540d\u3068\u885d\u7a81\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002 Copilot \u306f\u5185\u90e8\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u30c9\u30e1\u30a4\u30f3\u3092 app runner service \u306b\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002 \u30eb\u30fc\u30c8\u30c9\u30e1\u30a4\u30f3\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306b\u30c9\u30e1\u30a4\u30f3\u30ec\u30b3\u30fc\u30c9\u3068\u691c\u8a3c\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002","title":"Request-Driven Web Service"},{"location":"ja/docs/developing/environment-variables/","text":"\u74b0\u5883\u5909\u6570 \u74b0\u5883\u5909\u6570\u306f Service \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b Environment \u306b\u5fdc\u3058\u3066\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u5229\u7528\u53ef\u80fd\u306a\u5909\u6570\u3067\u3059\u3002Service \u306f\u81ea\u8eab\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306a\u304f\u305d\u308c\u3089\u306e\u5909\u6570\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\u74b0\u5883\u5909\u6570\u306f\u7279\u5b9a\u306e Environment \u306b\u56fa\u6709\u306e\u30c7\u30fc\u30bf\u3092 Service \u3078\u6e21\u3057\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002\u4f8b\u3068\u3057\u3066\u3001\u30c6\u30b9\u30c8\u7528\u3068\u672c\u756a\u7528\u3067\u63a5\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u540d\u524d\u3092\u5207\u308a\u66ff\u3048\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u3002 \u74b0\u5883\u5909\u6570\u3078\u306e\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5\u306f\u901a\u5e38\u3001\u5229\u7528\u3057\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067 DATABASE_NAME \u3068\u3044\u3046\u74b0\u5883\u5909\u6570\u3092\u53d6\u5f97\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002 Go dbName := os . Getenv ( \"DATABASE_NAME\" ) Javascript var dbName = process . env . DATABASE_NAME ; Python database_name = os . getenv ( 'DATABASE_NAME' ) \u30c7\u30d5\u30a9\u30eb\u30c8\u74b0\u5883\u5909\u6570\u3068\u306f \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3001AWS Copilot CLI \u306f\u30b5\u30fc\u30d3\u30b9\u304c\u5229\u7528\u3067\u304d\u308b\u3044\u304f\u3064\u304b\u306e\u74b0\u5883\u5909\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 COPILOT_APPLICATION_NAME - \u3053\u306e Service \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b Application \u540d COPILOT_ENVIRONMENT_NAME - Service\u3000\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b Environment \u540d(\u4f8b: test\u3001prod) COPILOT_SERVICE_NAME - \u73fe\u5728\u306e Service \u540d COPILOT_LB_DNS - (\u5b58\u5728\u3059\u308b\u5834\u5408)\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u540d\u3002\u4f8b: kudos-Publi-MC2WNHAIOAVS-588300247.us-west-2.elb.amazonaws.com \u6ce8: \u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3067\u3082\u3001\u3053\u306e\u5024\u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e DNS \u540d\u3092\u4fdd\u6301\u3057\u307e\u3059 COPILOT_SERVICE_DISCOVERY_ENDPOINT - \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u4ecb\u3057\u3066\u3001Environment \u306e\u4e2d\u3067\u4ed6\u306e Service \u3068\u901a\u4fe1\u3059\u308b\u305f\u3081\u306b Service \u540d\u306e\u5f8c\u306b\u8ffd\u52a0\u3055\u308c\u308b\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3002\u5024\u306f {env name}.{app name}.local \u3068\u306a\u308a\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306b\u3064\u3044\u3066\u306e\u3088\u308a\u8a73\u3057\u3044\u60c5\u5831\u306f \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u30ac\u30a4\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044 \u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5 \u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0\u3059\u308b\u306e\u306f\u7c21\u5358\u3067\u3059\u3002 Manifest \u306e variables \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u76f4\u63a5\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 \u4e0b\u8a18\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u3067\u306f\u3001 LOG_LEVEL \u3068\u3044\u3046\u5909\u6570\u3092 debug \u3068\u3044\u3046\u5024\u3067 Service \u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002 # copilot/{service name}/manifest.yml \u306e\u4e00\u90e8 variables : LOG_LEVEL : debug Environment \u306b\u5fdc\u3058\u3066\u3001\u7279\u5b9a\u306e\u74b0\u5883\u5909\u6570\u306e\u5024\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4e0a\u8a18\u3068\u540c\u3058\u4f8b\u3067\u3001\u30ed\u30b0\u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3057\u3001production \u306e Environment \u306e\u6642\u3060\u3051\u5024\u3092 info \u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002Manifest \u306e\u5909\u66f4\u306f\u3001\u305d\u308c\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u6642\u306b\u53cd\u6620\u3055\u308c\u308b\u306e\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5909\u66f4\u306f\u5b89\u5168\u3067\u3059\u3002 # copilot/{service name}/manifest.yml \u306e\u4e00\u90e8 variables : LOG_LEVEL : debug environments : production : variables : LOG_LEVEL : info \u3053\u3053\u3067\u306f\u3001Manifest \u3092\u7de8\u96c6\u3057\u3066\u3001\u74b0\u5883\u5909\u6570\u3092 Application \u306b\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u306e\u7c21\u5358\u306a\u30ac\u30a4\u30c9\u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u3002\ud83d\udc47 \u3055\u3089\u306b\u3001\u74b0\u5883\u5909\u6570\u3092\u307e\u3068\u3081\u3066\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u3001 env file \u306b\u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9 (Workspace \u306e root \u304b\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9) \u3092 Manifest \u306e env_file \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002 \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u3084\u3001\u4efb\u610f\u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u5b9a\u7fa9\u3001 logging \u30d5\u30a3\u30fc\u30eb\u30c9\u4e0b\u306b\u3001env_file \u3092\u6307\u5b9a\u3057\u3066\u3001FireLens \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml env_file : log.env log.env \u3067\u306f\u3001\u6b21\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002 #This is a comment and will be ignored LOG_LEVEL=debug LOG_INFO=all \u30b5\u30a4\u30c9\u30ab\u30fc\u5b9a\u7fa9\u306b\u304a\u3044\u3066\u306f\u3001\u6b21\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059: sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 \u30ed\u30ae\u30f3\u30b0\u30b3\u30f3\u30c6\u30ca\u306b\u304a\u3044\u3066\u306f\u3001\u6b21\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059: logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env DynamoDB \u30c6\u30fc\u30d6\u30eb\u3084S3 \u30d0\u30b1\u30c3\u30c8\u3001RDS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u540d\u524d\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5 Copilot CLI \u3092\u4f7f\u3063\u3066\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u3084 S3 \u30d0\u30b1\u30c3\u30c8\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3059\u308b\u5834\u5408\u3001\u51fa\u529b\u306e\u5024\u306f\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u3001Application \u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u3088\u308a\u8a73\u3057\u3044\u60c5\u5831\u306f\u3001 AWS \u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Container Environment Variables"},{"location":"ja/docs/developing/environment-variables/#_1","text":"\u74b0\u5883\u5909\u6570\u306f Service \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b Environment \u306b\u5fdc\u3058\u3066\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u5229\u7528\u53ef\u80fd\u306a\u5909\u6570\u3067\u3059\u3002Service \u306f\u81ea\u8eab\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306a\u304f\u305d\u308c\u3089\u306e\u5909\u6570\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\u74b0\u5883\u5909\u6570\u306f\u7279\u5b9a\u306e Environment \u306b\u56fa\u6709\u306e\u30c7\u30fc\u30bf\u3092 Service \u3078\u6e21\u3057\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002\u4f8b\u3068\u3057\u3066\u3001\u30c6\u30b9\u30c8\u7528\u3068\u672c\u756a\u7528\u3067\u63a5\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u540d\u524d\u3092\u5207\u308a\u66ff\u3048\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u3002 \u74b0\u5883\u5909\u6570\u3078\u306e\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5\u306f\u901a\u5e38\u3001\u5229\u7528\u3057\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067 DATABASE_NAME \u3068\u3044\u3046\u74b0\u5883\u5909\u6570\u3092\u53d6\u5f97\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002 Go dbName := os . Getenv ( \"DATABASE_NAME\" ) Javascript var dbName = process . env . DATABASE_NAME ; Python database_name = os . getenv ( 'DATABASE_NAME' )","title":"\u74b0\u5883\u5909\u6570"},{"location":"ja/docs/developing/environment-variables/#_2","text":"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3001AWS Copilot CLI \u306f\u30b5\u30fc\u30d3\u30b9\u304c\u5229\u7528\u3067\u304d\u308b\u3044\u304f\u3064\u304b\u306e\u74b0\u5883\u5909\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 COPILOT_APPLICATION_NAME - \u3053\u306e Service \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b Application \u540d COPILOT_ENVIRONMENT_NAME - Service\u3000\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b Environment \u540d(\u4f8b: test\u3001prod) COPILOT_SERVICE_NAME - \u73fe\u5728\u306e Service \u540d COPILOT_LB_DNS - (\u5b58\u5728\u3059\u308b\u5834\u5408)\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u540d\u3002\u4f8b: kudos-Publi-MC2WNHAIOAVS-588300247.us-west-2.elb.amazonaws.com \u6ce8: \u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3067\u3082\u3001\u3053\u306e\u5024\u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e DNS \u540d\u3092\u4fdd\u6301\u3057\u307e\u3059 COPILOT_SERVICE_DISCOVERY_ENDPOINT - \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u4ecb\u3057\u3066\u3001Environment \u306e\u4e2d\u3067\u4ed6\u306e Service \u3068\u901a\u4fe1\u3059\u308b\u305f\u3081\u306b Service \u540d\u306e\u5f8c\u306b\u8ffd\u52a0\u3055\u308c\u308b\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3002\u5024\u306f {env name}.{app name}.local \u3068\u306a\u308a\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306b\u3064\u3044\u3066\u306e\u3088\u308a\u8a73\u3057\u3044\u60c5\u5831\u306f \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u30ac\u30a4\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044","title":"\u30c7\u30d5\u30a9\u30eb\u30c8\u74b0\u5883\u5909\u6570\u3068\u306f"},{"location":"ja/docs/developing/environment-variables/#_3","text":"\u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0\u3059\u308b\u306e\u306f\u7c21\u5358\u3067\u3059\u3002 Manifest \u306e variables \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u76f4\u63a5\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 \u4e0b\u8a18\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u3067\u306f\u3001 LOG_LEVEL \u3068\u3044\u3046\u5909\u6570\u3092 debug \u3068\u3044\u3046\u5024\u3067 Service \u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002 # copilot/{service name}/manifest.yml \u306e\u4e00\u90e8 variables : LOG_LEVEL : debug Environment \u306b\u5fdc\u3058\u3066\u3001\u7279\u5b9a\u306e\u74b0\u5883\u5909\u6570\u306e\u5024\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4e0a\u8a18\u3068\u540c\u3058\u4f8b\u3067\u3001\u30ed\u30b0\u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3057\u3001production \u306e Environment \u306e\u6642\u3060\u3051\u5024\u3092 info \u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002Manifest \u306e\u5909\u66f4\u306f\u3001\u305d\u308c\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u6642\u306b\u53cd\u6620\u3055\u308c\u308b\u306e\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u5909\u66f4\u306f\u5b89\u5168\u3067\u3059\u3002 # copilot/{service name}/manifest.yml \u306e\u4e00\u90e8 variables : LOG_LEVEL : debug environments : production : variables : LOG_LEVEL : info \u3053\u3053\u3067\u306f\u3001Manifest \u3092\u7de8\u96c6\u3057\u3066\u3001\u74b0\u5883\u5909\u6570\u3092 Application \u306b\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u306e\u7c21\u5358\u306a\u30ac\u30a4\u30c9\u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u3002\ud83d\udc47 \u3055\u3089\u306b\u3001\u74b0\u5883\u5909\u6570\u3092\u307e\u3068\u3081\u3066\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u3001 env file \u306b\u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9 (Workspace \u306e root \u304b\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9) \u3092 Manifest \u306e env_file \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002 \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u3084\u3001\u4efb\u610f\u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u5b9a\u7fa9\u3001 logging \u30d5\u30a3\u30fc\u30eb\u30c9\u4e0b\u306b\u3001env_file \u3092\u6307\u5b9a\u3057\u3066\u3001FireLens \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 # in copilot/{service name}/manifest.yml env_file : log.env log.env \u3067\u306f\u3001\u6b21\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002 #This is a comment and will be ignored LOG_LEVEL=debug LOG_INFO=all \u30b5\u30a4\u30c9\u30ab\u30fc\u5b9a\u7fa9\u306b\u304a\u3044\u3066\u306f\u3001\u6b21\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059: sidecars : nginx : image : nginx:latest env_file : ./nginx.env port : 8080 \u30ed\u30ae\u30f3\u30b0\u30b3\u30f3\u30c6\u30ca\u306b\u304a\u3044\u3066\u306f\u3001\u6b21\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059: logging : retention : 1 destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/logs/ log_stream_prefix : copilot/ env_file : ./logging.env","title":"\u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5"},{"location":"ja/docs/developing/environment-variables/#dynamodb-s3-rds","text":"Copilot CLI \u3092\u4f7f\u3063\u3066\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u3084 S3 \u30d0\u30b1\u30c3\u30c8\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u3092\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3059\u308b\u5834\u5408\u3001\u51fa\u529b\u306e\u5024\u306f\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u3001Application \u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u3088\u308a\u8a73\u3057\u3044\u60c5\u5831\u306f\u3001 AWS \u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"DynamoDB \u30c6\u30fc\u30d6\u30eb\u3084S3 \u30d0\u30b1\u30c3\u30c8\u3001RDS \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u540d\u524d\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5"},{"location":"ja/docs/developing/internal-albs/","text":"\u5185\u90e8 Application Load Balancers \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 Load Balanced Web Service \u7528\u306b\u4f5c\u6210\u3055\u308c\u305f Environment \u5185\u306e ALB \u306f \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd \u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u306e\u307f\u3092\u5229\u7528\u3059\u308b \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc \u3092\u4f5c\u308b\u305f\u3081\u306b\u306f\u3001Environment \u3068 Workload \u306b\u5e7e\u3064\u304b\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002 Environment \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Environment \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3042\u308a\u3001\u4ed6\u306e\u8a31\u53ef\u3055\u308c\u305f Service \u9593\u3067\u5171\u6709\u3055\u308c\u307e\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e HTTPS \u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001\u65e2\u5b58\u306e\u8a3c\u660e\u66f8\u306e ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b Environment Manifest \u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u8a3c\u660e\u66f8\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001Copilot \u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092 http://{env name}.{app name}.internal \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u95a2\u9023\u4ed8\u3051\u3001\u500b\u3005\u306e Service \u306f http://{service name}.{env name}.{app name}.internal \u3067\u5230\u9054\u53ef\u80fd\u306a\u72b6\u614b\u306b\u3057\u307e\u3059\u3002 // To reach the \"api\" service behind the internal load balancer endpoint := fmt . Sprintf ( \"http://api.%s.%s.internal\" , os . Getenv ( \"COPILOT_ENVIRONMENT_NAME\" ), os . Getenv ( \"COPILOT_APPLICATION_NAME\" )) resp , err := http . Get ( endpoint ) Service \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u80cc\u5f8c\u306b\u8a2d\u7f6e\u3067\u304d\u308b\u552f\u4e00\u306e Service \u30bf\u30a4\u30d7\u306f Backend Service \u3067\u3059\u3002Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f Environment \u3067 ALB \u3092\u4f5c\u6210\u3059\u308b\u69d8\u306b Copilot \u306b\u6307\u793a\u3092\u3059\u308b\u70ba\u306b\u3001 http \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Backend Service \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Manifest \u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b VPC \u5185\u306b\u65e2\u5b58\u306e\u5185\u90e8 ALB \u304c\u3042\u308b\u5834\u5408\u3001 \u30c7\u30d7\u30ed\u30a4\u524d\u306b Manifest \u5185\u3067 ALB \u3092\u6307\u5b9a\u3057\u3066 Backend Service \u6bce\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002 http : path : '/' alb : [ name or ARN ] \u9ad8\u5ea6\u306a\u8a2d\u5b9a \u30b5\u30d6\u30cd\u30c3\u30c8\u914d\u7f6e \u5185\u90e8 ALB \u3092\u914d\u7f6e\u3059\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6b63\u78ba\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 copilot env init \u3092\u5b9f\u884c\u3059\u308b\u6642\u306b\u3001 --internal-alb-subnets \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3057\u3001ALB \u3092\u914d\u7f6e\u3057\u305f\u3044\u30b5\u30d6\u30cd\u30c3\u30c8\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u30a8\u30a4\u30ea\u30a2\u30b9\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306a\u3069 Backend Service \u3067\u5229\u7528\u3059\u308b http \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001 Load Balanced Web Services \u306e http \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u5229\u7528\u3059\u308b\u5168\u3066\u306e\u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002 http : path : '/' healthcheck : path : '/_healthcheck' port : 8080 success_codes : '200,301' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 45s deregistration_delay : 5s stickiness : false allowed_source_ips : [ \"10.24.34.0/23\" ] alias : example.com alias \u3067\u306f\u30011. \u65e2\u5b58\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u6301\u3061\u8fbc\u3080\u304b\u30012. \u30c7\u30d7\u30ed\u30a4\u5f8c\u306b Copilot \u3068\u306f\u5225\u306b\u72ec\u81ea\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u30021 \u3064\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: http : alias : example.com hosted_zone : HostedZoneID1 \u307e\u305f\u306f\u3001\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u5171\u6709\u3059\u308b\u8907\u6570\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u5834\u5408: http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 \u307e\u305f\u306f\u3001\u8907\u6570\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u3042\u308a\u3001\u305d\u306e\u3046\u3061\u306e\u5e7e\u3064\u304b\u306f\u3001\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u4f7f\u3046\u5834\u5408: http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2","title":"Internal Load Balancers"},{"location":"ja/docs/developing/internal-albs/#application-load-balancers","text":"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 Load Balanced Web Service \u7528\u306b\u4f5c\u6210\u3055\u308c\u305f Environment \u5185\u306e ALB \u306f \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd \u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u306e\u307f\u3092\u5229\u7528\u3059\u308b \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc \u3092\u4f5c\u308b\u305f\u3081\u306b\u306f\u3001Environment \u3068 Workload \u306b\u5e7e\u3064\u304b\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002","title":"\u5185\u90e8 Application Load Balancers"},{"location":"ja/docs/developing/internal-albs/#environment","text":"\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Environment \u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u3067\u3042\u308a\u3001\u4ed6\u306e\u8a31\u53ef\u3055\u308c\u305f Service \u9593\u3067\u5171\u6709\u3055\u308c\u307e\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e HTTPS \u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001\u65e2\u5b58\u306e\u8a3c\u660e\u66f8\u306e ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b Environment Manifest \u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u8a3c\u660e\u66f8\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001Copilot \u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092 http://{env name}.{app name}.internal \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u95a2\u9023\u4ed8\u3051\u3001\u500b\u3005\u306e Service \u306f http://{service name}.{env name}.{app name}.internal \u3067\u5230\u9054\u53ef\u80fd\u306a\u72b6\u614b\u306b\u3057\u307e\u3059\u3002 // To reach the \"api\" service behind the internal load balancer endpoint := fmt . Sprintf ( \"http://api.%s.%s.internal\" , os . Getenv ( \"COPILOT_ENVIRONMENT_NAME\" ), os . Getenv ( \"COPILOT_APPLICATION_NAME\" )) resp , err := http . Get ( endpoint )","title":"Environment"},{"location":"ja/docs/developing/internal-albs/#service","text":"\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u80cc\u5f8c\u306b\u8a2d\u7f6e\u3067\u304d\u308b\u552f\u4e00\u306e Service \u30bf\u30a4\u30d7\u306f Backend Service \u3067\u3059\u3002Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f Environment \u3067 ALB \u3092\u4f5c\u6210\u3059\u308b\u69d8\u306b Copilot \u306b\u6307\u793a\u3092\u3059\u308b\u70ba\u306b\u3001 http \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Backend Service \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Manifest \u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 # in copilot/{service name}/manifest.yml http : path : '/' network : vpc : placement : private Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b VPC \u5185\u306b\u65e2\u5b58\u306e\u5185\u90e8 ALB \u304c\u3042\u308b\u5834\u5408\u3001 \u30c7\u30d7\u30ed\u30a4\u524d\u306b Manifest \u5185\u3067 ALB \u3092\u6307\u5b9a\u3057\u3066 Backend Service \u6bce\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002 http : path : '/' alb : [ name or ARN ]","title":"Service"},{"location":"ja/docs/developing/internal-albs/#_1","text":"","title":"\u9ad8\u5ea6\u306a\u8a2d\u5b9a"},{"location":"ja/docs/developing/internal-albs/#_2","text":"\u5185\u90e8 ALB \u3092\u914d\u7f6e\u3059\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6b63\u78ba\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 copilot env init \u3092\u5b9f\u884c\u3059\u308b\u6642\u306b\u3001 --internal-alb-subnets \u30d5\u30e9\u30b0\u3092\u5229\u7528\u3057\u3001ALB \u3092\u914d\u7f6e\u3057\u305f\u3044\u30b5\u30d6\u30cd\u30c3\u30c8\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002","title":"\u30b5\u30d6\u30cd\u30c3\u30c8\u914d\u7f6e"},{"location":"ja/docs/developing/internal-albs/#_3","text":"Backend Service \u3067\u5229\u7528\u3059\u308b http \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001 Load Balanced Web Services \u306e http \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u5229\u7528\u3059\u308b\u5168\u3066\u306e\u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002 http : path : '/' healthcheck : path : '/_healthcheck' port : 8080 success_codes : '200,301' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 45s deregistration_delay : 5s stickiness : false allowed_source_ips : [ \"10.24.34.0/23\" ] alias : example.com alias \u3067\u306f\u30011. \u65e2\u5b58\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u6301\u3061\u8fbc\u3080\u304b\u30012. \u30c7\u30d7\u30ed\u30a4\u5f8c\u306b Copilot \u3068\u306f\u5225\u306b\u72ec\u81ea\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u30021 \u3064\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: http : alias : example.com hosted_zone : HostedZoneID1 \u307e\u305f\u306f\u3001\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u5171\u6709\u3059\u308b\u8907\u6570\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u5834\u5408: http : alias : [ \"example.com\" , \"www.example.com\" ] hosted_zone : HostedZoneID1 \u307e\u305f\u306f\u3001\u8907\u6570\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u3042\u308a\u3001\u305d\u306e\u3046\u3061\u306e\u5e7e\u3064\u304b\u306f\u3001\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u4f7f\u3046\u5834\u5408: http : hosted_zone : HostedZoneID1 alias : - name : example.com - name : www.example.com - name : something-different.com hosted_zone : HostedZoneID2","title":"\u30a8\u30a4\u30ea\u30a2\u30b9\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306a\u3069"},{"location":"ja/docs/developing/manifest-env-var/","text":"Manifest \u306b\u304a\u3051\u308b\u74b0\u5883\u5909\u6570 \u30b7\u30a7\u30eb\u74b0\u5883\u5909\u6570 \u30b7\u30a7\u30eb\u306e\u74b0\u5883\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001Manifest \u306b\u5024\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 image : location : id.dkr.ecr.zone.amazonaws.com/project-name:${TAG} \u30b7\u30a7\u30eb\u304c\u74b0\u5883\u5909\u6570 TAG=version01 \u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u3001Manifest \u306f\u6b21\u306e\u3088\u3046\u306b\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image : location : id.dkr.ecr.zone.amazonaws.com/project-name:version01 \u3053\u308c\u306b\u3088\u308a\u3001Copilot \u306f id.dkr.ecr.zone.amazonaws.com/project-name \u306e tag version01 \u3067\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u306b\u304a\u3044\u3066\u3001\u74b0\u5883\u5909\u6570\u304c\u6b21\u306e\u69d8\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u5834\u5408\u3001 Array of Strings \u304b\u3089\u88dc\u5b8c\u3067\u304d\u307e\u3059\u3002 network : vpc : security_groups : ${SECURITY_GROUPS} \u30b7\u30a7\u30eb\u304c\u74b0\u5883\u5909\u6570 SECURITY_GROUPS=[\"sg-06b511534b8fa8bbb\",\"sg-06b511534b8fa8bbb\",\"sg-0e921ad50faae7777\"] \u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u3001 Manifest\u3000\u306e\u4f8b\u306f\u6b21\u306e\u69d8\u306b\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 network : vpc : security_groups : - sg-06b511534b8fa8bbb - sg-06b511534b8fa8bbb - sg-0e921ad50faae7777 Info \u73fe\u6642\u70b9\u3067\u306f\u3001Manifest \u5185\u306e\u6587\u5b57\u5217\u578b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3057\u3066\u306e\u307f\u30b7\u30a7\u30eb\u74b0\u5883\u5909\u6570\u3092\u4ee3\u5165\u3067\u304d\u307e\u3059\u3002 String (\u4f8b image.location ), Array of Strings (\u4f8b entrypoint ), Map \u3067\u5024\u306e\u30bf\u30a4\u30d7\u304c String \u307e\u305f\u306f\u3001 Array of Strings (e.g., secrets ) \u306a\u3069\u304c\u305d\u308c\u306b\u5f53\u305f\u308a\u307e\u3059\u3002 \u4e88\u7d04\u6e08\u307f\u5909\u6570 \u4e88\u7d04\u6e08\u307f\u5909\u6570\u306f\u3001Manifest \u3092\u89e3\u91c8\u3059\u308b\u969b\u306b Copilot \u306b\u3088\u3063\u3066\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f\u74b0\u5883\u5909\u6570\u3067\u3059\u3002\u73fe\u5728\u3001\u5229\u7528\u53ef\u80fd\u306a\u4e88\u7d04\u6e08\u307f\u5909\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 COPILOT_APPLICATION_NAME COPILOT_ENVIRONMENT_NAME secrets : DB_PASSWORD : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password Copilot\u306f\u3001 ${COPILOT_APPLICATION_NAME} \u3068 ${COPILOT_ENVIRONMENT_NAME} \u3092\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u74b0\u5883\u306e\u540d\u524d\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u305f\u5834\u5408\u3001 $ copilot svc deploy --app my-app --env test service \u306e\u30c7\u30d7\u30ed\u30a4\u306b environment \u3092 test \u3001applicatoon \u3092 my-app \u3068\u6307\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001Copilot \u306f /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password \u3092 /copilot/my-app/test/secrets/db_password \u3068\u89e3\u91c8\u3057\u307e\u3059\u3002 (\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u79d8\u5bc6\u60c5\u5831\u3092\u6e21\u3059\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 )\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002) \u30a8\u30b9\u30b1\u30fc\u30d7\u51e6\u7406 \u5909\u6570\u3092\u7f6e\u63db\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u3001\u5148\u982d\u306b\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u4ed8\u3051\u307e\u3059: command : echo hello \\${name} # or command: \"echo \\\\${name}\" variable : name : world \u3053\u306e\u5834\u5408\u3001 Copilot \u306f ${name} \u3092\u74b0\u5883\u5909\u6570 name \u3067\u7f6e\u304d\u63db\u3048\u3088\u3046\u3068\u306f\u3057\u307e\u305b\u3093\u3002","title":"Manifest Environment Variables"},{"location":"ja/docs/developing/manifest-env-var/#manifest","text":"","title":"Manifest \u306b\u304a\u3051\u308b\u74b0\u5883\u5909\u6570"},{"location":"ja/docs/developing/manifest-env-var/#_1","text":"\u30b7\u30a7\u30eb\u306e\u74b0\u5883\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001Manifest \u306b\u5024\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 image : location : id.dkr.ecr.zone.amazonaws.com/project-name:${TAG} \u30b7\u30a7\u30eb\u304c\u74b0\u5883\u5909\u6570 TAG=version01 \u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u3001Manifest \u306f\u6b21\u306e\u3088\u3046\u306b\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image : location : id.dkr.ecr.zone.amazonaws.com/project-name:version01 \u3053\u308c\u306b\u3088\u308a\u3001Copilot \u306f id.dkr.ecr.zone.amazonaws.com/project-name \u306e tag version01 \u3067\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u306b\u304a\u3044\u3066\u3001\u74b0\u5883\u5909\u6570\u304c\u6b21\u306e\u69d8\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u5834\u5408\u3001 Array of Strings \u304b\u3089\u88dc\u5b8c\u3067\u304d\u307e\u3059\u3002 network : vpc : security_groups : ${SECURITY_GROUPS} \u30b7\u30a7\u30eb\u304c\u74b0\u5883\u5909\u6570 SECURITY_GROUPS=[\"sg-06b511534b8fa8bbb\",\"sg-06b511534b8fa8bbb\",\"sg-0e921ad50faae7777\"] \u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\u3001 Manifest\u3000\u306e\u4f8b\u306f\u6b21\u306e\u69d8\u306b\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 network : vpc : security_groups : - sg-06b511534b8fa8bbb - sg-06b511534b8fa8bbb - sg-0e921ad50faae7777 Info \u73fe\u6642\u70b9\u3067\u306f\u3001Manifest \u5185\u306e\u6587\u5b57\u5217\u578b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3057\u3066\u306e\u307f\u30b7\u30a7\u30eb\u74b0\u5883\u5909\u6570\u3092\u4ee3\u5165\u3067\u304d\u307e\u3059\u3002 String (\u4f8b image.location ), Array of Strings (\u4f8b entrypoint ), Map \u3067\u5024\u306e\u30bf\u30a4\u30d7\u304c String \u307e\u305f\u306f\u3001 Array of Strings (e.g., secrets ) \u306a\u3069\u304c\u305d\u308c\u306b\u5f53\u305f\u308a\u307e\u3059\u3002","title":"\u30b7\u30a7\u30eb\u74b0\u5883\u5909\u6570"},{"location":"ja/docs/developing/manifest-env-var/#_2","text":"\u4e88\u7d04\u6e08\u307f\u5909\u6570\u306f\u3001Manifest \u3092\u89e3\u91c8\u3059\u308b\u969b\u306b Copilot \u306b\u3088\u3063\u3066\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f\u74b0\u5883\u5909\u6570\u3067\u3059\u3002\u73fe\u5728\u3001\u5229\u7528\u53ef\u80fd\u306a\u4e88\u7d04\u6e08\u307f\u5909\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 COPILOT_APPLICATION_NAME COPILOT_ENVIRONMENT_NAME secrets : DB_PASSWORD : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password Copilot\u306f\u3001 ${COPILOT_APPLICATION_NAME} \u3068 ${COPILOT_ENVIRONMENT_NAME} \u3092\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u74b0\u5883\u306e\u540d\u524d\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u305f\u5834\u5408\u3001 $ copilot svc deploy --app my-app --env test service \u306e\u30c7\u30d7\u30ed\u30a4\u306b environment \u3092 test \u3001applicatoon \u3092 my-app \u3068\u6307\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001Copilot \u306f /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/db_password \u3092 /copilot/my-app/test/secrets/db_password \u3068\u89e3\u91c8\u3057\u307e\u3059\u3002 (\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u79d8\u5bc6\u60c5\u5831\u3092\u6e21\u3059\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 )\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002)","title":"\u4e88\u7d04\u6e08\u307f\u5909\u6570"},{"location":"ja/docs/developing/manifest-env-var/#_3","text":"\u5909\u6570\u3092\u7f6e\u63db\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u3001\u5148\u982d\u306b\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u4ed8\u3051\u307e\u3059: command : echo hello \\${name} # or command: \"echo \\\\${name}\" variable : name : world \u3053\u306e\u5834\u5408\u3001 Copilot \u306f ${name} \u3092\u74b0\u5883\u5909\u6570 name \u3067\u7f6e\u304d\u63db\u3048\u3088\u3046\u3068\u306f\u3057\u307e\u305b\u3093\u3002","title":"\u30a8\u30b9\u30b1\u30fc\u30d7\u51e6\u7406"},{"location":"ja/docs/developing/observability/","text":"\u53ef\u89b3\u6e2c\u6027 (Observability) \u306f\u3058\u3081\u306b Copilot \u3067\u306f\u3001Manifest \u306b\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001Service \u306e\u30c8\u30ec\u30fc\u30b9\u53ce\u96c6\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 observability : tracing : awsxray Request-Driven Web Service \u306e\u5834\u5408\u3001Copilot \u306f App Runner \u306b\u7d44\u307f\u8fbc\u307e\u308c\u305f \u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 Load Balanced Web Service \u3001 Backend Service \u3001 Worker Service \u306e\u5834\u5408\u3001Copilot \u306f AWS OpenTelemetry Collector \u3092 \u30b5\u30a4\u30c9\u30ab\u30fc \u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 Service \u306e\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316 \u30c6\u30ec\u30e1\u30c8\u30ea\u30fc\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e Service \u306e\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316 (\u8a33\u6ce8: \u8a08\u88c5\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8a08\u6e2c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068) \u306f\u3001 \u5404\u8a00\u8a9e\u6bce\u306e SDK \u3067\u884c\u3044\u307e\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u306f\u3001OpenTelemetry \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5404\u8a00\u8a9e\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001 AWS Distro for OpenTelemetry \u304c\u63d0\u4f9b\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u30b5\u30f3\u30d7\u30eb\u3092\u3054\u89a7\u3044\u305f\u3060\u3044\u305f\u3051\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f8b \u3053\u308c\u306f\u3001\u3059\u3079\u3066\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3055\u308c\u305f Express.js \u306b\u3088\u308b\u5c0f\u3055\u306a Service \u3067\u3059\u3002\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u5fc5\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 npm install express \\ @opentelemetry/api \\ @opentelemetry/sdk-trace-node \\ @opentelemetry/auto-instrumentations-node \\ @opentelemetry/exporter-trace-otlp-grpc \\ @opentelemetry/id-generator-aws-xray \\ @opentelemetry/propagator-aws-xray \u6b21\u306b\u3001\u4ee5\u4e0b\u3092 tracer.js \u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002 tracer.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 const { BatchSpanProcessor } = require ( \"@opentelemetry/sdk-trace-base\" ); const { Resource } = require ( \"@opentelemetry/resources\" ); const { trace } = require ( \"@opentelemetry/api\" ); const { AWSXRayIdGenerator } = require ( \"@opentelemetry/id-generator-aws-xray\" ); const { SemanticResourceAttributes } = require ( \"@opentelemetry/semantic-conventions\" ); const { NodeTracerProvider } = require ( \"@opentelemetry/sdk-trace-node\" ); const { AWSXRayPropagator } = require ( \"@opentelemetry/propagator-aws-xray\" ); const { OTLPTraceExporter } = require ( \"@opentelemetry/exporter-trace-otlp-grpc\" ); const { getNodeAutoInstrumentations } = require ( \"@opentelemetry/auto-instrumentations-node\" ); module . exports = ( serviceName ) => { const tracerConfig = { idGenerator : new AWSXRayIdGenerator (), instrumentations : [ getNodeAutoInstrumentations ()], resource : Resource . default (). merge ( new Resource ({ [ SemanticResourceAttributes . SERVICE_NAME ] : serviceName , }) ), }; const tracerProvider = new NodeTracerProvider ( tracerConfig ); const otlpExporter = new OTLPTraceExporter (); tracerProvider . addSpanProcessor ( new BatchSpanProcessor ( otlpExporter )); tracerProvider . register ({ propagator : new AWSXRayPropagator (), }); return trace . getTracer ( \"example-instrumentation\" ); }; tracer.js \u306f\u3001 OpenTelemetry \u30d7\u30ed\u30c8\u30b3\u30eb \u3092\u4f7f\u7528\u3057\u3066 Express.js \u30b5\u30fc\u30d0\u304b\u3089\u30c8\u30ec\u30fc\u30b9\u3092 \u81ea\u52d5\u7684 \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u69cb\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b5\u30fc\u3092\u8fd4\u3059\u95a2\u6570\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u3092 app.js \u3067\u4f7f\u7528\u3057\u3001Service \u540d\u3068\u3057\u3066 copilot-observability \u3092\u6e21\u3057\u307e\u3059\u3002 app.js 1 2 3 4 5 6 7 8 9 10 11 12 'use strict' ; const tracer = require ( './tracer' )( 'copilot-observability' ); const app = require ( \"express\" )(); const port = 8080 ; app . get ( \"/\" , ( req , res ) => { res . send ( \"Hello World\" ); }); app . listen ( port , () => { console . log ( `Listening for requests on http://localhost: ${ port } ` ); }); \u3053\u308c\u3067\u3001Copilot \u3092\u4f7f\u7528\u3057\u3066\u3053\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001Manifest \u3067 observability \u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001 \u3053\u306e Service \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059 \u3002 \u30c8\u30ec\u30fc\u30b9\u30ed\u30b0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9 Attention \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f Request-Driven Web Services \u306b\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002 Copilot \u306f\u30b3\u30ec\u30af\u30bf\u30fc\u3067 ECS resource detector \u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u3001Service \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u306b\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u304c\u30ed\u30b0\u3092\u8a18\u9332\u3057\u3066\u3044\u308b\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u304c\u542b\u307e\u308c\u307e\u3059\u3002 \u30ed\u30b0\u306b\u30c8\u30ec\u30fc\u30b9 ID \u3092\u542b\u3081\u308b\u3068\u3001\u30c8\u30ec\u30fc\u30b9\u306b\u95a2\u9023\u3059\u308b\u30ed\u30b0\u304c X-Ray \u3067\u30c8\u30ec\u30fc\u30b9\u3068\u4e00\u7dd2\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c8\u30ec\u30fc\u30b9\u3092\u7406\u89e3\u3057\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306b\u4fbf\u5229\u3067\u3059\u3002 X-Ray \u306f OpenTelemetry \u3068\u306f\u5c11\u3057\u7570\u306a\u308b\u5f62\u5f0f \u3067 \u30c8\u30ec\u30fc\u30b9 ID \u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 \u3059\u308b\u306e\u3067\u3001OpenTelemetry \u306e\u30c8\u30ec\u30fc\u30b9 ID \u3092\u53d6\u5f97\u3057\u3066 X-Ray \u7528\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 function getXRayTraceId ( span ) { const id = span . spanContext (). traceId ; if ( id . length < 9 ) { return id ; } return \"1-\" + id . substring ( 0 , 8 ) + \"-\" + id . substring ( 8 ); } \u6b21\u306b\u3001X-Ray \u30c8\u30ec\u30fc\u30b9 ID \u3092\u30ed\u30b0\u306b\u6b21\u306e\u3088\u3046\u306b\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 console . log ( \"[%s] A useful log message\" , getXRayTraceId ( span )); CloudWatch \u3067\u30c8\u30ec\u30fc\u30b9\u3092\u8868\u793a\u3059\u308b Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3057 Copilot \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u30c8\u30ec\u30fc\u30b9\u3092\u8868\u793a\u3059\u308b\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002Service \u306e\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u306e\u65b9\u6cd5\u306b\u3088\u3063\u3066\u306f\u3001AWS\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30c8\u30ec\u30fc\u30b9\u304c\u8868\u793a\u3055\u308c\u308b\u524d\u306b\u3001\u6570\u56de\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u307e\u305a\u3001CloudWatch \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d\u3001\u30e1\u30cb\u30e5\u30fc\u306e X-Ray \u30c8\u30ec\u30fc\u30b9/\u30b5\u30fc\u30d3\u30b9\u30de\u30c3\u30d7 \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u76f8\u4e92\u4f5c\u7528\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30de\u30c3\u30d7\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6b21\u306b\u3001\u30e1\u30cb\u30e5\u30fc\u306e X-Ray \u30c8\u30ec\u30fc\u30b9/\u30c8\u30ec\u30fc\u30b9 \u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u30ea\u30b9\u30c8\u304b\u3089\u30c8\u30ec\u30fc\u30b9\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u7279\u5b9a\u306e\u30c8\u30ec\u30fc\u30b9\u306e\u8a73\u7d30\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u4f8b\u3067\u306f\u3001 js-copilot-observability \u3068\u3044\u3046 Service \u304c\u5185\u90e8\u3067 Express.js \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u5b9f\u884c\u3057\u3001 AWS SDK for Javascript \u3092\u4f7f\u3063\u3066 s3:listBuckets \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002","title":"Observability"},{"location":"ja/docs/developing/observability/#observability","text":"","title":"\u53ef\u89b3\u6e2c\u6027 (Observability)"},{"location":"ja/docs/developing/observability/#_1","text":"Copilot \u3067\u306f\u3001Manifest \u306b\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001Service \u306e\u30c8\u30ec\u30fc\u30b9\u53ce\u96c6\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 observability : tracing : awsxray Request-Driven Web Service \u306e\u5834\u5408\u3001Copilot \u306f App Runner \u306b\u7d44\u307f\u8fbc\u307e\u308c\u305f \u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 Load Balanced Web Service \u3001 Backend Service \u3001 Worker Service \u306e\u5834\u5408\u3001Copilot \u306f AWS OpenTelemetry Collector \u3092 \u30b5\u30a4\u30c9\u30ab\u30fc \u3068\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002","title":"\u306f\u3058\u3081\u306b"},{"location":"ja/docs/developing/observability/#service","text":"\u30c6\u30ec\u30e1\u30c8\u30ea\u30fc\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e Service \u306e\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316 (\u8a33\u6ce8: \u8a08\u88c5\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u8a08\u6e2c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068) \u306f\u3001 \u5404\u8a00\u8a9e\u6bce\u306e SDK \u3067\u884c\u3044\u307e\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u306f\u3001OpenTelemetry \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5404\u8a00\u8a9e\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001 AWS Distro for OpenTelemetry \u304c\u63d0\u4f9b\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u30b5\u30f3\u30d7\u30eb\u3092\u3054\u89a7\u3044\u305f\u3060\u3044\u305f\u3051\u307e\u3059\u3002","title":"Service \u306e\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316"},{"location":"ja/docs/developing/observability/#_2","text":"\u3053\u308c\u306f\u3001\u3059\u3079\u3066\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3055\u308c\u305f Express.js \u306b\u3088\u308b\u5c0f\u3055\u306a Service \u3067\u3059\u3002\u958b\u59cb\u3059\u308b\u306b\u306f\u3001\u5fc5\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 npm install express \\ @opentelemetry/api \\ @opentelemetry/sdk-trace-node \\ @opentelemetry/auto-instrumentations-node \\ @opentelemetry/exporter-trace-otlp-grpc \\ @opentelemetry/id-generator-aws-xray \\ @opentelemetry/propagator-aws-xray \u6b21\u306b\u3001\u4ee5\u4e0b\u3092 tracer.js \u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002 tracer.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 const { BatchSpanProcessor } = require ( \"@opentelemetry/sdk-trace-base\" ); const { Resource } = require ( \"@opentelemetry/resources\" ); const { trace } = require ( \"@opentelemetry/api\" ); const { AWSXRayIdGenerator } = require ( \"@opentelemetry/id-generator-aws-xray\" ); const { SemanticResourceAttributes } = require ( \"@opentelemetry/semantic-conventions\" ); const { NodeTracerProvider } = require ( \"@opentelemetry/sdk-trace-node\" ); const { AWSXRayPropagator } = require ( \"@opentelemetry/propagator-aws-xray\" ); const { OTLPTraceExporter } = require ( \"@opentelemetry/exporter-trace-otlp-grpc\" ); const { getNodeAutoInstrumentations } = require ( \"@opentelemetry/auto-instrumentations-node\" ); module . exports = ( serviceName ) => { const tracerConfig = { idGenerator : new AWSXRayIdGenerator (), instrumentations : [ getNodeAutoInstrumentations ()], resource : Resource . default (). merge ( new Resource ({ [ SemanticResourceAttributes . SERVICE_NAME ] : serviceName , }) ), }; const tracerProvider = new NodeTracerProvider ( tracerConfig ); const otlpExporter = new OTLPTraceExporter (); tracerProvider . addSpanProcessor ( new BatchSpanProcessor ( otlpExporter )); tracerProvider . register ({ propagator : new AWSXRayPropagator (), }); return trace . getTracer ( \"example-instrumentation\" ); }; tracer.js \u306f\u3001 OpenTelemetry \u30d7\u30ed\u30c8\u30b3\u30eb \u3092\u4f7f\u7528\u3057\u3066 Express.js \u30b5\u30fc\u30d0\u304b\u3089\u30c8\u30ec\u30fc\u30b9\u3092 \u81ea\u52d5\u7684 \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u69cb\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b5\u30fc\u3092\u8fd4\u3059\u95a2\u6570\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u3092 app.js \u3067\u4f7f\u7528\u3057\u3001Service \u540d\u3068\u3057\u3066 copilot-observability \u3092\u6e21\u3057\u307e\u3059\u3002 app.js 1 2 3 4 5 6 7 8 9 10 11 12 'use strict' ; const tracer = require ( './tracer' )( 'copilot-observability' ); const app = require ( \"express\" )(); const port = 8080 ; app . get ( \"/\" , ( req , res ) => { res . send ( \"Hello World\" ); }); app . listen ( port , () => { console . log ( `Listening for requests on http://localhost: ${ port } ` ); }); \u3053\u308c\u3067\u3001Copilot \u3092\u4f7f\u7528\u3057\u3066\u3053\u306e Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001Manifest \u3067 observability \u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001 \u3053\u306e Service \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059 \u3002","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f8b"},{"location":"ja/docs/developing/observability/#_3","text":"Attention \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f Request-Driven Web Services \u306b\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\u3002 Copilot \u306f\u30b3\u30ec\u30af\u30bf\u30fc\u3067 ECS resource detector \u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u3001Service \u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30c8\u30ec\u30fc\u30b9\u306b\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u304c\u30ed\u30b0\u3092\u8a18\u9332\u3057\u3066\u3044\u308b\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u304c\u542b\u307e\u308c\u307e\u3059\u3002 \u30ed\u30b0\u306b\u30c8\u30ec\u30fc\u30b9 ID \u3092\u542b\u3081\u308b\u3068\u3001\u30c8\u30ec\u30fc\u30b9\u306b\u95a2\u9023\u3059\u308b\u30ed\u30b0\u304c X-Ray \u3067\u30c8\u30ec\u30fc\u30b9\u3068\u4e00\u7dd2\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c8\u30ec\u30fc\u30b9\u3092\u7406\u89e3\u3057\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306b\u4fbf\u5229\u3067\u3059\u3002 X-Ray \u306f OpenTelemetry \u3068\u306f\u5c11\u3057\u7570\u306a\u308b\u5f62\u5f0f \u3067 \u30c8\u30ec\u30fc\u30b9 ID \u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 \u3059\u308b\u306e\u3067\u3001OpenTelemetry \u306e\u30c8\u30ec\u30fc\u30b9 ID \u3092\u53d6\u5f97\u3057\u3066 X-Ray \u7528\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 function getXRayTraceId ( span ) { const id = span . spanContext (). traceId ; if ( id . length < 9 ) { return id ; } return \"1-\" + id . substring ( 0 , 8 ) + \"-\" + id . substring ( 8 ); } \u6b21\u306b\u3001X-Ray \u30c8\u30ec\u30fc\u30b9 ID \u3092\u30ed\u30b0\u306b\u6b21\u306e\u3088\u3046\u306b\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 console . log ( \"[%s] A useful log message\" , getXRayTraceId ( span ));","title":"\u30c8\u30ec\u30fc\u30b9\u30ed\u30b0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9"},{"location":"ja/docs/developing/observability/#cloudwatch","text":"Service \u3092\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u3057 Copilot \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u30c8\u30ec\u30fc\u30b9\u3092\u8868\u793a\u3059\u308b\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002Service \u306e\u30a4\u30f3\u30b9\u30c8\u30eb\u30e1\u30f3\u30c8\u5316\u306e\u65b9\u6cd5\u306b\u3088\u3063\u3066\u306f\u3001AWS\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30c8\u30ec\u30fc\u30b9\u304c\u8868\u793a\u3055\u308c\u308b\u524d\u306b\u3001\u6570\u56de\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u307e\u305a\u3001CloudWatch \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d\u3001\u30e1\u30cb\u30e5\u30fc\u306e X-Ray \u30c8\u30ec\u30fc\u30b9/\u30b5\u30fc\u30d3\u30b9\u30de\u30c3\u30d7 \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u76f8\u4e92\u4f5c\u7528\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30de\u30c3\u30d7\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6b21\u306b\u3001\u30e1\u30cb\u30e5\u30fc\u306e X-Ray \u30c8\u30ec\u30fc\u30b9/\u30c8\u30ec\u30fc\u30b9 \u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u30ea\u30b9\u30c8\u304b\u3089\u30c8\u30ec\u30fc\u30b9\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u7279\u5b9a\u306e\u30c8\u30ec\u30fc\u30b9\u306e\u8a73\u7d30\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u4f8b\u3067\u306f\u3001 js-copilot-observability \u3068\u3044\u3046 Service \u304c\u5185\u90e8\u3067 Express.js \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u5b9f\u884c\u3057\u3001 AWS SDK for Javascript \u3092\u4f7f\u3063\u3066 s3:listBuckets \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002","title":"CloudWatch \u3067\u30c8\u30ec\u30fc\u30b9\u3092\u8868\u793a\u3059\u308b"},{"location":"ja/docs/developing/publish-subscribe/","text":"\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 Copilot Worker Services \u306f\u3001\u3059\u3079\u3066\u306e Service \u30bf\u30a4\u30d7\u3068 Job \u30bf\u30a4\u30d7\u306b\u5171\u901a\u3059\u308b publish \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u6e21\u3059\u305f\u3081\u306e\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 AWS \u4e0a\u3067\u306e\u4e00\u822c\u7684\u306a\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u914d\u4fe1\u3068\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306e SNS \u3068 SQS \u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3059\u3002 SNS \u306f\u5805\u7262\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u914d\u4fe1\u30b7\u30b9\u30c6\u30e0\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u914d\u4fe1\u3092\u4fdd\u8a3c\u3057\u306a\u304c\u3089\u8907\u6570\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 SQS \u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u53ef\u80fd\u306b\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3067\u3059\u3002\u30ad\u30e5\u30fc\u306b\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u3084\u3001AWS EventBridge \u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u6295\u5165\u3067\u304d\u307e\u3059\u3002 \u3053\u306e 2 \u3064\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u52b9\u679c\u7684\u306b\u758e\u7d50\u5408\u306b\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u306f\u81ea\u5206\u306e\u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u3066\u3044\u308b\u30ad\u30e5\u30fc\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u307e\u305f Worker Service \u306e\u30b3\u30fc\u30c9\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3069\u3053\u304b\u3089\u6765\u308b\u304b\u3092\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1 \u65e2\u5b58\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089 SNS \u3078\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3092\u8a31\u53ef\u3059\u308b\u306b\u306f\u3001Manifest \u306b publish \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067\u3059\u3002 SNS \u30c8\u30d4\u30c3\u30af\u306e\u6a5f\u80fd\u3092\u8868\u3059\u540d\u524d\u3092\u4ed8\u3051\u308b\u3053\u3068\u3092\u63d0\u6848\u3057\u307e\u3059\u3002 # api \u30b5\u30fc\u30d3\u30b9\u7528\u306e manifest.yml name : api type : Backend Service publish : topics : - name : ordersTopic \u3053\u308c\u306b\u3088\u308a\u3001 SNS \u30c8\u30d4\u30c3\u30af \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30c8\u30d4\u30c3\u30af\u306b\u30ea\u30bd\u30fc\u30b9\u30dd\u30ea\u30b7\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3001AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u3042\u308b SQS \u30ad\u30e5\u30fc\u304c\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u307e\u305f Copilot \u306f\u3001\u4efb\u610f\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e ARN \u3092\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u74b0\u5883\u5909\u6570 COPILOT_SNS_TOPIC_ARNS \u306b\u6ce8\u5165\u3057\u307e\u3059\u3002 JSON \u6587\u5b57\u5217\u306e\u5f62\u5f0f : { \"firstTopicName\" : \"arn:aws:sns:us-east-1:123456789012:firstTopic\" , \"secondTopicName\" : \"arn:aws:sns:us-east-1:123456789012:secondTopic\" , } Javascript \u3067\u306e\u4f8b \u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3068\u3001AWS SDK \u3092\u4ecb\u3057\u3066 SNS \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 const { SNSClient , PublishCommand } = require ( \"@aws-sdk/client-sns\" ); const client = new SNSClient ({ region : \"us-west-2\" }); const { ordersTopic } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ); const out = await client . send ( new PublishCommand ({ Message : \"hello\" , TopicArn : ordersTopic , })); Worker Service \u3067\u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 Worker Service \u3067\u65e2\u5b58\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u306b\u306f\u3001Worker Service \u306e Manifest \u3092\u7de8\u96c6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Manifest \u306e subscribe \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u5185\u306e\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u516c\u958b\u3059\u308b\u65e2\u5b58\u306e SNS \u30c8\u30d4\u30c3\u30af\u3078\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u3001\u524d\u30bb\u30af\u30b7\u30e7\u30f3\u306e api \u30b5\u30fc\u30d3\u30b9\u304c\u516c\u958b\u3059\u308b ordersTopic \u30c8\u30d4\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f Worker Service \u306e\u30ad\u30e5\u30fc\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3001DLQ(\u30c7\u30c3\u30c9\u30ec\u30bf\u30fc\u30ad\u30e5\u30fc) \u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 tries \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u5931\u6557\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092 DLQ \u306b\u9001\u4fe1\u3057\u3001\u5931\u6557\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306a\u5206\u6790\u3059\u308b\u524d\u306b\u3001\u4f55\u56de\u518d\u914d\u9001\u3092\u8a66\u307f\u308b\u304b\u3092 SQS \u306b\u4f1d\u3048\u307e\u3059\u3002 name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 Copilot \u306f\u3001\u3053\u306e Worker Service \u306e\u30ad\u30e5\u30fc\u3068\u3001 api \u30b5\u30fc\u30d3\u30b9\u306e ordersTopic \u30c8\u30d4\u30c3\u30af\u306e\u9593\u306b\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30ad\u30e5\u30fc\u306e URI \u3092\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u74b0\u5883\u5909\u6570 COPILOT_QUEUE_URI \u306b\u6ce8\u5165\u3057\u307e\u3059\u3002 1 \u3064\u4ee5\u4e0a\u306e\u30c8\u30d4\u30c3\u30af\u56fa\u6709\u30ad\u30e5\u30fc\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 COPILOT_TOPIC_QUEUE_URIS \u5909\u6570\u3092\u4f7f\u3063\u3066\u305d\u308c\u3089\u306e\u30ad\u30e5\u30fc URI \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5909\u6570\u306f\u3001\u30c8\u30d4\u30c3\u30af\u56fa\u6709\u306e\u30ad\u30e5\u30fc\u306e\u4e00\u610f\u306a\u8b58\u5225\u5b50\u304b\u3089\u305d\u306e URI \u3078\u306e JSON Map \u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001 merchant Service \u304b\u3089\u306e orders \u30c8\u30d4\u30c3\u30af\u3068 merchant Service \u304b\u3089\u306e FIFO \u30c8\u30d4\u30c3\u30af transactions \u306e\u30c8\u30d4\u30c3\u30af\u5225\u30ad\u30e5\u30fc\u3092\u6301\u3064\u30ef\u30fc\u30ab\u30fc\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a JSON \u69cb\u9020\u3092\u6301\u3064\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 // COPILOT_TOPIC_QUEUE_URIS { \"merchantOrdersEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" , \"merchantTransactionsfifoEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" } Javascript \u3067\u306e\u4f8b Worker Service \u5185\u306e\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u5fc3\u3068\u306a\u308b\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306b\u306f\u3001\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d7\u30eb\u3059\u308b\u3053\u3068\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u308c\u3092 AWS SDK \u3067\u884c\u3046\u306b\u306f\u3001\u9078\u629e\u3057\u305f\u8a00\u8a9e\u7528\u306e SQS \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070 Javascript \u3067\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d7\u30eb\u3057\u305f\u308a\u3001\u51e6\u7406\u3084\u524a\u9664\u3092\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002 const { SQSClient , ReceiveMessageCommand , DeleteMessageCommand } = require ( \"@aws-sdk/client-sqs\" ); const client = new SQSClient ({ region : \"us-west-2\" }); const out = await client . send ( new ReceiveMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , WaitTimeSeconds : 10 , })); console . log ( `results: ${ JSON . stringify ( out ) } ` ); if ( out . Messages === undefined || out . Messages . length === 0 ) { return ; } // \u3053\u3053\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3057\u307e\u3059\u3002 await client . send ( new DeleteMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , ReceiptHandle : out . Messages [ 0 ]. ReceiptHandle , }));","title":"Publish/Subscribe"},{"location":"ja/docs/developing/publish-subscribe/#_1","text":"Copilot Worker Services \u306f\u3001\u3059\u3079\u3066\u306e Service \u30bf\u30a4\u30d7\u3068 Job \u30bf\u30a4\u30d7\u306b\u5171\u901a\u3059\u308b publish \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u6e21\u3059\u305f\u3081\u306e\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 AWS \u4e0a\u3067\u306e\u4e00\u822c\u7684\u306a\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u914d\u4fe1\u3068\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306e SNS \u3068 SQS \u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3059\u3002 SNS \u306f\u5805\u7262\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u914d\u4fe1\u30b7\u30b9\u30c6\u30e0\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u914d\u4fe1\u3092\u4fdd\u8a3c\u3057\u306a\u304c\u3089\u8907\u6570\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 SQS \u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u53ef\u80fd\u306b\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3067\u3059\u3002\u30ad\u30e5\u30fc\u306b\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u3084\u3001AWS EventBridge \u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u6295\u5165\u3067\u304d\u307e\u3059\u3002 \u3053\u306e 2 \u3064\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u52b9\u679c\u7684\u306b\u758e\u7d50\u5408\u306b\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u306f\u81ea\u5206\u306e\u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u3066\u3044\u308b\u30ad\u30e5\u30fc\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u307e\u305f Worker Service \u306e\u30b3\u30fc\u30c9\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3069\u3053\u304b\u3089\u6765\u308b\u304b\u3092\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002","title":"\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3"},{"location":"ja/docs/developing/publish-subscribe/#_2","text":"\u65e2\u5b58\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089 SNS \u3078\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3092\u8a31\u53ef\u3059\u308b\u306b\u306f\u3001Manifest \u306b publish \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067\u3059\u3002 SNS \u30c8\u30d4\u30c3\u30af\u306e\u6a5f\u80fd\u3092\u8868\u3059\u540d\u524d\u3092\u4ed8\u3051\u308b\u3053\u3068\u3092\u63d0\u6848\u3057\u307e\u3059\u3002 # api \u30b5\u30fc\u30d3\u30b9\u7528\u306e manifest.yml name : api type : Backend Service publish : topics : - name : ordersTopic \u3053\u308c\u306b\u3088\u308a\u3001 SNS \u30c8\u30d4\u30c3\u30af \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30c8\u30d4\u30c3\u30af\u306b\u30ea\u30bd\u30fc\u30b9\u30dd\u30ea\u30b7\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3001AWS \u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u3042\u308b SQS \u30ad\u30e5\u30fc\u304c\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u307e\u305f Copilot \u306f\u3001\u4efb\u610f\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e ARN \u3092\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u74b0\u5883\u5909\u6570 COPILOT_SNS_TOPIC_ARNS \u306b\u6ce8\u5165\u3057\u307e\u3059\u3002 JSON \u6587\u5b57\u5217\u306e\u5f62\u5f0f : { \"firstTopicName\" : \"arn:aws:sns:us-east-1:123456789012:firstTopic\" , \"secondTopicName\" : \"arn:aws:sns:us-east-1:123456789012:secondTopic\" , }","title":"\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1"},{"location":"ja/docs/developing/publish-subscribe/#javascript","text":"\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3068\u3001AWS SDK \u3092\u4ecb\u3057\u3066 SNS \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 const { SNSClient , PublishCommand } = require ( \"@aws-sdk/client-sns\" ); const client = new SNSClient ({ region : \"us-west-2\" }); const { ordersTopic } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ); const out = await client . send ( new PublishCommand ({ Message : \"hello\" , TopicArn : ordersTopic , }));","title":"Javascript \u3067\u306e\u4f8b"},{"location":"ja/docs/developing/publish-subscribe/#worker-service","text":"Worker Service \u3067\u65e2\u5b58\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u306b\u306f\u3001Worker Service \u306e Manifest \u3092\u7de8\u96c6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Manifest \u306e subscribe \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001Environment \u5185\u306e\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u516c\u958b\u3059\u308b\u65e2\u5b58\u306e SNS \u30c8\u30d4\u30c3\u30af\u3078\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u3001\u524d\u30bb\u30af\u30b7\u30e7\u30f3\u306e api \u30b5\u30fc\u30d3\u30b9\u304c\u516c\u958b\u3059\u308b ordersTopic \u30c8\u30d4\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f Worker Service \u306e\u30ad\u30e5\u30fc\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3001DLQ(\u30c7\u30c3\u30c9\u30ec\u30bf\u30fc\u30ad\u30e5\u30fc) \u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 tries \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u5931\u6557\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092 DLQ \u306b\u9001\u4fe1\u3057\u3001\u5931\u6557\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306a\u5206\u6790\u3059\u308b\u524d\u306b\u3001\u4f55\u56de\u518d\u914d\u9001\u3092\u8a66\u307f\u308b\u304b\u3092 SQS \u306b\u4f1d\u3048\u307e\u3059\u3002 name : orders-worker type : Worker Service subscribe : topics : - name : ordersTopic service : api queue : dead_letter : tries : 5 Copilot \u306f\u3001\u3053\u306e Worker Service \u306e\u30ad\u30e5\u30fc\u3068\u3001 api \u30b5\u30fc\u30d3\u30b9\u306e ordersTopic \u30c8\u30d4\u30c3\u30af\u306e\u9593\u306b\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30ad\u30e5\u30fc\u306e URI \u3092\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u74b0\u5883\u5909\u6570 COPILOT_QUEUE_URI \u306b\u6ce8\u5165\u3057\u307e\u3059\u3002 1 \u3064\u4ee5\u4e0a\u306e\u30c8\u30d4\u30c3\u30af\u56fa\u6709\u30ad\u30e5\u30fc\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 COPILOT_TOPIC_QUEUE_URIS \u5909\u6570\u3092\u4f7f\u3063\u3066\u305d\u308c\u3089\u306e\u30ad\u30e5\u30fc URI \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5909\u6570\u306f\u3001\u30c8\u30d4\u30c3\u30af\u56fa\u6709\u306e\u30ad\u30e5\u30fc\u306e\u4e00\u610f\u306a\u8b58\u5225\u5b50\u304b\u3089\u305d\u306e URI \u3078\u306e JSON Map \u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001 merchant Service \u304b\u3089\u306e orders \u30c8\u30d4\u30c3\u30af\u3068 merchant Service \u304b\u3089\u306e FIFO \u30c8\u30d4\u30c3\u30af transactions \u306e\u30c8\u30d4\u30c3\u30af\u5225\u30ad\u30e5\u30fc\u3092\u6301\u3064\u30ef\u30fc\u30ab\u30fc\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a JSON \u69cb\u9020\u3092\u6301\u3064\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 // COPILOT_TOPIC_QUEUE_URIS { \"merchantOrdersEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" , \"merchantTransactionsfifoEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" }","title":"Worker Service \u3067\u30c8\u30d4\u30c3\u30af\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6"},{"location":"ja/docs/developing/publish-subscribe/#javascript_1","text":"Worker Service \u5185\u306e\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u5fc3\u3068\u306a\u308b\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306b\u306f\u3001\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d7\u30eb\u3059\u308b\u3053\u3068\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u308c\u3092 AWS SDK \u3067\u884c\u3046\u306b\u306f\u3001\u9078\u629e\u3057\u305f\u8a00\u8a9e\u7528\u306e SQS \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070 Javascript \u3067\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d7\u30eb\u3057\u305f\u308a\u3001\u51e6\u7406\u3084\u524a\u9664\u3092\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002 const { SQSClient , ReceiveMessageCommand , DeleteMessageCommand } = require ( \"@aws-sdk/client-sqs\" ); const client = new SQSClient ({ region : \"us-west-2\" }); const out = await client . send ( new ReceiveMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , WaitTimeSeconds : 10 , })); console . log ( `results: ${ JSON . stringify ( out ) } ` ); if ( out . Messages === undefined || out . Messages . length === 0 ) { return ; } // \u3053\u3053\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3057\u307e\u3059\u3002 await client . send ( new DeleteMessageCommand ({ QueueUrl : process . env . COPILOT_QUEUE_URI , ReceiptHandle : out . Messages [ 0 ]. ReceiptHandle , }));","title":"Javascript \u3067\u306e\u4f8b"},{"location":"ja/docs/developing/secrets/","text":"\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u3001OAuth \u30c8\u30fc\u30af\u30f3\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3001API \u30ad\u30fc\u306a\u3069\u306e\u6a5f\u5bc6\u60c5\u5831\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u60c5\u5831\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3067\u306f\u5fc5\u8981\u3067\u3059\u304c\u3001 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u30b3\u30df\u30c3\u30c8\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002AWS Copilot CLI \u3067\u306f\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u307e\u3059\u304c\u3001\u305d\u306e\u6a5f\u5bc6\u6027\u306e\u305f\u3081\u6271\u3044\u304c\u7570\u306a\u308a\u307e\u3059 (\u8a73\u7d30\u306f \u74b0\u5883\u5909\u6570\u3092\u4f7f\u3063\u305f\u958b\u767a \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044) \u3002 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u8ffd\u52a0\u65b9\u6cd5 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092 AWS Systems Manager \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 (SSM) \u3001 \u307e\u305f\u306f AWS Secrets Manager \u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3078\u306e\u53c2\u7167\u3092 Manifest \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 copilot secret init \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001SSM \u306b\u7c21\u5358\u306b SecureString \u3068\u3057\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\uff01 Attention Request-Driven Web Service \u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5229\u7528\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002 Copilot \u306e\u5916\u90e8\u3067\u4f5c\u6210\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u53d6\u308a\u8fbc\u307f SSM \u306e\u5834\u5408 Copilot \u306e\u5916\u90e8\u3067\u4f5c\u6210\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u6301\u3061\u8fbc\u307f\u305f\u3044\u5834\u5408\u3001\u305d\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u6b21\u306e\uff12\u3064\u306e\u30bf\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Key Value copilot-application \u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044 Copilot Application \u540d copilot-environment \u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044 Copilot Environment \u540d \u4e0a\u8a18\u306e copilot-application \u3068 copilot-environment \u30bf\u30b0\u306f\u3001Copilot \u304c\u6301\u3061\u8fbc\u307f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u9069\u5207\u306b\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002 GH_WEBHOOK_SECRET \u3068\u3044\u3046\u540d\u524d\u3067\u5024\u306b secretvalue1234 \u3092\u6301\u3064\uff08\u9069\u5207\u306b\u30bf\u30b0\u304c\u8a2d\u5b9a\u3055\u308c\u305f\uff09SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092 Manifest \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53c2\u7167\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u5185\u5bb9\u3092 Manifest \u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 secrets : GITHUB_WEBHOOK_SECRET : GH_WEBHOOK_SECRET \u66f4\u65b0\u3055\u308c\u305f Manifest \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001Service \u3084 Job \u306f\u74b0\u5883\u5909\u6570 GITHUB_WEBHOOK_SECRET \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u74b0\u5883\u5909\u6570\u306b\u306f\u3001SSM \u30d1\u30e9\u30e1\u30fc\u30bf GH_WEBHOOK_SECRET \u306e\u5024\u3067\u3042\u308b secretvalue1234 \u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002 \u3053\u308c\u304c\u6a5f\u80fd\u3059\u308b\u306e\u306f\u3001ECS \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u30bf\u30b9\u30af\u306e\u958b\u59cb\u6642\u306b SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u89e3\u6c7a\u3057\u3001\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u308b\u305f\u3081\u3067\u3059\u3002 Secrets Manager \u306e\u5834\u5408 SSM \u3068\u540c\u69d8\u306b\u3001\u6700\u521d\u306b Secrets Manager \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u3001 copilot-application \u3068 copilot-environment \u306e\u30bf\u30b0\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u6b21\u306e\u69cb\u6210\u306e Secrets Manager \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 Field Value Name mysql ARN arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL Value {\"engine\": \"mysql\",\"username\": \"user1\",\"password\": \"i29wwX!%9wFV\",\"host\": \"my-database-endpoint.us-east-1.rds.amazonaws.com\",\"dbname\": \"myDatabase\",\"port\": \"3306\" } Tags copilot-application=demo , copilot-environment=test Manifest \u3092\u6b21\u306e\u69d8\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 secrets : # (\u63a8\u5968) \u30aa\u30d7\u30b7\u30e7\u30f3 1. \u540d\u524d\u3092\u4f7f\u3063\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 DB : secretsmanager : 'mysql' # JSON blob \u5185\u306e\u7279\u5b9a\u306e\u30ad\u30fc\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002 DB_PASSWORD : secretsmanager : 'mysql:password::' # \u4e8b\u524d\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u74b0\u5883\u5909\u6570\u3092\u5229\u7528\u3057\u3066\u3001Manifest \u3092\u7c21\u6f54\u306b\u4fdd\u3064\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002 DB_PASSWORD : secretsmanager : 'mysql:password::' # \u30aa\u30d7\u30b7\u30e7\u30f3 2. \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001ARN \u306b\u3088\u3063\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 DB : \"'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL'\"","title":"Secrets"},{"location":"ja/docs/developing/secrets/#_1","text":"\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u3001OAuth \u30c8\u30fc\u30af\u30f3\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3001API \u30ad\u30fc\u306a\u3069\u306e\u6a5f\u5bc6\u60c5\u5831\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u60c5\u5831\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3067\u306f\u5fc5\u8981\u3067\u3059\u304c\u3001 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u30b3\u30df\u30c3\u30c8\u3059\u308b\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002AWS Copilot CLI \u3067\u306f\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306f\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u307e\u3059\u304c\u3001\u305d\u306e\u6a5f\u5bc6\u6027\u306e\u305f\u3081\u6271\u3044\u304c\u7570\u306a\u308a\u307e\u3059 (\u8a73\u7d30\u306f \u74b0\u5883\u5909\u6570\u3092\u4f7f\u3063\u305f\u958b\u767a \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044) \u3002","title":"\u30b7\u30fc\u30af\u30ec\u30c3\u30c8"},{"location":"ja/docs/developing/secrets/#_2","text":"\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092 AWS Systems Manager \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 (SSM) \u3001 \u307e\u305f\u306f AWS Secrets Manager \u306b\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3078\u306e\u53c2\u7167\u3092 Manifest \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 copilot secret init \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001SSM \u306b\u7c21\u5358\u306b SecureString \u3068\u3057\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\uff01 Attention Request-Driven Web Service \u306f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u5229\u7528\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002","title":"\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u8ffd\u52a0\u65b9\u6cd5"},{"location":"ja/docs/developing/secrets/#copilot","text":"","title":"Copilot \u306e\u5916\u90e8\u3067\u4f5c\u6210\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u53d6\u308a\u8fbc\u307f"},{"location":"ja/docs/developing/secrets/#ssm","text":"Copilot \u306e\u5916\u90e8\u3067\u4f5c\u6210\u3057\u305f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u6301\u3061\u8fbc\u307f\u305f\u3044\u5834\u5408\u3001\u305d\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u6b21\u306e\uff12\u3064\u306e\u30bf\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Key Value copilot-application \u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044 Copilot Application \u540d copilot-environment \u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044 Copilot Environment \u540d \u4e0a\u8a18\u306e copilot-application \u3068 copilot-environment \u30bf\u30b0\u306f\u3001Copilot \u304c\u6301\u3061\u8fbc\u307f\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u9069\u5207\u306b\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002 GH_WEBHOOK_SECRET \u3068\u3044\u3046\u540d\u524d\u3067\u5024\u306b secretvalue1234 \u3092\u6301\u3064\uff08\u9069\u5207\u306b\u30bf\u30b0\u304c\u8a2d\u5b9a\u3055\u308c\u305f\uff09SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092 Manifest \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53c2\u7167\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u5185\u5bb9\u3092 Manifest \u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 secrets : GITHUB_WEBHOOK_SECRET : GH_WEBHOOK_SECRET \u66f4\u65b0\u3055\u308c\u305f Manifest \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u3001Service \u3084 Job \u306f\u74b0\u5883\u5909\u6570 GITHUB_WEBHOOK_SECRET \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u74b0\u5883\u5909\u6570\u306b\u306f\u3001SSM \u30d1\u30e9\u30e1\u30fc\u30bf GH_WEBHOOK_SECRET \u306e\u5024\u3067\u3042\u308b secretvalue1234 \u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002 \u3053\u308c\u304c\u6a5f\u80fd\u3059\u308b\u306e\u306f\u3001ECS \u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u304c\u30bf\u30b9\u30af\u306e\u958b\u59cb\u6642\u306b SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u89e3\u6c7a\u3057\u3001\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u308b\u305f\u3081\u3067\u3059\u3002","title":"SSM \u306e\u5834\u5408"},{"location":"ja/docs/developing/secrets/#secrets-manager","text":"SSM \u3068\u540c\u69d8\u306b\u3001\u6700\u521d\u306b Secrets Manager \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306b\u3001 copilot-application \u3068 copilot-environment \u306e\u30bf\u30b0\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u6b21\u306e\u69cb\u6210\u306e Secrets Manager \u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 Field Value Name mysql ARN arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL Value {\"engine\": \"mysql\",\"username\": \"user1\",\"password\": \"i29wwX!%9wFV\",\"host\": \"my-database-endpoint.us-east-1.rds.amazonaws.com\",\"dbname\": \"myDatabase\",\"port\": \"3306\" } Tags copilot-application=demo , copilot-environment=test Manifest \u3092\u6b21\u306e\u69d8\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 secrets : # (\u63a8\u5968) \u30aa\u30d7\u30b7\u30e7\u30f3 1. \u540d\u524d\u3092\u4f7f\u3063\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 DB : secretsmanager : 'mysql' # JSON blob \u5185\u306e\u7279\u5b9a\u306e\u30ad\u30fc\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002 DB_PASSWORD : secretsmanager : 'mysql:password::' # \u4e8b\u524d\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u74b0\u5883\u5909\u6570\u3092\u5229\u7528\u3057\u3066\u3001Manifest \u3092\u7c21\u6f54\u306b\u4fdd\u3064\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002 DB_PASSWORD : secretsmanager : 'mysql:password::' # \u30aa\u30d7\u30b7\u30e7\u30f3 2. \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001ARN \u306b\u3088\u3063\u3066\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 DB : \"'arn:aws:secretsmanager:us-west-2:111122223333:secret:demo/test/mysql-Yi6mvL'\"","title":"Secrets Manager \u306e\u5834\u5408"},{"location":"ja/docs/developing/sidecars/","text":"\u30b5\u30a4\u30c9\u30ab\u30fc \u30b5\u30a4\u30c9\u30ab\u30fc\u306f\u4e3b\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u3068\u5171\u306b\u5b9f\u884c\u3055\u308c\u88dc\u52a9\u7684\u306a\u5f79\u5272\u3092\u62c5\u3046\u30b3\u30f3\u30c6\u30ca\u306e\u3053\u3068\u3067\u3059\u3002\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u5f79\u5272\u306f\u30ed\u30ae\u30f3\u30b0\u3084\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d7\u30ed\u30ad\u30b7\u51e6\u7406\u306a\u3069\u306e\u5468\u8fba\u7684\u306a\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002 Attention Request-Driven Web Service \u306f\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u5229\u7528\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002 Attention \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b Windows \u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001 FireLens , AWS X-Ray , AWS App Mesh \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u5229\u7528\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c Windows \u74b0\u5883\u3067\u306e\u5b9f\u884c\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 AWS \u306f\u307e\u305f ECS \u30b5\u30fc\u30d3\u30b9\u3068\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u7d44\u307f\u5408\u308f\u305b\u3089\u308c\u308b\u3044\u304f\u3064\u304b\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001 FireLens \u3084 AWS X-Ray \u3001 AWS App Mesh \u306a\u3069\u591a\u5c90\u306b\u6e21\u308a\u307e\u3059\u3002 Manifest \u306e\u4e2d\u3067 storage \u30d5\u30a3\u30fc\u30eb\u30c9 \u3092\u4f7f\u3063\u3066\u4e3b\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u7528\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u3001\u5b9a\u7fa9\u3057\u305f\u4efb\u610f\u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306f\u305d\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3067\u304d\u307e\u3059\u3002 Copilot \u3067\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff1f Copilot \u306e Manifest \u3067\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u3001 \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u76f4\u63a5\u5b9a\u7fa9\u3059\u308b \u3042\u308b\u3044\u306f \u30b5\u30a4\u30c9\u30ab\u30fc\u30d1\u30bf\u30fc\u30f3 \u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u76f4\u63a5\u5b9a\u7fa9\u3059\u308b \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e URL \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u3084 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ec\u30b8\u30b9\u30c8\u30ea \u306e\u8a8d\u8a3c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 port Integer \u30b3\u30f3\u30c6\u30ca\u306e\u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002(\u4efb\u610f\u9805\u76ee) image String or Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u30a4\u30e1\u30fc\u30b8 URL\u3002(\u5fc5\u9808\u9805\u76ee) image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 essential Bool \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c\u5fc5\u9808\u306e\u30b3\u30f3\u30c6\u30ca\u304b\u3069\u3046\u304b\u3002(\u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true) credentialsParameter String \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ec\u30b8\u30b9\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u79d8\u5bc6\u60c5\u5831\u306e ARN\u3002(\u4efb\u610f\u9805\u76ee) variables Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u74b0\u5883\u5909\u6570\u3002(\u4efb\u610f\u9805\u76ee) secrets Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3067\u7528\u3044\u308b\u79d8\u5bc6\u60c5\u5831\u3002(\u4efb\u610f\u9805\u76ee) env_file String \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u8a2d\u5b9a\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u30d1\u30b9\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 mount_points Array of Maps \u30b5\u30fc\u30d3\u30b9\u30ec\u30d9\u30eb\u3067\u6307\u5b9a\u3059\u308b EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30de\u30a6\u30f3\u30c8\u30d1\u30b9\u3002(\u4efb\u610f\u9805\u76ee) mount_points. source_volume String \u30b5\u30a4\u30c9\u30ab\u30fc\u304b\u3089\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306e\u30bd\u30fc\u30b9\u30dc\u30ea\u30e5\u30fc\u30e0\u3002(\u5fc5\u9808\u9805\u76ee) mount_points. path String \u30b5\u30a4\u30c9\u30ab\u30fc\u304b\u3089\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306e\u30d1\u30b9\u3002(\u5fc5\u9808\u9805\u76ee) mount_points. read_only Boolean \u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u30dc\u30ea\u30e5\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u8aad\u307f\u8fbc\u307f\u306e\u307f\u3092\u8a31\u53ef\u3059\u308b\u304b\u3069\u3046\u304b\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true) labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3059\u308b Docker \u30e9\u30d9\u30eb\u3002(\u4efb\u610f\u9805\u76ee) depends_on Map \u3053\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u9069\u7528\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u4f9d\u5b58\u95a2\u4fc2\u3002(\u4efb\u610f\u9805\u76ee) entrypoint String or Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 command : ps au # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 command : [ \"ps\" , \"au\" ] healthcheck Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 healthcheck. command Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c healthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a2d\u5b9a\u3059\u308b\u6587\u5b57\u5217\u914d\u5217\u306e\u6700\u521d\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u76f4\u63a5\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e CMD \u3001\u3042\u308b\u3044\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b7\u30a7\u30eb\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b CMD-SHELL \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 healthcheck. interval Duration \u5404\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u9593\u306e\u79d2\u5358\u4f4d\u306e\u9593\u9694\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff11\uff10\u79d2\u3067\u3059\u3002 healthcheck. retries Integer \u30b3\u30f3\u30c6\u30ca\u304c unhealthy \u3068\u898b\u306a\u3055\u308c\u308b\u307e\u3067\u306b\u3001\u5931\u6557\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff12\u3067\u3059\u3002 healthcheck. timeout Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u958b\u59cb\u304b\u3089\u5931\u6557\u3068\u307f\u306a\u3059\u307e\u3067\u306b\u5f85\u6a5f\u3059\u308b\u79d2\u5358\u4f4d\u306e\u671f\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff15\u79d2\u3067\u3059\u3002 healthcheck. start_period Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u3068\u5931\u6557\u304c\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u59cb\u3081\u308b\u524d\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u51e6\u7406\u3092\u6e08\u307e\u305b\u308b\u7336\u4e88\u671f\u9593\u306e\u9577\u3055\u3067\u3059\u3002\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff10\u79d2\u3067\u3059\u3002 \u5b9f\u884c\u4f8b \u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u306e Environment \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 \u4ed6\u306e Service / Job \u306e Manifest \u3068\u540c\u69d8\u306b\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u8a2d\u5b9a\u3082 environments \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u74b0\u5883\u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u306f\u3001 datadog \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u74b0\u5883\u5909\u6570 DD_APM_ENABLED \u306e\u5024\u3092\u3001 dev Environment \u304b\u3069\u3046\u304b\u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 name : api type : Load Balanced Web Service sidecars : datadog : port : 80 image : build : src/reverseproxy/Dockerfile variables : DD_APM_ENABLED : true environments : dev : sidecars : datadog : variables : DD_APM_ENABLED : false nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca \u4ee5\u4e0b\u306f Load Balanced Web Service \u306e Manifest \u3067 nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 name : api type : Load Balanced Web Service image : build : api/Dockerfile port : 3000 http : path : 'api' healthcheck : '/api/health-check' # \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306f Service \u306e\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u306e'nginx'\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 target_container : 'nginx' cpu : 256 memory : 512 count : 1 sidecars : nginx : port : 80 image : build : src/reverseproxy/Dockerfile variables : NGINX_PORT : 80 Service \u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u4e21\u65b9\u3067 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5229\u7528 storage : volumes : myEFSVolume : path : '/etc/mount1' read_only : false efs : id : fs-1234567 sidecars : nginx : port : 80 image : 1234567890.dkr.ecr.us-west-2.amazonaws.com/reverse-proxy:revision_1 variables : NGINX_PORT : 80 mount_points : - source_volume : myEFSVolume path : '/etc/mount1' AWS Distro for OpenTelemetry \u30b5\u30a4\u30c9\u30ab\u30fc \u4ee5\u4e0b\u306f\u3001 AWS Distro for OpenTelemetry \u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u30ab\u30b9\u30bf\u30e0\u69cb\u6210\u3067\u5b9f\u884c\u3057\u305f\u4f8b\u3067\u3059\u3002\u3053\u306e\u30ab\u30b9\u30bf\u30e0\u69cb\u6210\u4f8b\u3067\u306f\u3001X-Ray \u30c8\u30ec\u30fc\u30b9\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001ECS \u30e1\u30c8\u30ea\u30af\u30b9\u3092\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u306b\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u3001SSM \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3068\u8ffd\u52a0\u306e IAM \u6a29\u9650\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 OpenTelemetry \u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u307e\u305a\u6709\u52b9\u306a \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u6b21\u306b\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u6a19\u6e96\u7684\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306f 4KB \u306b\u5236\u9650 \u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c 4K \u3088\u308a\u5927\u304d\u3044\u5834\u5408\u3001\u9ad8\u5ea6\u306a SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u9ad8\u5ea6\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u3001\u624b\u52d5\u3067\u4f5c\u6210\u3057\u3066\u30bf\u30b0\u4ed8\u3051\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8a2d\u5b9a\u304c\u6a19\u6e96\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001 secret init \u3092\u4f7f\u7528\u3057\u3066 SSM \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e YAML \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\"YOUR-API-KEY-HERE\" \u3068\u66f8\u304b\u308c\u305f API \u30ad\u30fc\u3092\u66f4\u65b0\u3057\u305f\u5f8c\u3001\u305d\u306e\u307e\u307e New Relic \u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b5\u30f3\u30d7\u30eb YAML \u3067\u306f\u3001\u7a7a\u306e\u30ad\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u306f\u610f\u56f3\u7684\u306a\u3082\u306e\u3067\u3059\u3002\u30b5\u30a4\u30c9\u30ab\u30fc\u306f\u3001\u3053\u308c\u3089\u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u30b3\u30ec\u30af\u30bf\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 receivers : awsxray : transport : udp awsecscontainermetrics : processors : batch : exporters : awsxray : region : us-west-2 otlp : endpoint : otlp.nr-data.net:4317 headers : api-key : YOUR-API-KEY-HERE service : pipelines : traces : receivers : [ awsxray ] processors : [ batch ] exporters : [ awsxray ] metrics : receivers : [ awsecscontainermetrics ] exporters : [ otlp ] X-Ray \u30c8\u30ec\u30fc\u30b9\u306e\u66f8\u304d\u8fbc\u307f\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ffd\u52a0\u306e IAM \u6a29\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002 \u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u5f93\u3063\u3066\u3053\u308c\u3092 Addon \u306b\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002 Resources : XrayWritePolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : CopyOfAWSXRayDaemonWriteAccess Effect : Allow Action : - xray:PutTraceSegments - xray:PutTelemetryRecords - xray:GetSamplingRules - xray:GetSamplingTargets - xray:GetSamplingStatisticSummaries Resource : \"*\" Outputs : XrayAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref XrayWritePolicy OpenTelemetry \u30b3\u30ec\u30af\u30bf\u30fc\u306e\u8a2d\u5b9a\u306f\u3001\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u6e21\u3055\u308c\u307e\u3059\u3002 sidecars : otel_sidecar : image : 'public.ecr.aws/aws-observability/aws-otel-collector:latest' secrets : AOT_CONFIG_CONTENT : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/otel_config \u30b5\u30a4\u30c9\u30ab\u30fc\u30d1\u30bf\u30fc\u30f3 \u30b5\u30a4\u30c9\u30ab\u30fc\u30d1\u30bf\u30fc\u30f3\u306f Copilot \u3067\u3042\u3089\u304b\u3058\u3081\u5b9a\u7fa9\u3055\u308c\u305f\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u69cb\u6210\u3067\u3059\u3002\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\u306f FireLens \u3060\u3051\u3067\u3059\u304c\u5c06\u6765\u7684\u306b\u3055\u3089\u306b\u30d1\u30bf\u30fc\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\uff01 logging : # Fluent Bit\u306e\u30a4\u30e1\u30fc\u30b8 (\u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f \"public.ecr.aws/aws-observability/aws-for-fluent-bit:stable\" \u3092\u4f7f\u7528) image : <image URL> # Firelens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a (\u30aa\u30d7\u30b7\u30e7\u30f3) destination : <config key> : <config value> # \u30ed\u30b0\u306b ECS \u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u542b\u3080\u304b\u3069\u3046\u304b (\u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true ) enableMetadata : <true|false> # \u30ed\u30b0\u306e\u8a2d\u5b9a\u306b\u6e21\u3059\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 (\u30aa\u30d7\u30b7\u30e7\u30f3) secretOptions : <key> : <value> # \u30ab\u30b9\u30bf\u30e0\u306e Fluent Bit \u30a4\u30e1\u30fc\u30b8\u5185\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9 configFilePath : <config file path> # \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b\u74b0\u5883\u5909\u6570 (\u30aa\u30d7\u30b7\u30e7\u30f3) variables : <key> : <value> # \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u516c\u958b\u3059\u308b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 (\u30aa\u30d7\u30b7\u30e7\u30f3) secrets : <key> : <value> \u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 logging : destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/sidecar-test-hello log_stream_prefix : copilot/ FireLens \u304c\u30ed\u30b0\u3092\u8ee2\u9001\u3059\u308b\u305f\u3081\u306b\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u5fc5\u8981\u306a\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u8ffd\u52a0\u3067\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 Addon \u306e\u306a\u304b\u3067\u8a31\u53ef\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Resources : FireLensPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Effect : Allow Action : - logs:CreateLogStream - logs:CreateLogGroup - logs:DescribeLogStreams - logs:PutLogEvents Resource : \"<resource ARN>\" Outputs : FireLensPolicyArn : Description : An addon ManagedPolicy gets used by the ECS task role Value : !Ref FireLensPolicy Info FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u4e3b\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u69d8\u3005\u306a\u5b9b\u5148\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3067\u304d\u308b\u4e00\u65b9\u3067\u3001 svc logs \u30b3\u30de\u30f3\u30c9\u306f CloudWatch Logs \u3067 Copilot Service \u306e\u305f\u3081\u306b\u4f5c\u6210\u3057\u305f\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u306b\u9001\u4fe1\u3055\u308c\u305f\u5834\u5408\u306e\u307f\u30ed\u30b0\u3092\u30c8\u30e9\u30c3\u30af\u3067\u304d\u307e\u3059\u3002","title":"Sidecars"},{"location":"ja/docs/developing/sidecars/#_1","text":"\u30b5\u30a4\u30c9\u30ab\u30fc\u306f\u4e3b\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u3068\u5171\u306b\u5b9f\u884c\u3055\u308c\u88dc\u52a9\u7684\u306a\u5f79\u5272\u3092\u62c5\u3046\u30b3\u30f3\u30c6\u30ca\u306e\u3053\u3068\u3067\u3059\u3002\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u5f79\u5272\u306f\u30ed\u30ae\u30f3\u30b0\u3084\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d7\u30ed\u30ad\u30b7\u51e6\u7406\u306a\u3069\u306e\u5468\u8fba\u7684\u306a\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002 Attention Request-Driven Web Service \u306f\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u5229\u7528\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002 Attention \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b Windows \u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001 FireLens , AWS X-Ray , AWS App Mesh \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u5229\u7528\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c Windows \u74b0\u5883\u3067\u306e\u5b9f\u884c\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 AWS \u306f\u307e\u305f ECS \u30b5\u30fc\u30d3\u30b9\u3068\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u7d44\u307f\u5408\u308f\u305b\u3089\u308c\u308b\u3044\u304f\u3064\u304b\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001 FireLens \u3084 AWS X-Ray \u3001 AWS App Mesh \u306a\u3069\u591a\u5c90\u306b\u6e21\u308a\u307e\u3059\u3002 Manifest \u306e\u4e2d\u3067 storage \u30d5\u30a3\u30fc\u30eb\u30c9 \u3092\u4f7f\u3063\u3066\u4e3b\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u7528\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u3001\u5b9a\u7fa9\u3057\u305f\u4efb\u610f\u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306f\u305d\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3067\u304d\u307e\u3059\u3002","title":"\u30b5\u30a4\u30c9\u30ab\u30fc"},{"location":"ja/docs/developing/sidecars/#copilot","text":"Copilot \u306e Manifest \u3067\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u3001 \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u76f4\u63a5\u5b9a\u7fa9\u3059\u308b \u3042\u308b\u3044\u306f \u30b5\u30a4\u30c9\u30ab\u30fc\u30d1\u30bf\u30fc\u30f3 \u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002","title":"Copilot \u3067\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff1f"},{"location":"ja/docs/developing/sidecars/#_2","text":"\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e URL \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u3084 \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ec\u30b8\u30b9\u30c8\u30ea \u306e\u8a8d\u8a3c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 port Integer \u30b3\u30f3\u30c6\u30ca\u306e\u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002(\u4efb\u610f\u9805\u76ee) image String or Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u30a4\u30e1\u30fc\u30b8 URL\u3002(\u5fc5\u9808\u9805\u76ee) image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 essential Bool \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c\u5fc5\u9808\u306e\u30b3\u30f3\u30c6\u30ca\u304b\u3069\u3046\u304b\u3002(\u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true) credentialsParameter String \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ec\u30b8\u30b9\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u79d8\u5bc6\u60c5\u5831\u306e ARN\u3002(\u4efb\u610f\u9805\u76ee) variables Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u74b0\u5883\u5909\u6570\u3002(\u4efb\u610f\u9805\u76ee) secrets Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3067\u7528\u3044\u308b\u79d8\u5bc6\u60c5\u5831\u3002(\u4efb\u610f\u9805\u76ee) env_file String \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u8a2d\u5b9a\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u30d1\u30b9\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 mount_points Array of Maps \u30b5\u30fc\u30d3\u30b9\u30ec\u30d9\u30eb\u3067\u6307\u5b9a\u3059\u308b EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30de\u30a6\u30f3\u30c8\u30d1\u30b9\u3002(\u4efb\u610f\u9805\u76ee) mount_points. source_volume String \u30b5\u30a4\u30c9\u30ab\u30fc\u304b\u3089\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306e\u30bd\u30fc\u30b9\u30dc\u30ea\u30e5\u30fc\u30e0\u3002(\u5fc5\u9808\u9805\u76ee) mount_points. path String \u30b5\u30a4\u30c9\u30ab\u30fc\u304b\u3089\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306e\u30d1\u30b9\u3002(\u5fc5\u9808\u9805\u76ee) mount_points. read_only Boolean \u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u30dc\u30ea\u30e5\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u8aad\u307f\u8fbc\u307f\u306e\u307f\u3092\u8a31\u53ef\u3059\u308b\u304b\u3069\u3046\u304b\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true) labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3059\u308b Docker \u30e9\u30d9\u30eb\u3002(\u4efb\u610f\u9805\u76ee) depends_on Map \u3053\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u9069\u7528\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u4f9d\u5b58\u95a2\u4fc2\u3002(\u4efb\u610f\u9805\u76ee) entrypoint String or Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 command : ps au # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 command : [ \"ps\" , \"au\" ] healthcheck Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 healthcheck. command Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c healthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a2d\u5b9a\u3059\u308b\u6587\u5b57\u5217\u914d\u5217\u306e\u6700\u521d\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u76f4\u63a5\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e CMD \u3001\u3042\u308b\u3044\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b7\u30a7\u30eb\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b CMD-SHELL \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 healthcheck. interval Duration \u5404\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u9593\u306e\u79d2\u5358\u4f4d\u306e\u9593\u9694\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff11\uff10\u79d2\u3067\u3059\u3002 healthcheck. retries Integer \u30b3\u30f3\u30c6\u30ca\u304c unhealthy \u3068\u898b\u306a\u3055\u308c\u308b\u307e\u3067\u306b\u3001\u5931\u6557\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff12\u3067\u3059\u3002 healthcheck. timeout Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u958b\u59cb\u304b\u3089\u5931\u6557\u3068\u307f\u306a\u3059\u307e\u3067\u306b\u5f85\u6a5f\u3059\u308b\u79d2\u5358\u4f4d\u306e\u671f\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff15\u79d2\u3067\u3059\u3002 healthcheck. start_period Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u3068\u5931\u6557\u304c\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u59cb\u3081\u308b\u524d\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u51e6\u7406\u3092\u6e08\u307e\u305b\u308b\u7336\u4e88\u671f\u9593\u306e\u9577\u3055\u3067\u3059\u3002\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff10\u79d2\u3067\u3059\u3002","title":"\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u76f4\u63a5\u5b9a\u7fa9\u3059\u308b"},{"location":"ja/docs/developing/sidecars/#_3","text":"","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/developing/sidecars/#environment","text":"\u4ed6\u306e Service / Job \u306e Manifest \u3068\u540c\u69d8\u306b\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u8a2d\u5b9a\u3082 environments \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u74b0\u5883\u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u4f8b\u3067\u306f\u3001 datadog \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u74b0\u5883\u5909\u6570 DD_APM_ENABLED \u306e\u5024\u3092\u3001 dev Environment \u304b\u3069\u3046\u304b\u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 name : api type : Load Balanced Web Service sidecars : datadog : port : 80 image : build : src/reverseproxy/Dockerfile variables : DD_APM_ENABLED : true environments : dev : sidecars : datadog : variables : DD_APM_ENABLED : false","title":"\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u306e Environment \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"},{"location":"ja/docs/developing/sidecars/#nginx","text":"\u4ee5\u4e0b\u306f Load Balanced Web Service \u306e Manifest \u3067 nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 name : api type : Load Balanced Web Service image : build : api/Dockerfile port : 3000 http : path : 'api' healthcheck : '/api/health-check' # \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306f Service \u306e\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u306e'nginx'\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 target_container : 'nginx' cpu : 256 memory : 512 count : 1 sidecars : nginx : port : 80 image : build : src/reverseproxy/Dockerfile variables : NGINX_PORT : 80","title":"nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca"},{"location":"ja/docs/developing/sidecars/#service-efs","text":"storage : volumes : myEFSVolume : path : '/etc/mount1' read_only : false efs : id : fs-1234567 sidecars : nginx : port : 80 image : 1234567890.dkr.ecr.us-west-2.amazonaws.com/reverse-proxy:revision_1 variables : NGINX_PORT : 80 mount_points : - source_volume : myEFSVolume path : '/etc/mount1'","title":"Service \u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u4e21\u65b9\u3067 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5229\u7528"},{"location":"ja/docs/developing/sidecars/#aws-distro-for-opentelemetry","text":"\u4ee5\u4e0b\u306f\u3001 AWS Distro for OpenTelemetry \u306e\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u30ab\u30b9\u30bf\u30e0\u69cb\u6210\u3067\u5b9f\u884c\u3057\u305f\u4f8b\u3067\u3059\u3002\u3053\u306e\u30ab\u30b9\u30bf\u30e0\u69cb\u6210\u4f8b\u3067\u306f\u3001X-Ray \u30c8\u30ec\u30fc\u30b9\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001ECS \u30e1\u30c8\u30ea\u30af\u30b9\u3092\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u306b\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u3001SSM \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3068\u8ffd\u52a0\u306e IAM \u6a29\u9650\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 OpenTelemetry \u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u307e\u305a\u6709\u52b9\u306a \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u6b21\u306b\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u6a19\u6e96\u7684\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306f 4KB \u306b\u5236\u9650 \u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c 4K \u3088\u308a\u5927\u304d\u3044\u5834\u5408\u3001\u9ad8\u5ea6\u306a SSM \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u9ad8\u5ea6\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u3001\u624b\u52d5\u3067\u4f5c\u6210\u3057\u3066\u30bf\u30b0\u4ed8\u3051\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8a2d\u5b9a\u304c\u6a19\u6e96\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001 secret init \u3092\u4f7f\u7528\u3057\u3066 SSM \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e YAML \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\"YOUR-API-KEY-HERE\" \u3068\u66f8\u304b\u308c\u305f API \u30ad\u30fc\u3092\u66f4\u65b0\u3057\u305f\u5f8c\u3001\u305d\u306e\u307e\u307e New Relic \u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b5\u30f3\u30d7\u30eb YAML \u3067\u306f\u3001\u7a7a\u306e\u30ad\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u306f\u610f\u56f3\u7684\u306a\u3082\u306e\u3067\u3059\u3002\u30b5\u30a4\u30c9\u30ab\u30fc\u306f\u3001\u3053\u308c\u3089\u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u30b3\u30ec\u30af\u30bf\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 receivers : awsxray : transport : udp awsecscontainermetrics : processors : batch : exporters : awsxray : region : us-west-2 otlp : endpoint : otlp.nr-data.net:4317 headers : api-key : YOUR-API-KEY-HERE service : pipelines : traces : receivers : [ awsxray ] processors : [ batch ] exporters : [ awsxray ] metrics : receivers : [ awsecscontainermetrics ] exporters : [ otlp ] X-Ray \u30c8\u30ec\u30fc\u30b9\u306e\u66f8\u304d\u8fbc\u307f\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ffd\u52a0\u306e IAM \u6a29\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002 \u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u5f93\u3063\u3066\u3053\u308c\u3092 Addon \u306b\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002 Resources : XrayWritePolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : CopyOfAWSXRayDaemonWriteAccess Effect : Allow Action : - xray:PutTraceSegments - xray:PutTelemetryRecords - xray:GetSamplingRules - xray:GetSamplingTargets - xray:GetSamplingStatisticSummaries Resource : \"*\" Outputs : XrayAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref XrayWritePolicy OpenTelemetry \u30b3\u30ec\u30af\u30bf\u30fc\u306e\u8a2d\u5b9a\u306f\u3001\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u6e21\u3055\u308c\u307e\u3059\u3002 sidecars : otel_sidecar : image : 'public.ecr.aws/aws-observability/aws-otel-collector:latest' secrets : AOT_CONFIG_CONTENT : /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/otel_config","title":"AWS Distro for OpenTelemetry \u30b5\u30a4\u30c9\u30ab\u30fc"},{"location":"ja/docs/developing/sidecars/#_4","text":"\u30b5\u30a4\u30c9\u30ab\u30fc\u30d1\u30bf\u30fc\u30f3\u306f Copilot \u3067\u3042\u3089\u304b\u3058\u3081\u5b9a\u7fa9\u3055\u308c\u305f\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u69cb\u6210\u3067\u3059\u3002\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\u306f FireLens \u3060\u3051\u3067\u3059\u304c\u5c06\u6765\u7684\u306b\u3055\u3089\u306b\u30d1\u30bf\u30fc\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\uff01 logging : # Fluent Bit\u306e\u30a4\u30e1\u30fc\u30b8 (\u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f \"public.ecr.aws/aws-observability/aws-for-fluent-bit:stable\" \u3092\u4f7f\u7528) image : <image URL> # Firelens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a (\u30aa\u30d7\u30b7\u30e7\u30f3) destination : <config key> : <config value> # \u30ed\u30b0\u306b ECS \u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u542b\u3080\u304b\u3069\u3046\u304b (\u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true ) enableMetadata : <true|false> # \u30ed\u30b0\u306e\u8a2d\u5b9a\u306b\u6e21\u3059\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 (\u30aa\u30d7\u30b7\u30e7\u30f3) secretOptions : <key> : <value> # \u30ab\u30b9\u30bf\u30e0\u306e Fluent Bit \u30a4\u30e1\u30fc\u30b8\u5185\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9 configFilePath : <config file path> # \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b\u74b0\u5883\u5909\u6570 (\u30aa\u30d7\u30b7\u30e7\u30f3) variables : <key> : <value> # \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u516c\u958b\u3059\u308b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 (\u30aa\u30d7\u30b7\u30e7\u30f3) secrets : <key> : <value> \u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 logging : destination : Name : cloudwatch region : us-west-2 log_group_name : /copilot/sidecar-test-hello log_stream_prefix : copilot/ FireLens \u304c\u30ed\u30b0\u3092\u8ee2\u9001\u3059\u308b\u305f\u3081\u306b\u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u5fc5\u8981\u306a\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u8ffd\u52a0\u3067\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 Addon \u306e\u306a\u304b\u3067\u8a31\u53ef\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 Resources : FireLensPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Effect : Allow Action : - logs:CreateLogStream - logs:CreateLogGroup - logs:DescribeLogStreams - logs:PutLogEvents Resource : \"<resource ARN>\" Outputs : FireLensPolicyArn : Description : An addon ManagedPolicy gets used by the ECS task role Value : !Ref FireLensPolicy Info FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u4e3b\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u69d8\u3005\u306a\u5b9b\u5148\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3067\u304d\u308b\u4e00\u65b9\u3067\u3001 svc logs \u30b3\u30de\u30f3\u30c9\u306f CloudWatch Logs \u3067 Copilot Service \u306e\u305f\u3081\u306b\u4f5c\u6210\u3057\u305f\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u306b\u9001\u4fe1\u3055\u308c\u305f\u5834\u5408\u306e\u307f\u30ed\u30b0\u3092\u30c8\u30e9\u30c3\u30af\u3067\u304d\u307e\u3059\u3002","title":"\u30b5\u30a4\u30c9\u30ab\u30fc\u30d1\u30bf\u30fc\u30f3"},{"location":"ja/docs/developing/storage/","text":"\u30b9\u30c8\u30ec\u30fc\u30b8 Copilot \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u6c38\u7d9a\u6027\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f 2 \u3064\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 copilot storage init \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3001\u3042\u308b\u3044\u306f Manifest \u306e storage \u30d5\u30a3\u30fc\u30eb\u30c9 \u3092\u4f7f\u7528\u3057\u3066\u65e2\u5b58\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304a\u3088\u3073\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8 Job \u3084 Service \u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f copilot storage init \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 # \u30a6\u30a3\u30b6\u30fc\u30c9\u306b\u5f93\u3044 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b $ copilot storage init -t S3 # \"api\" Service \u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a \"my-bucket\" \u3068\u3044\u3046\u540d\u524d\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001 \"api\" \u3067\u30c7\u30d7\u30ed\u30a4\u3068\u524a\u9664\u3092\u884c\u3044\u307e\u3059\u3002 $ copilot storage init -n my-bucket -t S3 -w api -l workload \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3001\"api\" Service \u306e addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u7d9a\u3044\u3066 copilot deploy -n api \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067 S3 \u30d0\u30b1\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 api \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3001\u30d0\u30b1\u30c3\u30c8\u540d\u304c api \u30b3\u30f3\u30c6\u30ca\u306e\u74b0\u5883\u5909\u6570\u306b MY_BUCKET_NAME \u306e\u5f62\u3067\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 Info \u3059\u3079\u3066\u306e\u540d\u524d\u306f\u3001\u30cf\u30a4\u30d5\u30f3\u3084\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306b\u57fa\u3065\u3044\u3066 SCREAMING_SNAKE_CASE \u306e\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 copilot svc show \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u74b0\u5883\u5909\u6570\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 copilot storage init \u3092\u5b9f\u884c\u3057\u3066 DynamoDB \u30c6\u30fc\u30d6\u30eb \u306e\u4f5c\u6210\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u30bd\u30fc\u30c8\u30ad\u30fc\u304a\u3088\u3073\u30ed\u30fc\u30ab\u30eb\u30bb\u30ab\u30f3\u30c0\u30ea\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u3092\u5b9a\u7fa9\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u53ef\u80fd\u3067\u3059\u3002 # \u30a6\u30a3\u30b6\u30fc\u30c9\u306b\u5f93\u3044 DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b $ copilot storage init -t DynamoDB # \u3082\u3057\u304f\u306f\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u30d5\u30e9\u30b0\u3067\u6307\u5b9a\u3059\u308b $ copilot storage init -n users -t DynamoDB -w api -l workload --partition-key id:N --sort-key email:S --lsi post-count:N \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a ${app}-${env}-${svc}-users \u3068\u3044\u3046\u540d\u524d\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306f id \u3068\u306a\u308a\u3001\u30c7\u30fc\u30bf\u578b\u306f\u6570\u5024\u3067\u3059\u3002\u30bd\u30fc\u30c8\u30ad\u30fc\u306f email \u3068\u306a\u308a\u3001\u30c7\u30fc\u30bf\u578b\u306f\u6587\u5b57\u5217\u3067\u3059\u3002\u307e\u305f\u3001 \u30ed\u30fc\u30ab\u30eb\u30bb\u30ab\u30f3\u30c0\u30ea\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 (\u4ee3\u66ff\u306e\u30bd\u30fc\u30c8\u30ad\u30fc) \u3068\u3057\u3066\u3001\u30c7\u30fc\u30bf\u578b\u304c\u6570\u5024\u3067\u3042\u308b post-count \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 \u540c\u69d8\u306b\u3001 copilot storage init \u3092\u5b9f\u884c\u3057\u3066 RDS Aurora Serverless v2 \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 # \u30a6\u30a3\u30b6\u30fc\u30c9\u306b\u5f93\u3044 RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\u3059\u308b $ copilot storage init -t Aurora # \u3082\u3057\u304f\u306f\u3001RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u306e\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u30d5\u30e9\u30b0\u3067\u6307\u5b9a\u3059\u308b $ copilot storage init -n my-cluster -t Aurora -w api -l workload --engine PostgreSQL --initial-db my_db \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a PostgreSQL \u30a8\u30f3\u30b8\u30f3\u3092\u4f7f\u7528\u3059\u308b my_db \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6301\u3064 RDS Aurora Serverless v2 \u30af\u30e9\u30b9\u30bf\u30fc\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002JSON \u6587\u5b57\u5217\u3068\u3057\u3066 MYCLUSTER_SECRET \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u306e JSON \u6587\u5b57\u5217\u306f\u3001 'host' \u3001 'port' \u3001 'dbname' \u3001 'username' \u3001 'password' \u3001 'dbClusterIdentifier' \u3001 'engine' \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u542b\u307f\u307e\u3059\u3002 RDS Aurora Serverless v1 \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot storage init -n my-cluster -t Aurora --serverless-version v1 Environment \u30b9\u30c8\u30ec\u30fc\u30b8 -l \u30d5\u30e9\u30b0\u306f --lifecycle \u306e\u7565\u3067\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001 -l \u30d5\u30e9\u30b0\u306e\u5024\u306f workload \u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u304c Service Addon \u307e\u305f\u306f Job Addon \u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u306f copilot [svc/job] deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3001 copilot [svc/job] delete \u3092\u5b9f\u884c\u3059\u308b\u3068\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001Service \u3084 Job \u3092\u524a\u9664\u3057\u3066\u3082\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u7dad\u6301\u3057\u305f\u3044\u5834\u5408\u306f\u3001Environment \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Environment \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f Environment Addon\u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u3001 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u5c55\u958b\u3055\u308c\u3001 copilot env delete \u3092\u5b9f\u884c\u3059\u308b\u307e\u3067\u524a\u9664\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 Copilot \u3067 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3046\u65b9\u6cd5\u306f\uff12\u3064\u3042\u308a\u307e\u3059: Copilot \u7ba1\u7406\u306e EFS\u3001\u3042\u308b\u3044\u306f\u65e2\u5b58\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u3059\u3002 Attention EFS \u306f\u3001Windows \u30d9\u30fc\u30b9\u306e Service \u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u308a\u307e\u305b\u3093\u3002 Copilot \u7ba1\u7406\u306e EFS name : frontend storage : volumes : myManagedEFSVolume : efs : true path : /var/efs read_only : false \u3053\u306e Manifest \u3067\u306f\u3001Environment \u3054\u3068\u306b EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3068 EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3001Service \u5c02\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e /frontend \u30d1\u30b9\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u306f\u3053\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e /var/efs \u30d1\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u3088\u3063\u3066 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306b\u4f5c\u6210\u3055\u308c\u305f\u5c02\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u305d\u306e\u914d\u4e0b\u306e\u3059\u3079\u3066\u306e\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u305d\u306e\u4e2d\u306e /frontend \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f Environment \u3092\u524a\u9664\u3059\u308b\u307e\u3067\u7dad\u6301\u3055\u308c\u307e\u3059\u3002\u5404 Service \u306b\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3068\u30012 \u3064\u306e Service \u304c\u76f8\u4e92\u306b\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001\u9ad8\u5ea6\u306a EFS \u8a2d\u5b9a\u306b\u3042\u308b uid \u3068 gid \u306e\u6307\u5b9a\u306b\u3088\u3063\u3066\u3001EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e UID \u3068 GID \u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3082\u53ef\u80fd\u3067\u3059\u3002UID \u3042\u308b\u3044\u306f GID \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Service \u540d\u306e CRC32 \u30c1\u30a7\u30c3\u30af\u30b5\u30e0 \u3092\u5143\u306b\u3057\u305f\u64ec\u4f3c\u4e71\u6570 (pseudorandom numbers) \u3092\u3053\u308c\u3089\u306e\u8a2d\u5b9a\u5024\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002 storage : volumes : myManagedEFSVolume : efs : uid : 1000 gid : 10000 path : /var/efs read_only : false uid \u3068 gid \u306f\u3001\u305d\u306e\u4ed6\u306e\u9ad8\u5ea6\u306a EFS \u8a2d\u5b9a\u3068\u306e\u4f75\u7528\u306f\u3067\u304d\u306a\u3044\u70b9\u306b\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002 \u5185\u90e8\u7684\u306a\u8a73\u7d30 Copilot \u7ba1\u7406\u306e EFS \u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001Copilot \u306f\u4ee5\u4e0b\u306e\u30ea\u30bd\u30fc\u30b9\u3092 Environment \u3054\u3068\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 Environment \u5185\u306e\u5404\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3054\u3068\u306e \u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8 Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u30eb\u30fc\u30eb \u307e\u305f\u3001Copilot \u306f Service \u3054\u3068\u306b\u4ee5\u4e0b\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8 \u3002\u3053\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306f Copilot \u7ba1\u7406\u306e EFS \u3092\u5229\u7528\u3059\u308b\u8a2d\u5b9a\u3092\u884c\u3063\u305f Service \u3042\u308b\u3044\u306f Job \u306e\u540d\u524d\u306b\u57fa\u3065\u3044\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 Environment \u3054\u3068\u306b\u4f5c\u6210\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306f copilot env show --json --resources \u3067\u5f97\u3089\u308c\u308b\u7d50\u679c\u3092\u4efb\u610f\u306e JSON \u30d1\u30fc\u30b5\u3067\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u6b21\u306f\u305d\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u306e\u4f8b\u3067\u3059\u3002 > copilot env show -n test --json --resources | jq '.resources[] | select( .type | contains(\"EFS\") )' \u9ad8\u5ea6\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9 Copilot \u7ba1\u7406\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306b\u521d\u671f\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b Service \u304c\u305d\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5229\u7528\u3059\u308b\u524d\u306b\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3057\u3066\u304a\u304d\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306b\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u8981\u4ef6\uff08\u4f8b\u3048\u3070\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\u51e6\u7406\u306b\u305d\u306e\u30c7\u30fc\u30bf\u306f\u5fc5\u8981\u304b\uff1f\u306e\u3088\u3046\u306a\uff09\u306b\u5408\u308f\u305b\u305f\u65b9\u6cd5\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u5229\u7528\u3059\u308b \u4f5c\u6210\u3057\u305f EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u3001 mount_points \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u3078\u306e\u30de\u30a6\u30f3\u30c8\u304c\u53ef\u80fd\u3067\u3059\u3002EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3057\u305f\u30b5\u30a4\u30c9\u30ab\u30fc\u306e COMMAND \u3042\u308b\u3044\u306f ENTRYPOINT \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u81ea\u8eab\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f S3 \u3084\u305d\u306e\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u308a\u3068\u3044\u3063\u305f\u65b9\u6cd5\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u3092 essential:false \u306b\u3088\u3063\u3066\u4efb\u610f\u30b3\u30f3\u30c6\u30ca\u3068\u8a2d\u5b9a\u3059\u308c\u3070\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u306f\u5fc5\u8981\u306a\u51e6\u7406\u3092\u6e08\u307e\u305b\u305f\u4e0a\u3067 Service \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u884c\u72b6\u614b\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u305a\u306b\u505c\u6b62\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u308c\u306f\u5916\u90e8\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u3082\u3068\u306b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u30c7\u30fc\u30bf\u3092\u5e38\u306b\u6700\u65b0\u306b\u4fdd\u3064\u5fc5\u8981\u304c\u3042\u308b\u30bf\u30a4\u30d7\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u306f\u9069\u3057\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u70b9\u306b\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002 copilot svc exec \u3092\u5229\u7528\u3059\u308b \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u6642\u70b9\u3067\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u3068\u306a\u308b\u30bf\u30a4\u30d7\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3088\u308a\u5148\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u5229\u7528\u3057\u3066\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u5148\u306b\u6e08\u307e\u305b\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 \u4f8b\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306a Manifest \u3092\u4f7f\u3063\u3066 frontend Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 name : frontend type : Load Balanced Web Service image : location : amazon/amazon-ecs-sample exec : true storage : volumes : myVolume : efs : true path : /var/efs read_only : false \u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u305f\u3089\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002 $ copilot svc exec \u3053\u308c\u306b\u3088\u308a\u30b3\u30f3\u30c6\u30ca\u3078\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b7\u30a7\u30eb\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001 curl \u3084 wget \u3068\u3044\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u4e0a\u3067\u3001\u305d\u308c\u3089\u3092\u5229\u7528\u3057\u3066\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3084\u5fc5\u8981\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u306a\u3069\u3092 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u5b9f\u65bd\u3057\u307e\u3059\u3002 Info \u672c\u756a\u74b0\u5883\u3067\u3053\u306e\u3088\u3046\u306a\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093\u3002\u30b3\u30f3\u30c6\u30ca\u306f\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u306a\u3082\u306e\u3067\u3042\u308a\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u5229\u7528\u3057\u305f\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u3042\u308b\u306e\u3067\u3042\u308c\u3070\u305d\u308c\u3089\u306f\u524d\u3082\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u30d3\u30eb\u30c9\u6642\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3088\u3046\u306b Dockerfile \u306b\u8a18\u8ff0\u3057\u3001 RUN \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u5b9f\u884c\u3059\u3079\u304d\u3067\u3059\u3002 \u5fc5\u8981\u306a\u4f5c\u696d\u304c\u7d42\u308f\u3063\u305f\u3089\u3001Manifest \u304b\u3089 exec \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u524a\u9664\u3057\u3001 image \u30d5\u30a3\u30fc\u30eb\u30c9\u4ee5\u4e0b\u3092\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u305f\u3044\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u8a2d\u5b9a\u3084\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u66f8\u304d\u63db\u3048\u307e\u3057\u3087\u3046\u3002 name : frontend type : Load Balanced Web Service image : build : ./Dockerfile storage : volumes : myVolume : efs : true path : /var/efs read_only : false \u65e2\u5b58 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 Copilot \u30bf\u30b9\u30af\u306b\u65e2\u5b58 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30dc\u30ea\u30e5\u30fc\u30e0\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306b\u306f\u6b21\u306e\uff12\u3064\u3092\u6e80\u305f\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Environment \u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 \u3092\u4f5c\u6210\u3059\u308b Environment \u306e\u5404\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u3001Copilot Environment \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u305f EFS \u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8 \u3092\u4f5c\u6210\u3059\u308b \u3053\u308c\u3089\u306e\u524d\u63d0\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5834\u5408\u3001Manifest \u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067 EFS \u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u8a2d\u5b9a\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3068\u3001\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u60c5\u5831\u304c\u5fc5\u8981\u3067\u3059\u3002 Info \u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u4e00\u5ea6\u306b 1 \u3064\u306e Environment \u3067\u306e\u307f\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306f\u3001\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30fc\u30be\u30fc\u30f3\u3054\u3068\u3067 1 \u3064\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001Copilot \u30bf\u30b9\u30af\u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u4e88\u5b9a\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5225\u306e VPC \u3067\u4f7f\u7528\u3057\u305f\u3053\u3068\u304c\u3042\u308b\u5834\u5408\u306f\u3001Copilot \u30bf\u30b9\u30af\u3067\u4f7f\u7528\u3059\u308b\u524d\u306b\u65e2\u5b58\u306e\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Manifest \u69cb\u6587 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u3082\u3063\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u6b21\u306e\u69cb\u6587\u3067\u3059\u3002 storage : volumes : myEFSVolume : # \u3053\u306e\u30ad\u30fc\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u6307\u5b9a\u53ef\u80fd path : '/etc/mount1' efs : id : fs-1234567 \u3053\u306e\u69cb\u6587\u306b\u3088\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 fs-1234567 \u3092\u4f7f\u7528\u3057\u3066 Service \u307e\u305f\u306f Job \u306e\u30b3\u30f3\u30c6\u30ca\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002Environment \u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30bf\u30b9\u30af\u306e\u8d77\u52d5\u306b\u5931\u6557\u3057\u307e\u3059\u3002 \u65e2\u5b58 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u5229\u7528\u3059\u308b\u5b8c\u5168\u306a\u69cb\u6587\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002 storage : volumes : <volume name> : path : <mount path> # \u5fc5\u9808\u3002\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u306e\u30d1\u30b9\u3092\u6307\u5b9a read_only : <boolean> # \u30c7\u30d5\u30a9\u30eb\u30c8: true efs : id : <filesystem ID> # \u5fc5\u9808 root_dir : <filesystem root> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\"\u3002 # \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u6307\u5b9a\u3057\u306a\u3044 auth : iam : <boolean> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002 # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u969b\u306b IAM \u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b access_point_id : <access point ID> # \u30aa\u30d7\u30b7\u30e7\u30f3. # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e ID uid : <uint32> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002Copilot \u7ba1\u7406 EFS \u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u7528 UID\u3002 gid : <uint32> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002Copilot \u7ba1\u7406 EFS \u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u7528 UID\u3002 # `id`\u3001`root_dir`\u3001`auth` \u3068\u306f\u4f75\u7528\u3067\u304d\u307e\u305b\u3093\u3002 \u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u4f5c\u6210 \u65e2\u5b58\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306f\u3001 AWS CLI \u3084 CloudFormation \u306a\u3069\u3092\u4f7f\u7528\u3057\u3066\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 AWS CLI \u65e2\u5b58\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u5fc5\u8981\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u304a\u3088\u3073\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Copilot Environment \u6b21\u306e AWS CLI \u306e\u30b3\u30de\u30f3\u30c9\u3067\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 $ EFS_FILESYSTEMS = $( aws efs describe-file-systems | \\ jq '.FileSystems[] | {ID: .FileSystemId, CreationTime: .CreationTime, Size: .SizeInBytes.Value}' ) \u3053\u306e\u5909\u6570\u3092 echo \u3059\u308b\u3053\u3068\u3067\u3001\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u60c5\u5831\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3092 $EFS_ID \u306b\u8a2d\u5b9a\u3057\u3001\u624b\u9806\u3092\u7d9a\u3051\u307e\u3059\u3002 \u540c\u69d8\u306b\u3001Copilot Environment \u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002\u6b21\u306e jq \u30b3\u30de\u30f3\u30c9\u306f\u3001describe-stacks \u306e\u7d50\u679c\u304b\u3089\u5fc5\u8981\u306a\u60c5\u5831\u3092\u62bd\u51fa\u3057\u3066\u3044\u307e\u3059\u3002 Info \u4f7f\u7528\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306f Copilot Environment \u3068\u540c\u3058\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 $ SUBNETS = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq '.Stacks[] | .Outputs[] | select(.OutputKey == \"PublicSubnets\") | .OutputValue' ) $ SUBNET1 = $( echo $SUBNETS | jq -r 'split(\",\") | .[0]' ) $ SUBNET2 = $( echo $SUBNETS | jq -r 'split(\",\") | .[1]' ) $ ENV_SG = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq -r '.Stacks[] | .Outputs[] | select(.OutputKey == \"EnvironmentSecurityGroup\") | .OutputValue' ) \u3053\u308c\u3089\u306e\u60c5\u5831\u3092\u53d6\u5f97\u5f8c\u3001\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ MOUNT_TARGET_1_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_1 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) $ MOUNT_TARGET_2_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_2 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u3001\u5148\u307b\u3069\u793a\u3057\u305f Manifest \u306e\u3088\u3046\u306b storage \u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 \u30ea\u30bd\u30fc\u30b9\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7 AWS CLI \u3092\u4f7f\u7528\u3057\u3066\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_1 $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_2 CloudFormation CloudFormation \u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u3001\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u9069\u5207\u306a EFS \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002 Environment \u306e\u4f5c\u6210\u5f8c\u3001Environment \u3068\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u304a\u3088\u3073\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u6b21\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u6b21\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 efs.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Resources : EFSFileSystem : Metadata : 'aws:copilot:description' : 'An EFS File System for persistent backing storage for tasks and services' Type : AWS::EFS::FileSystem Properties : PerformanceMode : generalPurpose ThroughputMode : bursting Encrypted : true MountTargetPublicSubnet1 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 0 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" MountTargetPublicSubnet2 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 1 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" Outputs : EFSVolumeID : Value : !Ref EFSFileSystem Export : Name : !Sub ${App}-${Env}-FilesystemID \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ aws cloudformation deploy --stack-name efs-cfn \\ --template-file ecs.yml --parameter-overrides App=${YOUR_APP} Env=${YOUR_ENV} \u3053\u308c\u306b\u3088\u308a EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u3001Copilot Environment \u30b9\u30bf\u30c3\u30af\u304b\u3089\u306e\u51fa\u529b\u3092\u4f7f\u7528\u3057\u3066\u3001\u30bf\u30b9\u30af\u306b\u5fc5\u8981\u306a\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001 describe-stacks \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ aws cloudformation describe-stacks --stack-name efs-cfn | \\ jq -r '.Stacks[] | .Outputs[] | .OutputValue' \u6b21\u306b\u3001EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u30a2\u30af\u30bb\u30b9\u3055\u305b\u305f\u3044 Service \u306e Manifest \u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 storage : volumes : copilotVolume : # \u3053\u306e\u30ad\u30fc\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u6307\u5b9a\u53ef\u80fd path : '/etc/mount1' read_only : true # Service \u306b\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f false \u3092\u6307\u5b9a efs : id : <your filesystem ID> \u6700\u5f8c\u306b\u3001 /etc/mount1 \u306b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u3001 copilot svc deploy \u3092\u5b9f\u884c\u3057\u3066 Service \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059\u3002 \u30ea\u30bd\u30fc\u30b9\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7 \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3092\u3059\u308b\u306b\u306f\u3001Manifest \u304b\u3089 storage \u8a2d\u5b9a\u3092\u524a\u9664\u3057\u3066 Service \u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot svc deploy \u6b21\u306b\u3001\u30b9\u30bf\u30c3\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ aws cloudformation delete-stack --stack-name efs-cfn","title":"Storage"},{"location":"ja/docs/developing/storage/#_1","text":"Copilot \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u6c38\u7d9a\u6027\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f 2 \u3064\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002 copilot storage init \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3001\u3042\u308b\u3044\u306f Manifest \u306e storage \u30d5\u30a3\u30fc\u30eb\u30c9 \u3092\u4f7f\u7528\u3057\u3066\u65e2\u5b58\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002","title":"\u30b9\u30c8\u30ec\u30fc\u30b8"},{"location":"ja/docs/developing/storage/#_2","text":"Job \u3084 Service \u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f copilot storage init \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 # \u30a6\u30a3\u30b6\u30fc\u30c9\u306b\u5f93\u3044 S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b $ copilot storage init -t S3 # \"api\" Service \u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a \"my-bucket\" \u3068\u3044\u3046\u540d\u524d\u306e S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001 \"api\" \u3067\u30c7\u30d7\u30ed\u30a4\u3068\u524a\u9664\u3092\u884c\u3044\u307e\u3059\u3002 $ copilot storage init -n my-bucket -t S3 -w api -l workload \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3001\"api\" Service \u306e addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u7d9a\u3044\u3066 copilot deploy -n api \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067 S3 \u30d0\u30b1\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 api \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3001\u30d0\u30b1\u30c3\u30c8\u540d\u304c api \u30b3\u30f3\u30c6\u30ca\u306e\u74b0\u5883\u5909\u6570\u306b MY_BUCKET_NAME \u306e\u5f62\u3067\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 Info \u3059\u3079\u3066\u306e\u540d\u524d\u306f\u3001\u30cf\u30a4\u30d5\u30f3\u3084\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306b\u57fa\u3065\u3044\u3066 SCREAMING_SNAKE_CASE \u306e\u3088\u3046\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 copilot svc show \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u74b0\u5883\u5909\u6570\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 copilot storage init \u3092\u5b9f\u884c\u3057\u3066 DynamoDB \u30c6\u30fc\u30d6\u30eb \u306e\u4f5c\u6210\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u30bd\u30fc\u30c8\u30ad\u30fc\u304a\u3088\u3073\u30ed\u30fc\u30ab\u30eb\u30bb\u30ab\u30f3\u30c0\u30ea\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u3092\u5b9a\u7fa9\u3057\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u53ef\u80fd\u3067\u3059\u3002 # \u30a6\u30a3\u30b6\u30fc\u30c9\u306b\u5f93\u3044 DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b $ copilot storage init -t DynamoDB # \u3082\u3057\u304f\u306f\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u30d5\u30e9\u30b0\u3067\u6307\u5b9a\u3059\u308b $ copilot storage init -n users -t DynamoDB -w api -l workload --partition-key id:N --sort-key email:S --lsi post-count:N \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a ${app}-${env}-${svc}-users \u3068\u3044\u3046\u540d\u524d\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306f id \u3068\u306a\u308a\u3001\u30c7\u30fc\u30bf\u578b\u306f\u6570\u5024\u3067\u3059\u3002\u30bd\u30fc\u30c8\u30ad\u30fc\u306f email \u3068\u306a\u308a\u3001\u30c7\u30fc\u30bf\u578b\u306f\u6587\u5b57\u5217\u3067\u3059\u3002\u307e\u305f\u3001 \u30ed\u30fc\u30ab\u30eb\u30bb\u30ab\u30f3\u30c0\u30ea\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 (\u4ee3\u66ff\u306e\u30bd\u30fc\u30c8\u30ad\u30fc) \u3068\u3057\u3066\u3001\u30c7\u30fc\u30bf\u578b\u304c\u6570\u5024\u3067\u3042\u308b post-count \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 \u540c\u69d8\u306b\u3001 copilot storage init \u3092\u5b9f\u884c\u3057\u3066 RDS Aurora Serverless v2 \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 # \u30a6\u30a3\u30b6\u30fc\u30c9\u306b\u5f93\u3044 RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\u3059\u308b $ copilot storage init -t Aurora # \u3082\u3057\u304f\u306f\u3001RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u306e\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u30d5\u30e9\u30b0\u3067\u6307\u5b9a\u3059\u308b $ copilot storage init -n my-cluster -t Aurora -w api -l workload --engine PostgreSQL --initial-db my_db \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a PostgreSQL \u30a8\u30f3\u30b8\u30f3\u3092\u4f7f\u7528\u3059\u308b my_db \u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6301\u3064 RDS Aurora Serverless v2 \u30af\u30e9\u30b9\u30bf\u30fc\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002JSON \u6587\u5b57\u5217\u3068\u3057\u3066 MYCLUSTER_SECRET \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u306e JSON \u6587\u5b57\u5217\u306f\u3001 'host' \u3001 'port' \u3001 'dbname' \u3001 'username' \u3001 'password' \u3001 'dbClusterIdentifier' \u3001 'engine' \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u542b\u307f\u307e\u3059\u3002 RDS Aurora Serverless v1 \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot storage init -n my-cluster -t Aurora --serverless-version v1","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304a\u3088\u3073\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8"},{"location":"ja/docs/developing/storage/#environment","text":"-l \u30d5\u30e9\u30b0\u306f --lifecycle \u306e\u7565\u3067\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001 -l \u30d5\u30e9\u30b0\u306e\u5024\u306f workload \u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u304c Service Addon \u307e\u305f\u306f Job Addon \u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002 \u30b9\u30c8\u30ec\u30fc\u30b8\u306f copilot [svc/job] deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3001 copilot [svc/job] delete \u3092\u5b9f\u884c\u3059\u308b\u3068\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001Service \u3084 Job \u3092\u524a\u9664\u3057\u3066\u3082\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u7dad\u6301\u3057\u305f\u3044\u5834\u5408\u306f\u3001Environment \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Environment \u30b9\u30c8\u30ec\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306f Environment Addon\u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u3001 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u5c55\u958b\u3055\u308c\u3001 copilot env delete \u3092\u5b9f\u884c\u3059\u308b\u307e\u3067\u524a\u9664\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"Environment \u30b9\u30c8\u30ec\u30fc\u30b8"},{"location":"ja/docs/developing/storage/#_3","text":"Copilot \u3067 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3046\u65b9\u6cd5\u306f\uff12\u3064\u3042\u308a\u307e\u3059: Copilot \u7ba1\u7406\u306e EFS\u3001\u3042\u308b\u3044\u306f\u65e2\u5b58\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u3059\u3002 Attention EFS \u306f\u3001Windows \u30d9\u30fc\u30b9\u306e Service \u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u308a\u307e\u305b\u3093\u3002","title":"\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0"},{"location":"ja/docs/developing/storage/#copilot-efs","text":"name : frontend storage : volumes : myManagedEFSVolume : efs : true path : /var/efs read_only : false \u3053\u306e Manifest \u3067\u306f\u3001Environment \u3054\u3068\u306b EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3068 EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3001Service \u5c02\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e /frontend \u30d1\u30b9\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u306f\u3053\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e /var/efs \u30d1\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u3088\u3063\u3066 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306b\u4f5c\u6210\u3055\u308c\u305f\u5c02\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u305d\u306e\u914d\u4e0b\u306e\u3059\u3079\u3066\u306e\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u305d\u306e\u4e2d\u306e /frontend \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f Environment \u3092\u524a\u9664\u3059\u308b\u307e\u3067\u7dad\u6301\u3055\u308c\u307e\u3059\u3002\u5404 Service \u306b\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3068\u30012 \u3064\u306e Service \u304c\u76f8\u4e92\u306b\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001\u9ad8\u5ea6\u306a EFS \u8a2d\u5b9a\u306b\u3042\u308b uid \u3068 gid \u306e\u6307\u5b9a\u306b\u3088\u3063\u3066\u3001EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e UID \u3068 GID \u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3082\u53ef\u80fd\u3067\u3059\u3002UID \u3042\u308b\u3044\u306f GID \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Service \u540d\u306e CRC32 \u30c1\u30a7\u30c3\u30af\u30b5\u30e0 \u3092\u5143\u306b\u3057\u305f\u64ec\u4f3c\u4e71\u6570 (pseudorandom numbers) \u3092\u3053\u308c\u3089\u306e\u8a2d\u5b9a\u5024\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002 storage : volumes : myManagedEFSVolume : efs : uid : 1000 gid : 10000 path : /var/efs read_only : false uid \u3068 gid \u306f\u3001\u305d\u306e\u4ed6\u306e\u9ad8\u5ea6\u306a EFS \u8a2d\u5b9a\u3068\u306e\u4f75\u7528\u306f\u3067\u304d\u306a\u3044\u70b9\u306b\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002","title":"Copilot \u7ba1\u7406\u306e EFS"},{"location":"ja/docs/developing/storage/#_4","text":"Copilot \u7ba1\u7406\u306e EFS \u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001Copilot \u306f\u4ee5\u4e0b\u306e\u30ea\u30bd\u30fc\u30b9\u3092 Environment \u3054\u3068\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 Environment \u5185\u306e\u5404\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3054\u3068\u306e \u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8 Environment \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u30eb\u30fc\u30eb \u307e\u305f\u3001Copilot \u306f Service \u3054\u3068\u306b\u4ee5\u4e0b\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8 \u3002\u3053\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306f Copilot \u7ba1\u7406\u306e EFS \u3092\u5229\u7528\u3059\u308b\u8a2d\u5b9a\u3092\u884c\u3063\u305f Service \u3042\u308b\u3044\u306f Job \u306e\u540d\u524d\u306b\u57fa\u3065\u3044\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53c2\u7167\u3057\u307e\u3059\u3002 Environment \u3054\u3068\u306b\u4f5c\u6210\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306f copilot env show --json --resources \u3067\u5f97\u3089\u308c\u308b\u7d50\u679c\u3092\u4efb\u610f\u306e JSON \u30d1\u30fc\u30b5\u3067\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u6b21\u306f\u305d\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u306e\u4f8b\u3067\u3059\u3002 > copilot env show -n test --json --resources | jq '.resources[] | select( .type | contains(\"EFS\") )'","title":"\u5185\u90e8\u7684\u306a\u8a73\u7d30"},{"location":"ja/docs/developing/storage/#_5","text":"","title":"\u9ad8\u5ea6\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"},{"location":"ja/docs/developing/storage/#copilot-efs_1","text":"Service \u304c\u305d\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5229\u7528\u3059\u308b\u524d\u306b\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3057\u3066\u304a\u304d\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306b\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u8981\u4ef6\uff08\u4f8b\u3048\u3070\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\u51e6\u7406\u306b\u305d\u306e\u30c7\u30fc\u30bf\u306f\u5fc5\u8981\u304b\uff1f\u306e\u3088\u3046\u306a\uff09\u306b\u5408\u308f\u305b\u305f\u65b9\u6cd5\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002","title":"Copilot \u7ba1\u7406\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306b\u521d\u671f\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b"},{"location":"ja/docs/developing/storage/#_6","text":"\u4f5c\u6210\u3057\u305f EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u3001 mount_points \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3057\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u3078\u306e\u30de\u30a6\u30f3\u30c8\u304c\u53ef\u80fd\u3067\u3059\u3002EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3057\u305f\u30b5\u30a4\u30c9\u30ab\u30fc\u306e COMMAND \u3042\u308b\u3044\u306f ENTRYPOINT \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u81ea\u8eab\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f S3 \u3084\u305d\u306e\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u308a\u3068\u3044\u3063\u305f\u65b9\u6cd5\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30ab\u30fc\u3092 essential:false \u306b\u3088\u3063\u3066\u4efb\u610f\u30b3\u30f3\u30c6\u30ca\u3068\u8a2d\u5b9a\u3059\u308c\u3070\u3001\u30b5\u30a4\u30c9\u30ab\u30fc\u306f\u5fc5\u8981\u306a\u51e6\u7406\u3092\u6e08\u307e\u305b\u305f\u4e0a\u3067 Service \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u884c\u72b6\u614b\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u305a\u306b\u505c\u6b62\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u308c\u306f\u5916\u90e8\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u3082\u3068\u306b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u30c7\u30fc\u30bf\u3092\u5e38\u306b\u6700\u65b0\u306b\u4fdd\u3064\u5fc5\u8981\u304c\u3042\u308b\u30bf\u30a4\u30d7\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u306f\u9069\u3057\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u70b9\u306b\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002","title":"\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u5229\u7528\u3059\u308b"},{"location":"ja/docs/developing/storage/#copilot-svc-exec","text":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u6642\u70b9\u3067\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u3068\u306a\u308b\u30bf\u30a4\u30d7\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3088\u308a\u5148\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u5229\u7528\u3057\u3066\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u5148\u306b\u6e08\u307e\u305b\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 \u4f8b\u3048\u3070\u3001\u6b21\u306e\u3088\u3046\u306a Manifest \u3092\u4f7f\u3063\u3066 frontend Service \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 name : frontend type : Load Balanced Web Service image : location : amazon/amazon-ecs-sample exec : true storage : volumes : myVolume : efs : true path : /var/efs read_only : false \u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u305f\u3089\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002 $ copilot svc exec \u3053\u308c\u306b\u3088\u308a\u30b3\u30f3\u30c6\u30ca\u3078\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b7\u30a7\u30eb\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001 curl \u3084 wget \u3068\u3044\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u4e0a\u3067\u3001\u305d\u308c\u3089\u3092\u5229\u7528\u3057\u3066\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3084\u5fc5\u8981\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u306a\u3069\u3092 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u5b9f\u65bd\u3057\u307e\u3059\u3002 Info \u672c\u756a\u74b0\u5883\u3067\u3053\u306e\u3088\u3046\u306a\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093\u3002\u30b3\u30f3\u30c6\u30ca\u306f\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u306a\u3082\u306e\u3067\u3042\u308a\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u5229\u7528\u3057\u305f\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u3042\u308b\u306e\u3067\u3042\u308c\u3070\u305d\u308c\u3089\u306f\u524d\u3082\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u30d3\u30eb\u30c9\u6642\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3088\u3046\u306b Dockerfile \u306b\u8a18\u8ff0\u3057\u3001 RUN \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u5b9f\u884c\u3059\u3079\u304d\u3067\u3059\u3002 \u5fc5\u8981\u306a\u4f5c\u696d\u304c\u7d42\u308f\u3063\u305f\u3089\u3001Manifest \u304b\u3089 exec \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u524a\u9664\u3057\u3001 image \u30d5\u30a3\u30fc\u30eb\u30c9\u4ee5\u4e0b\u3092\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u305f\u3044\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u8a2d\u5b9a\u3084\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u66f8\u304d\u63db\u3048\u307e\u3057\u3087\u3046\u3002 name : frontend type : Load Balanced Web Service image : build : ./Dockerfile storage : volumes : myVolume : efs : true path : /var/efs read_only : false","title":"copilot svc exec \u3092\u5229\u7528\u3059\u308b"},{"location":"ja/docs/developing/storage/#efs","text":"Copilot \u30bf\u30b9\u30af\u306b\u65e2\u5b58 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30dc\u30ea\u30e5\u30fc\u30e0\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306b\u306f\u6b21\u306e\uff12\u3064\u3092\u6e80\u305f\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Environment \u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 \u3092\u4f5c\u6210\u3059\u308b Environment \u306e\u5404\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u3001Copilot Environment \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u305f EFS \u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8 \u3092\u4f5c\u6210\u3059\u308b \u3053\u308c\u3089\u306e\u524d\u63d0\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5834\u5408\u3001Manifest \u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067 EFS \u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u8a2d\u5b9a\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3068\u3001\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u60c5\u5831\u304c\u5fc5\u8981\u3067\u3059\u3002 Info \u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u4e00\u5ea6\u306b 1 \u3064\u306e Environment \u3067\u306e\u307f\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306f\u3001\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30fc\u30be\u30fc\u30f3\u3054\u3068\u3067 1 \u3064\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001Copilot \u30bf\u30b9\u30af\u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u4e88\u5b9a\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5225\u306e VPC \u3067\u4f7f\u7528\u3057\u305f\u3053\u3068\u304c\u3042\u308b\u5834\u5408\u306f\u3001Copilot \u30bf\u30b9\u30af\u3067\u4f7f\u7528\u3059\u308b\u524d\u306b\u65e2\u5b58\u306e\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u65e2\u5b58 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0"},{"location":"ja/docs/developing/storage/#manifest","text":"EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u3082\u3063\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u6b21\u306e\u69cb\u6587\u3067\u3059\u3002 storage : volumes : myEFSVolume : # \u3053\u306e\u30ad\u30fc\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u6307\u5b9a\u53ef\u80fd path : '/etc/mount1' efs : id : fs-1234567 \u3053\u306e\u69cb\u6587\u306b\u3088\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 fs-1234567 \u3092\u4f7f\u7528\u3057\u3066 Service \u307e\u305f\u306f Job \u306e\u30b3\u30f3\u30c6\u30ca\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002Environment \u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30bf\u30b9\u30af\u306e\u8d77\u52d5\u306b\u5931\u6557\u3057\u307e\u3059\u3002 \u65e2\u5b58 EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u5229\u7528\u3059\u308b\u5b8c\u5168\u306a\u69cb\u6587\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002 storage : volumes : <volume name> : path : <mount path> # \u5fc5\u9808\u3002\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u306e\u30d1\u30b9\u3092\u6307\u5b9a read_only : <boolean> # \u30c7\u30d5\u30a9\u30eb\u30c8: true efs : id : <filesystem ID> # \u5fc5\u9808 root_dir : <filesystem root> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\"\u3002 # \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u6307\u5b9a\u3057\u306a\u3044 auth : iam : <boolean> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002 # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u969b\u306b IAM \u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b access_point_id : <access point ID> # \u30aa\u30d7\u30b7\u30e7\u30f3. # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e ID uid : <uint32> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002Copilot \u7ba1\u7406 EFS \u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u7528 UID\u3002 gid : <uint32> # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002Copilot \u7ba1\u7406 EFS \u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u7528 UID\u3002 # `id`\u3001`root_dir`\u3001`auth` \u3068\u306f\u4f75\u7528\u3067\u304d\u307e\u305b\u3093\u3002","title":"Manifest \u69cb\u6587"},{"location":"ja/docs/developing/storage/#_7","text":"\u65e2\u5b58\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306f\u3001 AWS CLI \u3084 CloudFormation \u306a\u3069\u3092\u4f7f\u7528\u3057\u3066\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002","title":"\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u4f5c\u6210"},{"location":"ja/docs/developing/storage/#aws-cli","text":"\u65e2\u5b58\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u5fc5\u8981\u3067\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u304a\u3088\u3073\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Copilot Environment \u6b21\u306e AWS CLI \u306e\u30b3\u30de\u30f3\u30c9\u3067\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 $ EFS_FILESYSTEMS = $( aws efs describe-file-systems | \\ jq '.FileSystems[] | {ID: .FileSystemId, CreationTime: .CreationTime, Size: .SizeInBytes.Value}' ) \u3053\u306e\u5909\u6570\u3092 echo \u3059\u308b\u3053\u3068\u3067\u3001\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u60c5\u5831\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3092 $EFS_ID \u306b\u8a2d\u5b9a\u3057\u3001\u624b\u9806\u3092\u7d9a\u3051\u307e\u3059\u3002 \u540c\u69d8\u306b\u3001Copilot Environment \u306e\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002\u6b21\u306e jq \u30b3\u30de\u30f3\u30c9\u306f\u3001describe-stacks \u306e\u7d50\u679c\u304b\u3089\u5fc5\u8981\u306a\u60c5\u5831\u3092\u62bd\u51fa\u3057\u3066\u3044\u307e\u3059\u3002 Info \u4f7f\u7528\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306f Copilot Environment \u3068\u540c\u3058\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 $ SUBNETS = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq '.Stacks[] | .Outputs[] | select(.OutputKey == \"PublicSubnets\") | .OutputValue' ) $ SUBNET1 = $( echo $SUBNETS | jq -r 'split(\",\") | .[0]' ) $ SUBNET2 = $( echo $SUBNETS | jq -r 'split(\",\") | .[1]' ) $ ENV_SG = $( aws cloudformation describe-stacks --stack-name ${ YOUR_APP } - ${ YOUR_ENV } \\ | jq -r '.Stacks[] | .Outputs[] | select(.OutputKey == \"EnvironmentSecurityGroup\") | .OutputValue' ) \u3053\u308c\u3089\u306e\u60c5\u5831\u3092\u53d6\u5f97\u5f8c\u3001\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 $ MOUNT_TARGET_1_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_1 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) $ MOUNT_TARGET_2_ID = $( aws efs create-mount-target \\ --subnet-id $SUBNET_2 \\ --security-groups $ENV_SG \\ --file-system-id $EFS_ID | jq -r .MountTargetID ) \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u3001\u5148\u307b\u3069\u793a\u3057\u305f Manifest \u306e\u3088\u3046\u306b storage \u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002","title":"AWS CLI"},{"location":"ja/docs/developing/storage/#_8","text":"AWS CLI \u3092\u4f7f\u7528\u3057\u3066\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_1 $ aws efs delete-mount-target --mount-target-id $MOUNT_TARGET_2","title":"\u30ea\u30bd\u30fc\u30b9\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7"},{"location":"ja/docs/developing/storage/#cloudformation","text":"CloudFormation \u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u3001\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u9069\u5207\u306a EFS \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u4f5c\u6210\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002 Environment \u306e\u4f5c\u6210\u5f8c\u3001Environment \u3068\u540c\u3058\u30a2\u30ab\u30a6\u30f3\u30c8\u304a\u3088\u3073\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u6b21\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 \u6b21\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092 efs.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Resources : EFSFileSystem : Metadata : 'aws:copilot:description' : 'An EFS File System for persistent backing storage for tasks and services' Type : AWS::EFS::FileSystem Properties : PerformanceMode : generalPurpose ThroughputMode : bursting Encrypted : true MountTargetPublicSubnet1 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 0 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" MountTargetPublicSubnet2 : Type : AWS::EFS::MountTarget Properties : FileSystemId : !Ref EFSFileSystem SecurityGroups : - Fn::ImportValue : !Sub \"${App}-${Env}-EnvironmentSecurityGroup\" SubnetId : !Select - 1 - !Split - \",\" - Fn::ImportValue : !Sub \"${App}-${Env}-PublicSubnets\" Outputs : EFSVolumeID : Value : !Ref EFSFileSystem Export : Name : !Sub ${App}-${Env}-FilesystemID \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ aws cloudformation deploy --stack-name efs-cfn \\ --template-file ecs.yml --parameter-overrides App=${YOUR_APP} Env=${YOUR_ENV} \u3053\u308c\u306b\u3088\u308a EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u3001Copilot Environment \u30b9\u30bf\u30c3\u30af\u304b\u3089\u306e\u51fa\u529b\u3092\u4f7f\u7528\u3057\u3066\u3001\u30bf\u30b9\u30af\u306b\u5fc5\u8981\u306a\u30de\u30a6\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 ID \u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001 describe-stacks \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ aws cloudformation describe-stacks --stack-name efs-cfn | \\ jq -r '.Stacks[] | .Outputs[] | .OutputValue' \u6b21\u306b\u3001EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u30a2\u30af\u30bb\u30b9\u3055\u305b\u305f\u3044 Service \u306e Manifest \u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 storage : volumes : copilotVolume : # \u3053\u306e\u30ad\u30fc\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u6307\u5b9a\u53ef\u80fd path : '/etc/mount1' read_only : true # Service \u306b\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f false \u3092\u6307\u5b9a efs : id : <your filesystem ID> \u6700\u5f8c\u306b\u3001 /etc/mount1 \u306b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u3001 copilot svc deploy \u3092\u5b9f\u884c\u3057\u3066 Service \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059\u3002","title":"CloudFormation"},{"location":"ja/docs/developing/storage/#_9","text":"\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3092\u3059\u308b\u306b\u306f\u3001Manifest \u304b\u3089 storage \u8a2d\u5b9a\u3092\u524a\u9664\u3057\u3066 Service \u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 $ copilot svc deploy \u6b21\u306b\u3001\u30b9\u30bf\u30c3\u30af\u3092\u524a\u9664\u3057\u307e\u3059\u3002 $ aws cloudformation delete-stack --stack-name efs-cfn","title":"\u30ea\u30bd\u30fc\u30b9\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7"},{"location":"ja/docs/developing/svc-to-svc-communication/","text":"\u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1 Service Connect v1.24.0 ECS Service Connect \u3092\u4f7f\u3046\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 Service \u304c\u8ca0\u8377\u5206\u6563\u3055\u308c\u305f\u5f3e\u529b\u7684\u306a\u65b9\u6cd5\u3067\u3001\u30c0\u30a6\u30f3\u30b9\u30c8\u30ea\u30fc\u30e0\u306e Service \u306b\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u5206\u304b\u308a\u3084\u3059\u3044\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u516c\u958b\u3059\u308b\u65b9\u6cd5\u3092\u7c21\u5358\u306b\u3057\u307e\u3059\u3002Copilot \u306b\u304a\u3051\u308b Service Connect \u306f\u3001\u4f5c\u6210\u3057\u305f\u5404 Service \u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6b21\u306e\u69d8\u306a\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4ed8\u4e0e\u3057\u307e\u3059\uff1a http://<your service name> \u3002 Attention Service Connect \u306f Request-Driven Web Services \u3067\u306f\u307e\u3060\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 Service Connect \u306e\u4f7f\u3044\u65b9\u306f\uff1f kudos \u3068\u3044\u3046 Application \u3068\u540c\u3058 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f api \u3068 front-end \u3068\u3044\u3046 2 \u3064\u306e Service \u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002Service Connect \u3092\u5229\u7528\u3059\u308b\u70ba\u306b\u306f\u3001\u4e21\u65b9\u306e Service \u306e Manifest \u306b\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002 Service Connect Manifest \u306e\u8a2d\u5b9a\u4f8b Basic Custom Alias network : connect : true # Defaults to \"false\" network : connect : alias : frontend.local \u4e21\u65b9\u306e Service \u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001 Service \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Service Connect \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u304a\u4e92\u3044\u306b\u901a\u4fe1\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f Service \u540d\u3068\u540c\u3058\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 front-end Service \u306f\u3001\u5358\u7d14\u306b http://api \u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002 // Calling the \"api\" service from the \"front-end\" service. resp , err := http . Get ( \"http://api/\" ) \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u304b\u3089\u306e\u66f4\u65b0 v1.24 \u4ee5\u524d\u306e Copilot \u3067\u306f\u3001 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u3092\u4f7f\u7528\u3057\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1\u304c\u53ef\u80fd\u3067\u3057\u305f\u3002\u65e2\u306b\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u5229\u7528\u3057\u3066\u3044\u3066\u3001\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u3001 network.connect.alias \u3092\u8a2d\u5b9a\u3057\u3001Service Connect \u304c\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3068\u540c\u3058\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u3046\u69d8\u306b\u3057\u307e\u3059\u3002Service \u3068\u305d\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4e21\u65b9\u304c Service Connect \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u4ee3\u308f\u308a\u306b Service Connect \u3092\u7d4c\u7531\u3057\u3066\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 api Service \u306e Manifest \u3092\u6b21\u306e\u69d8\u306b\u3057\u307e\u3059\u3002 network : connect : alias : ${COPILOT_SERVICE_NAME}.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.local front-end Service \u3082\u540c\u69d8\u306e\u8a2d\u5b9a\u306b\u3057\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u4ee3\u308f\u308a\u306b\u3001Service Connect \u7d4c\u7531\u3067 API \u547c\u3073\u51fa\u3057\u3092\u3059\u308b\u969b\u306b\u540c\u3058\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3057\u7d9a\u3051\u3089\u308c\u307e\u3059\u3002 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u306f\u30b5\u30fc\u30d3\u30b9\u540c\u58eb\u304c\u9055\u3044\u306b\u767a\u898b\u3057\u3001\u901a\u4fe1\u3059\u308b\u70ba\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u516c\u958b\u3057\u305f\u5834\u5408\u306e\u307f\u3001\u4e92\u3044\u306b\u901a\u4fe1\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3067\u3082\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002 ECS \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u3092\u4f7f\u3046\u3068\u3001\u4f5c\u6210\u3057\u305f\u5404\u30b5\u30fc\u30d3\u30b9\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u3068 DNS \u540d\u304c\u4ed8\u4e0e\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u5404\u30b5\u30fc\u30d3\u30b9\u306f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (VPC) \u3092\u51fa\u308b\u3053\u3068\u306a\u304f\u3001\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u516c\u958b\u305b\u305a\u306b\u3001\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u3068\u901a\u4fe1\u3057\u307e\u3059\u3002 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u4f7f\u3046\u306b\u306f\uff1f \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306f Copilot CLI \u3092\u5229\u7528\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e Service \u3067\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u4f7f\u3063\u3066\u3069\u306e\u69d8\u306b\u5229\u7528\u3059\u308b\u304b\u8aac\u660e\u3057\u307e\u3059\u3002\u540c\u69d8\u306b api \u3068 front-end \u3068\u3044\u3046 2 \u3064\u306e Service \u304c\u3042\u308b kudos \u3068\u3044\u3046 Application \u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 \u3053\u306e\u4f8b\u3067\u306f\u3001 test \u3068\u3044\u3046 Envrionment \u306b front-end Service \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u3066\u3001\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3057\u3066 api Service \u3092\u547c\u3073\u51fa\u305d\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002 // Calling our api service from the front-end service using Service Discovery func ServiceDiscoveryGet ( w http . ResponseWriter , req * http . Request , ps httprouter . Params ) { endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) resp , err := http . Get ( endpoint /* http://api.test.kudos.local/some-request */ ) if err != nil { http . Error ( w , err . Error (), http . StatusInternalServerError ) return } defer resp . Body . Close () body , _ := ioutil . ReadAll ( resp . Body ) w . WriteHeader ( http . StatusOK ) w . Write ( body ) } \u91cd\u8981\u306a\u306e\u306f\u3001 front-end Service \u304c\u7279\u5225\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u7d4c\u7531\u3057\u3066 api Servcie \u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002 endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) COPILOT_SERVICE_DISCOVERY_ENDPOINT \u306f\u7279\u5225\u306a\u74b0\u5883\u5909\u6570\u3067\u3001Copilot CLI \u304c Service \u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f62\u5f0f\u306f\u3001 {env name}.{app name}.local \u3067\u3059\u3002 \u3064\u307e\u308a\u3001\u4eca\u56de\u306e kudos Application \u306e\u5834\u5408\u3001 test Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068 http://api.test.kudos.local/some-request \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002 api Service \u306f 80 \u756a\u30dd\u30fc\u30c8\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001URL \u3067\u306f\u30dd\u30fc\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u4ed6\u306e\u30dd\u30fc\u30c8\u3067\u52d5\u3044\u3066\u3044\u308b\u5834\u5408\u3001\u4f8b\u3048\u3070 8080 \u3067\u52d5\u3044\u3066\u3044\u308b\u5834\u5408\u306f\u3001 http://api.test.kudos.local:8080/some-request \u306e\u69d8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u30dd\u30fc\u30c8\u3092\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 front-end Service \u304c\u3053\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u884c\u3046\u3068\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 api.test.kudos.local \u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u306b\u89e3\u6c7a\u3055\u308c\u3001 VPC \u5185\u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 \u53e4\u3044 Environment \u3068 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea Copilot v1.9.0 \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u540d\u524d\u7a7a\u9593\u306f Environment \u3092\u542b\u3081\u305a\u3001 {app name}.local \u3068\u3044\u3046\u5f62\u5f0f\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002 \u3053\u306e\u5236\u9650\u306b\u3088\u308a\u3001\u540c\u3058 VPC \u306b\u8907\u6570\u306e Envrionment \u3092\u30c7\u30d7\u30ed\u30a4\u51fa\u6765\u307e\u305b\u3093\u3067\u3057\u305f\u3002Copilot v1.9.0 \u4ee5\u964d\u3067\u4f5c\u6210\u3055\u308c\u305f Environment \u306f\u3001\u4ed6\u306e\u3069\u306e Environment \u3068\u3082 VPC \u3092\u5171\u6709\u3067\u304d\u307e\u3059\u3002 Envrionment \u3092\u66f4\u65b0\u3059\u308b\u3068\u3001Copilot \u306f Envrionment \u304c\u4f5c\u6210\u3055\u308c\u305f\u6642\u306e\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u540d\u524d\u7a7a\u9593\u3092\u5c0a\u91cd\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001 Service \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f\u5909\u66f4\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002Copilot v1.9.0 \u4ee5\u964d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u4f5c\u6210\u3057\u305f\u65b0\u3057\u3044 Envrionment \u306f\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306b {env name}.{app name}.local \u5f62\u5f0f\u3092\u5229\u7528\u3057\u3001\u53e4\u3044 Envrionment \u3068 VPC \u3092\u5171\u6709\u3067\u304d\u307e\u3059\u3002","title":"Service-to-Service Communication"},{"location":"ja/docs/developing/svc-to-svc-communication/#_1","text":"","title":"\u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1"},{"location":"ja/docs/developing/svc-to-svc-communication/#service-connect-v1240","text":"ECS Service Connect \u3092\u4f7f\u3046\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 Service \u304c\u8ca0\u8377\u5206\u6563\u3055\u308c\u305f\u5f3e\u529b\u7684\u306a\u65b9\u6cd5\u3067\u3001\u30c0\u30a6\u30f3\u30b9\u30c8\u30ea\u30fc\u30e0\u306e Service \u306b\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u5206\u304b\u308a\u3084\u3059\u3044\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u516c\u958b\u3059\u308b\u65b9\u6cd5\u3092\u7c21\u5358\u306b\u3057\u307e\u3059\u3002Copilot \u306b\u304a\u3051\u308b Service Connect \u306f\u3001\u4f5c\u6210\u3057\u305f\u5404 Service \u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6b21\u306e\u69d8\u306a\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4ed8\u4e0e\u3057\u307e\u3059\uff1a http://<your service name> \u3002 Attention Service Connect \u306f Request-Driven Web Services \u3067\u306f\u307e\u3060\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002","title":"Service Connect  v1.24.0 "},{"location":"ja/docs/developing/svc-to-svc-communication/#service-connect","text":"kudos \u3068\u3044\u3046 Application \u3068\u540c\u3058 Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f api \u3068 front-end \u3068\u3044\u3046 2 \u3064\u306e Service \u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002Service Connect \u3092\u5229\u7528\u3059\u308b\u70ba\u306b\u306f\u3001\u4e21\u65b9\u306e Service \u306e Manifest \u306b\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002 Service Connect Manifest \u306e\u8a2d\u5b9a\u4f8b Basic Custom Alias network : connect : true # Defaults to \"false\" network : connect : alias : frontend.local \u4e21\u65b9\u306e Service \u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001 Service \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Service Connect \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u304a\u4e92\u3044\u306b\u901a\u4fe1\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f Service \u540d\u3068\u540c\u3058\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 front-end Service \u306f\u3001\u5358\u7d14\u306b http://api \u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002 // Calling the \"api\" service from the \"front-end\" service. resp , err := http . Get ( \"http://api/\" )","title":"Service Connect \u306e\u4f7f\u3044\u65b9\u306f\uff1f"},{"location":"ja/docs/developing/svc-to-svc-communication/#_2","text":"v1.24 \u4ee5\u524d\u306e Copilot \u3067\u306f\u3001 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u3092\u4f7f\u7528\u3057\u305f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1\u304c\u53ef\u80fd\u3067\u3057\u305f\u3002\u65e2\u306b\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u5229\u7528\u3057\u3066\u3044\u3066\u3001\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u907f\u3051\u305f\u3044\u5834\u5408\u3001 network.connect.alias \u3092\u8a2d\u5b9a\u3057\u3001Service Connect \u304c\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3068\u540c\u3058\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u3046\u69d8\u306b\u3057\u307e\u3059\u3002Service \u3068\u305d\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4e21\u65b9\u304c Service Connect \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u4ee3\u308f\u308a\u306b Service Connect \u3092\u7d4c\u7531\u3057\u3066\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 api Service \u306e Manifest \u3092\u6b21\u306e\u69d8\u306b\u3057\u307e\u3059\u3002 network : connect : alias : ${COPILOT_SERVICE_NAME}.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.local front-end Service \u3082\u540c\u69d8\u306e\u8a2d\u5b9a\u306b\u3057\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u4ee3\u308f\u308a\u306b\u3001Service Connect \u7d4c\u7531\u3067 API \u547c\u3073\u51fa\u3057\u3092\u3059\u308b\u969b\u306b\u540c\u3058\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3057\u7d9a\u3051\u3089\u308c\u307e\u3059\u3002","title":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u304b\u3089\u306e\u66f4\u65b0"},{"location":"ja/docs/developing/svc-to-svc-communication/#_3","text":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u306f\u30b5\u30fc\u30d3\u30b9\u540c\u58eb\u304c\u9055\u3044\u306b\u767a\u898b\u3057\u3001\u901a\u4fe1\u3059\u308b\u70ba\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u516c\u958b\u3057\u305f\u5834\u5408\u306e\u307f\u3001\u4e92\u3044\u306b\u901a\u4fe1\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3067\u3082\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002 ECS \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u3092\u4f7f\u3046\u3068\u3001\u4f5c\u6210\u3057\u305f\u5404\u30b5\u30fc\u30d3\u30b9\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u3068 DNS \u540d\u304c\u4ed8\u4e0e\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u5404\u30b5\u30fc\u30d3\u30b9\u306f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (VPC) \u3092\u51fa\u308b\u3053\u3068\u306a\u304f\u3001\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u516c\u958b\u305b\u305a\u306b\u3001\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u3068\u901a\u4fe1\u3057\u307e\u3059\u3002","title":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea"},{"location":"ja/docs/developing/svc-to-svc-communication/#_4","text":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306f Copilot CLI \u3092\u5229\u7528\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e Service \u3067\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4f8b\u3092\u4f7f\u3063\u3066\u3069\u306e\u69d8\u306b\u5229\u7528\u3059\u308b\u304b\u8aac\u660e\u3057\u307e\u3059\u3002\u540c\u69d8\u306b api \u3068 front-end \u3068\u3044\u3046 2 \u3064\u306e Service \u304c\u3042\u308b kudos \u3068\u3044\u3046 Application \u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002 \u3053\u306e\u4f8b\u3067\u306f\u3001 test \u3068\u3044\u3046 Envrionment \u306b front-end Service \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u3066\u3044\u3066\u3001\u30d1\u30d6\u30ea\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3057\u3066 api Service \u3092\u547c\u3073\u51fa\u305d\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002 // Calling our api service from the front-end service using Service Discovery func ServiceDiscoveryGet ( w http . ResponseWriter , req * http . Request , ps httprouter . Params ) { endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) resp , err := http . Get ( endpoint /* http://api.test.kudos.local/some-request */ ) if err != nil { http . Error ( w , err . Error (), http . StatusInternalServerError ) return } defer resp . Body . Close () body , _ := ioutil . ReadAll ( resp . Body ) w . WriteHeader ( http . StatusOK ) w . Write ( body ) } \u91cd\u8981\u306a\u306e\u306f\u3001 front-end Service \u304c\u7279\u5225\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u7d4c\u7531\u3057\u3066 api Servcie \u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002 endpoint := fmt . Sprintf ( \"http://api.%s/some-request\" , os . Getenv ( \"COPILOT_SERVICE_DISCOVERY_ENDPOINT\" )) COPILOT_SERVICE_DISCOVERY_ENDPOINT \u306f\u7279\u5225\u306a\u74b0\u5883\u5909\u6570\u3067\u3001Copilot CLI \u304c Service \u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u5f62\u5f0f\u306f\u3001 {env name}.{app name}.local \u3067\u3059\u3002 \u3064\u307e\u308a\u3001\u4eca\u56de\u306e kudos Application \u306e\u5834\u5408\u3001 test Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068 http://api.test.kudos.local/some-request \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002 api Service \u306f 80 \u756a\u30dd\u30fc\u30c8\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001URL \u3067\u306f\u30dd\u30fc\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u4ed6\u306e\u30dd\u30fc\u30c8\u3067\u52d5\u3044\u3066\u3044\u308b\u5834\u5408\u3001\u4f8b\u3048\u3070 8080 \u3067\u52d5\u3044\u3066\u3044\u308b\u5834\u5408\u306f\u3001 http://api.test.kudos.local:8080/some-request \u306e\u69d8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u30dd\u30fc\u30c8\u3092\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 front-end Service \u304c\u3053\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u884c\u3046\u3068\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 api.test.kudos.local \u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\u306b\u89e3\u6c7a\u3055\u308c\u3001 VPC \u5185\u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002","title":"\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u4f7f\u3046\u306b\u306f\uff1f"},{"location":"ja/docs/developing/svc-to-svc-communication/#environment","text":"Copilot v1.9.0 \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306e\u540d\u524d\u7a7a\u9593\u306f Environment \u3092\u542b\u3081\u305a\u3001 {app name}.local \u3068\u3044\u3046\u5f62\u5f0f\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002 \u3053\u306e\u5236\u9650\u306b\u3088\u308a\u3001\u540c\u3058 VPC \u306b\u8907\u6570\u306e Envrionment \u3092\u30c7\u30d7\u30ed\u30a4\u51fa\u6765\u307e\u305b\u3093\u3067\u3057\u305f\u3002Copilot v1.9.0 \u4ee5\u964d\u3067\u4f5c\u6210\u3055\u308c\u305f Environment \u306f\u3001\u4ed6\u306e\u3069\u306e Environment \u3068\u3082 VPC \u3092\u5171\u6709\u3067\u304d\u307e\u3059\u3002 Envrionment \u3092\u66f4\u65b0\u3059\u308b\u3068\u3001Copilot \u306f Envrionment \u304c\u4f5c\u6210\u3055\u308c\u305f\u6642\u306e\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u540d\u524d\u7a7a\u9593\u3092\u5c0a\u91cd\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001 Service \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306f\u5909\u66f4\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002Copilot v1.9.0 \u4ee5\u964d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u4f5c\u6210\u3057\u305f\u65b0\u3057\u3044 Envrionment \u306f\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u306b {env name}.{app name}.local \u5f62\u5f0f\u3092\u5229\u7528\u3057\u3001\u53e4\u3044 Envrionment \u3068 VPC \u3092\u5171\u6709\u3067\u304d\u307e\u3059\u3002","title":"\u53e4\u3044 Environment \u3068 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea"},{"location":"ja/docs/developing/addons/environment/","text":"AWS CloudFormation \u306b\u3088\u308b Environment \u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0 CLI \u3067 \"Addon\" \u3068\u547c\u3070\u308c\u308b\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306f\u3001 Service \u307e\u305f\u306f Environment \u306e Manifest \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7d71\u5408\u3057\u306a\u3044\u3001\u4efb\u610f\u306e\u8ffd\u52a0\u306e AWS \u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 \u4f8b\u3048\u3070 Addon \u306f\u3001Service \u304c\u8aad\u307f\u53d6\u308a\u307e\u305f\u306f\u66f8\u304d\u8fbc\u307f\u3092\u5fc5\u8981\u3068\u3059\u308b DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001\u307e\u305f\u306f RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 ( Load Balanced Web Service \u3084 Scheduled Job \u306a\u3069) \u306e\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u308b\u3068\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u306f\u3001Environment \u306b\u5bfe\u3057\u3066\u8ffd\u52a0\u306e\u5171\u6709\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment Addon \u306f\u3001Environment \u304c\u524a\u9664\u3055\u308c\u306a\u3044\u9650\u308a\u3001\u524a\u9664\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001Environment \u30ec\u30d9\u30eb\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb Addon \u306b\u3064\u3044\u3066\u306f\u3001 AWS CloudFormation \u306b\u3088\u308b\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3069\u306e\u3088\u3046\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3001DDB \u30c6\u30fc\u30d6\u30eb\u3001Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304b\uff1f Copilot \u306b\u306f\u3001\u7279\u5b9a\u306e\u7a2e\u985e\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 storage init \u306f\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001\u307e\u305f\u306f Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u304b\u3089 copilot storage init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u3092\u30ac\u30a4\u30c9\u3057\u3066\u304f\u308c\u307e\u3059\u3002 \u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff1f \u4ed6\u306e\u7a2e\u985e\u306e Addon \u306b\u3064\u3044\u3066\u306f\u3001\u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30e0 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ab\u30b9\u30bf\u30e0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e copilot/environments/addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30c9\u30aa\u30f3\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c Environment \u30b9\u30bf\u30c3\u30af\u3068\u4e00\u7dd2\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 Environment Addon \u306b\u3088\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u4f8b . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 environments \u251c\u2500\u2500 addons # Environment Addon \u306e\u683c\u7d0d \u2502 \u2514\u2500\u2500 mys3.yaml \u251c\u2500\u2500 dev \u2514\u2500\u2500 prod Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\uff1f Environment Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u4ee5\u4e0b\u3092\u6e80\u305f\u3059 \u6709\u52b9\u306a CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u3067\u3042\u308c\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e Resource \u304c\u542b\u307e\u308c\u308b\u3002 Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b App \u3001 Env \u304c\u542b\u307e\u308c\u308b\u3002 \u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001 Conditions \u3084 Mappings \u3092\u4f7f\u3063\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Amazon IAM \u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5f93\u3063\u3066\u3001\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9\u306e AWS Managed Policies \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30dd\u30ea\u30b7\u30fc\u306b \u6700\u5c0f\u7279\u6a29\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u9069\u7528\u3057\u307e\u3059 \u3002 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u306e\u305f\u3081\u306e\u30dd\u30ea\u30b7\u30fc\u6761\u4ef6\u3092\u5229\u7528\u3057\u3066 \u3001 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u307f\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30dd\u30ea\u30b7\u30fc\u3092\u5236\u9650\u3057\u307e\u3059\u3002 Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9 Copilot \u3067\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 Parameters : App : Type : String Env : Type : String Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba Copilot \u304c\u5fc5\u8981\u3068\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u4ee5\u5916\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u3001 addons.parameters.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306e Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u3001\u8ffd\u52a0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 addons.parameters.yml \u306b\u3066\u3001\u3053\u308c\u3089\u306e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3001Environment \u30b9\u30bf\u30c3\u30af\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b: Addon \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba # \"environments/addons/my-addon.yml\" \u306b\u3066 Parameters : # AWS Copilot\u3067\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf App : Type : String Env : Type : String # addons.parameters.yml \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf ClusterName : Type : String # \"environments/addons/addons.parameters.yml\" \u306b\u3066 Parameters : ClusterName : !Ref Cluster Conditions \u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9 Addon \u30ea\u30bd\u30fc\u30b9\u3092\u7279\u5b9a\u306e\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001DB \u30ea\u30bd\u30fc\u30b9\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u304c\u672c\u756a\u74b0\u5883\u304b\u30c6\u30b9\u30c8\u74b0\u5883\u304b\u306b\u3088\u3063\u3066\u3001\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001 Conditions \u30bb\u30af\u30b7\u30e7\u30f3\u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: Addon \u3092\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a Mappings \u306e\u5229\u7528 Conditions \u306e\u5229\u7528 Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ] Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9 Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3001\u4f8b\u3048\u3070 Service\u3001CloudFormation \u30b9\u30bf\u30c3\u30af\u306a\u3069\u3067\u4f7f\u7528\u3067\u304d\u308b\u4efb\u610f\u306e\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment Addon: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u63a5\u7d9a\u3059\u308b Environment Addon \u304b\u3089\u306e\u5024\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u304b\u3089\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001\u307e\u305a Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066 Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b: Environment Addon \u304b\u3089\u306e\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 Outputs : MyTableARN : Value : !GetAtt ServiceTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN # \u3053\u306e\u5024\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u3088\u3063\u3066\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 MyTableName : Value : !Ref ServiceTable Export : Name : !Sub ${App}-${Env}-MyTableName Export \u30d6\u30ed\u30c3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002 \u305d\u3046\u3057\u306a\u3051\u308c\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30bf\u30c3\u30af\u3084\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u304c\u305d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u3001 Export.Name \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u691c\u8a0e\u4e8b\u9805: \u540d\u524d\u7a7a\u9593 Export.Name \u306e\u4f7f\u7528 Export.Name \u306b\u306f\u3001\u597d\u304d\u306a\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3064\u307e\u308a\u3001 !Sub ${App}-${Env} \u3068\u3044\u3046\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u5358\u306b MyTableName` \u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u3001AWS \u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u3067\u306f\u3001 Export.Name \u306f\u4e00\u610f\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u3064\u307e\u308a\u3001 us-east-1 \u306b MyTableName \u3068\u3044\u3046\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u3092\u91cd\u8907\u3057\u3066\u6301\u3064\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u540d\u524d\u885d\u7a81\u306e\u53ef\u80fd\u6027\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001 ${App} \u3068 ${Env} \u3067\u540d\u524d\u7a7a\u9593\u3092\u6307\u5b9a\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u307e\u305f\u3053\u308c\u306b\u3088\u308a\u3001\u305d\u306e\u5024\u304c\u3069\u306e Application \u3068 Environment \u306e\u4e0b\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304b\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002 \u540d\u524d\u7a7a\u9593\u3067\u306f\u3001\u4f8b\u3048\u3070 Application \u540d\u304c \"my-app\" \u3067\u3001Environment test \u3067 Addon \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3068\u3059\u308b\u3068\u3001\u6700\u7d42\u7684\u306a\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u306f my-app-test-MyTableName \u3068\u306a\u308a\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u304b\u3089\u306e\u53c2\u7167 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3067\u306f\u3001\u5024\u304c\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u9650\u308a\u3001Environment Addon \u304b\u3089\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001Environment Addon \u304b\u3089\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u3001\u305d\u306e\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u3067 Fn::ImportValue \u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: Environment \u30ec\u30d9\u30eb\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e IAM \u30dd\u30ea\u30b7\u30fc Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: \u5b9f\u969b\u306e Application \u3067\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u30b9\u30b3\u30fc\u30d7\u30c0\u30a6\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u3001\u3053\u306e\u4f8b\u304c\u3042\u307e\u308a\u9577\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3067\u3059\u3002 Resource : Fn::ImportValue : # <- Environment Addon \u304b\u3089\u30c6\u30fc\u30d6\u30eb ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8 !Sub ${App}-${Env}-MyTableARN # <- \u4f7f\u7528\u3059\u308b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u304b\u3089\u306e\u53c2\u7167 \u307e\u305f\u3001Environment Addon \u304b\u3089 variables \u3001 secrets \u3001 security_groups \u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3067\u3001\u305d\u306e\u5024\u304c\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u9650\u308a\u3001\u305d\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3067\u305d\u306e\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u3092\u6301\u3064 from_cfn \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: from_cfn \u306e\u4f7f\u7528 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30c8 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30a2\u30bf\u30c3\u30c1 name : db-front type : Backend Service secrets : MY_CLUSTER_CREDS : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterSecret name : db-front type : Backend Service security_groups : - from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterAllowedSecurityGroup \u4f8b Environment Addon \u306e\u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc v1.25.0 \u306e\u30d6\u30ed\u30b0\u8a18\u4e8b \u3067\u8a73\u3057\u3044\u89e3\u8aac\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Additional Environment Resources"},{"location":"ja/docs/developing/addons/environment/#aws-cloudformation-environment","text":"CLI \u3067 \"Addon\" \u3068\u547c\u3070\u308c\u308b\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306f\u3001 Service \u307e\u305f\u306f Environment \u306e Manifest \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7d71\u5408\u3057\u306a\u3044\u3001\u4efb\u610f\u306e\u8ffd\u52a0\u306e AWS \u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 \u4f8b\u3048\u3070 Addon \u306f\u3001Service \u304c\u8aad\u307f\u53d6\u308a\u307e\u305f\u306f\u66f8\u304d\u8fbc\u307f\u3092\u5fc5\u8981\u3068\u3059\u308b DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001\u307e\u305f\u306f RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 ( Load Balanced Web Service \u3084 Scheduled Job \u306a\u3069) \u306e\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u308b\u3068\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u306f\u3001Environment \u306b\u5bfe\u3057\u3066\u8ffd\u52a0\u306e\u5171\u6709\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment Addon \u306f\u3001Environment \u304c\u524a\u9664\u3055\u308c\u306a\u3044\u9650\u308a\u3001\u524a\u9664\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001Environment \u30ec\u30d9\u30eb\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb Addon \u306b\u3064\u3044\u3066\u306f\u3001 AWS CloudFormation \u306b\u3088\u308b\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS CloudFormation \u306b\u3088\u308b Environment \u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0"},{"location":"ja/docs/developing/addons/environment/#s3-ddb-aurora-serverless","text":"Copilot \u306b\u306f\u3001\u7279\u5b9a\u306e\u7a2e\u985e\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 storage init \u306f\u3001DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001\u307e\u305f\u306f Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u304b\u3089 copilot storage init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u3092\u30ac\u30a4\u30c9\u3057\u3066\u304f\u308c\u307e\u3059\u3002","title":"\u3069\u306e\u3088\u3046\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3001DDB \u30c6\u30fc\u30d6\u30eb\u3001Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304b\uff1f"},{"location":"ja/docs/developing/addons/environment/#_1","text":"\u4ed6\u306e\u7a2e\u985e\u306e Addon \u306b\u3064\u3044\u3066\u306f\u3001\u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30e0 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ab\u30b9\u30bf\u30e0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e copilot/environments/addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot env deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30c9\u30aa\u30f3\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c Environment \u30b9\u30bf\u30c3\u30af\u3068\u4e00\u7dd2\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 Environment Addon \u306b\u3088\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u4f8b . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 environments \u251c\u2500\u2500 addons # Environment Addon \u306e\u683c\u7d0d \u2502 \u2514\u2500\u2500 mys3.yaml \u251c\u2500\u2500 dev \u2514\u2500\u2500 prod","title":"\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff1f"},{"location":"ja/docs/developing/addons/environment/#addon","text":"Environment Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u4ee5\u4e0b\u3092\u6e80\u305f\u3059 \u6709\u52b9\u306a CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u3067\u3042\u308c\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e Resource \u304c\u542b\u307e\u308c\u308b\u3002 Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b App \u3001 Env \u304c\u542b\u307e\u308c\u308b\u3002 \u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001 Conditions \u3084 Mappings \u3092\u4f7f\u3063\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Amazon IAM \u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5f93\u3063\u3066\u3001\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9\u306e AWS Managed Policies \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30dd\u30ea\u30b7\u30fc\u306b \u6700\u5c0f\u7279\u6a29\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u9069\u7528\u3057\u307e\u3059 \u3002 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u306e\u305f\u3081\u306e\u30dd\u30ea\u30b7\u30fc\u6761\u4ef6\u3092\u5229\u7528\u3057\u3066 \u3001 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u307f\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30dd\u30ea\u30b7\u30fc\u3092\u5236\u9650\u3057\u307e\u3059\u3002","title":"Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\uff1f"},{"location":"ja/docs/developing/addons/environment/#parameters","text":"Copilot \u3067\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 Parameters : App : Type : String Env : Type : String","title":"Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9"},{"location":"ja/docs/developing/addons/environment/#parameters_1","text":"Copilot \u304c\u5fc5\u8981\u3068\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u4ee5\u5916\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u3001 addons.parameters.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306e Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u3001\u8ffd\u52a0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 addons.parameters.yml \u306b\u3066\u3001\u3053\u308c\u3089\u306e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3001Environment \u30b9\u30bf\u30c3\u30af\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b: Addon \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba # \"environments/addons/my-addon.yml\" \u306b\u3066 Parameters : # AWS Copilot\u3067\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf App : Type : String Env : Type : String # addons.parameters.yml \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf ClusterName : Type : String # \"environments/addons/addons.parameters.yml\" \u306b\u3066 Parameters : ClusterName : !Ref Cluster","title":"Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"ja/docs/developing/addons/environment/#conditions-mappings","text":"Addon \u30ea\u30bd\u30fc\u30b9\u3092\u7279\u5b9a\u306e\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001DB \u30ea\u30bd\u30fc\u30b9\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u304c\u672c\u756a\u74b0\u5883\u304b\u30c6\u30b9\u30c8\u74b0\u5883\u304b\u306b\u3088\u3063\u3066\u3001\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001 Conditions \u30bb\u30af\u30b7\u30e7\u30f3\u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: Addon \u3092\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a Mappings \u306e\u5229\u7528 Conditions \u306e\u5229\u7528 Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ]","title":"Conditions \u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9"},{"location":"ja/docs/developing/addons/environment/#outputs","text":"Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3001\u4f8b\u3048\u3070 Service\u3001CloudFormation \u30b9\u30bf\u30c3\u30af\u306a\u3069\u3067\u4f7f\u7528\u3067\u304d\u308b\u4efb\u610f\u306e\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9"},{"location":"ja/docs/developing/addons/environment/#environment-addon","text":"Environment Addon \u304b\u3089\u306e\u5024\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u304b\u3089\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001\u307e\u305a Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066 Environment Addon \u304b\u3089\u5024\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b: Environment Addon \u304b\u3089\u306e\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 Outputs : MyTableARN : Value : !GetAtt ServiceTable.Arn Export : Name : !Sub ${App}-${Env}-MyTableARN # \u3053\u306e\u5024\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u307e\u305f\u306f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u3088\u3063\u3066\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 MyTableName : Value : !Ref ServiceTable Export : Name : !Sub ${App}-${Env}-MyTableName Export \u30d6\u30ed\u30c3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002 \u305d\u3046\u3057\u306a\u3051\u308c\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30bf\u30c3\u30af\u3084\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u304c\u305d\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u3001 Export.Name \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u691c\u8a0e\u4e8b\u9805: \u540d\u524d\u7a7a\u9593 Export.Name \u306e\u4f7f\u7528 Export.Name \u306b\u306f\u3001\u597d\u304d\u306a\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3064\u307e\u308a\u3001 !Sub ${App}-${Env} \u3068\u3044\u3046\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u5358\u306b MyTableName` \u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u3001AWS \u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u3067\u306f\u3001 Export.Name \u306f\u4e00\u610f\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u3064\u307e\u308a\u3001 us-east-1 \u306b MyTableName \u3068\u3044\u3046\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u3092\u91cd\u8907\u3057\u3066\u6301\u3064\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u540d\u524d\u885d\u7a81\u306e\u53ef\u80fd\u6027\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001 ${App} \u3068 ${Env} \u3067\u540d\u524d\u7a7a\u9593\u3092\u6307\u5b9a\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u307e\u305f\u3053\u308c\u306b\u3088\u308a\u3001\u305d\u306e\u5024\u304c\u3069\u306e Application \u3068 Environment \u306e\u4e0b\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304b\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002 \u540d\u524d\u7a7a\u9593\u3067\u306f\u3001\u4f8b\u3048\u3070 Application \u540d\u304c \"my-app\" \u3067\u3001Environment test \u3067 Addon \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3068\u3059\u308b\u3068\u3001\u6700\u7d42\u7684\u306a\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u306f my-app-test-MyTableName \u3068\u306a\u308a\u307e\u3059\u3002","title":"Environment Addon: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u63a5\u7d9a\u3059\u308b"},{"location":"ja/docs/developing/addons/environment/#addon_1","text":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u3067\u306f\u3001\u5024\u304c\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u9650\u308a\u3001Environment Addon \u304b\u3089\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001Environment Addon \u304b\u3089\u5024\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u3001\u305d\u306e\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u3067 Fn::ImportValue \u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: Environment \u30ec\u30d9\u30eb\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e IAM \u30dd\u30ea\u30b7\u30fc Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : Description : Grants CRUD access to the Dynamo DB table PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:* # NOTE: \u5b9f\u969b\u306e Application \u3067\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u30b9\u30b3\u30fc\u30d7\u30c0\u30a6\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u3001\u3053\u306e\u4f8b\u304c\u3042\u307e\u308a\u9577\u304f\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3067\u3059\u3002 Resource : Fn::ImportValue : # <- Environment Addon \u304b\u3089\u30c6\u30fc\u30d6\u30eb ARN \u3092\u30a4\u30f3\u30dd\u30fc\u30c8 !Sub ${App}-${Env}-MyTableARN # <- \u4f7f\u7528\u3059\u308b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u304b\u3089\u306e\u53c2\u7167"},{"location":"ja/docs/developing/addons/environment/#manifest","text":"\u307e\u305f\u3001Environment Addon \u304b\u3089 variables \u3001 secrets \u3001 security_groups \u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3067\u3001\u305d\u306e\u5024\u304c\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u9650\u308a\u3001\u305d\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u3067\u305d\u306e\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u540d\u3092\u6301\u3064 from_cfn \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: from_cfn \u306e\u4f7f\u7528 \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30c8 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30a2\u30bf\u30c3\u30c1 name : db-front type : Backend Service secrets : MY_CLUSTER_CREDS : from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterSecret name : db-front type : Backend Service security_groups : - from_cfn : ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-MyClusterAllowedSecurityGroup","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Manifest \u304b\u3089\u306e\u53c2\u7167"},{"location":"ja/docs/developing/addons/environment/#_2","text":"","title":"\u4f8b"},{"location":"ja/docs/developing/addons/environment/#environment-addon_1","text":"v1.25.0 \u306e\u30d6\u30ed\u30b0\u8a18\u4e8b \u3067\u8a73\u3057\u3044\u89e3\u8aac\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Environment Addon \u306e\u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc"},{"location":"ja/docs/developing/addons/package/","text":"\u30ed\u30fc\u30ab\u30eb\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 \u3092 v1.21.0 \u306b\u3066\u8ffd\u52a0 Copilot \u306f\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u53c2\u7167\u3055\u308c\u308b\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001\u95a2\u9023\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f S3 \u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 copilot svc deploy \u307e\u305f\u306f copilot svc package --upload-assets \u3067\u306f\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c CloudFormation \u306b\u9001\u3089\u308c\u308b\u524d\u306b\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u7279\u5b9a\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3001S3 \u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002 \u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u306e\u5168\u30ea\u30b9\u30c8\u3092\u898b\u308b\u306b\u306f\u3001 AWS CLI documentation \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u6a5f\u80fd\u306f\u3001\u4ed6\u306e Copilot Service \u3068\u540c\u3058\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30ed\u30fc\u30ab\u30eb\u306e Lambda \u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001JavaScript \u306e Lambda \u95a2\u6570\u3092 Copilot Service \u3068\u4e00\u7dd2\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u30ea\u30bd\u30fc\u30b9\u3092 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Lambda \u95a2\u6570\u306e\u4f8b copilot/service-name/addons/lambda.yml lambdas/example/index.js ExampleFunction : Type : AWS::Lambda::Function Properties : Code : lambdas/example/ Handler : \"index.handler\" Timeout : 900 MemorySize : 512 Role : !GetAtt \"ExampleFunctionRole.Arn\" Runtime : nodejs20.x exports . handler = function ( event , context ) { console . log ( 'example event:' , event ); context . succeed ( 'success!' ); }; copilot svc deploy \u3067\u3001 lambdas/example \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c zip \u5727\u7e2e\u3055\u308c\u3066 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u3001 Code \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u4ee5\u4e0b\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002 Code : S3Bucket : copilotBucket S3Key : hashOfLambdasExampleZip Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c Copilot \u306b\u3088\u3063\u3066\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u524d\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002 \u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u76f4\u63a5 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u6216\u3044\u306f\u7279\u5b9a\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30d5\u30a9\u30eb\u30c0\u3092 zip \u3067\u5727\u7e2e\u3057\u3066\u304b\u3089 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 zip \u304c\u5fc5\u8981\u306a\u4e00\u90e8\u306e\u30ea\u30bd\u30fc\u30b9 ( AWS::Serverless::Function \u306a\u3069) \u3067\u306f\u3001\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u524d\u306b\u30d5\u30a1\u30a4\u30eb\u3082 zip \u3067\u5727\u7e2e\u3055\u308c\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306e copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u89aa\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u4f8b\u306e\u5834\u5408\u3001\u30d5\u30a9\u30eb\u30c0\u30fc\u69cb\u9020\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 . \u251c\u2500\u2500 copilot \u2502 \u2514\u2500\u2500 example-service \u2502 \u251c\u2500\u2500 addons \u2502 \u2502 \u2514\u2500\u2500 lambda.yml \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 lambdas \u2514\u2500\u2500 example \u2514\u2500\u2500 index.js \u7d76\u5bfe\u30d1\u30b9\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u8907\u6570\u306e\u30de\u30b7\u30f3\u306b\u8de8\u3063\u3066\u4e0a\u624b\u304f\u6a5f\u80fd\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b: DynamoDB \u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u51e6\u7406\u3059\u308b Lambda \u3053\u306e\u4f8b\u3067\u306f\u3001 Amazon DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001 \u30c6\u30fc\u30d6\u30eb\u306e\u30b9\u30c8\u30ea\u30fc\u30e0 \u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b Lambda \u95a2\u6570\u3092\u63a5\u7d9a\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 \u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3001\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u969b\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u3092\u6700\u5c0f\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b Service \u304c\u3042\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u304c\u3001\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u5225\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u30ad\u30c3\u30af\u30aa\u30d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u524d\u63d0\u6761\u4ef6 \u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Copilot Service \u624b\u9806 copilot storage init \u3092\u5b9f\u884c\u3057\u3066\u3001Service \u7528\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb Addon \u3092\u751f\u6210\u3057\u307e\u3059\u3002(\u8a73\u7d30\u306f \u3053\u3061\u3089 ) \u751f\u6210\u3055\u308c\u305f AWS::DynamoDB::Table \u30ea\u30bd\u30fc\u30b9\u306b StreamSpecification \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 copilot/service-name/addons/ddb.yml StreamSpecification : StreamViewType : NEW_AND_OLD_IMAGES Lambda \u95a2\u6570\u3001IAM Role\u3001Lambda \u30a4\u30d9\u30f3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u30de\u30c3\u30d4\u30f3\u30b0\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u3001IAM \u30ed\u30fc\u30eb\u306b\u3066 DynamoDB \u30c6\u30fc\u30d6\u30eb\u30b9\u30c8\u30ea\u30fc\u30e0\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002 copilot/service-name/addons/ddb.yml recordProcessor : Type : AWS::Lambda::Function Properties : Code : lambdas/record-processor/ # \u30ec\u30b3\u30fc\u30c9\u51e6\u7406\u3059\u308b Lambda \u306e\u30ed\u30fc\u30ab\u30eb\u30d1\u30b9 Handler : \"index.handler\" Timeout : 60 MemorySize : 512 Role : !GetAtt \"recordProcessorRole.Arn\" Runtime : nodejs20.x recordProcessorRole : Type : AWS::IAM::Role Properties : AssumeRolePolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Principal : Service : - lambda.amazonaws.com Action : - sts:AssumeRole Path : / ManagedPolicyArns : - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole Policies : - PolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Action : - dynamodb:DescribeStream - dynamodb:GetRecords - dynamodb:GetShardIterator - dynamodb:ListStreams # <table> \u3092\u751f\u6210\u3055\u308c\u305f\u30c6\u30fc\u30d6\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u540d\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002 Resource : !Sub ${<table>.Arn}/stream/* tableStreamMappingToRecordProcessor : Type : AWS::Lambda::EventSourceMapping Properties : FunctionName : !Ref recordProcessor EventSourceArn : !GetAtt <table>.StreamArn # \u3053\u3053\u3082 <table> \u3092\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002 BatchSize : 1 StartingPosition : LATEST Lambda \u95a2\u6570\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002 lambdas/record-processor/index.js \"use strict\" ; const AWS = require ( 'aws-sdk' ); exports . handler = async function ( event , context ) { for ( const record of event ? . Records ) { if ( record ? . eventName != \"INSERT\" ) { continue ; } // process new records const item = AWS . DynamoDB . Converter . unmarshall ( record ? . dynamodb ? . NewImage ); console . log ( \"processing item\" , item ); } }; copilot svc deploy \u3092\u5b9f\u884c\u3057\u3066\u3001Lambda \u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059!\ud83c\udf89 Service \u304c\u30c6\u30fc\u30d6\u30eb\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001Lambda \u95a2\u6570\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u3001\u65b0\u3057\u3044\u30ec\u30b3\u30fc\u30c9\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Uploading Local Artifacts"},{"location":"ja/docs/developing/addons/package/#v1210","text":"Copilot \u306f\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u53c2\u7167\u3055\u308c\u308b\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3092 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001\u95a2\u9023\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f S3 \u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 copilot svc deploy \u307e\u305f\u306f copilot svc package --upload-assets \u3067\u306f\u3001Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c CloudFormation \u306b\u9001\u3089\u308c\u308b\u524d\u306b\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u7279\u5b9a\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3001S3 \u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002 \u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u306e\u5168\u30ea\u30b9\u30c8\u3092\u898b\u308b\u306b\u306f\u3001 AWS CLI documentation \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u6a5f\u80fd\u306f\u3001\u4ed6\u306e Copilot Service \u3068\u540c\u3058\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30ed\u30fc\u30ab\u30eb\u306e Lambda \u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001JavaScript \u306e Lambda \u95a2\u6570\u3092 Copilot Service \u3068\u4e00\u7dd2\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u30ea\u30bd\u30fc\u30b9\u3092 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Lambda \u95a2\u6570\u306e\u4f8b copilot/service-name/addons/lambda.yml lambdas/example/index.js ExampleFunction : Type : AWS::Lambda::Function Properties : Code : lambdas/example/ Handler : \"index.handler\" Timeout : 900 MemorySize : 512 Role : !GetAtt \"ExampleFunctionRole.Arn\" Runtime : nodejs20.x exports . handler = function ( event , context ) { console . log ( 'example event:' , event ); context . succeed ( 'success!' ); }; copilot svc deploy \u3067\u3001 lambdas/example \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c zip \u5727\u7e2e\u3055\u308c\u3066 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u3001 Code \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u4ee5\u4e0b\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002 Code : S3Bucket : copilotBucket S3Key : hashOfLambdasExampleZip Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c Copilot \u306b\u3088\u3063\u3066\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u3001\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u524d\u306b\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002 \u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u76f4\u63a5 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \u6216\u3044\u306f\u7279\u5b9a\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30d5\u30a9\u30eb\u30c0\u3092 zip \u3067\u5727\u7e2e\u3057\u3066\u304b\u3089 S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002 zip \u304c\u5fc5\u8981\u306a\u4e00\u90e8\u306e\u30ea\u30bd\u30fc\u30b9 ( AWS::Serverless::Function \u306a\u3069) \u3067\u306f\u3001\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u524d\u306b\u30d5\u30a1\u30a4\u30eb\u3082 zip \u3067\u5727\u7e2e\u3055\u308c\u307e\u3059\u3002 \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306e copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u89aa\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u4f8b\u306e\u5834\u5408\u3001\u30d5\u30a9\u30eb\u30c0\u30fc\u69cb\u9020\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 . \u251c\u2500\u2500 copilot \u2502 \u2514\u2500\u2500 example-service \u2502 \u251c\u2500\u2500 addons \u2502 \u2502 \u2514\u2500\u2500 lambda.yml \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 lambdas \u2514\u2500\u2500 example \u2514\u2500\u2500 index.js \u7d76\u5bfe\u30d1\u30b9\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u8907\u6570\u306e\u30de\u30b7\u30f3\u306b\u8de8\u3063\u3066\u4e0a\u624b\u304f\u6a5f\u80fd\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002","title":"\u30ed\u30fc\u30ab\u30eb\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 \u3092 v1.21.0 \u306b\u3066\u8ffd\u52a0"},{"location":"ja/docs/developing/addons/package/#dynamodb-lambda","text":"\u3053\u306e\u4f8b\u3067\u306f\u3001 Amazon DynamoDB \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001 \u30c6\u30fc\u30d6\u30eb\u306e\u30b9\u30c8\u30ea\u30fc\u30e0 \u304b\u3089\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b Lambda \u95a2\u6570\u3092\u63a5\u7d9a\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 \u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3001\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u969b\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u3092\u6700\u5c0f\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b Service \u304c\u3042\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u304c\u3001\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u5225\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u30ad\u30c3\u30af\u30aa\u30d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u4f8b: DynamoDB \u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u51e6\u7406\u3059\u308b Lambda"},{"location":"ja/docs/developing/addons/package/#_1","text":"\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Copilot Service","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"ja/docs/developing/addons/package/#_2","text":"copilot storage init \u3092\u5b9f\u884c\u3057\u3066\u3001Service \u7528\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb Addon \u3092\u751f\u6210\u3057\u307e\u3059\u3002(\u8a73\u7d30\u306f \u3053\u3061\u3089 ) \u751f\u6210\u3055\u308c\u305f AWS::DynamoDB::Table \u30ea\u30bd\u30fc\u30b9\u306b StreamSpecification \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 copilot/service-name/addons/ddb.yml StreamSpecification : StreamViewType : NEW_AND_OLD_IMAGES Lambda \u95a2\u6570\u3001IAM Role\u3001Lambda \u30a4\u30d9\u30f3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u30de\u30c3\u30d4\u30f3\u30b0\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u3001IAM \u30ed\u30fc\u30eb\u306b\u3066 DynamoDB \u30c6\u30fc\u30d6\u30eb\u30b9\u30c8\u30ea\u30fc\u30e0\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002 copilot/service-name/addons/ddb.yml recordProcessor : Type : AWS::Lambda::Function Properties : Code : lambdas/record-processor/ # \u30ec\u30b3\u30fc\u30c9\u51e6\u7406\u3059\u308b Lambda \u306e\u30ed\u30fc\u30ab\u30eb\u30d1\u30b9 Handler : \"index.handler\" Timeout : 60 MemorySize : 512 Role : !GetAtt \"recordProcessorRole.Arn\" Runtime : nodejs20.x recordProcessorRole : Type : AWS::IAM::Role Properties : AssumeRolePolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Principal : Service : - lambda.amazonaws.com Action : - sts:AssumeRole Path : / ManagedPolicyArns : - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole Policies : - PolicyDocument : Version : 2012-10-17 Statement : - Effect : Allow Action : - dynamodb:DescribeStream - dynamodb:GetRecords - dynamodb:GetShardIterator - dynamodb:ListStreams # <table> \u3092\u751f\u6210\u3055\u308c\u305f\u30c6\u30fc\u30d6\u30eb\u306e\u30ea\u30bd\u30fc\u30b9\u540d\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002 Resource : !Sub ${<table>.Arn}/stream/* tableStreamMappingToRecordProcessor : Type : AWS::Lambda::EventSourceMapping Properties : FunctionName : !Ref recordProcessor EventSourceArn : !GetAtt <table>.StreamArn # \u3053\u3053\u3082 <table> \u3092\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002 BatchSize : 1 StartingPosition : LATEST Lambda \u95a2\u6570\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002 lambdas/record-processor/index.js \"use strict\" ; const AWS = require ( 'aws-sdk' ); exports . handler = async function ( event , context ) { for ( const record of event ? . Records ) { if ( record ? . eventName != \"INSERT\" ) { continue ; } // process new records const item = AWS . DynamoDB . Converter . unmarshall ( record ? . dynamodb ? . NewImage ); console . log ( \"processing item\" , item ); } }; copilot svc deploy \u3092\u5b9f\u884c\u3057\u3066\u3001Lambda \u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059!\ud83c\udf89 Service \u304c\u30c6\u30fc\u30d6\u30eb\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001Lambda \u95a2\u6570\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u3001\u65b0\u3057\u3044\u30ec\u30b3\u30fc\u30c9\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u624b\u9806"},{"location":"ja/docs/developing/addons/workload/","text":"AWS CloudFormation \u306b\u3088\u308b\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0 CLI \u3067 \"Addon\" \u3068\u547c\u3070\u308c\u308b\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306f\u3001 Service \u307e\u305f\u306f Environment \u306e Manifest \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7d71\u5408\u3057\u306a\u3044\u3001\u4efb\u610f\u306e\u8ffd\u52a0\u306e AWS \u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 \u4f8b\u3048\u3070 Addon \u306f\u3001Service \u304c\u8aad\u307f\u53d6\u308a\u307e\u305f\u306f\u66f8\u304d\u8fbc\u307f\u3092\u5fc5\u8981\u3068\u3059\u308b DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001\u307e\u305f\u306f RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9 ( Load Balanced Web Service \u3084 Scheduled Job \u306a\u3069) \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u308b\u3068\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u306f\u3001Environment \u306b\u5bfe\u3057\u3066\u8ffd\u52a0\u306e\u5171\u6709\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment Addon \u306f\u3001Environment \u304c\u524a\u9664\u3055\u308c\u306a\u3044\u9650\u308a\u3001\u524a\u9664\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 Environment \u30ec\u30d9\u30eb Addon \u306b\u3064\u3044\u3066\u306f\u3001 AWS CloudFormation \u306b\u3088\u308b Environment \u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3069\u306e\u3088\u3046\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3001DDB \u30c6\u30fc\u30d6\u30eb\u3001Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304b\uff1f Copilot \u3067\u306f\u3001\u7279\u5b9a\u306e\u7a2e\u985e\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 storage init \u306f DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u306e\u3044\u305a\u308c\u304b\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u3066 copilot storage init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u305f\u3081\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u5f62\u5f0f\u3067\u30ac\u30a4\u30c9\u3057\u3066\u884c\u304d\u307e\u3059\u3002 \u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff1f \u4ed6\u306e\u7a2e\u985e\u306e Addon \u306b\u3064\u3044\u3066\u306f\u3001\u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30e0 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ab\u30b9\u30bf\u30e0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e copilot/<workload>/addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot [svc/job] deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30c9\u30aa\u30f3\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30bf\u30c3\u30af\u3068\u4e00\u7dd2\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u3088\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u4f8b . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 webhook \u251c\u2500\u2500 addons # Service \"webhook\" \u306b\u95a2\u9023\u3059\u308b Addon \u306e\u683c\u7d0d \u2502 \u2514\u2500\u2500 mytable-ddb.yaml \u2514\u2500\u2500 manifest.yaml Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\uff1f \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u4ee5\u4e0b\u3092\u6e80\u305f\u3059 \u6709\u52b9\u306a CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u3067\u3042\u308c\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e Resource \u304c\u542b\u307e\u308c\u308b\u3002 Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b App \u3001 Env \u3001 Name \u304c\u542b\u307e\u308c\u308b\u3002 \u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001 Conditions \u3084 Mappings \u3092\u4f7f\u3063\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Amazon IAM \u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5f93\u3063\u3066\u3001\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9\u306e AWS Managed Policies \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30dd\u30ea\u30b7\u30fc\u306b \u6700\u5c0f\u7279\u6a29\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u9069\u7528\u3057\u307e\u3059 \u3002 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u306e\u305f\u3081\u306e\u30dd\u30ea\u30b7\u30fc\u6761\u4ef6\u3092\u5229\u7528\u3057\u3066 \u3001 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u307f\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30dd\u30ea\u30b7\u30fc\u3092\u5236\u9650\u3057\u307e\u3059\u3002 Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9 Copilot \u3067\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 Parameters : App : Type : String Env : Type : String Name : Type : String Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba Copilot \u304c\u5fc5\u8981\u3068\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u4ee5\u5916\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u3001 addons.parameters.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306e Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u3001\u8ffd\u52a0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 addons.parameters.yml \u306b\u3066\u3001\u3053\u308c\u3089\u306e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30bf\u30c3\u30af\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b: Addon \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba # \"webhook/addons/my-addon.yml\" \u306b\u3066 Parameters : # AWS Copilot\u3067\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf App : Type : String Env : Type : String Name : Type : String # addons.parameters.yml \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf ServiceName : Type : String # \"webhook/addons/addons.parameters.yml\" \u306b\u3066 Parameters : ServiceName : !GetAtt Service.Name Conditions \u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9 Addon \u30ea\u30bd\u30fc\u30b9\u3092\u7279\u5b9a\u306e\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001DB \u30ea\u30bd\u30fc\u30b9\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u304c\u672c\u756a\u74b0\u5883\u304b\u30c6\u30b9\u30c8\u74b0\u5883\u304b\u306b\u3088\u3063\u3066\u3001\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001 Conditions \u30bb\u30af\u30b7\u30e7\u30f3\u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: Addon \u3092\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a Mappings \u306e\u5229\u7528 Conditions \u306e\u5229\u7528 Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ] Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9 Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3001\u4f8b\u3048\u3070 Service\u3001CloudFormation \u30b9\u30bf\u30c3\u30af\u306a\u3069\u3067\u4f7f\u7528\u3067\u304d\u308b\u4efb\u610f\u306e\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u63a5\u7d9a\u3059\u308b ECS \u30bf\u30b9\u30af\u307e\u305f\u306f App Runner \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089 Addon Resources \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u306f\u3001\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3084 App Runner \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u306b\u8ffd\u52a0\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u8ffd\u52a0\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u4fdd\u6301\u3059\u308b IAM ManagedPolicy Addon \u30ea\u30bd\u30fc\u30b9\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3092 \u51fa\u529b \u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f\u3001\u30bf\u30b9\u30af\u307e\u305f\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u307e\u3059\u3002 ECS \u30b5\u30fc\u30d3\u30b9\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067 Security Group \u3092\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3092 \u51fa\u529b \u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u3001\u81ea\u52d5\u7684\u306b ECS \u30b5\u30fc\u30d3\u30b9\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u307e\u3059\u3002 ECS \u30bf\u30b9\u30af\u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u6ce8\u5165\u3057\u305f\u3044\u5834\u5408\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067 Secret \u3092\u5b9a\u7fa9\u3057\u3001 \u51fa\u529b \u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Secret \u306f\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u3001\u5927\u6587\u5b57\u306e SNAKE_CASE \u3067\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3082\u3057\u3001\u4efb\u610f\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u5024\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6ce8\u5165\u3057\u305f\u3044\u5834\u5408\u306f\u3001ECS \u30bf\u30b9\u30af\u306b \u51fa\u529b \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u3001\u5927\u6587\u5b57\u306e SNAKE_CASE \u3067\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u4f8b DynamoDB \u30c6\u30fc\u30d6\u30eb\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb Addon \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4f8b\u3067\u3059\u3002 # \u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3044\u305a\u308c\u304b\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u6761\u4ef6\u3084\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : # AWS::DynamoDB::Table \u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u3053\u3053\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002 # MyTable: # Type: AWS::DynamoDB::Table # Properties: # ... # 1. \u30ea\u30bd\u30fc\u30b9\u306b\u52a0\u3048\u3066\u3001ECS \u30bf\u30b9\u30af\u304b\u3089\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3 # \u3092\u4fdd\u6301\u3059\u308b AWS::IAM::ManagedPolicy \u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 # # \u4ee5\u4e0b\u306f MyTable \u306e\u30dd\u30ea\u30b7\u30fc\u306e\u4f8b\u3067\u3059\u3002 MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:BatchGet* - dynamodb:DescribeStream - dynamodb:DescribeTable - dynamodb:Get* - dynamodb:Query - dynamodb:Scan - dynamodb:BatchWrite* - dynamodb:Create* - dynamodb:Delete* - dynamodb:Update* - dynamodb:PutItem Resource : !Sub ${ MyTable.Arn} Outputs : # 1. IAM ManagedPolicy \u3092\u51fa\u529b\u3057\u3066\u3001Copilot \u304c ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u30de\u30cd\u30fc\u30b8\u30c9\u30dd\u30ea\u30b7\u30fc\u3068\u3057\u3066\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 MyTableAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref MyTableAccessPolicy # 2. \u3082\u3057\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066 ECS \u30bf\u30b9\u30af\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u51fa\u529b\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 # # \u4f8b\u3068\u3057\u3066\u3001\u51fa\u529b\u3055\u308c\u305f MyTableName \u306f MY_TABLE_NAME \u3068\u3044\u3046\u5927\u6587\u5b57\u306e\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u3067\u30bf\u30b9\u30af\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u307e\u3059\u3002 MyTableName : Description : \"The name of this DynamoDB.\" Value : !Ref MyTable","title":"Additional Workload Resources"},{"location":"ja/docs/developing/addons/workload/#aws-cloudformation","text":"CLI \u3067 \"Addon\" \u3068\u547c\u3070\u308c\u308b\u8ffd\u52a0\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306f\u3001 Service \u307e\u305f\u306f Environment \u306e Manifest \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7d71\u5408\u3057\u306a\u3044\u3001\u4efb\u610f\u306e\u8ffd\u52a0\u306e AWS \u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 \u4f8b\u3048\u3070 Addon \u306f\u3001Service \u304c\u8aad\u307f\u53d6\u308a\u307e\u305f\u306f\u66f8\u304d\u8fbc\u307f\u3092\u5fc5\u8981\u3068\u3059\u308b DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001\u307e\u305f\u306f RDS Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9 ( Load Balanced Web Service \u3084 Scheduled Job \u306a\u3069) \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e Addon \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u308b\u3068\u524a\u9664\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u306f\u3001Environment \u306b\u5bfe\u3057\u3066\u8ffd\u52a0\u306e\u5171\u6709\u53ef\u80fd\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Environment Addon \u306f\u3001Environment \u304c\u524a\u9664\u3055\u308c\u306a\u3044\u9650\u308a\u3001\u524a\u9664\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 Environment \u30ec\u30d9\u30eb Addon \u306b\u3064\u3044\u3066\u306f\u3001 AWS CloudFormation \u306b\u3088\u308b Environment \u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"AWS CloudFormation \u306b\u3088\u308b\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ea\u30bd\u30fc\u30b9\u8ffd\u52a0\u30e2\u30c7\u30ea\u30f3\u30b0"},{"location":"ja/docs/developing/addons/workload/#s3-ddb-aurora-serverless","text":"Copilot \u3067\u306f\u3001\u7279\u5b9a\u306e\u7a2e\u985e\u306e Addon \u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 storage init \u306f DynamoDB \u30c6\u30fc\u30d6\u30eb\u3001S3 \u30d0\u30b1\u30c3\u30c8\u3001Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u306e\u3044\u305a\u308c\u304b\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u3066 copilot storage init \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u3053\u308c\u3089\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u305f\u3081\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u5f62\u5f0f\u3067\u30ac\u30a4\u30c9\u3057\u3066\u884c\u304d\u307e\u3059\u3002","title":"\u3069\u306e\u3088\u3046\u306b S3 \u30d0\u30b1\u30c3\u30c8\u3001DDB \u30c6\u30fc\u30d6\u30eb\u3001Aurora Serverless \u30af\u30e9\u30b9\u30bf\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306e\u304b\uff1f"},{"location":"ja/docs/developing/addons/workload/#_1","text":"\u4ed6\u306e\u7a2e\u985e\u306e Addon \u306b\u3064\u3044\u3066\u306f\u3001\u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30e0 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30ab\u30b9\u30bf\u30e0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e copilot/<workload>/addons \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 copilot [svc/job] deploy \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30c9\u30aa\u30f3\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30bf\u30c3\u30af\u3068\u4e00\u7dd2\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u306b\u3088\u308b\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u4f8b . \u2514\u2500\u2500 copilot \u2514\u2500\u2500 webhook \u251c\u2500\u2500 addons # Service \"webhook\" \u306b\u95a2\u9023\u3059\u308b Addon \u306e\u683c\u7d0d \u2502 \u2514\u2500\u2500 mytable-ddb.yaml \u2514\u2500\u2500 manifest.yaml","title":"\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff1f"},{"location":"ja/docs/developing/addons/workload/#addon","text":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u4ee5\u4e0b\u3092\u6e80\u305f\u3059 \u6709\u52b9\u306a CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u3067\u3042\u308c\u3070\u3001\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u306e Resource \u304c\u542b\u307e\u308c\u308b\u3002 Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b App \u3001 Env \u3001 Name \u304c\u542b\u307e\u308c\u308b\u3002 \u30ea\u30bd\u30fc\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001 Conditions \u3084 Mappings \u3092\u4f7f\u3063\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Amazon IAM \u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9 \u306b\u5f93\u3063\u3066\u3001\u8ffd\u52a0\u30ea\u30bd\u30fc\u30b9\u306e AWS Managed Policies \u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30dd\u30ea\u30b7\u30fc\u306b \u6700\u5c0f\u7279\u6a29\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u9069\u7528\u3057\u307e\u3059 \u3002 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u306e\u305f\u3081\u306e\u30dd\u30ea\u30b7\u30fc\u6761\u4ef6\u3092\u5229\u7528\u3057\u3066 \u3001 addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u307f\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30dd\u30ea\u30b7\u30fc\u3092\u5236\u9650\u3057\u307e\u3059\u3002","title":"Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\uff1f"},{"location":"ja/docs/developing/addons/workload/#parameters","text":"Copilot \u3067\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 Parameters : App : Type : String Env : Type : String Name : Type : String","title":"Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9"},{"location":"ja/docs/developing/addons/workload/#parameters_1","text":"Copilot \u304c\u5fc5\u8981\u3068\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u4ee5\u5916\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u3001 addons.parameters.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 . \u2514\u2500\u2500 addons/ \u251c\u2500\u2500 template.yml \u2514\u2500\u2500 addons.parameters.yml # \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f addons/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306e Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u3001\u8ffd\u52a0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 addons.parameters.yml \u306b\u3066\u3001\u3053\u308c\u3089\u306e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b9\u30bf\u30c3\u30af\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f8b: Addon \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba # \"webhook/addons/my-addon.yml\" \u306b\u3066 Parameters : # AWS Copilot\u3067\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf App : Type : String Env : Type : String Name : Type : String # addons.parameters.yml \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf ServiceName : Type : String # \"webhook/addons/addons.parameters.yml\" \u306b\u3066 Parameters : ServiceName : !GetAtt Service.Name","title":"Parameters \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba"},{"location":"ja/docs/developing/addons/workload/#conditions-mappings","text":"Addon \u30ea\u30bd\u30fc\u30b9\u3092\u7279\u5b9a\u306e\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001DB \u30ea\u30bd\u30fc\u30b9\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u3001\u30c7\u30d7\u30ed\u30a4\u5148\u304c\u672c\u756a\u74b0\u5883\u304b\u30c6\u30b9\u30c8\u74b0\u5883\u304b\u306b\u3088\u3063\u3066\u3001\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001 Conditions \u30bb\u30af\u30b7\u30e7\u30f3\u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u4f8b: Addon \u3092\u6761\u4ef6\u4ed8\u304d\u3067\u8a2d\u5b9a Mappings \u306e\u5229\u7528 Conditions \u306e\u5229\u7528 Mappings : MyAuroraServerlessEnvScalingConfigurationMap : dev : \"DBMinCapacity\" : 0.5 \"DBMaxCapacity\" : 8 test : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 32 prod : \"DBMinCapacity\" : 1 \"DBMaxCapacity\" : 64 Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMinCapacity MaxCapacity : !FindInMap - MyAuroraServerlessEnvScalingConfigurationMap - !Ref Env - DBMaxCapacity Conditions : IsProd : !Equals [ !Ref Env , \"prod\" ] Resources : MyCluster : Type : AWS::RDS::DBCluster Properties : ScalingConfiguration : MinCapacity : !If [ IsProd , 1 , 0.5 ] MaxCapacity : !If [ IsProd , 8 , 64 ]","title":"Conditions \u3068 Mappings \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9"},{"location":"ja/docs/developing/addons/workload/#outputs","text":"Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3001\u4f8b\u3048\u3070 Service\u3001CloudFormation \u30b9\u30bf\u30c3\u30af\u306a\u3069\u3067\u4f7f\u7528\u3067\u304d\u308b\u4efb\u610f\u306e\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Outputs \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u66f8\u304d\u65b9"},{"location":"ja/docs/developing/addons/workload/#addon_1","text":"ECS \u30bf\u30b9\u30af\u307e\u305f\u306f App Runner \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089 Addon Resources \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u306f\u3001\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u3084 App Runner \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u306b\u8ffd\u52a0\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u8ffd\u52a0\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u4fdd\u6301\u3059\u308b IAM ManagedPolicy Addon \u30ea\u30bd\u30fc\u30b9\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3092 \u51fa\u529b \u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f\u3001\u30bf\u30b9\u30af\u307e\u305f\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30ed\u30fc\u30eb\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u307e\u3059\u3002 ECS \u30b5\u30fc\u30d3\u30b9\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067 Security Group \u3092\u5b9a\u7fa9\u3057\u3001\u305d\u308c\u3092 \u51fa\u529b \u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u3001\u81ea\u52d5\u7684\u306b ECS \u30b5\u30fc\u30d3\u30b9\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u307e\u3059\u3002 ECS \u30bf\u30b9\u30af\u306b\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u6ce8\u5165\u3057\u305f\u3044\u5834\u5408\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067 Secret \u3092\u5b9a\u7fa9\u3057\u3001 \u51fa\u529b \u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Secret \u306f\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u3001\u5927\u6587\u5b57\u306e SNAKE_CASE \u3067\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3082\u3057\u3001\u4efb\u610f\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u5024\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6ce8\u5165\u3057\u305f\u3044\u5834\u5408\u306f\u3001ECS \u30bf\u30b9\u30af\u306b \u51fa\u529b \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u3001\u5927\u6587\u5b57\u306e SNAKE_CASE \u3067\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon: \u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u63a5\u7d9a\u3059\u308b"},{"location":"ja/docs/developing/addons/workload/#_2","text":"","title":"\u4f8b"},{"location":"ja/docs/developing/addons/workload/#dynamodb-addon","text":"\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30ec\u30d9\u30eb\u306e DynamoDB \u30c6\u30fc\u30d6\u30eb Addon \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4f8b\u3067\u3059\u3002 # \u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3044\u305a\u308c\u304b\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u6761\u4ef6\u3084\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Parameters : App : Type : String Description : Your application's name. Env : Type : String Description : The environment name your service, job, or workflow is being deployed to. Name : Type : String Description : Your workload's name. Resources : # AWS::DynamoDB::Table \u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u3053\u3053\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002 # MyTable: # Type: AWS::DynamoDB::Table # Properties: # ... # 1. \u30ea\u30bd\u30fc\u30b9\u306b\u52a0\u3048\u3066\u3001ECS \u30bf\u30b9\u30af\u304b\u3089\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3 # \u3092\u4fdd\u6301\u3059\u308b AWS::IAM::ManagedPolicy \u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 # # \u4ee5\u4e0b\u306f MyTable \u306e\u30dd\u30ea\u30b7\u30fc\u306e\u4f8b\u3067\u3059\u3002 MyTableAccessPolicy : Type : AWS::IAM::ManagedPolicy Properties : PolicyDocument : Version : '2012-10-17' Statement : - Sid : DDBActions Effect : Allow Action : - dynamodb:BatchGet* - dynamodb:DescribeStream - dynamodb:DescribeTable - dynamodb:Get* - dynamodb:Query - dynamodb:Scan - dynamodb:BatchWrite* - dynamodb:Create* - dynamodb:Delete* - dynamodb:Update* - dynamodb:PutItem Resource : !Sub ${ MyTable.Arn} Outputs : # 1. IAM ManagedPolicy \u3092\u51fa\u529b\u3057\u3066\u3001Copilot \u304c ECS \u30bf\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u30de\u30cd\u30fc\u30b8\u30c9\u30dd\u30ea\u30b7\u30fc\u3068\u3057\u3066\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 MyTableAccessPolicyArn : Description : \"The ARN of the ManagedPolicy to attach to the task role.\" Value : !Ref MyTableAccessPolicy # 2. \u3082\u3057\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u74b0\u5883\u5909\u6570\u3068\u3057\u3066 ECS \u30bf\u30b9\u30af\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u51fa\u529b\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 # # \u4f8b\u3068\u3057\u3066\u3001\u51fa\u529b\u3055\u308c\u305f MyTableName \u306f MY_TABLE_NAME \u3068\u3044\u3046\u5927\u6587\u5b57\u306e\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u3067\u30bf\u30b9\u30af\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u307e\u3059\u3002 MyTableName : Description : \"The name of this DynamoDB.\" Value : !Ref MyTable","title":"DynamoDB \u30c6\u30fc\u30d6\u30eb\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9 Addon \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8"},{"location":"ja/docs/developing/overrides/cdk/","text":"CDK \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 Attention CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3067\u3042\u308a\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u6b63\u5e38\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u306a\u3044\u539f\u56e0\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u610f\u3057\u3066\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff01 Copilot \u306f Manifest \u3067\u6307\u5b9a\u3057\u305f\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u4e00\u65b9\u3067\u3001 Manifest \u3067\u306f\u3001\u5168\u3066\u306e CloudFormation \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u53ef\u80fd\u3068\u306a\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u3002 \u4f8b\u3048\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b3\u30f3\u30c6\u30ca\u306e\u305f\u3081\u306b\u3001 Ulimits \u3092 \u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f Manifest \u3067\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 yamlpatch \u3084 cdk \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u306f\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e_\u4efb\u610f_\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u3067\u304d\u307e\u3059\u3002 YAML \u30d1\u30c3\u30c1\u3088\u308a\u3082 CDK \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306f\u3069\u306e\u69d8\u306a\u5834\u5408\u3067\u3059\u304b\uff1f \u3069\u3061\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3082 Copilot Manifest \u306b\u3088\u3063\u3066\u8868\u9762\u5316\u3055\u308c\u306a\u3044\u6a5f\u80fd\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3044\u3046\"\u30ac\u30e9\u30b9\u3092\u58ca\u3059\"\u4ed5\u7d44\u307f\u3067\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u8868\u73fe\u529b\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001 YAML \u30d1\u30c3\u30c1 \u3088\u308a\u3082 AWS Cloud Development Kit (CDK) \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 CDK \u3092\u4f7f\u3048\u3070\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5b89\u5168\u304b\u3064\u5f37\u529b\u306a\u4fee\u6b63\u304c\u884c\u3048\u307e\u3059\u3002 \u59cb\u3081\u65b9 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001CDK\u3000\u3092\u4f7f\u3063\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot svc override \u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3001 Load Balanced Web Service \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u9020\u3067\u3001 copilot/[name]/override \u914d\u4e0b\u306b\u65b0\u3057\u3044 CDK \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json stack.ts \u3092\u7de8\u96c6\u3059\u308b\u3068\u3053\u304b\u3089\u958b\u59cb\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 copilot svc override \u3092\u5229\u7528\u3057\u3066\u3001 ECS \u30b5\u30fc\u30d3\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u69d8\u306a stack.ts \u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u306e\u3067\u3001\u4fee\u6b63\u3092\u3057\u307e\u3059\u3002 import * as cdk from 'aws-cdk-lib' ; import { aws_ecs as ecs } from 'aws-cdk-lib' ; export class TransformedStack extends cdk . Stack { constructor ( scope : cdk.App , id : string , props? : cdk.StackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yaml' ), }); this . appName = template . getParameter ( 'AppName' ). valueAsString ; this . envName = template . getParameter ( 'EnvName' ). valueAsString ; this . transformService (); } // TODO: implement me. transformService () { const service = this . template . getResource ( \"Service\" ) as ecs . CfnService ; throw new error ( \"not implemented\" ); } } \u3069\u306e\u69d8\u306a\u4ed5\u7d44\u307f\u3067\u3057\u3087\u3046\u304b\uff1f \u4e0a\u8a18\u306e stack.ts \u30d5\u30a1\u30a4\u30eb\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u3068\u304a\u308a\u3001Copilot \u306f cloudformation_include module \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001CDK \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3001\u5909\u63db\u3092\u652f\u63f4\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002 \u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f \"Import or migrate an existing AWS CloudFormation template\" \u30ac\u30a4\u30c9\u3067\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3088\u308a Copilot Manifest \u306b\u3088\u3063\u3066\u8868\u793a\u3055\u308c\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u3001 L1 constructs \u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002 CfnInclude \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u96a0\u3055\u308c\u305f .build/in.yaml CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002 \u3053\u308c\u304c Copilot \u3068 CDK \u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u65b9\u6cd5\u3067\u3059\u3002 Copilot \u306f .build/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b Manifest \u3088\u308a\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u305d\u308c\u3092 cloudformation_include \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u89e3\u6790\u3057\u3001CDK \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30c8\u306b\u5909\u63db\u3057\u307e\u3059\u3002 copilot [noun] package \u307e\u305f\u306f copilot [noun] deploy \u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u3001Copilot \u306f\u307e\u305a Manifest \u30d5\u30a1\u30a4\u30eb\u304b\u3089 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u308c\u3092 CDK \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3057\u3066\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b CDK \u306e\u5909\u66f4\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001 package \u307e\u305f\u306f deploy \u30b3\u30de\u30f3\u30c9\u3067 --diff \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u5b9f\u884c\u4f8b \u6b21\u306e\u4f8b\u306f Elastic IP \u30a2\u30c9\u30ec\u30b9\u3092 Network Load Balancer\u3000\u3078\u5272\u308a\u5f53\u3066\u308b\u70ba\u306b Load Balanced Web Service \u306e nlb \u30ea\u30bd\u30fc\u30b9\u3092\u4fee\u6b63\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u4f8b\u3067\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u524a\u9664 \u65b0\u3057\u3044\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210 \u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4fee\u6b63 stack.ts \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } \u6b21\u306e\u4f8b\u3067\u306f\u3001 \u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u74b0\u5883\u306a\u3069\u7279\u5b9a\u306e\u74b0\u5883\u3060\u3051\u306e\u305f\u3081\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 stack.ts \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_iam as iam } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformEnvironmentManagerRole (); } transformEnvironmentManagerRole () { const environmentManagerRole = this . template . getResource ( \"EnvironmentManagerRole\" ) as iam . CfnRole ; if ( this . envName === \"prod\" ) { let assumeRolePolicy = environmentManagerRole . assumeRolePolicyDocument let statements = assumeRolePolicy . Statement statements . push ({ \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"ec2.amazonaws.com\" }, \"Action\" : \"sts:AssumeRole\" }) } } } \u6b21\u306e\u4f8b\u3067\u306f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f Copilot \u304c\u4f5c\u6210\u3057 Service \u306e\u30ed\u30b0\u3092\u4fdd\u6301\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3067\u3059\u3002 stack.ts \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; // Deletes the default log group resource. this . template . node . tryRemoveChild ( \"LogGroup\" ) } }","title":"CDK Overrides"},{"location":"ja/docs/developing/overrides/cdk/#cdk","text":"Attention CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3067\u3042\u308a\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u6b63\u5e38\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u306a\u3044\u539f\u56e0\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u610f\u3057\u3066\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff01 Copilot \u306f Manifest \u3067\u6307\u5b9a\u3057\u305f\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u4e00\u65b9\u3067\u3001 Manifest \u3067\u306f\u3001\u5168\u3066\u306e CloudFormation \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u53ef\u80fd\u3068\u306a\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u3002 \u4f8b\u3048\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b3\u30f3\u30c6\u30ca\u306e\u305f\u3081\u306b\u3001 Ulimits \u3092 \u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f Manifest \u3067\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 yamlpatch \u3084 cdk \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u306f\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e_\u4efb\u610f_\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u3067\u304d\u307e\u3059\u3002","title":"CDK \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"},{"location":"ja/docs/developing/overrides/cdk/#yaml-cdk","text":"\u3069\u3061\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3082 Copilot Manifest \u306b\u3088\u3063\u3066\u8868\u9762\u5316\u3055\u308c\u306a\u3044\u6a5f\u80fd\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3044\u3046\"\u30ac\u30e9\u30b9\u3092\u58ca\u3059\"\u4ed5\u7d44\u307f\u3067\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u8868\u73fe\u529b\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001 YAML \u30d1\u30c3\u30c1 \u3088\u308a\u3082 AWS Cloud Development Kit (CDK) \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 CDK \u3092\u4f7f\u3048\u3070\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5b89\u5168\u304b\u3064\u5f37\u529b\u306a\u4fee\u6b63\u304c\u884c\u3048\u307e\u3059\u3002","title":"YAML \u30d1\u30c3\u30c1\u3088\u308a\u3082 CDK \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u4f7f\u7528\u3059\u308b\u306e\u306f\u3069\u306e\u69d8\u306a\u5834\u5408\u3067\u3059\u304b\uff1f"},{"location":"ja/docs/developing/overrides/cdk/#_1","text":"copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001CDK\u3000\u3092\u4f7f\u3063\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot svc override \u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3001 Load Balanced Web Service \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u9020\u3067\u3001 copilot/[name]/override \u914d\u4e0b\u306b\u65b0\u3057\u3044 CDK \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 . \u251c\u2500\u2500 bin/ \u2502 \u2514\u2500\u2500 override.ts \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 cdk.json \u251c\u2500\u2500 package.json \u251c\u2500\u2500 README.md \u251c\u2500\u2500 stack.ts \u2514\u2500\u2500 tsconfig.json stack.ts \u3092\u7de8\u96c6\u3059\u308b\u3068\u3053\u304b\u3089\u958b\u59cb\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 copilot svc override \u3092\u5229\u7528\u3057\u3066\u3001 ECS \u30b5\u30fc\u30d3\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u69d8\u306a stack.ts \u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u306e\u3067\u3001\u4fee\u6b63\u3092\u3057\u307e\u3059\u3002 import * as cdk from 'aws-cdk-lib' ; import { aws_ecs as ecs } from 'aws-cdk-lib' ; export class TransformedStack extends cdk . Stack { constructor ( scope : cdk.App , id : string , props? : cdk.StackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yaml' ), }); this . appName = template . getParameter ( 'AppName' ). valueAsString ; this . envName = template . getParameter ( 'EnvName' ). valueAsString ; this . transformService (); } // TODO: implement me. transformService () { const service = this . template . getResource ( \"Service\" ) as ecs . CfnService ; throw new error ( \"not implemented\" ); } }","title":"\u59cb\u3081\u65b9"},{"location":"ja/docs/developing/overrides/cdk/#_2","text":"\u4e0a\u8a18\u306e stack.ts \u30d5\u30a1\u30a4\u30eb\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u3068\u304a\u308a\u3001Copilot \u306f cloudformation_include module \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001CDK \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3001\u5909\u63db\u3092\u652f\u63f4\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002 \u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f \"Import or migrate an existing AWS CloudFormation template\" \u30ac\u30a4\u30c9\u3067\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3088\u308a Copilot Manifest \u306b\u3088\u3063\u3066\u8868\u793a\u3055\u308c\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u3001 L1 constructs \u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002 CfnInclude \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u96a0\u3055\u308c\u305f .build/in.yaml CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002 \u3053\u308c\u304c Copilot \u3068 CDK \u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u65b9\u6cd5\u3067\u3059\u3002 Copilot \u306f .build/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b Manifest \u3088\u308a\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\u305d\u308c\u3092 cloudformation_include \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u89e3\u6790\u3057\u3001CDK \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30c8\u306b\u5909\u63db\u3057\u307e\u3059\u3002 copilot [noun] package \u307e\u305f\u306f copilot [noun] deploy \u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u3001Copilot \u306f\u307e\u305a Manifest \u30d5\u30a1\u30a4\u30eb\u304b\u3089 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u308c\u3092 CDK \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3057\u3066\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b CDK \u306e\u5909\u66f4\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001 package \u307e\u305f\u306f deploy \u30b3\u30de\u30f3\u30c9\u3067 --diff \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002","title":"\u3069\u306e\u69d8\u306a\u4ed5\u7d44\u307f\u3067\u3057\u3087\u3046\u304b\uff1f"},{"location":"ja/docs/developing/overrides/cdk/#_3","text":"\u6b21\u306e\u4f8b\u306f Elastic IP \u30a2\u30c9\u30ec\u30b9\u3092 Network Load Balancer\u3000\u3078\u5272\u308a\u5f53\u3066\u308b\u70ba\u306b Load Balanced Web Service \u306e nlb \u30ea\u30bd\u30fc\u30b9\u3092\u4fee\u6b63\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u4f8b\u3067\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u524a\u9664 \u65b0\u3057\u3044\u30ea\u30bd\u30fc\u30b9\u306e\u4f5c\u6210 \u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4fee\u6b63 stack.ts \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_elasticloadbalancingv2 as elbv2 } from 'aws-cdk-lib' ; import { aws_ec2 as ec2 } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformPublicNetworkLoadBalancer (); } /** * transformPublicNetworkLoadBalancer removes the \"Subnets\" properties from the NLB, * and adds a SubnetMappings with predefined elastic IP addresses. */ transformPublicNetworkLoadBalancer () { const elasticIPs = [ new ec2 . CfnEIP ( this , 'ElasticIP1' ), new ec2 . CfnEIP ( this , 'ElasticIP2' )]; const publicSubnets = cdk . Fn . importValue ( ` ${ this . appName } - ${ this . envName } -PublicSubnets` ); // Apply the override. const nlb = this . template . getResource ( \"PublicNetworkLoadBalancer\" ) as elbv2 . CfnLoadBalancer ; nlb . addDeletionOverride ( 'Properties.Subnets' ); nlb . subnetMappings = [{ allocationId : elasticIPs [ 0 ]. attrAllocationId , subnetId : cdk.Fn.select ( 0 , cdk . Fn . split ( \",\" , publicSubnets )), }, { allocationId : elasticIPs [ 1 ]. attrAllocationId , subnetId : cdk.Fn.select ( 1 , cdk . Fn . split ( \",\" , publicSubnets )), }] } } \u6b21\u306e\u4f8b\u3067\u306f\u3001 \u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u74b0\u5883\u306a\u3069\u7279\u5b9a\u306e\u74b0\u5883\u3060\u3051\u306e\u305f\u3081\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 stack.ts \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; import { aws_iam as iam } from 'aws-cdk-lib' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; this . transformEnvironmentManagerRole (); } transformEnvironmentManagerRole () { const environmentManagerRole = this . template . getResource ( \"EnvironmentManagerRole\" ) as iam . CfnRole ; if ( this . envName === \"prod\" ) { let assumeRolePolicy = environmentManagerRole . assumeRolePolicyDocument let statements = assumeRolePolicy . Statement statements . push ({ \"Effect\" : \"Allow\" , \"Principal\" : { \"Service\" : \"ec2.amazonaws.com\" }, \"Action\" : \"sts:AssumeRole\" }) } } } \u6b21\u306e\u4f8b\u3067\u306f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f Copilot \u304c\u4f5c\u6210\u3057 Service \u306e\u30ed\u30b0\u3092\u4fdd\u6301\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3067\u3059\u3002 stack.ts \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b import * as cdk from 'aws-cdk-lib' ; import * as path from 'path' ; interface TransformedStackProps extends cdk . StackProps { readonly appName : string ; readonly envName : string ; } export class TransformedStack extends cdk . Stack { public readonly template : cdk.cloudformation_include.CfnInclude ; public readonly appName : string ; public readonly envName : string ; constructor ( scope : cdk.App , id : string , props : TransformedStackProps ) { super ( scope , id , props ); this . template = new cdk . cloudformation_include . CfnInclude ( this , 'Template' , { templateFile : path.join ( '.build' , 'in.yml' ), }); this . appName = props . appName ; this . envName = props . envName ; // Deletes the default log group resource. this . template . node . tryRemoveChild ( \"LogGroup\" ) } }","title":"\u5b9f\u884c\u4f8b"},{"location":"ja/docs/developing/overrides/taskdef-overrides/","text":"\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 \u6ce8\u610f \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306f\u975e\u63a8\u5968\u3067\u3059\u3002 \u4ee3\u308f\u308a\u306b YAML \u30d1\u30c3\u30c1 \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002 YAML \u30d1\u30c3\u30c1\u306f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5168\u4f53\u306e\u4fee\u6b63\u3084\u3001 \u524a\u9664\u64cd\u4f5c\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 Copilot \u306f\u3001 Manifest \u3067\u6307\u5b9a\u3055\u308c\u305f\u69cb\u6210\u3092\u7528\u3044\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001Manifest \u3067\u306f\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u306e Ulimits \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Manifest \u3067\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 taskdef_overrides \u30eb\u30fc\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001 ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9 \u306b\u8ffd\u52a0\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30eb\u30fc\u30eb\u306f\u3001Copilot \u304c Manifest \u304b\u3089\u751f\u6210\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002 \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306e\u30eb\u30fc\u30eb\u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\uff1f \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u305d\u308c\u305e\u308c\u306b\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u305f\u3044 CloudFormation \u30ea\u30bd\u30fc\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306e path \u3068\u305d\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e value \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u306b\u9069\u7528\u53ef\u80fd\u306a\u6709\u52b9\u306a taskdef_overrides \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u4f8b\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002 taskdef_overrides : - path : ContainerDefinitions[0].Cpu value : 512 - path : ContainerDefinitions[0].Memory value : 1024 \u305d\u308c\u305e\u308c\u306e\u30eb\u30fc\u30eb\u306f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u9806\u6b21\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u5f97\u3089\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6b21\u306e\u30eb\u30fc\u30eb\u306e\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30eb\u30fc\u30eb\u304c\u6b63\u5e38\u306b\u9069\u7528\u3055\u308c\u308b\u304b\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u307e\u3067\u8a55\u4fa1\u304c\u7d9a\u3051\u3089\u308c\u307e\u3059\u3002 path \u306e\u8a55\u4fa1 path \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001 CloudFormation \u306b\u304a\u3051\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e Properties \u4ee5\u4e0b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9 \u3092\u3001 '.' \u533a\u5207\u308a\u3067\u5165\u529b\u3057\u307e\u3059\u3002 CloudFormation \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001Copilot \u306f\u518d\u5e30\u7684\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u633f\u5165\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30eb\u30fc\u30eb\u304c A.B[-].C \u3068\u3044\u3046\u30d1\u30b9\u3092\u6301\u3064\uff08 B \u3068 C \u306f\u5b58\u5728\u3057\u306a\u3044\uff09\u5834\u5408\u3001Copilot \u306f B \u3068 C \u3068\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u633f\u5165\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u4f8b\u3068\u3057\u3066\u306f\u3001 \u4ee5\u4e0b \u304c\u3042\u308a\u307e\u3059\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306a\u308b\u30d1\u30b9\u304c\u3001\u65e2\u306b\u5b58\u5728\u3059\u308b\u30e1\u30f3\u30d0\u30fc\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u306e\u30e1\u30f3\u30d0\u30fc\u306e\u5024\u304c\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002 Ulimits \u306e\u3088\u3046\u306a list \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3001\u65b0\u3057\u3044\u30e1\u30f3\u30d0\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u7279\u6b8a\u6587\u5b57 - \u3092\u4f7f\u7528\u3057\u307e\u3059: Ulimits[-] \u3002 \u6ce8\u610f \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u4ee5\u4e0b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u5909\u66f4\u304c\u3067\u304d\u307e\u305b\u3093\u3002 Family ContainerDefinitions[ ].Name \u30c6\u30b9\u30c8 \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u304c\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30d7\u30ec\u30d3\u30e5\u30fc\u3057\u307e\u3059\u3002 copilot svc package \u307e\u305f\u306f copilot job package \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u4f8b \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b Ulimits \u3092\u8ffd\u52a0 taskdef_overrides : - path : ContainerDefinitions[0].Ulimits[-] value : Name : \"cpu\" SoftLimit : 1024 HardLimit : 2048 \u8ffd\u52a0\u306e UDP \u30dd\u30fc\u30c8\u3092\u516c\u958b taskdef_overrides : - path : \"ContainerDefinitions[0].PortMappings[-].ContainerPort\" value : 2056 # Copilot \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u3001PortMappings[1] \u3068\u3059\u308b\u3053\u3068\u3067\u3001\u4e0a\u8a18\u30eb\u30fc\u30eb\u3067\u8ffd\u52a0\u3055\u308c\u305f\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 - path : \"ContainerDefinitions[0].PortMappings[1].Protocol\" value : \"udp\" \u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306b\u3059\u308b taskdef_overrides : - path : \"ContainerDefinitions[0].ReadonlyRootFilesystem\" value : true","title":"Task Definition Overrides"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#_1","text":"\u6ce8\u610f \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u306f\u975e\u63a8\u5968\u3067\u3059\u3002 \u4ee3\u308f\u308a\u306b YAML \u30d1\u30c3\u30c1 \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002 YAML \u30d1\u30c3\u30c1\u306f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5168\u4f53\u306e\u4fee\u6b63\u3084\u3001 \u524a\u9664\u64cd\u4f5c\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 Copilot \u306f\u3001 Manifest \u3067\u6307\u5b9a\u3055\u308c\u305f\u69cb\u6210\u3092\u7528\u3044\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001Manifest \u3067\u306f\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u306e Ulimits \u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Manifest \u3067\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 taskdef_overrides \u30eb\u30fc\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001 ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9 \u306b\u8ffd\u52a0\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30eb\u30fc\u30eb\u306f\u3001Copilot \u304c Manifest \u304b\u3089\u751f\u6210\u3059\u308b CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002","title":"\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#_2","text":"\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u305d\u308c\u305e\u308c\u306b\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u305f\u3044 CloudFormation \u30ea\u30bd\u30fc\u30b9\u30d5\u30a3\u30fc\u30eb\u30c9\u306e path \u3068\u305d\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e value \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u306b\u9069\u7528\u53ef\u80fd\u306a\u6709\u52b9\u306a taskdef_overrides \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u4f8b\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002 taskdef_overrides : - path : ContainerDefinitions[0].Cpu value : 512 - path : ContainerDefinitions[0].Memory value : 1024 \u305d\u308c\u305e\u308c\u306e\u30eb\u30fc\u30eb\u306f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u9806\u6b21\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u5f97\u3089\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6b21\u306e\u30eb\u30fc\u30eb\u306e\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30eb\u30fc\u30eb\u304c\u6b63\u5e38\u306b\u9069\u7528\u3055\u308c\u308b\u304b\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u307e\u3067\u8a55\u4fa1\u304c\u7d9a\u3051\u3089\u308c\u307e\u3059\u3002","title":"\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306e\u30eb\u30fc\u30eb\u3092\u6307\u5b9a\u3059\u308b\u306b\u306f\uff1f"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#path","text":"path \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001 CloudFormation \u306b\u304a\u3051\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e Properties \u4ee5\u4e0b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9 \u3092\u3001 '.' \u533a\u5207\u308a\u3067\u5165\u529b\u3057\u307e\u3059\u3002 CloudFormation \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001Copilot \u306f\u518d\u5e30\u7684\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u633f\u5165\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30eb\u30fc\u30eb\u304c A.B[-].C \u3068\u3044\u3046\u30d1\u30b9\u3092\u6301\u3064\uff08 B \u3068 C \u306f\u5b58\u5728\u3057\u306a\u3044\uff09\u5834\u5408\u3001Copilot \u306f B \u3068 C \u3068\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u633f\u5165\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u4f8b\u3068\u3057\u3066\u306f\u3001 \u4ee5\u4e0b \u304c\u3042\u308a\u307e\u3059\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u306a\u308b\u30d1\u30b9\u304c\u3001\u65e2\u306b\u5b58\u5728\u3059\u308b\u30e1\u30f3\u30d0\u30fc\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u306e\u30e1\u30f3\u30d0\u30fc\u306e\u5024\u304c\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002 Ulimits \u306e\u3088\u3046\u306a list \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3001\u65b0\u3057\u3044\u30e1\u30f3\u30d0\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u7279\u6b8a\u6587\u5b57 - \u3092\u4f7f\u7528\u3057\u307e\u3059: Ulimits[-] \u3002 \u6ce8\u610f \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u4ee5\u4e0b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u5909\u66f4\u304c\u3067\u304d\u307e\u305b\u3093\u3002 Family ContainerDefinitions[ ].Name","title":"path \u306e\u8a55\u4fa1"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#_3","text":"\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u304c\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30d7\u30ec\u30d3\u30e5\u30fc\u3057\u307e\u3059\u3002 copilot svc package \u307e\u305f\u306f copilot job package \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002","title":"\u30c6\u30b9\u30c8"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#_4","text":"","title":"\u4f8b"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#ulimits","text":"taskdef_overrides : - path : ContainerDefinitions[0].Ulimits[-] value : Name : \"cpu\" SoftLimit : 1024 HardLimit : 2048","title":"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b Ulimits \u3092\u8ffd\u52a0"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#udp","text":"taskdef_overrides : - path : \"ContainerDefinitions[0].PortMappings[-].ContainerPort\" value : 2056 # Copilot \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u3001PortMappings[1] \u3068\u3059\u308b\u3053\u3068\u3067\u3001\u4e0a\u8a18\u30eb\u30fc\u30eb\u3067\u8ffd\u52a0\u3055\u308c\u305f\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 - path : \"ContainerDefinitions[0].PortMappings[1].Protocol\" value : \"udp\"","title":"\u8ffd\u52a0\u306e UDP \u30dd\u30fc\u30c8\u3092\u516c\u958b"},{"location":"ja/docs/developing/overrides/taskdef-overrides/#_5","text":"taskdef_overrides : - path : \"ContainerDefinitions[0].ReadonlyRootFilesystem\" value : true","title":"\u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306b\u3059\u308b"},{"location":"ja/docs/developing/overrides/yamlpatch/","text":"YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 Attention CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3067\u3042\u308a\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u6b63\u5e38\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u306a\u3044\u539f\u56e0\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u610f\u3057\u3066\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff01 Copilot \u306f Manifest \u3067\u6307\u5b9a\u3057\u305f\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u4e00\u65b9\u3067\u3001 Manifest \u3067\u306f\u3001\u5168\u3066\u306e CloudFormation \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u53ef\u80fd\u3068\u306a\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u3002 \u4f8b\u3048\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b3\u30f3\u30c6\u30ca\u306e\u305f\u3081\u306b\u3001 Ulimits \u3092 \u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f Manifest \u3067\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 yamlpatch \u3084 cdk \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u306f\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e_\u4efb\u610f_\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u3067\u304d\u307e\u3059\u3002 CDK \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3088\u308a\u3082 YAML \u30d1\u30c3\u30c1\u3092\u4f7f\u7528\u3059\u308b\u306e\u306f\u3069\u306e\u69d8\u306a\u5834\u5408\u3067\u3059\u304b\uff1f \u3069\u3061\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3082 Copilot Manifest \u306b\u3088\u3063\u3066\u8868\u9762\u5316\u3055\u308c\u306a\u3044\u6a5f\u80fd\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3044\u3046\"\u30ac\u30e9\u30b9\u3092\u58ca\u3059\"\u4ed5\u7d44\u307f\u3067\u3059\u3002 1) \u4ed6\u306e\u30c4\u30fc\u30eb\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(\u4f8b\u3048\u3070\u3001 Node.js \u3084 CDK )\u306b\u4f9d\u5b58\u3057\u305f\u304f\u7121\u3044\u5834\u5408\u3001 2) \u307b\u3093\u306e\u5c11\u3057\u3060\u3051\u306e\u4fee\u6b63\u304c\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001YAML\u3000\u30d1\u30c3\u30c1\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u59cb\u3081\u65b9 copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001YAML \u30d1\u30c3\u30c1\u3092\u4f7f\u3063\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot svc override \u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3001 Load Balanced Web Service \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u9020\u3067\u3001 copilot/[name]/overrides \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u306e cfn.patches.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3069\u306e\u69d8\u306a\u4ed5\u7d44\u307f\u3067\u3057\u3087\u3046\u304b\uff1f cfn.patches.yml \u306e\u69cb\u6587\u306f\u3001 RFC6902: JSON Patch \u306b\u6e96\u62e0\u3057\u307e\u3059\u3002 \u73fe\u5728\u306f\u3001CLI \u306f 3 \u3064\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059: add , remove , and replace . \u4ee5\u4e0b\u306f\u30b5\u30f3\u30d7\u30eb\u306e cfn.patches.yml \u30d5\u30a1\u30a4\u30eb\u3067\u3059: - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool \u5404\u30d1\u30c3\u30c1\u306f\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u9806\u6b21\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u9069\u7528\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u6b21\u306e\u30d1\u30c3\u30c1\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30c3\u30c1\u304c\u6b63\u5e38\u306b\u9069\u7528\u3055\u308c\u308b\u304b\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u307e\u3067\u3001\u8a55\u4fa1\u306f\u7d99\u7d9a\u3055\u308c\u307e\u3059\u3002 \u30d1\u30b9\u306e\u8a55\u4fa1 path \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3059\u308b\u30d1\u30c3\u30c1\u306f RFC6901: JSON Pointer \u69cb\u6587\u306b\u6e96\u62e0\u3057\u307e\u3059\u3002 \u5404 path \u306e\u5024\u306f / \u6587\u5b57\u3067\u533a\u5207\u3089\u308c\u3001\u5bfe\u8c61\u306e CloudFormation \u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5230\u9054\u3057\u305f\u6642\u70b9\u3067\u8a55\u4fa1\u304c\u505c\u6b62\u3057\u307e\u3059\u3002 \u5bfe\u8c61\u306e\u30d1\u30b9\u304c\u914d\u5217\u3067\u3042\u3063\u305f\u5834\u5408\u3001\u53c2\u7167\u30c8\u30fc\u30af\u30f3\u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093: 0 \u304b\u3089\u59cb\u307e\u308b\u6570\u5b57\u3067\u69cb\u6210\u3055\u308c\u308b\u6587\u5b57\u3002 \u914d\u5217\u3078\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u3001 add \u64cd\u4f5c\u3092\u5b9f\u65bd\u3059\u308b\u5834\u5408\u3001 - \u3068\u3044\u3046 1 \u6587\u5b57\u3092\u6307\u5b9a\u3059\u308b \u8ffd\u52a0\u306e\u4f8b \u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: - op : add path : /Resources/LogGroup/Properties/Tags value : - Key : keyname Value : value1 \u914d\u5217\u306e\u7279\u5b9a\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u65b0\u3057\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: - op : add path : /Resources/TaskDefinition/Properties/ContainerDefinitions/0/EnvironmentFiles/0 value : arn:aws:s3:::bucket_name/key_name \u914d\u5217\u306e\u6700\u5f8c\u306b\u65b0\u3057\u3044\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: - op : add path : /Resources/TaskRole/Properties/Policies/- value : PolicyName : DynamoDBReader PolicyDocument : Version : \"2012-10-17\" Statement : - Effect : Allow Action : - dynamodb:Get* Resource : '*' \u65e2\u5b58\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u7f6e\u63db\u3059\u308b\u5834\u5408: - op : replace path : /Resources/LogGroup/Properties/RetentionInDays value : 60 \u914d\u5217\u304b\u3089\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u5834\u5408\u3001\u6b63\u78ba\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059: - op : remove path : /Resources/ExecutionRole/Properties/Policies/0/PolicyDocument/Statement/1/Action/0 \u30ea\u30bd\u30fc\u30b9\u5168\u4f53\u3092\u524a\u9664\u3059\u308b\u5834\u5408: - op : remove path : /Resources/ExecutionRole","title":"YAML Patch Overrides"},{"location":"ja/docs/developing/overrides/yamlpatch/#yaml","text":"Attention CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3067\u3042\u308a\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u6b63\u5e38\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u306a\u3044\u539f\u56e0\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u610f\u3057\u3066\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff01 Copilot \u306f Manifest \u3067\u6307\u5b9a\u3057\u305f\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u4e00\u65b9\u3067\u3001 Manifest \u3067\u306f\u3001\u5168\u3066\u306e CloudFormation \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u53ef\u80fd\u3068\u306a\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u3002 \u4f8b\u3048\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b3\u30f3\u30c6\u30ca\u306e\u305f\u3081\u306b\u3001 Ulimits \u3092 \u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f Manifest \u3067\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 yamlpatch \u3084 cdk \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u306f\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e_\u4efb\u610f_\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u3067\u304d\u307e\u3059\u3002","title":"YAML \u30d1\u30c3\u30c1\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9"},{"location":"ja/docs/developing/overrides/yamlpatch/#cdk-yaml","text":"\u3069\u3061\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3082 Copilot Manifest \u306b\u3088\u3063\u3066\u8868\u9762\u5316\u3055\u308c\u306a\u3044\u6a5f\u80fd\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3044\u3046\"\u30ac\u30e9\u30b9\u3092\u58ca\u3059\"\u4ed5\u7d44\u307f\u3067\u3059\u3002 1) \u4ed6\u306e\u30c4\u30fc\u30eb\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(\u4f8b\u3048\u3070\u3001 Node.js \u3084 CDK )\u306b\u4f9d\u5b58\u3057\u305f\u304f\u7121\u3044\u5834\u5408\u3001 2) \u307b\u3093\u306e\u5c11\u3057\u3060\u3051\u306e\u4fee\u6b63\u304c\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001YAML\u3000\u30d1\u30c3\u30c1\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002","title":"CDK \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3088\u308a\u3082 YAML \u30d1\u30c3\u30c1\u3092\u4f7f\u7528\u3059\u308b\u306e\u306f\u3069\u306e\u69d8\u306a\u5834\u5408\u3067\u3059\u304b\uff1f"},{"location":"ja/docs/developing/overrides/yamlpatch/#_1","text":"copilot [noun] override \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001YAML \u30d1\u30c3\u30c1\u3092\u4f7f\u3063\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001 copilot svc override \u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3001 Load Balanced Web Service \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u9020\u3067\u3001 copilot/[name]/overrides \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u30b5\u30f3\u30d7\u30eb\u306e cfn.patches.yml \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002","title":"\u59cb\u3081\u65b9"},{"location":"ja/docs/developing/overrides/yamlpatch/#_2","text":"cfn.patches.yml \u306e\u69cb\u6587\u306f\u3001 RFC6902: JSON Patch \u306b\u6e96\u62e0\u3057\u307e\u3059\u3002 \u73fe\u5728\u306f\u3001CLI \u306f 3 \u3064\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059: add , remove , and replace . \u4ee5\u4e0b\u306f\u30b5\u30f3\u30d7\u30eb\u306e cfn.patches.yml \u30d5\u30a1\u30a4\u30eb\u3067\u3059: - op : add path : /Mappings value : ContainerSettings : test : { Cpu : 256 , Mem : 512 } prod : { Cpu : 1024 , Mem : 1024 } - op : remove path : /Resources/TaskRole - op : replace path : /Resources/TaskDefinition/Properties/ContainerDefinitions/1/Essential value : false - op : add path : /Resources/Service/Properties/ServiceConnectConfiguration/Services/0/ClientAliases/- value : Port : !Ref TargetPort DnsName : yamlpatchiscool \u5404\u30d1\u30c3\u30c1\u306f\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u9806\u6b21\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u9069\u7528\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u6b21\u306e\u30d1\u30c3\u30c1\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30c3\u30c1\u304c\u6b63\u5e38\u306b\u9069\u7528\u3055\u308c\u308b\u304b\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u307e\u3067\u3001\u8a55\u4fa1\u306f\u7d99\u7d9a\u3055\u308c\u307e\u3059\u3002","title":"\u3069\u306e\u69d8\u306a\u4ed5\u7d44\u307f\u3067\u3057\u3087\u3046\u304b\uff1f"},{"location":"ja/docs/developing/overrides/yamlpatch/#_3","text":"path \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3059\u308b\u30d1\u30c3\u30c1\u306f RFC6901: JSON Pointer \u69cb\u6587\u306b\u6e96\u62e0\u3057\u307e\u3059\u3002 \u5404 path \u306e\u5024\u306f / \u6587\u5b57\u3067\u533a\u5207\u3089\u308c\u3001\u5bfe\u8c61\u306e CloudFormation \u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5230\u9054\u3057\u305f\u6642\u70b9\u3067\u8a55\u4fa1\u304c\u505c\u6b62\u3057\u307e\u3059\u3002 \u5bfe\u8c61\u306e\u30d1\u30b9\u304c\u914d\u5217\u3067\u3042\u3063\u305f\u5834\u5408\u3001\u53c2\u7167\u30c8\u30fc\u30af\u30f3\u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093: 0 \u304b\u3089\u59cb\u307e\u308b\u6570\u5b57\u3067\u69cb\u6210\u3055\u308c\u308b\u6587\u5b57\u3002 \u914d\u5217\u3078\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u3001 add \u64cd\u4f5c\u3092\u5b9f\u65bd\u3059\u308b\u5834\u5408\u3001 - \u3068\u3044\u3046 1 \u6587\u5b57\u3092\u6307\u5b9a\u3059\u308b","title":"\u30d1\u30b9\u306e\u8a55\u4fa1"},{"location":"ja/docs/developing/overrides/yamlpatch/#_4","text":"\u65e2\u5b58\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u3001\u65b0\u3057\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: - op : add path : /Resources/LogGroup/Properties/Tags value : - Key : keyname Value : value1 \u914d\u5217\u306e\u7279\u5b9a\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u65b0\u3057\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: - op : add path : /Resources/TaskDefinition/Properties/ContainerDefinitions/0/EnvironmentFiles/0 value : arn:aws:s3:::bucket_name/key_name \u914d\u5217\u306e\u6700\u5f8c\u306b\u65b0\u3057\u3044\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408: - op : add path : /Resources/TaskRole/Properties/Policies/- value : PolicyName : DynamoDBReader PolicyDocument : Version : \"2012-10-17\" Statement : - Effect : Allow Action : - dynamodb:Get* Resource : '*' \u65e2\u5b58\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u7f6e\u63db\u3059\u308b\u5834\u5408: - op : replace path : /Resources/LogGroup/Properties/RetentionInDays value : 60 \u914d\u5217\u304b\u3089\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u5834\u5408\u3001\u6b63\u78ba\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059: - op : remove path : /Resources/ExecutionRole/Properties/Policies/0/PolicyDocument/Statement/1/Action/0 \u30ea\u30bd\u30fc\u30b9\u5168\u4f53\u3092\u524a\u9664\u3059\u308b\u5834\u5408: - op : remove path : /Resources/ExecutionRole","title":"\u8ffd\u52a0\u306e\u4f8b"},{"location":"ja/docs/getting-started/first-app-tutorial/","text":"\u6700\u521d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3088\u3046 AWS Copilot \u306f\u3001\u308f\u305a\u304b\u306a\u30b9\u30c6\u30c3\u30d7\u3067\u7c21\u5358\u306b\u30b3\u30f3\u30c6\u30ca\u3092 AWS \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001AWS Copilot \u3092\u4f7f\u7528\u3057\u3066 Dockerfile \u3092\u4f7f\u7528\u3057\u305f\u4efb\u610f\u306e\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5b8c\u4e86\u5f8c\u3001Copilot \u304c\u4f5c\u6210\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u6599\u91d1\u304c\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u65b9\u6cd5\u3082\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u3044\u304b\u304c\u3067\u3059\u304b\uff1f\u305d\u308c\u3067\u306f\u65e9\u901f\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff01 Step 1: AWS Copilot \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u8a2d\u5b9a AWS Copilot \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001AWS Copilot \u306e\u30d0\u30a4\u30ca\u30ea\u3001AWS CLI\u3001Docker Desktop\uff08\u8d77\u52d5\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\u3001AWS \u306e\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u304c\u5fc5\u8981\u3067\u3059\u3002 \u3053\u308c\u3089\u306e\u30c4\u30fc\u30eb\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u6700\u521d\u306b default \u306e AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5fc5\u8981\u306a\u5834\u5408\u306f aws configure \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Step 2: \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b \u3053\u306e\u4f8b\u3067\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u9759\u7684 Web \u30b5\u30a4\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3082\u306e\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u958b\u3044\u3066 Dockerfile \u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078 cd \u30b3\u30de\u30f3\u30c9\u3067\u79fb\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3082\u306e\u304c\u306a\u3051\u308c\u3070\u3001\u30b5\u30f3\u30d7\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30b3\u30d4\u30fc\uff06\u30da\u30fc\u30b9\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u306e\u30af\u30ed\u30fc\u30f3\u304c\u4f5c\u6210\u3055\u308c\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002 $ git clone https://github.com/aws-samples/aws-copilot-sample-service example $ cd example Step 3: \u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\u3092\u3059\u308b \u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304c\u304a\u697d\u3057\u307f\u306e\u59cb\u307e\u308a\u3067\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u30b3\u30fc\u30c9\u3068 Dockerfile \u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3089\u3092 AWS \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3001AWS Copilot \u306b\u624b\u4f1d\u3063\u3066\u3082\u3089\u3044\u307e\u3057\u3087\u3046\u3002 Attention \u65e2\u5b58\u306b\u4ed6\u306e\u76ee\u7684\u3067\u4f5c\u6210\u3057\u305f copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u5834\u5408\u3001Copilot \u304c\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ed8\u8fd1\u306b copilot/ \u3068\u3044\u3046\u540d\u524d\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u3053\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot init Step 4: \u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u306b\u7b54\u3048\u308b \u6b21\u306b\u3059\u308b\u3053\u3068\u306f\u3001Copilot \u304b\u3089\u306e\u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u306b\u7b54\u3048\u308b\u3053\u3068\u3067\u3059\u3002Copilot \u306f\u3053\u308c\u3089\u306e\u8cea\u554f\u3092\u57fa\u306b\u3001\u304a\u5ba2\u69d8\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u6700\u9069\u306a AWS \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u8cea\u554f\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u9806\u3092\u8ffd\u3063\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u201cWhat would you like to name your application?\u201d (Application \u306e\u540d\u524d\u306f\uff1f) - \u3053\u3053\u3067\u306e Application \u3068\u306f\u3001Service \u306e\u96c6\u5408\u4f53\u306e\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f Application \u306b\u306f 1 \u3064\u306e Service \u3057\u304b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30de\u30eb\u30c1\u30b5\u30fc\u30d3\u30b9\u306e Application \u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306f Copilot \u3067\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u3053\u306e Application \u306e\u540d\u524d\u3092 example-app \u3068\u3057\u307e\u3057\u3087\u3046\u3002 \u201cWhich service type best represents your service's architecture?\u201d (Service \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u6700\u3082\u3088\u304f\u8868\u3057\u3066\u3044\u308b Service \u30bf\u30a4\u30d7\u306f\u3069\u308c\u3067\u3059\u304b\uff1f) - Copilot \u306f\u3001\u3053\u306e Application \u306e Service \u306b\u4f55\u3092\u3055\u305b\u305f\u3044\u304b\u3092\u5c0b\u306d\u3066\u3044\u307e\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u3067\u3057\u3087\u3046\u304b? \u3053\u3053\u3067\u306f\u3001Application \u3092 Web \u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3001Enter \u30ad\u30fc\u3092\u62bc\u3057\u3066 Load Balanced Web Service \u3092\u9078\u629e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u201cWhat do you want to name this Load Balanced Web Service?\u201d (\u3053\u306e Load Balanced Web Service \u306e\u540d\u524d\u306f\uff1f) - \u3055\u3066\u3001Application \u5185\u306e Service \u3092\u4f55\u3068\u547c\u3073\u307e\u3059\u304b? \u304a\u597d\u304d\u306a\u540d\u524d\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\u3057\u304b\u3057\u3001\u3053\u3053\u3067\u306f\u3053\u306e Service \u3092 front-end \u3068\u540d\u4ed8\u3051\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u201cWhich Dockerfile would you like to use for front-end?\u201d (\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306b\u3069\u306e Dockerfile \u3092\u4f7f\u7528\u3057\u307e\u3059\u304b\uff1f) - \u3053\u3053\u3067\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Dockerfile \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f Copilot \u304c\u30d3\u30eb\u30c9\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b Service \u3067\u4f7f\u3046 Dockerfile \u3067\u3059\u3002 Dockerfile \u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f Service \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e AWS \u30a4\u30f3\u30d5\u30e9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 Step 5: Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Copilot \u304c Application \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30d5\u30e9\u306e\u8a2d\u5b9a\u3092\u7d42\u3048\u308b\u3068\u3001Service \u3092\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u306e\u3067\u3001 yes \u3068\u5165\u529b\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u3001Copilot \u304c Service \u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u9593\u3001\u6570\u5206\u5f85\u3064\u3067\u3057\u3087\u3046\u23f3\u3002Service \u306e\u305f\u3081\u306e\u3059\u3079\u3066\u306e\u30a4\u30f3\u30d5\u30e9\u304c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u308b\u3068\u3001Copilot \u306f\u30a4\u30e1\u30fc\u30b8\u3092\u69cb\u7bc9\u3057\u3066 Amazon ECR \u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3001Amazon ECS on AWS Fargate \u3078\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3059\u308b\u3068\u3001Service \u304c\u7a3c\u50cd\u3057\u3001Copilot \u304c URL \u3078\u306e\u30ea\u30f3\u30af\u3092\u51fa\u529b\u3057\u307e\u3059\uff01\ud83c\udf89 Step 6: \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7 Service \u306e\u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001 copilot app delete \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001ECS \u30b5\u30fc\u30d3\u30b9\u3084 ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306a\u3069\u3001Copilot \u304c Application \u306b\u8a2d\u5b9a\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u304c\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot app delete \u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01 \u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01AWS Copilot \u3092\u4f7f\u3063\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u8a2d\u5b9a\u3057\u3001Amazon ECS on Fargate \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002AWS Copilot \u306f\u3001AWS \u4e0a\u3067\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u904b\u7528\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3059\u3002 Application \u306e\u30c7\u30d7\u30ed\u30a4\u3092\u697d\u3057\u3093\u3067\u3044\u305f\u3060\u3051\u307e\u3057\u305f\u304b\uff1fAWS Copilot \u3092\u3088\u308a\u6df1\u304f\u7406\u89e3\u3057\u3001AWS \u4e0a\u3067\u672c\u756a\u74b0\u5883\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u30fb\u7ba1\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3076\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\u5f15\u304d\u7d9a\u304d\u30b5\u30a4\u30c9\u30d0\u30fc\u306e Developing \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Deploy your first application"},{"location":"ja/docs/getting-started/first-app-tutorial/#_1","text":"AWS Copilot \u306f\u3001\u308f\u305a\u304b\u306a\u30b9\u30c6\u30c3\u30d7\u3067\u7c21\u5358\u306b\u30b3\u30f3\u30c6\u30ca\u3092 AWS \u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u9759\u7684\u306a Web \u30b5\u30a4\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001AWS Copilot \u3092\u4f7f\u7528\u3057\u3066 Dockerfile \u3092\u4f7f\u7528\u3057\u305f\u4efb\u610f\u306e\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u3057\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5b8c\u4e86\u5f8c\u3001Copilot \u304c\u4f5c\u6210\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u6599\u91d1\u304c\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u65b9\u6cd5\u3082\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u3044\u304b\u304c\u3067\u3059\u304b\uff1f\u305d\u308c\u3067\u306f\u65e9\u901f\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff01","title":"\u6700\u521d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3088\u3046"},{"location":"ja/docs/getting-started/first-app-tutorial/#step-1-aws-copilot","text":"AWS Copilot \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001AWS Copilot \u306e\u30d0\u30a4\u30ca\u30ea\u3001AWS CLI\u3001Docker Desktop\uff08\u8d77\u52d5\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\u3001AWS \u306e\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u304c\u5fc5\u8981\u3067\u3059\u3002 \u3053\u308c\u3089\u306e\u30c4\u30fc\u30eb\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u6700\u521d\u306b default \u306e AWS \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5fc5\u8981\u306a\u5834\u5408\u306f aws configure \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Step 1: AWS Copilot \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u8a2d\u5b9a"},{"location":"ja/docs/getting-started/first-app-tutorial/#step-2","text":"\u3053\u306e\u4f8b\u3067\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u9759\u7684 Web \u30b5\u30a4\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3082\u306e\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u958b\u3044\u3066 Dockerfile \u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078 cd \u30b3\u30de\u30f3\u30c9\u3067\u79fb\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3082\u306e\u304c\u306a\u3051\u308c\u3070\u3001\u30b5\u30f3\u30d7\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30b3\u30d4\u30fc\uff06\u30da\u30fc\u30b9\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u306e\u30af\u30ed\u30fc\u30f3\u304c\u4f5c\u6210\u3055\u308c\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5909\u66f4\u3055\u308c\u307e\u3059\u3002 $ git clone https://github.com/aws-samples/aws-copilot-sample-service example $ cd example","title":"Step 2: \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"},{"location":"ja/docs/getting-started/first-app-tutorial/#step-3","text":"\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304c\u304a\u697d\u3057\u307f\u306e\u59cb\u307e\u308a\u3067\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u30b3\u30fc\u30c9\u3068 Dockerfile \u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3089\u3092 AWS \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3001AWS Copilot \u306b\u624b\u4f1d\u3063\u3066\u3082\u3089\u3044\u307e\u3057\u3087\u3046\u3002 Attention \u65e2\u5b58\u306b\u4ed6\u306e\u76ee\u7684\u3067\u4f5c\u6210\u3057\u305f copilot/ \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u5834\u5408\u3001Copilot \u304c\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ed8\u8fd1\u306b copilot/ \u3068\u3044\u3046\u540d\u524d\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Copilot \u306f\u3053\u306e\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30b3\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3067\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot init","title":"Step 3: \u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\u3092\u3059\u308b"},{"location":"ja/docs/getting-started/first-app-tutorial/#step-4","text":"\u6b21\u306b\u3059\u308b\u3053\u3068\u306f\u3001Copilot \u304b\u3089\u306e\u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u306b\u7b54\u3048\u308b\u3053\u3068\u3067\u3059\u3002Copilot \u306f\u3053\u308c\u3089\u306e\u8cea\u554f\u3092\u57fa\u306b\u3001\u304a\u5ba2\u69d8\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u6700\u9069\u306a AWS \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u8cea\u554f\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u9806\u3092\u8ffd\u3063\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u201cWhat would you like to name your application?\u201d (Application \u306e\u540d\u524d\u306f\uff1f) - \u3053\u3053\u3067\u306e Application \u3068\u306f\u3001Service \u306e\u96c6\u5408\u4f53\u306e\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f Application \u306b\u306f 1 \u3064\u306e Service \u3057\u304b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30de\u30eb\u30c1\u30b5\u30fc\u30d3\u30b9\u306e Application \u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306f Copilot \u3067\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u3053\u306e Application \u306e\u540d\u524d\u3092 example-app \u3068\u3057\u307e\u3057\u3087\u3046\u3002 \u201cWhich service type best represents your service's architecture?\u201d (Service \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u6700\u3082\u3088\u304f\u8868\u3057\u3066\u3044\u308b Service \u30bf\u30a4\u30d7\u306f\u3069\u308c\u3067\u3059\u304b\uff1f) - Copilot \u306f\u3001\u3053\u306e Application \u306e Service \u306b\u4f55\u3092\u3055\u305b\u305f\u3044\u304b\u3092\u5c0b\u306d\u3066\u3044\u307e\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u3067\u3057\u3087\u3046\u304b? \u3053\u3053\u3067\u306f\u3001Application \u3092 Web \u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3001Enter \u30ad\u30fc\u3092\u62bc\u3057\u3066 Load Balanced Web Service \u3092\u9078\u629e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 \u201cWhat do you want to name this Load Balanced Web Service?\u201d (\u3053\u306e Load Balanced Web Service \u306e\u540d\u524d\u306f\uff1f) - \u3055\u3066\u3001Application \u5185\u306e Service \u3092\u4f55\u3068\u547c\u3073\u307e\u3059\u304b? \u304a\u597d\u304d\u306a\u540d\u524d\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\u3057\u304b\u3057\u3001\u3053\u3053\u3067\u306f\u3053\u306e Service \u3092 front-end \u3068\u540d\u4ed8\u3051\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 \u201cWhich Dockerfile would you like to use for front-end?\u201d (\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306b\u3069\u306e Dockerfile \u3092\u4f7f\u7528\u3057\u307e\u3059\u304b\uff1f) - \u3053\u3053\u3067\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Dockerfile \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f Copilot \u304c\u30d3\u30eb\u30c9\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b Service \u3067\u4f7f\u3046 Dockerfile \u3067\u3059\u3002 Dockerfile \u3092\u9078\u629e\u3059\u308b\u3068\u3001Copilot \u306f Service \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e AWS \u30a4\u30f3\u30d5\u30e9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u958b\u59cb\u3057\u307e\u3059\u3002","title":"Step 4: \u3044\u304f\u3064\u304b\u306e\u8cea\u554f\u306b\u7b54\u3048\u308b"},{"location":"ja/docs/getting-started/first-app-tutorial/#step-5-service","text":"Copilot \u304c Application \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30d5\u30e9\u306e\u8a2d\u5b9a\u3092\u7d42\u3048\u308b\u3068\u3001Service \u3092\u30c6\u30b9\u30c8\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5c0b\u306d\u3089\u308c\u307e\u3059\u306e\u3067\u3001 yes \u3068\u5165\u529b\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u3001Copilot \u304c Service \u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u9593\u3001\u6570\u5206\u5f85\u3064\u3067\u3057\u3087\u3046\u23f3\u3002Service \u306e\u305f\u3081\u306e\u3059\u3079\u3066\u306e\u30a4\u30f3\u30d5\u30e9\u304c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u308b\u3068\u3001Copilot \u306f\u30a4\u30e1\u30fc\u30b8\u3092\u69cb\u7bc9\u3057\u3066 Amazon ECR \u306b\u30d7\u30c3\u30b7\u30e5\u3057\u3001Amazon ECS on AWS Fargate \u3078\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3059\u308b\u3068\u3001Service \u304c\u7a3c\u50cd\u3057\u3001Copilot \u304c URL \u3078\u306e\u30ea\u30f3\u30af\u3092\u51fa\u529b\u3057\u307e\u3059\uff01\ud83c\udf89","title":"Step 5: Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b"},{"location":"ja/docs/getting-started/first-app-tutorial/#step-6","text":"Service \u306e\u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001 copilot app delete \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001ECS \u30b5\u30fc\u30d3\u30b9\u3084 ECR \u30ea\u30dd\u30b8\u30c8\u30ea\u306a\u3069\u3001Copilot \u304c Application \u306b\u8a2d\u5b9a\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u304c\u3059\u3079\u3066\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002 $ copilot app delete","title":"Step 6: \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7"},{"location":"ja/docs/getting-started/first-app-tutorial/#_2","text":"\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01AWS Copilot \u3092\u4f7f\u3063\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u8a2d\u5b9a\u3057\u3001Amazon ECS on Fargate \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002AWS Copilot \u306f\u3001AWS \u4e0a\u3067\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3001\u30ea\u30ea\u30fc\u30b9\u3001\u904b\u7528\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3059\u3002 Application \u306e\u30c7\u30d7\u30ed\u30a4\u3092\u697d\u3057\u3093\u3067\u3044\u305f\u3060\u3051\u307e\u3057\u305f\u304b\uff1fAWS Copilot \u3092\u3088\u308a\u6df1\u304f\u7406\u89e3\u3057\u3001AWS \u4e0a\u3067\u672c\u756a\u74b0\u5883\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u30fb\u7ba1\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3076\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\u5f15\u304d\u7d9a\u304d\u30b5\u30a4\u30c9\u30d0\u30fc\u306e Developing \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01"},{"location":"ja/docs/getting-started/install/","text":"Copilot \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb AWS Copilot\u306f\u3001 Homebrew \u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u304b\u3001\u30d0\u30a4\u30ca\u30ea\u3092\u76f4\u63a5\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \ud83c\udf7b brew install aws/tap/copilot-cli \u624b\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u30b3\u30d4\u30fc\uff06\u30da\u30fc\u30b9\u30c8\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002 macOS Linux x86 (64-bit) Linux (ARM) Windows \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux-arm64 && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 Invoke-WebRequest -OutFile 'C:\\Program Files\\copilot.exe' https://github.com/aws/copilot-cli/releases/latest/download/copilot-windows.exe Tip \u3088\u308a\u5feb\u9069\u306b\u3054\u5229\u7528\u3044\u305f\u3060\u304f\u305f\u3081\u306b\u3001 Windows Terminal \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\u6a29\u9650\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u7ba1\u7406\u8005\u3068\u3057\u3066\u5b9f\u884c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Info \u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f\u3001\"latest\" \u3092\u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001macOS \u3067 v0.6.0 \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5165\u529b\u3057\u307e\u3059\u3002 curl -Lo copilot https://github.com/aws/copilot-cli/releases/download/v0.6.0/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help","title":"Install Copilot"},{"location":"ja/docs/getting-started/install/#copilot","text":"AWS Copilot\u306f\u3001 Homebrew \u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u304b\u3001\u30d0\u30a4\u30ca\u30ea\u3092\u76f4\u63a5\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","title":"Copilot \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ja/docs/getting-started/install/#homebrew","text":"brew install aws/tap/copilot-cli","title":"Homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \ud83c\udf7b"},{"location":"ja/docs/getting-started/install/#_1","text":"\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u30b3\u30d4\u30fc\uff06\u30da\u30fc\u30b9\u30c8\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002 macOS Linux x86 (64-bit) Linux (ARM) Windows \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux-arm64 && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b3\u30de\u30f3\u30c9 Invoke-WebRequest -OutFile 'C:\\Program Files\\copilot.exe' https://github.com/aws/copilot-cli/releases/latest/download/copilot-windows.exe Tip \u3088\u308a\u5feb\u9069\u306b\u3054\u5229\u7528\u3044\u305f\u3060\u304f\u305f\u3081\u306b\u3001 Windows Terminal \u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\u6a29\u9650\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u7ba1\u7406\u8005\u3068\u3057\u3066\u5b9f\u884c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Info \u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f\u3001\"latest\" \u3092\u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001macOS \u3067 v0.6.0 \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5165\u529b\u3057\u307e\u3059\u3002 curl -Lo copilot https://github.com/aws/copilot-cli/releases/download/v0.6.0/copilot-darwin && chmod +x copilot && sudo mv copilot /usr/local/bin/copilot && copilot --help","title":"\u624b\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"ja/docs/getting-started/verify/","text":"\uff08\u30aa\u30d7\u30b7\u30e7\u30f3\uff09\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u691c\u8a3c AWS Copilot CLI \u306e\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u3001PGP \u7f72\u540d\u3092\u4f7f\u7528\u3057\u3066\u6697\u53f7\u3067\u7f72\u540d\u3055\u308c\u307e\u3059\u3002PGP \u7f72\u540d\u3092\u4f7f\u7528\u3057\u3066\u3001AWS Copilot CLI \u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u59a5\u5f53\u6027\u3092\u691c\u8a3c\u3067\u304d\u307e\u3059\u3002GnuPG \u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3053\u306e\u7f72\u540d\u3092\u691c\u8a3c\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u884c\u3044\u307e\u3059\u3002 GnuPG \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 GnuPG \u306e Web \u30b5\u30a4\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 macOS \u306e\u5834\u5408\u306f\u3001Homebrew \u306e\u4f7f\u7528\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u88fd\u54c1\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u3001Homebrew \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 Homebrew \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002Homebrew \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u3089\u3001macOS \u7aef\u672b\u304b\u3089\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 brew install gnupg Linux \u306e\u5834\u5408\u306f\u3001\u304a\u4f7f\u3044\u306e Linux \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u4f7f\u7528\u3057\u3066 gpg \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Windows \u306e\u5834\u5408\u306f\u3001GnuPG \u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089 Windows \u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 GnuPG Download \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3053\u306e\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\u304b\u3001\u624b\u52d5\u3067\u30ad\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 \u30aa\u30d7\u30b7\u30e7\u30f3 1: \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30ad\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 gpg --keyserver hkps://keyserver.ubuntu.com --recv BCE9D9A42D51784F + \u30ad\u30fc\u30b5\u30fc\u30d0\u306b\u95a2\u3059\u308b\u88dc\u8db3(\u30aa\u30d7\u30b7\u30e7\u30f3) \u305d\u306e\u4ed6\u306e\u4ee3\u66ff\u306b\u306a\u308b\u30ad\u30fc\u30b5\u30fc\u30d0\u306b\u306f\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 hkps://keys.openpgp.org hkps://pgp.mit.edu \u7570\u306a\u308b\u30ad\u30fc\u30b5\u30fc\u30d0\u306b\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6700\u521d\u306b\u5b9f\u884c\u3057\u3001\u4fdd\u5b58\u3055\u308c\u305f\u30ad\u30fc\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002 gpg --keyserver ${KEYSERVER} --verbose --import-options show-only --recv BCE9D9A42D51784F . \u30aa\u30d7\u30b7\u30e7\u30f3 2: \u6b21\u306e Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u306e\u5185\u5bb9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 -----BEGIN PGP PUBLIC KEY BLOCK----- Version: GnuPG v2 mQINBFq1SasBEADliGcT1NVJ1ydfN8DqebYYe9ne3dt6jqKFmKowLmm6LLGJe7HU jGtqhCWRDkN+qPpHqdArRgDZAtn2pXY5fEipHgar4CP8QgRnRMO2fl74lmavr4Vg 7K/KH8VHlq2uRw32/B94XLEgRbGTMdWFdKuxoPCttBQaMj3LGn6Pe+6xVWRkChQu BoQAhjBQ+bEm0kNy0LjNgjNlnL3UMAG56t8E3LANIgGgEnpNsB1UwfWluPoGZoTx N+6pHBJrKIL/1v/ETU4FXpYw2zvhWNahxeNRnoYj3uycHkeliCrw4kj0+skizBgO 2K7oVX8Oc3j5+ZilhL/qDLXmUCb2az5cMM1mOoF8EKX5HaNuq1KfwJxqXE6NNIcO lFTrT7QwD5fMNld3FanLgv/ZnIrsSaqJOL6zRSq8O4LN1OWBVbndExk2Kr+5kFxn 5lBPgfPgRj5hQ+KTHMa9Y8Z7yUc64BJiN6F9Nl7FJuSsfqbdkvRLsQRbcBG9qxX3 rJAEhieJzVMEUNl+EgeCkxj5xuSkNU7zw2c3hQZqEcrADLV+hvFJktOz9Gm6xzbq lTnWWCz4xrIWtuEBA2qE+MlDheVd78a3gIsEaSTfQq0osYXaQbvlnSWOoc1y/5Zb zizHTJIhLtUyls9WisP2s0emeHZicVMfW61EgPrJAiupgc7kyZvFt4YwfwARAQAB tCRBbWF6b24gRUNTIDxlY3Mtc2VjdXJpdHlAYW1hem9uLmNvbT6JAhwEEAECAAYF AlrjL0YACgkQHivRXs0TaQrg1g/+JppwPqHnlVPmv7lessB8I5UqZeD6p6uVpHd7 Bs3pcPp8BV7BdRbs3sPLt5bV1+rkqOlw+0gZ4Q/ue/YbWtOAt4qY0OcEo0HgcnaX lsB827QIfZIVtGWMhuh94xzm/SJkvngml6KB3YJNnWP61A9qJ37/VbVVLzvcmazA McWB4HUMNrhd0JgBCo0gIpqCbpJEvUc02Bjn23eEJsS9kC7OUAHyQkVnx4d9UzXF 4OoISF6hmQKIBoLnRrAlj5Qvs3GhvHQ0ThYq0Grk/KMJJX2CSqt7tWJ8gk1n3H3Y SReRXJRnv7DsDDBwFgT6r5Q2HW1TBUvaoZy5hF6maD09nHcNnvBjqADzeT8Tr/Qu bBCLzkNSYqqkpgtwv7seoD2P4n1giRvDAOEfMZpVkUr+C252IaH1HZFEz+TvBVQM Y8OWWxmIJW+J6evjo3N1eO19UHv71jvoF8zljbI4bsL2c+QTJmOv7nRqzDQgCWyp Id/v2dUVVTk1j9omuLBBwNJzQCB+72LcIzJhYmaP1HC4LcKQG+/f41exuItenatK lEJQhYtyVXcBlh6Yn/wzNg2NWOwb3vqY/F7m6u9ixAwgtIMgPCDE4aJ86zrrXYFz N2HqkTSQh77Z8KPKmyGopsmN/reMuilPdINb249nA0dzoN+nj+tTFOYCIaLaFyjs Z0r1QAOJAjkEEwECACMFAlq1SasCGwMHCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIX gAAKCRC86dmkLVF4T9iFEACEnkm1dNXsWUx34R3c0vamHrPxvfkyI1FlEUen8D1h uX9xy6jCEROHWEp0rjGK4QDPgM93sWJ+s1UAKg214QRVzft0y9/DdR+twApA0fzy uavIthGd6+03jAAo6udYDE+cZC3P7XBbDiYEWk4XAF9I1JjB8hTZUgvXBL046JhG eM17+crgUyQeetkiOQemLbsbXQ40Bd9V7zf7XJraFd8VrwNUwNb+9KFtgAsc9rk+ YIT/PEf+YOPysgcxI4sTWghtyCulVnuGoskgDv4v73PALU0ieUrvvQVqWMRvhVx1 0X90J7cC1KOyhlEQQ1aFTgmQjmXexVTwIBm8LvysFK6YXM41KjOrlz3+6xBIm/qe bFyLUnf4WoiuOplAaJhK9pRY+XEnGNxdtN4D26Kd0F+PLkm3Tr3Hy3b1Ok34FlGr KVHUq1TZD7cvMnnNKEELTUcKX+1mV3an16nmAg/my1JSUt6BNK2rJpY1s/kkSGSE XQ4zuF2IGCpvBFhYAlt5Un5zwqkwwQR3/n2kwAoDzonJcehDw/C/cGos5D0aIU7I K2X2aTD3+pA7Mx3IMe2hqmYqRt9X42yF1PIEVRneBRJ3HDezAgJrNh0GQWRQkhIx gz6/cTR+ekr5TptVszS9few2GpI5bCgBKBisZIssT89aw7mAKWut0Gcm4qM9/yK6 1bkCDQRatUmrARAAxNPvVwreJ2yAiFcUpdRlVhsuOgnxvs1QgsIw3H7+Pacr9Hpe 8uftYZqdC82KeSKhpHq7c8gMTMucIINtH25x9BCc73E33EjCL9Lqov1TL7+QkgHe T+JIhZwdD8Mx2K+LVVVu/aWkNrfMuNwyDUciSI4D5QHa8T+F8fgN4OTpwYjirzel 5yoICMr9hVcbzDNv/ozKCxjx+XKgnFc3wrnDfJfntfDAT7ecwbUTL+viQKJ646s+ psiqXRYtVvYInEhLVrJ0aV6zHFoigE/Bils6/g7ru1Q6CEHqEw++APs5CcE8VzJu WAGSVHZgun5Y9N4quR/M9Vm+IPMhTxrAg7rOvyRN9cAXfeSMf77I+XTifigNna8x t/MOdjXr1fjF4pThEi5u6WsuRdFwjY2azEv3vevodTi4HoJReH6dFRa6y8c+UDgl 2iHiOKIpQqLbHEfQmHcDd2fix+AaJKMnPGNku9qCFEMbgSRJpXz6BfwnY1QuKE+I R6jA0frUNt2jhiGG/F8RceXzohaaC/Cx7LUCUFWc0n7z32C9/Dtj7I1PMOacdZzz bjJzRKO/ZDv+UN/c9dwAkllzAyPMwGBkUaY68EBstnIliW34aWm6IiHhxioVPKSp VJfyiXPO0EXqujtHLAeChfjcns3I12YshT1dv2PafG53fp33ZdzeUgsBo+EAEQEA AYkCHwQYAQIACQUCWrVJqwIbDAAKCRC86dmkLVF4T+ZdD/9x/8APzgNJF3o3STrF jvnV1ycyhWYGAeBJiu7wjsNWwzMFOv15tLjB7AqeVxZn+WKDD/mIOQ45OZvnYZuy X7DR0JszaH9wrYTxZLVruAu+t6UL0y/XQ4L1GZ9QR6+r+7t1Mvbfy7BlHbvX/gYt Rwe/uwdibI0CagEzyX+2D3kTOlHO5XThbXaNf8AN8zha91Jt2Q2UR2X5T6JcwtMz FBvZnl3LSmZyE0EQehS2iUurU4uWOpGppuqVnbi0jbCvCHKgDGrqZ0smKNAQng54 F365W3g8AfY48s8XQwzmcliowYX9bT8PZiEi0J4QmQh0aXkpqZyFefuWeOL2R94S XKzr+gRh3BAULoqF+qK+IUMxTip9KTPNvYDpiC66yBiT6gFDji5Ca9pGpJXrC3xe TXiKQ8DBWDhBPVPrruLIaenTtZEOsPc4I85yt5U9RoPTStcOr34s3w5yEaJagt6S Gc5r9ysjkfH6+6rbi1ujxMgROSqtqr+RyB+V9A5/OgtNZc8llK6u4UoOCde8jUUW vqWKvjJB/Kz3u4zaeNu2ZyyHaOqOuH+TETcW+jsY9IhbEzqN5yQYGi4pVmDkY5vu lXbJnbqPKpRXgM9BecV9AMbPgbDq/5LnHJJXg+G8YQOgp4lR/hC1TEFdIp5wM8AK CWsENyt2o1rjgMXiZOMF8A5oBLkCDQRatUuSARAAr77kj7j2QR2SZeOSlFBvV7oS mFeSNnz9xZssqrsm6bTwSHM6YLDwc7Sdf2esDdyzONETwqrVCg+FxgL8hmo9hS4c rR6tmrP0mOmptr+xLLsKcaP7ogIXsyZnrEAEsvW8PnfayoiPCdc3cMCR/lTnHFGA 7EuR/XLBmi7Qg9tByVYQ5Yj5wB9V4B2yeCt3XtzPqeLKvaxl7PNelaHGJQY/xo+m V0bndxf9IY+4oFJ4blD32WqvyxESo7vW6WBh7oqv3Zbm0yQrr8a6mDBpqLkvWwNI 3kpJR974tg5o5LfDu1BeeyHWPSGm4U/G4JB+JIG1ADy+RmoWEt4BqTCZ/knnoGvw D5sTCxbKdmuOmhGyTssoG+3OOcGYHV7pWYPhazKHMPm201xKCjH1RfzRULzGKjD+ yMLT1I3AXFmLmZJXikAOlvE3/wgMqCXscbycbLjLD/bXIuFWo3rzoezeXjgi/DJx jKBAyBTYO5nMcth1O9oaFd9d0HbsOUDkIMnsgGBE766Piro6MHo0T0rXl07Tp4pI rwuSOsc6XzCzdImj0Wc6axS/HeUKRXWdXJwno5awTwXKRJMXGfhCvSvbcbc2Wx+L IKvmB7EB4K3fmjFFE67yolmiw2qRcUBfygtH3eL5XZU28MiCpue8Y8GKJoBAUyvf KeM1rO8Jm3iRAc5a/D0AEQEAAYkEPgQYAQIACQUCWrVLkgIbAgIpCRC86dmkLVF4 T8FdIAQZAQIABgUCWrVLkgAKCRDePL1hra+LjtHYD/9MucxdFe6bXO1dQR4tKhhQ P0LRqy6zlBY9ILCLowNdGZdqorogUiUymgn3VhEhVtxTOoHcN7qOuM01PNsRnOeS EYjf8Xrb1clzkD6xULwmOclTb9bBxnBc/4PFvHAbZW3QzusaZniNgkuxt6BTfloS Of4inq71kjmGK+TlzQ6mUMQUg228NUQC+a84EPqYyAeY1sgvgB7hJBhYL0QAxhcW 6m20Rd8iEc6HyzJ3yCOCsKip/nRWAbf0OvfHfRBp0+m0ZwnJM8cPRFjOqqzFpKH9 HpDmTrC4wKP1+TL52LyEqNh4yZitXmZNV7giSRIkk0eDSko+bFy6VbMzKUMkUJK3 D3eHFAMkujmbfJmSMTJOPGn5SB1HyjCZNx6bhIIbQyEUB9gKCmUFaqXKwKpF6rj0 iQXAJxLR/shZ5Rk96VxzOphUl7T90m/PnUEEPwq8KsBhnMRgxa0RFidDP+n9fgtv HLmrOqX9zBCVXh0mdWYLrWvmzQFWzG7AoE55fkf8nAEPsalrCdtaNUBHRXA0OQxG AHMOdJQQvBsmqMvuAdjkDWpFu5y0My5ddU+hiUzUyQLjL5Hhd5LOUDdewlZgIw1j xrEAUzDKetnemM8GkHxDgg8koev5frmShJuce7vSjKpCNg3EIJSgqMOPFjJuLWtZ vjHeDNbJy6uNL65ckJy6WhGjEADS2WAW1D6Tfekkc21SsIXk/LqEpLMR/0g5OUif wcEN1rS9IJXBwIy8MelN9qr5KcKQLmfdfBNEyyceBhyVl0MDyHOKC+7PofMtkGBq 13QieRHv5GJ8LB3fclqHV8pwTTo3Bc8z2g0TjmUYAN/ixETdReDoKavWJYSE9yoM aaJu279ioVTrwpECse0XkiRyKToTjwOb73CGkBZZpJyqux/rmCV/fp4ALdSW8zbz FJVORaivhoWwzjpfQKhwcU9lABXi2UvVm14v0AfeI7oiJPSU1zM4fEny4oiIBXlR zhFNih1UjIu82X16mTm3BwbIga/s1fnQRGzyhqUIMii+mWra23EwjChaxpvjjcUH 5ilLc5Zq781aCYRygYQw+hu5nFkOH1R+Z50Ubxjd/aqUfnGIAX7kPMD3Lof4KldD Q8ppQriUvxVo+4nPV6rpTy/PyqCLWDjkguHpJsEFsMkwajrAz0QNSAU5CJ0G2Zu4 yxvYlumHCEl7nbFrm0vIiA75Sa8KnywTDsyZsu3XcOcf3g+g1xWTpjJqy2bYXlqz 9uDOWtArWHOis6bq8l9RE6xr1RBVXS6uqgQIZFBGyq66b0dIq4D2JdsUvgEMaHbc e7tBfeB1CMBdA64e9Rq7bFR7Tvt8gasCZYlNr3lydh+dFHIEkH53HzQe6l88HEic +0jVnLkCDQRa55wJARAAyLya2Lx6gyoWoJN1a6740q3o8e9d4KggQOfGMTCflmeq ivuzgN+3DZHN+9ty2KxXMtn0mhHBerZdbNJyjMNT1gAgrhPNB4HtXBXum2wS57WK DNmade914L7FWTPAWBG2Wn448OEHTqsClICXXWy9IICgclAEyIq0Yq5mAdTEgRJS Z8t4GpwtDL9gNQyFXaWQmDmkAsCygQMvhAlmu9xOIzQG5CxSnZFk7zcuL60k14Z3 Cmt49k4T/7ZU8goWi8tt+rU78/IL3J/fF9+1civ1OwuUidgfPCSvOUW1JojsdCQA L+RZJcoXq7lfOFj/eNjeOSstCTDPfTCL+kThE6E5neDtbQHBYkEX1BRiTedsV4+M ucgiTrdQFWKf89G72xdv8ut9AYYQ2BbEYU+JAYhUH8rYYui2dHKJIgjNvJscuUWb +QEqJIRleJRhrO+/CHgMs4fZAkWF1VFhKBkcKmEjLn1f7EJJUUW84ZhKXjO/AUPX 1CHsNjziRceuJCJYox1cwsoq6jTE50GiNzcIxTn9xUc0UMKFeggNAFys1K+TDTm3 Bzo8H5ucjCUEmUm9lhkGwqTZgOlRX5eqPX+JBoSaObqhgqCa5IPinKRa6MgoFPHK 6sYKqroYwBGgZm6Js5chpNchvJMs/3WXNOEVg0J3z3vP0DMhxqWm+r+n9zlW8qsA EQEAAYkEPgQYAQgACQUCWuecCQIbAgIpCRC86dmkLVF4T8FdIAQZAQgABgUCWuec CQAKCRBQ3szEcQ5hr+ykD/4tOLRHFHXuKUcxgGaubUcVtsFrwBKma1cYjqaPms8u 6Sk0wfGRI32G/GhOrp0Ts/MOkbObq6VLTh8N5Yc/53MEl8zQFw9Y5AmRoW4PZXER ujs5s7p4oR7xHMihMjCCBn1bvrR+34YPfgzTcgLiOEFHYT8UTxwnGmXOvNkMM7md xD3CV5q6VAte8WKBo/220II3fcQlc9r/oWX4kXXkb0v9hoGwKbDJ1tzqTPrp/xFt yohqnvImpnlz+Q9zXmbrWYL9/g8VCmW/NN2gju2G3Lu/TlFUWIT4v/5OPK6TdeNb VKJO4+S8bTayqSG9CML1S57KSgCo5HUhQWeSNHI+fpe5oX6FALPT9JLDce8OZz1i cZZ0MELP37mOOQun0AlmHm/hVzf0f311PtbzcqWaE51tJvgUR/nZFo6Ta3O5Ezhs 3VlEJNQ1Ijf/6DH87SxvAoRIARCuZd0qxBcDK0avpFzUtbJd24lRA3WJpkEiMqKv RDVZkE4b6TW61f0o+LaVfK6E8oLpixegS4fiqC16mFrOdyRk+RJJfIUyz0WTDVmt g0U1CO1ezokMSqkJ7724pyjr2xf/r9/sC6aOJwB/lKgZkJfC6NqL7TlxVA31dUga LEOvEJTTE4gl+tYtfsCDvALCtqL0jduSkUo+RXcBItmXhA+tShW0pbS2Rtx/ixua KohVD/0R4QxiSwQmICNtm9mw9ydIl1yjYXX5a9x4wMJracNY/LBybJPFnZnT4dYR z4XjqysDwvvYZByaWoIe3QxjX84V6MlI2IdAT/xImu8gbaCI8tmyfpIrLnPKiR9D VFYfGBXuAX7+HgPPSFtrHQONCALxxzlbNpS+zxt9r0MiLgcLyspWxSdmoYGZ6nQP RO5Nm/ZVS+u2imPCRzNUZEMa+dlE6kHx0rS0dPiuJ4O7NtPeYDKkoQtNagspsDvh cK7CSqAiKMq06UBTxqlTSRkm62eOCtcs3p3OeHu5GRZF1uzTET0ZxYkaPgdrQknx ozjP5mC7X+45lcCfmcVt94TFNL5HwEUVJpmOgmzILCI8yoDTWzloo+i+fPFsXX4f kynhE83mSEcr5VHFYrTY3mQXGmNJ3bCLuc/jq7ysGq69xiKmTlUeXFm+aojcRO5i zyShIRJZ0GZfuzDYFDbMV9amA/YQGygLw//zP5ju5SW26dNxlf3MdFQE5JJ86rn9 MgZ4gcpazHEVUsbZsgkLizRp9imUiH8ymLqAXnfRGlU/LpNSefnvDFTtEIRcpOHc bhayG0bk51Bd4mioOXnIsKy4j63nJXA27x5EVVHQ1sYRN8Ny4Fdr2tMAmj2O+X+J qX2yy/UX5nSPU492e2CdZ1UhoU0SRFY3bxKHKB7SDbVeav+K5g== =Gi5D -----END PGP PUBLIC KEY BLOCK----- \u53c2\u7167\u7528\u306e Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002 Key ID: BCE9D9A42D51784F Type: RSA Size: 4096/4096 Expires: Never User ID: Amazon ECS Key fingerprint: F34C 3DDA E729 26B0 79BE AEC6 BCE9 D9A4 2D51 784F \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 gpg --import <public_key_filename> AWS Copilot CLI \u306e\u7f72\u540d\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u7f72\u540d\u306f\u3001ASCII \u3067\u30c7\u30bf\u30c3\u30c1\u6e08\u307f\u306e PGP \u7f72\u540d\u3067\u3001\u62e1\u5f35\u5b50\u304c .asc \u306e\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u7f72\u540d\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u5bfe\u5fdc\u3059\u308b\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3068\u540c\u3058\u540d\u524d\u304c\u4ed8\u3051\u3089\u308c\u3066\u304a\u308a\u3001\u62e1\u5f35\u5b50\u306f .asc \u3067\u3059\u3002 === macOS \u306e\u5834\u5408: `sudo curl -Lo copilot.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-darwin.asc` === Linux \u306e\u5834\u5408: `sudo curl -Lo copilot.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux.asc` === Windows \u306e\u5834\u5408: `Invoke-WebRequest -OutFile ecs-cli.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-windows.exe` \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u7f72\u540d\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002 macOS \u304a\u3088\u3073 Linux \u306e\u5834\u5408: gpg --verify copilot.asc /usr/local/bin/copilot Windows \u306e\u5834\u5408: gpg --verify ecs-cli.asc 'C:\\Program Files\\copilot.exe' \u6b63\u5e38\u306a\u51fa\u529b: gpg: Signature made Tue Apr 3 13:29:30 2018 PDT gpg: using RSA key DE3CBD61ADAF8B8E gpg: Good signature from \"Amazon ECS <ecs-security@amazon.com>\" [unknown] gpg: WARNING: This key is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: F34C 3DDA E729 26B0 79BE AEC6 BCE9 D9A4 2D51 784F Subkey fingerprint: EB3D F841 E2C9 212A 2BD4 2232 DE3C BD61 ADAF 8B8E Warning \u51fa\u529b\u306b\u8b66\u544a\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u500b\u4eba PGP \u30ad\u30fc (\u6301\u3063\u3066\u3044\u308b\u5834\u5408) \u3068 Amazon ECS PGP \u30ad\u30fc\u306e\u9593\u306b\u4fe1\u983c\u30c1\u30a7\u30fc\u30f3\u304c\u306a\u3044\u305f\u3081\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 Web of trust \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"(Optional) Verify the installation"},{"location":"ja/docs/getting-started/verify/#_1","text":"AWS Copilot CLI \u306e\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306f\u3001PGP \u7f72\u540d\u3092\u4f7f\u7528\u3057\u3066\u6697\u53f7\u3067\u7f72\u540d\u3055\u308c\u307e\u3059\u3002PGP \u7f72\u540d\u3092\u4f7f\u7528\u3057\u3066\u3001AWS Copilot CLI \u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u59a5\u5f53\u6027\u3092\u691c\u8a3c\u3067\u304d\u307e\u3059\u3002GnuPG \u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3053\u306e\u7f72\u540d\u3092\u691c\u8a3c\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u884c\u3044\u307e\u3059\u3002 GnuPG \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 GnuPG \u306e Web \u30b5\u30a4\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 macOS \u306e\u5834\u5408\u306f\u3001Homebrew \u306e\u4f7f\u7528\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u88fd\u54c1\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u3001Homebrew \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 Homebrew \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002Homebrew \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u3089\u3001macOS \u7aef\u672b\u304b\u3089\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 brew install gnupg Linux \u306e\u5834\u5408\u306f\u3001\u304a\u4f7f\u3044\u306e Linux \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u4f7f\u7528\u3057\u3066 gpg \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Windows \u306e\u5834\u5408\u306f\u3001GnuPG \u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u304b\u3089 Windows \u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 GnuPG Download \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3053\u306e\u30ad\u30fc\u3092\u53d6\u5f97\u3059\u308b\u304b\u3001\u624b\u52d5\u3067\u30ad\u30fc\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 \u30aa\u30d7\u30b7\u30e7\u30f3 1: \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30ad\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 gpg --keyserver hkps://keyserver.ubuntu.com --recv BCE9D9A42D51784F + \u30ad\u30fc\u30b5\u30fc\u30d0\u306b\u95a2\u3059\u308b\u88dc\u8db3(\u30aa\u30d7\u30b7\u30e7\u30f3) \u305d\u306e\u4ed6\u306e\u4ee3\u66ff\u306b\u306a\u308b\u30ad\u30fc\u30b5\u30fc\u30d0\u306b\u306f\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 hkps://keys.openpgp.org hkps://pgp.mit.edu \u7570\u306a\u308b\u30ad\u30fc\u30b5\u30fc\u30d0\u306b\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6700\u521d\u306b\u5b9f\u884c\u3057\u3001\u4fdd\u5b58\u3055\u308c\u305f\u30ad\u30fc\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002 gpg --keyserver ${KEYSERVER} --verbose --import-options show-only --recv BCE9D9A42D51784F . \u30aa\u30d7\u30b7\u30e7\u30f3 2: \u6b21\u306e Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u306e\u5185\u5bb9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 -----BEGIN PGP PUBLIC KEY BLOCK----- Version: GnuPG v2 mQINBFq1SasBEADliGcT1NVJ1ydfN8DqebYYe9ne3dt6jqKFmKowLmm6LLGJe7HU jGtqhCWRDkN+qPpHqdArRgDZAtn2pXY5fEipHgar4CP8QgRnRMO2fl74lmavr4Vg 7K/KH8VHlq2uRw32/B94XLEgRbGTMdWFdKuxoPCttBQaMj3LGn6Pe+6xVWRkChQu BoQAhjBQ+bEm0kNy0LjNgjNlnL3UMAG56t8E3LANIgGgEnpNsB1UwfWluPoGZoTx N+6pHBJrKIL/1v/ETU4FXpYw2zvhWNahxeNRnoYj3uycHkeliCrw4kj0+skizBgO 2K7oVX8Oc3j5+ZilhL/qDLXmUCb2az5cMM1mOoF8EKX5HaNuq1KfwJxqXE6NNIcO lFTrT7QwD5fMNld3FanLgv/ZnIrsSaqJOL6zRSq8O4LN1OWBVbndExk2Kr+5kFxn 5lBPgfPgRj5hQ+KTHMa9Y8Z7yUc64BJiN6F9Nl7FJuSsfqbdkvRLsQRbcBG9qxX3 rJAEhieJzVMEUNl+EgeCkxj5xuSkNU7zw2c3hQZqEcrADLV+hvFJktOz9Gm6xzbq lTnWWCz4xrIWtuEBA2qE+MlDheVd78a3gIsEaSTfQq0osYXaQbvlnSWOoc1y/5Zb zizHTJIhLtUyls9WisP2s0emeHZicVMfW61EgPrJAiupgc7kyZvFt4YwfwARAQAB tCRBbWF6b24gRUNTIDxlY3Mtc2VjdXJpdHlAYW1hem9uLmNvbT6JAhwEEAECAAYF AlrjL0YACgkQHivRXs0TaQrg1g/+JppwPqHnlVPmv7lessB8I5UqZeD6p6uVpHd7 Bs3pcPp8BV7BdRbs3sPLt5bV1+rkqOlw+0gZ4Q/ue/YbWtOAt4qY0OcEo0HgcnaX lsB827QIfZIVtGWMhuh94xzm/SJkvngml6KB3YJNnWP61A9qJ37/VbVVLzvcmazA McWB4HUMNrhd0JgBCo0gIpqCbpJEvUc02Bjn23eEJsS9kC7OUAHyQkVnx4d9UzXF 4OoISF6hmQKIBoLnRrAlj5Qvs3GhvHQ0ThYq0Grk/KMJJX2CSqt7tWJ8gk1n3H3Y SReRXJRnv7DsDDBwFgT6r5Q2HW1TBUvaoZy5hF6maD09nHcNnvBjqADzeT8Tr/Qu bBCLzkNSYqqkpgtwv7seoD2P4n1giRvDAOEfMZpVkUr+C252IaH1HZFEz+TvBVQM Y8OWWxmIJW+J6evjo3N1eO19UHv71jvoF8zljbI4bsL2c+QTJmOv7nRqzDQgCWyp Id/v2dUVVTk1j9omuLBBwNJzQCB+72LcIzJhYmaP1HC4LcKQG+/f41exuItenatK lEJQhYtyVXcBlh6Yn/wzNg2NWOwb3vqY/F7m6u9ixAwgtIMgPCDE4aJ86zrrXYFz N2HqkTSQh77Z8KPKmyGopsmN/reMuilPdINb249nA0dzoN+nj+tTFOYCIaLaFyjs Z0r1QAOJAjkEEwECACMFAlq1SasCGwMHCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIX gAAKCRC86dmkLVF4T9iFEACEnkm1dNXsWUx34R3c0vamHrPxvfkyI1FlEUen8D1h uX9xy6jCEROHWEp0rjGK4QDPgM93sWJ+s1UAKg214QRVzft0y9/DdR+twApA0fzy uavIthGd6+03jAAo6udYDE+cZC3P7XBbDiYEWk4XAF9I1JjB8hTZUgvXBL046JhG eM17+crgUyQeetkiOQemLbsbXQ40Bd9V7zf7XJraFd8VrwNUwNb+9KFtgAsc9rk+ YIT/PEf+YOPysgcxI4sTWghtyCulVnuGoskgDv4v73PALU0ieUrvvQVqWMRvhVx1 0X90J7cC1KOyhlEQQ1aFTgmQjmXexVTwIBm8LvysFK6YXM41KjOrlz3+6xBIm/qe bFyLUnf4WoiuOplAaJhK9pRY+XEnGNxdtN4D26Kd0F+PLkm3Tr3Hy3b1Ok34FlGr KVHUq1TZD7cvMnnNKEELTUcKX+1mV3an16nmAg/my1JSUt6BNK2rJpY1s/kkSGSE XQ4zuF2IGCpvBFhYAlt5Un5zwqkwwQR3/n2kwAoDzonJcehDw/C/cGos5D0aIU7I K2X2aTD3+pA7Mx3IMe2hqmYqRt9X42yF1PIEVRneBRJ3HDezAgJrNh0GQWRQkhIx gz6/cTR+ekr5TptVszS9few2GpI5bCgBKBisZIssT89aw7mAKWut0Gcm4qM9/yK6 1bkCDQRatUmrARAAxNPvVwreJ2yAiFcUpdRlVhsuOgnxvs1QgsIw3H7+Pacr9Hpe 8uftYZqdC82KeSKhpHq7c8gMTMucIINtH25x9BCc73E33EjCL9Lqov1TL7+QkgHe T+JIhZwdD8Mx2K+LVVVu/aWkNrfMuNwyDUciSI4D5QHa8T+F8fgN4OTpwYjirzel 5yoICMr9hVcbzDNv/ozKCxjx+XKgnFc3wrnDfJfntfDAT7ecwbUTL+viQKJ646s+ psiqXRYtVvYInEhLVrJ0aV6zHFoigE/Bils6/g7ru1Q6CEHqEw++APs5CcE8VzJu WAGSVHZgun5Y9N4quR/M9Vm+IPMhTxrAg7rOvyRN9cAXfeSMf77I+XTifigNna8x t/MOdjXr1fjF4pThEi5u6WsuRdFwjY2azEv3vevodTi4HoJReH6dFRa6y8c+UDgl 2iHiOKIpQqLbHEfQmHcDd2fix+AaJKMnPGNku9qCFEMbgSRJpXz6BfwnY1QuKE+I R6jA0frUNt2jhiGG/F8RceXzohaaC/Cx7LUCUFWc0n7z32C9/Dtj7I1PMOacdZzz bjJzRKO/ZDv+UN/c9dwAkllzAyPMwGBkUaY68EBstnIliW34aWm6IiHhxioVPKSp VJfyiXPO0EXqujtHLAeChfjcns3I12YshT1dv2PafG53fp33ZdzeUgsBo+EAEQEA AYkCHwQYAQIACQUCWrVJqwIbDAAKCRC86dmkLVF4T+ZdD/9x/8APzgNJF3o3STrF jvnV1ycyhWYGAeBJiu7wjsNWwzMFOv15tLjB7AqeVxZn+WKDD/mIOQ45OZvnYZuy X7DR0JszaH9wrYTxZLVruAu+t6UL0y/XQ4L1GZ9QR6+r+7t1Mvbfy7BlHbvX/gYt Rwe/uwdibI0CagEzyX+2D3kTOlHO5XThbXaNf8AN8zha91Jt2Q2UR2X5T6JcwtMz FBvZnl3LSmZyE0EQehS2iUurU4uWOpGppuqVnbi0jbCvCHKgDGrqZ0smKNAQng54 F365W3g8AfY48s8XQwzmcliowYX9bT8PZiEi0J4QmQh0aXkpqZyFefuWeOL2R94S XKzr+gRh3BAULoqF+qK+IUMxTip9KTPNvYDpiC66yBiT6gFDji5Ca9pGpJXrC3xe TXiKQ8DBWDhBPVPrruLIaenTtZEOsPc4I85yt5U9RoPTStcOr34s3w5yEaJagt6S Gc5r9ysjkfH6+6rbi1ujxMgROSqtqr+RyB+V9A5/OgtNZc8llK6u4UoOCde8jUUW vqWKvjJB/Kz3u4zaeNu2ZyyHaOqOuH+TETcW+jsY9IhbEzqN5yQYGi4pVmDkY5vu lXbJnbqPKpRXgM9BecV9AMbPgbDq/5LnHJJXg+G8YQOgp4lR/hC1TEFdIp5wM8AK CWsENyt2o1rjgMXiZOMF8A5oBLkCDQRatUuSARAAr77kj7j2QR2SZeOSlFBvV7oS mFeSNnz9xZssqrsm6bTwSHM6YLDwc7Sdf2esDdyzONETwqrVCg+FxgL8hmo9hS4c rR6tmrP0mOmptr+xLLsKcaP7ogIXsyZnrEAEsvW8PnfayoiPCdc3cMCR/lTnHFGA 7EuR/XLBmi7Qg9tByVYQ5Yj5wB9V4B2yeCt3XtzPqeLKvaxl7PNelaHGJQY/xo+m V0bndxf9IY+4oFJ4blD32WqvyxESo7vW6WBh7oqv3Zbm0yQrr8a6mDBpqLkvWwNI 3kpJR974tg5o5LfDu1BeeyHWPSGm4U/G4JB+JIG1ADy+RmoWEt4BqTCZ/knnoGvw D5sTCxbKdmuOmhGyTssoG+3OOcGYHV7pWYPhazKHMPm201xKCjH1RfzRULzGKjD+ yMLT1I3AXFmLmZJXikAOlvE3/wgMqCXscbycbLjLD/bXIuFWo3rzoezeXjgi/DJx jKBAyBTYO5nMcth1O9oaFd9d0HbsOUDkIMnsgGBE766Piro6MHo0T0rXl07Tp4pI rwuSOsc6XzCzdImj0Wc6axS/HeUKRXWdXJwno5awTwXKRJMXGfhCvSvbcbc2Wx+L IKvmB7EB4K3fmjFFE67yolmiw2qRcUBfygtH3eL5XZU28MiCpue8Y8GKJoBAUyvf KeM1rO8Jm3iRAc5a/D0AEQEAAYkEPgQYAQIACQUCWrVLkgIbAgIpCRC86dmkLVF4 T8FdIAQZAQIABgUCWrVLkgAKCRDePL1hra+LjtHYD/9MucxdFe6bXO1dQR4tKhhQ P0LRqy6zlBY9ILCLowNdGZdqorogUiUymgn3VhEhVtxTOoHcN7qOuM01PNsRnOeS EYjf8Xrb1clzkD6xULwmOclTb9bBxnBc/4PFvHAbZW3QzusaZniNgkuxt6BTfloS Of4inq71kjmGK+TlzQ6mUMQUg228NUQC+a84EPqYyAeY1sgvgB7hJBhYL0QAxhcW 6m20Rd8iEc6HyzJ3yCOCsKip/nRWAbf0OvfHfRBp0+m0ZwnJM8cPRFjOqqzFpKH9 HpDmTrC4wKP1+TL52LyEqNh4yZitXmZNV7giSRIkk0eDSko+bFy6VbMzKUMkUJK3 D3eHFAMkujmbfJmSMTJOPGn5SB1HyjCZNx6bhIIbQyEUB9gKCmUFaqXKwKpF6rj0 iQXAJxLR/shZ5Rk96VxzOphUl7T90m/PnUEEPwq8KsBhnMRgxa0RFidDP+n9fgtv HLmrOqX9zBCVXh0mdWYLrWvmzQFWzG7AoE55fkf8nAEPsalrCdtaNUBHRXA0OQxG AHMOdJQQvBsmqMvuAdjkDWpFu5y0My5ddU+hiUzUyQLjL5Hhd5LOUDdewlZgIw1j xrEAUzDKetnemM8GkHxDgg8koev5frmShJuce7vSjKpCNg3EIJSgqMOPFjJuLWtZ vjHeDNbJy6uNL65ckJy6WhGjEADS2WAW1D6Tfekkc21SsIXk/LqEpLMR/0g5OUif wcEN1rS9IJXBwIy8MelN9qr5KcKQLmfdfBNEyyceBhyVl0MDyHOKC+7PofMtkGBq 13QieRHv5GJ8LB3fclqHV8pwTTo3Bc8z2g0TjmUYAN/ixETdReDoKavWJYSE9yoM aaJu279ioVTrwpECse0XkiRyKToTjwOb73CGkBZZpJyqux/rmCV/fp4ALdSW8zbz FJVORaivhoWwzjpfQKhwcU9lABXi2UvVm14v0AfeI7oiJPSU1zM4fEny4oiIBXlR zhFNih1UjIu82X16mTm3BwbIga/s1fnQRGzyhqUIMii+mWra23EwjChaxpvjjcUH 5ilLc5Zq781aCYRygYQw+hu5nFkOH1R+Z50Ubxjd/aqUfnGIAX7kPMD3Lof4KldD Q8ppQriUvxVo+4nPV6rpTy/PyqCLWDjkguHpJsEFsMkwajrAz0QNSAU5CJ0G2Zu4 yxvYlumHCEl7nbFrm0vIiA75Sa8KnywTDsyZsu3XcOcf3g+g1xWTpjJqy2bYXlqz 9uDOWtArWHOis6bq8l9RE6xr1RBVXS6uqgQIZFBGyq66b0dIq4D2JdsUvgEMaHbc e7tBfeB1CMBdA64e9Rq7bFR7Tvt8gasCZYlNr3lydh+dFHIEkH53HzQe6l88HEic +0jVnLkCDQRa55wJARAAyLya2Lx6gyoWoJN1a6740q3o8e9d4KggQOfGMTCflmeq ivuzgN+3DZHN+9ty2KxXMtn0mhHBerZdbNJyjMNT1gAgrhPNB4HtXBXum2wS57WK DNmade914L7FWTPAWBG2Wn448OEHTqsClICXXWy9IICgclAEyIq0Yq5mAdTEgRJS Z8t4GpwtDL9gNQyFXaWQmDmkAsCygQMvhAlmu9xOIzQG5CxSnZFk7zcuL60k14Z3 Cmt49k4T/7ZU8goWi8tt+rU78/IL3J/fF9+1civ1OwuUidgfPCSvOUW1JojsdCQA L+RZJcoXq7lfOFj/eNjeOSstCTDPfTCL+kThE6E5neDtbQHBYkEX1BRiTedsV4+M ucgiTrdQFWKf89G72xdv8ut9AYYQ2BbEYU+JAYhUH8rYYui2dHKJIgjNvJscuUWb +QEqJIRleJRhrO+/CHgMs4fZAkWF1VFhKBkcKmEjLn1f7EJJUUW84ZhKXjO/AUPX 1CHsNjziRceuJCJYox1cwsoq6jTE50GiNzcIxTn9xUc0UMKFeggNAFys1K+TDTm3 Bzo8H5ucjCUEmUm9lhkGwqTZgOlRX5eqPX+JBoSaObqhgqCa5IPinKRa6MgoFPHK 6sYKqroYwBGgZm6Js5chpNchvJMs/3WXNOEVg0J3z3vP0DMhxqWm+r+n9zlW8qsA EQEAAYkEPgQYAQgACQUCWuecCQIbAgIpCRC86dmkLVF4T8FdIAQZAQgABgUCWuec CQAKCRBQ3szEcQ5hr+ykD/4tOLRHFHXuKUcxgGaubUcVtsFrwBKma1cYjqaPms8u 6Sk0wfGRI32G/GhOrp0Ts/MOkbObq6VLTh8N5Yc/53MEl8zQFw9Y5AmRoW4PZXER ujs5s7p4oR7xHMihMjCCBn1bvrR+34YPfgzTcgLiOEFHYT8UTxwnGmXOvNkMM7md xD3CV5q6VAte8WKBo/220II3fcQlc9r/oWX4kXXkb0v9hoGwKbDJ1tzqTPrp/xFt yohqnvImpnlz+Q9zXmbrWYL9/g8VCmW/NN2gju2G3Lu/TlFUWIT4v/5OPK6TdeNb VKJO4+S8bTayqSG9CML1S57KSgCo5HUhQWeSNHI+fpe5oX6FALPT9JLDce8OZz1i cZZ0MELP37mOOQun0AlmHm/hVzf0f311PtbzcqWaE51tJvgUR/nZFo6Ta3O5Ezhs 3VlEJNQ1Ijf/6DH87SxvAoRIARCuZd0qxBcDK0avpFzUtbJd24lRA3WJpkEiMqKv RDVZkE4b6TW61f0o+LaVfK6E8oLpixegS4fiqC16mFrOdyRk+RJJfIUyz0WTDVmt g0U1CO1ezokMSqkJ7724pyjr2xf/r9/sC6aOJwB/lKgZkJfC6NqL7TlxVA31dUga LEOvEJTTE4gl+tYtfsCDvALCtqL0jduSkUo+RXcBItmXhA+tShW0pbS2Rtx/ixua KohVD/0R4QxiSwQmICNtm9mw9ydIl1yjYXX5a9x4wMJracNY/LBybJPFnZnT4dYR z4XjqysDwvvYZByaWoIe3QxjX84V6MlI2IdAT/xImu8gbaCI8tmyfpIrLnPKiR9D VFYfGBXuAX7+HgPPSFtrHQONCALxxzlbNpS+zxt9r0MiLgcLyspWxSdmoYGZ6nQP RO5Nm/ZVS+u2imPCRzNUZEMa+dlE6kHx0rS0dPiuJ4O7NtPeYDKkoQtNagspsDvh cK7CSqAiKMq06UBTxqlTSRkm62eOCtcs3p3OeHu5GRZF1uzTET0ZxYkaPgdrQknx ozjP5mC7X+45lcCfmcVt94TFNL5HwEUVJpmOgmzILCI8yoDTWzloo+i+fPFsXX4f kynhE83mSEcr5VHFYrTY3mQXGmNJ3bCLuc/jq7ysGq69xiKmTlUeXFm+aojcRO5i zyShIRJZ0GZfuzDYFDbMV9amA/YQGygLw//zP5ju5SW26dNxlf3MdFQE5JJ86rn9 MgZ4gcpazHEVUsbZsgkLizRp9imUiH8ymLqAXnfRGlU/LpNSefnvDFTtEIRcpOHc bhayG0bk51Bd4mioOXnIsKy4j63nJXA27x5EVVHQ1sYRN8Ny4Fdr2tMAmj2O+X+J qX2yy/UX5nSPU492e2CdZ1UhoU0SRFY3bxKHKB7SDbVeav+K5g== =Gi5D -----END PGP PUBLIC KEY BLOCK----- \u53c2\u7167\u7528\u306e Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002 Key ID: BCE9D9A42D51784F Type: RSA Size: 4096/4096 Expires: Never User ID: Amazon ECS Key fingerprint: F34C 3DDA E729 26B0 79BE AEC6 BCE9 D9A4 2D51 784F \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001Amazon ECS PGP \u30d1\u30d6\u30ea\u30c3\u30af\u30ad\u30fc\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 gpg --import <public_key_filename> AWS Copilot CLI \u306e\u7f72\u540d\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u7f72\u540d\u306f\u3001ASCII \u3067\u30c7\u30bf\u30c3\u30c1\u6e08\u307f\u306e PGP \u7f72\u540d\u3067\u3001\u62e1\u5f35\u5b50\u304c .asc \u306e\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u7f72\u540d\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u5bfe\u5fdc\u3059\u308b\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3068\u540c\u3058\u540d\u524d\u304c\u4ed8\u3051\u3089\u308c\u3066\u304a\u308a\u3001\u62e1\u5f35\u5b50\u306f .asc \u3067\u3059\u3002 === macOS \u306e\u5834\u5408: `sudo curl -Lo copilot.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-darwin.asc` === Linux \u306e\u5834\u5408: `sudo curl -Lo copilot.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux.asc` === Windows \u306e\u5834\u5408: `Invoke-WebRequest -OutFile ecs-cli.asc https://github.com/aws/copilot-cli/releases/latest/download/copilot-windows.exe` \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u7f72\u540d\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002 macOS \u304a\u3088\u3073 Linux \u306e\u5834\u5408: gpg --verify copilot.asc /usr/local/bin/copilot Windows \u306e\u5834\u5408: gpg --verify ecs-cli.asc 'C:\\Program Files\\copilot.exe' \u6b63\u5e38\u306a\u51fa\u529b: gpg: Signature made Tue Apr 3 13:29:30 2018 PDT gpg: using RSA key DE3CBD61ADAF8B8E gpg: Good signature from \"Amazon ECS <ecs-security@amazon.com>\" [unknown] gpg: WARNING: This key is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: F34C 3DDA E729 26B0 79BE AEC6 BCE9 D9A4 2D51 784F Subkey fingerprint: EB3D F841 E2C9 212A 2BD4 2232 DE3C BD61 ADAF 8B8E Warning \u51fa\u529b\u306b\u8b66\u544a\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u500b\u4eba PGP \u30ad\u30fc (\u6301\u3063\u3066\u3044\u308b\u5834\u5408) \u3068 Amazon ECS PGP \u30ad\u30fc\u306e\u9593\u306b\u4fe1\u983c\u30c1\u30a7\u30fc\u30f3\u304c\u306a\u3044\u305f\u3081\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 Web of trust \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"\uff08\u30aa\u30d7\u30b7\u30e7\u30f3\uff09\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u691c\u8a3c"},{"location":"ja/docs/include/command/","text":"command String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 command : ps au # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 command : [ \"ps\" , \"au\" ]","title":"Command"},{"location":"ja/docs/include/deployment/","text":"deployment Map deployment \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u306e\u6570\u3084\u3001\u30bf\u30b9\u30af\u306e\u505c\u6b62\u3068\u958b\u59cb\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 deployment. rolling String \u30ed\u30fc\u30ea\u30f3\u30b0\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3002\u6709\u52b9\u306a\u5024\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 \"default\" : \u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u524d\u306b\u3001\u66f4\u65b0\u3055\u308c\u305f\u30bf\u30b9\u30af\u5b9a\u7fa9\u3067\u5fc5\u8981\u306a\u6570\u3060\u3051\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 100 \u306b\u3001 maximumPercent \u3092 200 \u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \"recreate\" : \u5b9f\u884c\u4e2d\u306e\u30bf\u30b9\u30af\u3092\u3059\u3079\u3066\u505c\u6b62\u3057\u3001\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 0 \u306b\u3001 maximumPercent \u3092 100 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 deployment. rollback_alarms \u6587\u5b57\u5217\u307e\u305f\u306f\u30de\u30c3\u30d7\u306e\u914d\u5217 Info \u30c7\u30d7\u30ed\u30a4\u306e\u958b\u59cb\u6642\u306b\u30a2\u30e9\u30fc\u30e0\u304c\u300cIn alarm\u300d\u72b6\u614b\u306b\u3042\u308b\u5834\u5408\u3001Amazon ECS \u306f\u305d\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9593\u3001\u30a2\u30e9\u30fc\u30e0\u3092\u76e3\u8996\u3057\u307e\u305b\u3093\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002 \u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u3001 \u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u306e\u3042\u308b\u3001Service \u306b\u95a2\u9023\u4ed8\u3051\u308b\u65e2\u5b58\u306e CloudWatch \u30a2\u30e9\u30fc\u30e0\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] \u30de\u30c3\u30d7\u3068\u3057\u3066\u3001Copilot \u304c\u4f5c\u6210\u3057\u305f\u30a2\u30e9\u30fc\u30e0\u306e\u30a2\u30e9\u30fc\u30e0 \u30e1\u30c8\u30ea\u30c3\u30af\u3068\u3057\u304d\u3044\u5024 \u5229\u7528\u53ef\u80fd\u306a\u30e1\u30c8\u30ea\u30af\u30b9:","title":"Deployment"},{"location":"ja/docs/include/entrypoint/","text":"entrypoint String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ]","title":"Entrypoint"},{"location":"ja/docs/include/environments/","text":"environments Map environments \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Manifest \u5185\u306e\u4efb\u610f\u306e\u8a2d\u5b9a\u5024\u3092 Environment \u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002\u4e0a\u90e8\u8a18\u8f09\u306e Manifest \u4f8b\u3067\u306f count \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067 'prod' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u3001'staging' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b Fargate Spot capacity \u306b\u3088\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002","title":"Environments"},{"location":"ja/docs/include/envvars/","text":"variables Map Copilot \u306f Service \u540d\u306a\u3069\u3092\u5e38\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30bf\u30b9\u30af\u306b\u5bfe\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u672c\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u305d\u308c\u3089\u4ee5\u5916\u306b\u8ffd\u52a0\u3067\u6e21\u3057\u305f\u3044\u74b0\u5883\u5909\u6570\u3092\u30ad\u30fc\u30d0\u30fc\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 variables. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 env_file String \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b\u5f15\u304d\u6e21\u3059\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Envvars"},{"location":"ja/docs/include/exec/","text":"exec Boolean \u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f false \u3067\u3059\u3002 $ copilot svc exec \u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u306b\u306f\u3001\u3053\u306e\u5024\u306b true \u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"Exec"},{"location":"ja/docs/include/http-additionalrules-healthcheck/","text":"http.additional_rules. healthcheck String or Map \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ca\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059\u3002 http : additional_rules : - healthcheck : '/' \u3042\u308b\u3044\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Map \u306b\u3088\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5148\u3002 http.additional_rules.healthcheck. port Integer \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u30dd\u30fc\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001 image.port \u3067\u3059\u3002 http.target_container \u3067\u516c\u958b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u516c\u958b\u3057\u3066\u3044\u308b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u304c 443 \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u81ea\u52d5\u3067 HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.additional_rules.healthcheck. success_codes String healthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5bfe\u3057\u3066\u8fd4\u3059 HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002200 \u304b\u3089 499 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001\"200,202\" \u306e\u3088\u3046\u306b\u8907\u6570\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3084 \"200-299\" \u306e\u3088\u3046\u306a\u5024\u306e\u7bc4\u56f2\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 200 \u3067\u3059\u3002 http.additional_rules.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 http.additional_rules.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 2 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 http.additional_rules.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015\u79d2-300\u79d2 \u3067\u3059\u3002 http.additional_rules.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015\u79d2-300\u79d2 \u3067\u3059\u3002","title":"Http additionalrules healthcheck"},{"location":"ja/docs/include/http-additionalrules/","text":"http.additional_rules. path String \u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306b\u5bfe\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3001Service \u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u5404\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306f\u30e6\u30cb\u30fc\u30af\u306a\u30d1\u30b9\u3067 \u516c\u958b\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http.additional_rules. healthcheck String or Map \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ca\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059\u3002 http : additional_rules : - healthcheck : '/' \u3042\u308b\u3044\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Map \u306b\u3088\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5148\u3002 http.additional_rules.healthcheck. port Integer \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u30dd\u30fc\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001 image.port \u3067\u3059\u3002 http.target_container \u3067\u516c\u958b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u516c\u958b\u3057\u3066\u3044\u308b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u304c 443 \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u81ea\u52d5\u3067 HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.additional_rules.healthcheck. success_codes String healthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5bfe\u3057\u3066\u8fd4\u3059 HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002200 \u304b\u3089 499 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001\"200,202\" \u306e\u3088\u3046\u306b\u8907\u6570\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3084 \"200-299\" \u306e\u3088\u3046\u306a\u5024\u306e\u7bc4\u56f2\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 200 \u3067\u3059\u3002 http.additional_rules.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 http.additional_rules.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 2 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 http.additional_rules.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015\u79d2-300\u79d2 \u3067\u3059\u3002 http.additional_rules.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015\u79d2-300\u79d2 \u3067\u3059\u3002 http.additional_rules. deregistration_delay Duration \u767b\u9332\u89e3\u9664\u6642\u306b\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u30c9\u30ec\u30a4\u30cb\u30f3\u30b0\u3059\u308b\u306e\u3092\u5f85\u3064\u6642\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 60 \u79d2\u3067\u3059\u3002\u5927\u304d\u306a\u5024\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u5b89\u5168\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u30c9\u30ec\u30a4\u30cb\u30f3\u30b0\u3059\u308b\u306e\u306b\u9577\u3044\u6642\u9593\u3092\u4f7f\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u65b0\u3057\u3044\u30c7\u30d7\u30ed\u30a4\u306b\u5fc5\u8981\u306a\u6642\u9593\u304c\u5897\u52a0\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30010 \u79d2 - 3600 \u79d2\u3067\u3059\u3002 http.additional_rules. target_container String \u30e1\u30a4\u30f3\u306e\u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u304c 443 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3057\u3066\u3001Fargate \u30bf\u30b9\u30af\u3068\u306e TLS \u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u306f HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.additional_rules. target_port String \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3002 \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e image.port \u3084\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e sidecar.port \u3068\u7570\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u306e\u5834\u5408\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http.additional_rules. stickiness Boolean \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http.additional_rules. allowed_source_ips Array of Strings Service \u3078\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b CIDR IP \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002 http : additional_rules : - allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http.additional_rules. alias String or Array of Strings or Array of Maps Service \u306e HTTPS \u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u3059\u3002 # String version. http : additional_rules : - alias : example.com # Alternatively, as an array of strings. http : additional_rules : - alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : additional_rules : - alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http.additional_rules. hosted_zone String \u65e2\u5b58\u306e\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u306e ID\u3002 http.alias \u304a\u3088\u3073 http.additional_rules.alias \u3068\u5171\u306b\u306e\u307f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f Environment \u304c\u3042\u308b\u5834\u5408\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4f5c\u6210\u5f8c\u306b\u3001Copilot \u304c A \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3059\u308b\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 http : additional_rules : - alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http.additional_rules. redirect_to_https Boolean Application Load Balancer \u3067 HTTP \u304b\u3089 HTTPS \u306b\u81ea\u52d5\u7684\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002 http.additional_rules. version String HTTP(S) \u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\u3002 'grpc' \u3001 'http1' \u3001\u307e\u305f\u306f 'http2' \u306e\u3069\u308c\u304b\u3067\u3059\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u3001 'http1' \u304c\u63a8\u5b9a\u3055\u308c\u307e\u3059\u3002 gRPC \u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u30c9\u30e1\u30a4\u30f3\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Http additionalrules"},{"location":"ja/docs/include/http-healthcheck/","text":"http. healthcheck String or Map \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ca\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059\u3002 http : healthcheck : '/' \u3042\u308b\u3044\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Map \u306b\u3088\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 http : healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 60s http.healthcheck. path String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5148\u3002 http.healthcheck. port Integer \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u30dd\u30fc\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001 image.port \u3067\u3059\u3002 http.target_container \u3067\u516c\u958b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u516c\u958b\u3057\u3066\u3044\u308b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u304c 443 \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u81ea\u52d5\u3067 HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.healthcheck. success_codes String healthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5bfe\u3057\u3066\u8fd4\u3059 HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002200 \u304b\u3089 499 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001\"200,202\" \u306e\u3088\u3046\u306b\u8907\u6570\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3084 \"200-299\" \u306e\u3088\u3046\u306a\u5024\u306e\u7bc4\u56f2\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 200 \u3067\u3059\u3002 http.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 http.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 2 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 http.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015 \u301c 300 \u3067\u3059\u3002 http.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015 \u301c 300 \u3067\u3059\u3002 http.healthcheck. grace_period Duration \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\u6642\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u3001\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 60 \u79d2\u3067\u3059\u3002\u3053\u308c\u306f\u3001healthy \u3067\u3042\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3057\u306a\u304c\u3089\u7740\u4fe1\u3092\u5f85\u6a5f\u3059\u308b\u307e\u3067\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u305f\u308a\u3001\u8fc5\u901f\u306a\u8d77\u52d5\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u9ad8\u901f\u5316\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002","title":"Http healthcheck"},{"location":"ja/docs/include/image-config-with-port/","text":"image Map image \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Docker \u30d3\u30eb\u30c9\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3084\u3001\u65e2\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u53c2\u7167\u306b\u3064\u3044\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002 image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 image. port Integer \u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002Dockerfile \u5185\u306b EXPOSE \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092\u30d1\u30fc\u30b9\u3057\u305f\u5024\u3092\u3053\u3053\u306b\u633f\u5165\u3057\u307e\u3059\u3002","title":"Image config with port"},{"location":"ja/docs/include/image-config/","text":"image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002","title":"Image config"},{"location":"ja/docs/include/image-healthcheck/","text":"image. healthcheck Map \u30b3\u30f3\u30c6\u30ca\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 image.healthcheck. command Array of Strings \u30b3\u30f3\u30c6\u30ca\u304c healthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a2d\u5b9a\u3059\u308b\u6587\u5b57\u5217\u914d\u5217\u306e\u6700\u521d\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u76f4\u63a5\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e CMD \u3001\u3042\u308b\u3044\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b7\u30a7\u30eb\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b CMD-SHELL \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image.healthcheck. interval Duration \u5404\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u9593\u306e\u79d2\u5358\u4f4d\u306e\u9593\u9694\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff11\uff10\u79d2\u3067\u3059\u3002 image.healthcheck. retries Integer \u30b3\u30f3\u30c6\u30ca\u304c unhealthy \u3068\u898b\u306a\u3055\u308c\u308b\u307e\u3067\u306b\u3001\u5931\u6557\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff12\u3067\u3059\u3002 image.healthcheck. timeout Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u958b\u59cb\u304b\u3089\u5931\u6557\u3068\u307f\u306a\u3059\u307e\u3067\u306b\u5f85\u6a5f\u3059\u308b\u79d2\u5358\u4f4d\u306e\u671f\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff15\u79d2\u3067\u3059\u3002 image.healthcheck. start_period Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u3068\u5931\u6557\u304c\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u59cb\u3081\u308b\u524d\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u51e6\u7406\u3092\u6e08\u307e\u305b\u308b\u7336\u4e88\u671f\u9593\u306e\u9577\u3055\u3067\u3059\u3002\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\uff10\u79d2\u3067\u3059\u3002","title":"Image healthcheck"},{"location":"ja/docs/include/image/","text":"image Map image \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Docker \u30d3\u30eb\u30c9\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3084\u3001\u65e2\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u53c2\u7167\u306b\u3064\u3044\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002","title":"Image"},{"location":"ja/docs/include/logging/","text":"logging Map logging \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30ed\u30b0\u8a2d\u5b9a\u3092\u542b\u307f\u307e\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306e FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002(\u8a2d\u5b9a\u4f8b\u306f \u3053\u3061\u3089 ) logging. retention Integer \u4efb\u610f\u9805\u76ee\u3002 \u30ed\u30b0\u30a4\u30d9\u30f3\u30c8\u3092\u4fdd\u6301\u3059\u308b\u65e5\u6570\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e 30 \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 logging. image Map \u4efb\u610f\u9805\u76ee\u3002\u4f7f\u7528\u3059\u308b Fluent Bit \u306e\u30a4\u30e1\u30fc\u30b8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f public.ecr.aws/aws-observability/aws-for-fluent-bit:stable \u3002 logging. destination Map \u4efb\u610f\u9805\u76ee\u3002FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3002 logging. enableMetadata Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306b ECS \u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3002 logging. secretOptions Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306e\u8a2d\u5b9a\u306b\u6e21\u3059\u79d8\u5bc6\u60c5\u5831\u3067\u3059\u3002 logging. configFilePath Map \u4efb\u610f\u9805\u76ee\u3002\u30ab\u30b9\u30bf\u30e0\u306e Fluent Bit \u30a4\u30e1\u30fc\u30b8\u5185\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9\u3002 logging. env_file String \u30ed\u30ae\u30f3\u30b0\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u8a2d\u5b9a\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u30d1\u30b9\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002","title":"Logging"},{"location":"ja/docs/include/network/","text":"network Map network \u30bb\u30af\u30b7\u30e7\u30f3\u306f VPC \u5185\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network. connect Bool or Map Service \u306b\u5bfe\u3057 Service Connect \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002Service \u9593\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8ca0\u8377\u5206\u6563\u3057\u3001\u3088\u308a\u5f3e\u529b\u7684\u306b\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f false \u3067\u3059\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3068\u3001Service \u3067\u5229\u7528\u3059\u308b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\u30a8\u30a4\u30ea\u30a2\u30b9\u306f Environment \u5185\u3067\u30e6\u30cb\u30fc\u30af\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 network.connect. alias String Service Connect \u7d4c\u7531\u3067\u516c\u958b\u3059\u308b Service \u306e\u30ab\u30b9\u30bf\u30e0 DNS\u3000\u540d\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f Service \u540d\u3067\u3059\u3002 network. vpc Map \u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network.vpc. placement String or Map String \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 public \u3042\u308b\u3044\u306f private \u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30bf\u30b9\u30af\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002 Info Copilot \u304c\u751f\u6210\u3057\u305f VPC \u3092\u5229\u7528\u3057\u3066 private \u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u5834\u5408\u3001Copilot \u306f Environment \u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u7528\u306e NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002(\u4fa1\u683c\u306f \u3053\u3061\u3089 \u3002)\u3042\u308b\u3044\u306f copilot env init \u30b3\u30de\u30f3\u30c9\u3067\u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3084\u3001\u5206\u96e2\u3055\u308c\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u7528\u306b VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u69cb\u6210\u3055\u308c\u305f VPC \u3092\u69cb\u6210\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 custom environment resources \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\uff1a network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map String \u306e\u30ea\u30b9\u30c8\u3068\u3059\u308b\u5834\u5408\u3001Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8 ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Map \u306e\u5834\u5408\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u540d\u524d\u3068\u5024\u306e\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30d5\u30a3\u30eb\u30bf\u306f AND \u3067\u7d50\u5408\u3055\u308c\u3001\u5404\u30d5\u30a3\u30eb\u30bf\u306e\u5024\u306f OR \u3067\u7d50\u5408\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: public \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: private \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u4e21\u65b9\u306f\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30bf\u30b0\u30bb\u30c3\u30c8\u3002 network.vpc. security_groups Array of Strings or Map \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot \u306b\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001Environment \u5185\u306e\u30b3\u30f3\u30c6\u30ca\u540c\u58eb\u304c\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u306b\u3059\u308b\u306b\u306f\u3001 Map \u5f62\u5f0f\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 network.vpc.security_groups. deny_default Boolean Environment \u5185\u306e\u3059\u3079\u3066\u306e Service \u304b\u3089\u306e\u4fb5\u5165\u3092\u8a31\u53ef\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002 network.vpc.security_groups. groups Array of Strings \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network.vpc.security_groups.groups from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002","title":"Network"},{"location":"ja/docs/include/nlb-additionallisteners/","text":"nlb.additional_listeners Map nlb.additional_listeners. port String \u5fc5\u9808\u9805\u76ee\u3002Network Load Balancer \u304c\u5f85\u3061\u53d7\u3051\u308b\u70ba\u306e\u8ffd\u52a0\u30dd\u30fc\u30c8\u3068\u30d7\u30ed\u30c8\u30b3\u30eb\u3002 \u4f7f\u7528\u53ef\u80fd\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u306f tcp \u3001 udp \u3068 tls \u3067\u3059\u3002\u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066 tcp \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 nlb.additional_listeners. healthcheck Map Network Load Balancer \u306e\u8ffd\u52a0\u30ea\u30b9\u30ca\u30fc\u306b\u5bfe\u3059\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb : additional_listeners : - healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.additional_listeners.healthcheck. port String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u308b\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30bf\u30fc\u30b2\u30c3\u30c8\u30dd\u30fc\u30c8\u3068\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3067\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u5834\u5408\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 nlb.additional_listeners.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 nlb.additional_listeners.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 10 \u79d2\u307e\u305f\u306f 30 \u79d2\u304c\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3059\u3002 nlb.additional_listeners.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 10 \u79d2\u3067\u3059\u3002 nlb.additional_listeners. target_container String \u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u3068\u306a\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3002 nlb.additional_listeners. target_port Integer \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u304c nlb.port \u3001\u30ea\u30b9\u30ca\u30fc\u30dd\u30fc\u30c8\u3068\u7570\u306a\u308b\u5834\u5408\u306b\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners. ssl_policy String \u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30d7\u30ed\u30b3\u30eb\u3068\u6697\u53f7\u3092\u5b9a\u7fa9\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 <span class=\"parent-field\">nlb.additional_listeners.</span><a id=\"nlb-additional-listeners-stickiness\" href=\"#nlb-additional-listeners-stickiness\" class=\"field\">`stickiness`</a> <span class=\"type\">Boolean</span> \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002","title":"Nlb additionallisteners"},{"location":"ja/docs/include/nlb/","text":"nlb Map nlb \u30bb\u30af\u30b7\u30e7\u30f3\u306f Service \u3092 Network Load Balancer \u3068\u7d71\u5408\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u542b\u307f\u307e\u3059\u3002 Network Load Balancer\u306f\u3001 nlb \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306e\u307f\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002 Load Balanced Web Service \u3067\u306f\u3001Application Load Balancer \u3068 Network Load Balancer \u306e\u3044\u305a\u308c\u304b\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 nlb. port String \u5fc5\u9808\u9805\u76ee\u3002Network Load Balancer \u304c\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u30dd\u30fc\u30c8\u3068\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u4f7f\u7528\u53ef\u80fd\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u306f tcp \u3001 udp \u3068 tls \u3067\u3059\u3002\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 tcp \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b: nlb : port : 80 tcp \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30dd\u30fc\u30c8 80 \u3067\u5f85\u3061\u53d7\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b: nlb : port : 80/tcp \u7c21\u5358\u306b TLS \u7d42\u7aef\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b: nlb : port : 443/tls nlb. healthcheck Map Network Load Balancer \u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb : healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.healthcheck. port String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u308b\u30dd\u30fc\u30c8\u3002\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u30bf\u30fc\u30b2\u30c3\u30c8\u30dd\u30fc\u30c8\u3068\u306f\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3067\u5b9f\u884c\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 nlb.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 nlb.healthcheck. grace_period Duration \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\u6642\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u3001\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 60 \u79d2\u3067\u3059\u3002\u3053\u308c\u306f\u3001healthy \u3067\u3042\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3057\u306a\u304c\u3089\u7740\u4fe1\u3092\u5f85\u6a5f\u3059\u308b\u307e\u3067\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u305f\u308a\u3001\u8fc5\u901f\u306a\u8d77\u52d5\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u9ad8\u901f\u5316\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 Info \u3053\u306e\u8aac\u660e\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306f\u3001 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u3088\u308b\u3068\u3001Network Load Balancer \u306e 'unhealthy threshold' \u306f 'healthy threshold' \u3068\u540c\u3058\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002 nlb.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306f 10s (10 \u79d2) \u307e\u305f\u306f 30s (30 \u79d2) \u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30s \u3067\u3059\u3002 nlb.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 10s (10 \u79d2)\u3067\u3059\u3002 nlb. target_container String \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308c\u307e\u3059\u3002 nlb. target_port Integer \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u304c\u30ea\u30b9\u30ca\u30fc\u30dd\u30fc\u30c8\u306e nlb.port \u3068\u7570\u306a\u308b\u5834\u5408\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb. ssl_policy String \u3069\u306e\u3088\u3046\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3084\u6697\u53f7\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u304b\u3092\u5b9a\u7fa9\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002\u8a73\u3057\u304f\u306f \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 nlb. stickiness Boolean \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb. alias String or Array of Strings Service \u306e\u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 nlb : alias : example.com # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 nlb : alias : [ \"example.com\" , \"v1.example.com\" ] nlb. additional_listeners Array of Maps \u8907\u6570\u306e NLB \u30ea\u30b9\u30ca\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners Map nlb.additional_listeners. port String \u5fc5\u9808\u9805\u76ee\u3002Network Load Balancer \u304c\u5f85\u3061\u53d7\u3051\u308b\u70ba\u306e\u8ffd\u52a0\u30dd\u30fc\u30c8\u3068\u30d7\u30ed\u30c8\u30b3\u30eb\u3002 \u4f7f\u7528\u53ef\u80fd\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u306f tcp \u3001 udp \u3068 tls \u3067\u3059\u3002\u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066 tcp \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 nlb.additional_listeners. healthcheck Map Network Load Balancer \u306e\u8ffd\u52a0\u30ea\u30b9\u30ca\u30fc\u306b\u5bfe\u3059\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb : additional_listeners : - healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.additional_listeners.healthcheck. port String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u308b\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30bf\u30fc\u30b2\u30c3\u30c8\u30dd\u30fc\u30c8\u3068\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3067\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u5834\u5408\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 nlb.additional_listeners.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 nlb.additional_listeners.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 10 \u79d2\u307e\u305f\u306f 30 \u79d2\u304c\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3059\u3002 nlb.additional_listeners.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 10 \u79d2\u3067\u3059\u3002 nlb.additional_listeners. target_container String \u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u3068\u306a\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3002 nlb.additional_listeners. target_port Integer \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u304c nlb.port \u3001\u30ea\u30b9\u30ca\u30fc\u30dd\u30fc\u30c8\u3068\u7570\u306a\u308b\u5834\u5408\u306b\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners. ssl_policy String \u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30d7\u30ed\u30b3\u30eb\u3068\u6697\u53f7\u3092\u5b9a\u7fa9\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 <span class=\"parent-field\">nlb.additional_listeners.</span><a id=\"nlb-additional-listeners-stickiness\" href=\"#nlb-additional-listeners-stickiness\" class=\"field\">`stickiness`</a> <span class=\"type\">Boolean</span> \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002","title":"Nlb"},{"location":"ja/docs/include/observability/","text":"observability Map observability \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Service \u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u6e2c\u5b9a\u3059\u308b\u65b9\u6cd5\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306e\u3068\u3053\u308d\u3001\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 observability \u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability. tracing String \u30c8\u30ec\u30fc\u30b9\u306b\u4f7f\u7528\u3059\u308b\u30d9\u30f3\u30c0\u30fc\u3002\u73fe\u5728\u3001 awsxray \u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002","title":"Observability"},{"location":"ja/docs/include/overrides-intro/","text":"Attention CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3067\u3042\u308a\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u6b63\u5e38\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u306a\u3044\u539f\u56e0\u3068\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u6ce8\u610f\u3057\u3066\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff01 Copilot \u306f Manifest \u3067\u6307\u5b9a\u3057\u305f\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066 CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002 \u4e00\u65b9\u3067\u3001 Manifest \u3067\u306f\u3001\u5168\u3066\u306e CloudFormation \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u53ef\u80fd\u3068\u306a\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u3002 \u4f8b\u3048\u3070\u3001\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u30b3\u30f3\u30c6\u30ca\u306e\u305f\u3081\u306b\u3001 Ulimits \u3092 \u8a2d\u5b9a\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f Manifest \u3067\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 yamlpatch \u3084 cdk \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u306f\u3001CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e_\u4efb\u610f_\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3001\u524a\u9664\u3001\u7f6e\u63db\u3067\u304d\u307e\u3059\u3002","title":"Overrides intro"},{"location":"ja/docs/include/platform/","text":"platform String or Map docker build --platform \u3067\u6e21\u3059\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3002\uff08 [os]/[arch] \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\uff09 \u4f8b\u3048\u3070 linux/arm64 \u3084 windows/x86_64 \u306a\u3069\u304c\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f linux/x86_64 \u3067\u3059\u3002 \u7570\u306a\u308b osfamily \u3084 architecture \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001Windows \u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 WINDOWS_SERVER_2019_CORE \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u304c platform : windows/x86_64 Map \u3092\u4f7f\u3063\u3066 WINDOWS_SERVER_2019_FULL \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2019_core architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64","title":"Platform"},{"location":"ja/docs/include/publish/","text":"publish Map publish \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3067\u304d\u307e\u3059\u3002 publish : topics : - name : orderEvents \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u3053\u306e Manifest \u306f\u3001Copilot \u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u4ed6\u306e Worker Service \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u308b orderEvents \u3068\u3044\u3046\u540d\u524d\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002 COPILOT_SNS_TOPIC_ARNS \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u3001JSON \u6587\u5b57\u5217\u3068\u3057\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 JavaScript\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) \u8a73\u3057\u304f\u306f\u3001 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 publish. topics Array of topics topic \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3002 publish.topics. topic Map 1 \u3064\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002 publish.topics.topic. name String \u5fc5\u9808\u9805\u76ee\u3002SNS \u30c8\u30d4\u30c3\u30af\u306e\u540d\u524d\u3067\u3059\u3002\u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3001\u6570\u5b57\u3001\u30cf\u30a4\u30d5\u30f3\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u307f\u3092\u542b\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3002 true \u3068\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 Copilot \u306f FIFO \u3067\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f, SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u304c\u4e00\u610f\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u91cd\u8907\u6392\u9664\u3092\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002","title":"Publish"},{"location":"ja/docs/include/secrets/","text":"secrets Map AWS Systems Manager (SSM) \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u307e\u305f\u306f AWS Secrets Manager \u304b\u3089\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u3001Service \u306b\u5b89\u5168\u306b\u6e21\u3055\u308c\u308b\u79d8\u5bc6\u5024\u3092\u8868\u3059\u30ad\u30fc\u30fb\u5024\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 secrets. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002","title":"Secrets"},{"location":"ja/docs/include/sidecar-config/","text":"port Integer \u30b3\u30f3\u30c6\u30ca\u306e\u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002(\u4efb\u610f\u9805\u76ee) image String or Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u30a4\u30e1\u30fc\u30b8 URL\u3002(\u5fc5\u9808\u9805\u76ee) image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 essential Bool \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c\u5fc5\u9808\u306e\u30b3\u30f3\u30c6\u30ca\u304b\u3069\u3046\u304b\u3002(\u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true) credentialsParameter String \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ec\u30b8\u30b9\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u79d8\u5bc6\u60c5\u5831\u306e ARN\u3002(\u4efb\u610f\u9805\u76ee) variables Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e\u74b0\u5883\u5909\u6570\u3002(\u4efb\u610f\u9805\u76ee) secrets Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3067\u7528\u3044\u308b\u79d8\u5bc6\u60c5\u5831\u3002(\u4efb\u610f\u9805\u76ee) env_file String \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u8a2d\u5b9a\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u30d1\u30b9\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 mount_points Array of Maps \u30b5\u30fc\u30d3\u30b9\u30ec\u30d9\u30eb\u3067\u6307\u5b9a\u3059\u308b EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30de\u30a6\u30f3\u30c8\u30d1\u30b9\u3002(\u4efb\u610f\u9805\u76ee) mount_points. source_volume String \u30b5\u30a4\u30c9\u30ab\u30fc\u304b\u3089\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306e\u30bd\u30fc\u30b9\u30dc\u30ea\u30e5\u30fc\u30e0\u3002(\u5fc5\u9808\u9805\u76ee) mount_points. path String \u30b5\u30a4\u30c9\u30ab\u30fc\u304b\u3089\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3068\u304d\u306e\u30d1\u30b9\u3002(\u5fc5\u9808\u9805\u76ee) mount_points. read_only Boolean \u30b5\u30a4\u30c9\u30ab\u30fc\u306b\u30dc\u30ea\u30e5\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u8aad\u307f\u8fbc\u307f\u306e\u307f\u3092\u8a31\u53ef\u3059\u308b\u304b\u3069\u3046\u304b\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true) labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3059\u308b Docker \u30e9\u30d9\u30eb\u3002(\u4efb\u610f\u9805\u76ee) depends_on Map \u3053\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u9069\u7528\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u4f9d\u5b58\u95a2\u4fc2\u3002(\u4efb\u610f\u9805\u76ee) entrypoint String or Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 command : ps au # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 command : [ \"ps\" , \"au\" ] healthcheck Map \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 healthcheck. command Array of Strings \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u304c healthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a2d\u5b9a\u3059\u308b\u6587\u5b57\u5217\u914d\u5217\u306e\u6700\u521d\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u76f4\u63a5\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e CMD \u3001\u3042\u308b\u3044\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b7\u30a7\u30eb\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b CMD-SHELL \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 healthcheck. interval Duration \u5404\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u9593\u306e\u79d2\u5358\u4f4d\u306e\u9593\u9694\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff11\uff10\u79d2\u3067\u3059\u3002 healthcheck. retries Integer \u30b3\u30f3\u30c6\u30ca\u304c unhealthy \u3068\u898b\u306a\u3055\u308c\u308b\u307e\u3067\u306b\u3001\u5931\u6557\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff12\u3067\u3059\u3002 healthcheck. timeout Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u958b\u59cb\u304b\u3089\u5931\u6557\u3068\u307f\u306a\u3059\u307e\u3067\u306b\u5f85\u6a5f\u3059\u308b\u79d2\u5358\u4f4d\u306e\u671f\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff15\u79d2\u3067\u3059\u3002 healthcheck. start_period Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u3068\u5931\u6557\u304c\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u59cb\u3081\u308b\u524d\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u51e6\u7406\u3092\u6e08\u307e\u305b\u308b\u7336\u4e88\u671f\u9593\u306e\u9577\u3055\u3067\u3059\u3002\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff10\u79d2\u3067\u3059\u3002","title":"Sidecar config"},{"location":"ja/docs/include/storage/","text":"storage Map storage \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u3084\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u3066\u6c38\u7d9a\u5316\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3068\u306a\u308b\u30c7\u30fc\u30bf\u51e6\u7406\u3084 CMS \u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\u8a73\u7d30\u306f \u30b9\u30c8\u30ec\u30fc\u30b8 \u30da\u30fc\u30b8\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u30bf\u30b9\u30af\u30ec\u30d9\u30eb\u306e\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u62e1\u5f35\u3092\u8a2d\u5b9a\u3082\u3067\u304d\u307e\u3059\u3002 storage. ephemeral Int \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u305f\u3044\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u30b5\u30a4\u30ba\u3092 GiB \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u304b\u3064\u6700\u5c0f\u5024\u306f 20 GiB \u3067\u3001\u6700\u5927\u5024\u306f 200 GiB \u3067\u3059\u300220 GiB \u3092\u8d85\u3048\u308b\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u305f\u8ffd\u52a0\u306e\u6599\u91d1\u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u5171\u6709\u3057\u305f\u3044\u5834\u5408\u3001\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u7a7a\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u691c\u8a0e\u3067\u304d\u307e\u3059\u3002 storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false \u3053\u306e\u4f8b\u3067\u306f\u30b5\u30a4\u30c9\u30ab\u30fc\u3068\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3067\u5171\u6709\u3055\u308c\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u3057\u3066\u3001100 GiB \u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u30d7\u30ed\u30d3\u30b8\u30e7\u30f3\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u5927\u304d\u306a\u30b5\u30a4\u30ba\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001\u3042\u308b\u3044\u306f\u30c7\u30a3\u30b9\u30af I/O \u306e\u8981\u6c42\u304c\u9ad8\u3044\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3044\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u5229\u7528\u3057\u3066 EFS \u304b\u3089\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u6709\u52b9\u306a\u65b9\u6cd5\u3068\u8a00\u3048\u307e\u3059\u3002 storage. readonly_fs Boolean \u30b3\u30f3\u30c6\u30ca\u306e\u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u69d8\u306b\u3059\u308b\u306b\u306f\u3001true \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage. volumes Map \u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u540d\u524d\u3084\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u6b21\u306e\u3088\u3046\u306b Map \u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> . path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f\uff12\uff14\uff12\u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> . read_only Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f true \u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 false \u306b\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e elasticfilesystem:ClientWrite \u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3001\u305d\u308c\u306b\u3088\u308a\u30dc\u30ea\u30e5\u30fc\u30e0\u3078\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 storage.volumes. <volume> . efs Boolean or Map \u8a73\u7d30\u306a EFS \u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Boolean \u5024\u306b\u3088\u308b\u6307\u5b9a\u3001\u3042\u308b\u3044\u306f uid \u3068 gid \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u3001EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068 Service \u5c02\u7528\u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 // Boolean \u5024\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : true // POSIX uid/gid \u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30de\u30a6\u30f3\u30c8\u3059\u308b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.id. from_cfn String v1.30.0 \u306b\u3066\u8ffd\u52a0 CloudFormation \u30b9\u30bf\u30c3\u30af\u51fa\u529b\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs. root_dir String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f / \u3067\u3059\u3002EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u3069\u306e\u30d1\u30b9\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30eb\u30fc\u30c8\u3068\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f 255 \u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u672c\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3001\u304b\u3064 auth.iam \u306e\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> .efs. uid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 gid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX UID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. gid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 uid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX GID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. auth Map EFS \u306b\u95a2\u9023\u3059\u308b\u8a8d\u53ef\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. iam Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002EFS \u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b IAM \u306b\u3088\u308b\u8a8d\u53ef\u3092\u5229\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. access_point_id String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"\" \u3067\u3059\u3002\u5229\u7528\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001 root_dir \u306e\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\u3001\u304b\u3064\u672c\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"Storage"},{"location":"ja/docs/include/task-size/","text":"cpu Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 memory Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf\uff08MiB\uff09\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002","title":"Task size"},{"location":"ja/docs/include/taskdef-overrides/","text":"taskdef_overrides Array of Rules taskdef_overrides \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3067\u304d\u307e\u3059 (\u4f8b\u306f \u3053\u3061\u3089 )\u3002 taskdef_overrides. path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30d1\u30b9\u3002 taskdef_overrides. value Any \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3002","title":"Taskdef overrides"},{"location":"ja/docs/manifest/backend-service/","text":"\u4ee5\u4e0b\u306f 'Backend Service' Manifest \u3067\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Copilot Service \u306e\u6982\u5ff5 \u8aac\u660e\u306e\u30da\u30fc\u30b8\u3082\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 api service \u306e\u30b5\u30f3\u30d7\u30eb Manifest Serving Internal Traffic Internal Application Load Balancer With a domain Event-driven Shared file system Expose Multiple Ports name : api type : Backend Service image : build : ./api/Dockerfile port : 8080 healthcheck : command : [ \"CMD-SHELL\" , \"curl -f http://localhost:8080 || exit 1\" ] interval : 10s retries : 2 timeout : 5s start_period : 0s network : connect : true cpu : 256 memory : 512 count : 2 exec : true env_file : ./api/.env environments : test : deployment : rolling : \"recreate\" count : 1 # Service \u306f\u3001\u6b21\u306e\u5834\u6240\u3067\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3067\u3059\u3002 # http://api.${COPILOT_ENVIRONMENT_NAME}.${COPILOT_APPLICATION_NAME}.internal # \u3053\u308c\u306f VPC \u5185\u306e\u307f\u306e\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u5185\u5074\u306b\u3042\u308a\u307e\u3059\u3002 name : api type : Backend Service image : build : ./api/Dockerfile port : 8080 http : path : '/' healthcheck : path : '/_healthcheck' success_codes : '200,301' healthy_threshold : 3 interval : 15s timeout : 10s grace_period : 30s deregistration_delay : 50s network : vpc : placement : 'private' count : range : 1-10 cpu_percentage : 70 requests : 10 response_time : 2s secrets : GITHUB_WEBHOOK_SECRET : GH_WEBHOOK_SECRET DB_PASSWORD : secretsmanager : 'mysql:password::' # \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u8a3c\u660e\u66f8\u304c\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b Environment \u3067\u3042\u308c\u3070\u3001 # HTTPS \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092 Service \u306b\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 # https://aws.github.io/copilot-cli/docs/manifest/environment#http-private-certificates \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 name : api type : Backend Service image : build : ./api/Dockerfile port : 8080 http : path : '/' alias : 'v1.api.example.com' hosted_zone : AN0THE9H05TED20NEID # v1.api.example.com \u306e\u30ec\u30b3\u30fc\u30c9\u3092\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306b\u633f\u5165\u3057\u307e\u3059\u3002 count : 1 # https://aws.github.io/copilot-cli/docs/developing/publish-subscribe/ \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 name : warehouse type : Backend Service image : build : ./warehouse/Dockerfile port : 80 publish : topics : - name : 'inventory' - name : 'orders' fifo : true variables : DDB_TABLE_NAME : 'inventory' count : range : 3-5 cpu_percentage : 70 memory_percentage : 80 # http://localhost:8000/copilot-cli/docs/developing/storage.ja.md#\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 name : sync type : Backend Serivce image : build : Dockerfile variables : S3_BUCKET_NAME : my-userdata-bucket storage : volumes : userdata : path : /etc/mount1 efs : id : fs-1234567 name : 'backend' type : 'Backend Service' image : build : './backend/Dockerfile' port : 8080 http : path : '/' target_port : 8083 # Traffic on \"/\" is forwarded to the main container, on port 8083. additional_rules : - path : 'customerdb' target_port : 8081 # Traffic on \"/customerdb\" is forwarded to the main container, on port 8081. - path : 'admin' target_port : 8082 # Traffic on \"/admin\" is forwarded to the sidecar \"envoy\", on port 8082. target_container : envoy sidecars : envoy : port : 80 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy-proxy-with-selfsigned-certs:v1 name String Service \u540d\u3002 type String Service \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3002 Backend Services \u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5074\u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u304c\u3001 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u306e\u5229\u7528\u306b\u3088\u308a\u4ed6\u306e Service \u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 http Map http \u30bb\u30af\u30b7\u30e7\u30f3\u306f Service \u3068\u5185\u90e8 Application Load Balancer \u306e\u9023\u643a\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u542b\u307f\u307e\u3059\u3002 http. path String \u3053\u306e\u30d1\u30b9\u306b\u5bfe\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c Service \u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u5404 Load Balanced Web Service \u306f\u3001\u30e6\u30cb\u30fc\u30af\u306a\u30d1\u30b9\u3067\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http. alb String Added in v1.33.0 \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u65e2\u5b58\u306e\u5185\u90e8 ALB \u306e ARN \u307e\u305f\u306f\u540d\u524d\u3002\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u304c\u30ea\u30b9\u30ca\u30fc\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002Copilot \u306f\u8a3c\u660e\u66f8\u306e\u69d8\u306a DNS \u95a2\u9023\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3057\u307e\u305b\u3093\u3002 http. healthcheck String or Map \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ca\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059\u3002 http : healthcheck : '/' \u3042\u308b\u3044\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Map \u306b\u3088\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 http : healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 60s http.healthcheck. path String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5148\u3002 http.healthcheck. port Integer \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u30dd\u30fc\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001 image.port \u3067\u3059\u3002 http.target_container \u3067\u516c\u958b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u516c\u958b\u3057\u3066\u3044\u308b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u304c 443 \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u81ea\u52d5\u3067 HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.healthcheck. success_codes String healthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5bfe\u3057\u3066\u8fd4\u3059 HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002200 \u304b\u3089 499 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001\"200,202\" \u306e\u3088\u3046\u306b\u8907\u6570\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3084 \"200-299\" \u306e\u3088\u3046\u306a\u5024\u306e\u7bc4\u56f2\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 200 \u3067\u3059\u3002 http.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 http.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 2 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 http.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015 \u301c 300 \u3067\u3059\u3002 http.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015 \u301c 300 \u3067\u3059\u3002 http.healthcheck. grace_period Duration \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\u6642\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u3001\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 60 \u79d2\u3067\u3059\u3002\u3053\u308c\u306f\u3001healthy \u3067\u3042\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3057\u306a\u304c\u3089\u7740\u4fe1\u3092\u5f85\u6a5f\u3059\u308b\u307e\u3067\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u305f\u308a\u3001\u8fc5\u901f\u306a\u8d77\u52d5\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u9ad8\u901f\u5316\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 http. deregistration_delay Duration \u767b\u9332\u89e3\u9664\u6642\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306e\u63a5\u7d9a\u3092\u9589\u3058\u308b\u306e\u3092\u5f85\u3064\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f 60 \u79d2\u3067\u3059\u3002\u3053\u306e\u5024\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u5b89\u5168\u306b\u63a5\u7d9a\u3092\u9589\u3058\u308b\u305f\u3081\u306e\u6642\u9593\u3092\u78ba\u4fdd\u3067\u304d\u307e\u3059\u304c\u3001\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u5fc5\u8981\u3068\u306a\u308b\u6642\u9593\u304c\u9577\u304f\u306a\u308a\u307e\u3059\u3002\u7bc4\u56f2\u306f 0 \u301c 3600 \u3067\u3059\u3002 http. target_container String \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308c\u307e\u3059\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u304c 443 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u306f HTTP \u306b\u8a2d\u5b9a\u3055\u308c\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Fargate \u30bf\u30b9\u30af\u3068 TLS \u63a5\u7d9a\u3057\u307e\u3059\u3002\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u660e\u66f8\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002 http. stickiness Boolean \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http. allowed_source_ips Array of Strings Service \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b CIDR IP \u30a2\u30c9\u30ec\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http : allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http. alias String or Array of Strings or Array of Maps Service \u306e HTTPS \u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u3002 # String version. http : alias : example.com # Alternatively, as an array of strings. http : alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http. hosted_zone String \u65e2\u5b58\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306e ID\u3002\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4f5c\u6210\u5f8c\u306b\u3001 Copilot \u304c\u30a8\u30a4\u30ea\u30a2\u30b9\u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3057\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u540d\u3092 LB \u306e DNS \u540d\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002 alias \u3068\u5171\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 http : alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http. version String HTTP(S) \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3002 'grpc' \u3001 'http1' \u3001\u307e\u305f\u306f 'http2' \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u306f\u3001 'http1' \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002 gRPC \u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001Application \u306b\u30c9\u30e1\u30a4\u30f3\u304c\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 http. additional_rules Array of Maps \u8907\u6570\u306e ALB \u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 http.additional_rules. path String \u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306b\u5bfe\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3001Service \u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u5404\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306f\u30e6\u30cb\u30fc\u30af\u306a\u30d1\u30b9\u3067 \u516c\u958b\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http.additional_rules. healthcheck String or Map \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ca\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059\u3002 http : additional_rules : - healthcheck : '/' \u3042\u308b\u3044\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Map \u306b\u3088\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5148\u3002 http.additional_rules.healthcheck. port Integer \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u30dd\u30fc\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001 image.port \u3067\u3059\u3002 http.target_container \u3067\u516c\u958b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u516c\u958b\u3057\u3066\u3044\u308b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u304c 443 \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u81ea\u52d5\u3067 HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.additional_rules.healthcheck. success_codes String healthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5bfe\u3057\u3066\u8fd4\u3059 HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002200 \u304b\u3089 499 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001\"200,202\" \u306e\u3088\u3046\u306b\u8907\u6570\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3084 \"200-299\" \u306e\u3088\u3046\u306a\u5024\u306e\u7bc4\u56f2\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 200 \u3067\u3059\u3002 http.additional_rules.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 http.additional_rules.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 2 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 http.additional_rules.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015\u79d2-300\u79d2 \u3067\u3059\u3002 http.additional_rules.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015\u79d2-300\u79d2 \u3067\u3059\u3002 http.additional_rules. deregistration_delay Duration \u767b\u9332\u89e3\u9664\u6642\u306b\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u30c9\u30ec\u30a4\u30cb\u30f3\u30b0\u3059\u308b\u306e\u3092\u5f85\u3064\u6642\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 60 \u79d2\u3067\u3059\u3002\u5927\u304d\u306a\u5024\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u5b89\u5168\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u30c9\u30ec\u30a4\u30cb\u30f3\u30b0\u3059\u308b\u306e\u306b\u9577\u3044\u6642\u9593\u3092\u4f7f\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u65b0\u3057\u3044\u30c7\u30d7\u30ed\u30a4\u306b\u5fc5\u8981\u306a\u6642\u9593\u304c\u5897\u52a0\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30010 \u79d2 - 3600 \u79d2\u3067\u3059\u3002 http.additional_rules. target_container String \u30e1\u30a4\u30f3\u306e\u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u304c 443 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u660e\u66f8\u3092\u4f7f\u7528\u3057\u3066\u3001Fargate \u30bf\u30b9\u30af\u3068\u306e TLS \u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u306f HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.additional_rules. target_port String \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3002 \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e image.port \u3084\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306e sidecar.port \u3068\u7570\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u306e\u5834\u5408\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http.additional_rules. stickiness Boolean \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http.additional_rules. allowed_source_ips Array of Strings Service \u3078\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b CIDR IP \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002 http : additional_rules : - allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http.additional_rules. alias String or Array of Strings or Array of Maps Service \u306e HTTPS \u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u3059\u3002 # String version. http : additional_rules : - alias : example.com # Alternatively, as an array of strings. http : additional_rules : - alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : additional_rules : - alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http.additional_rules. hosted_zone String \u65e2\u5b58\u306e\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u306e ID\u3002 http.alias \u304a\u3088\u3073 http.additional_rules.alias \u3068\u5171\u306b\u306e\u307f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f Environment \u304c\u3042\u308b\u5834\u5408\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4f5c\u6210\u5f8c\u306b\u3001Copilot \u304c A \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3059\u308b\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 http : additional_rules : - alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http.additional_rules. redirect_to_https Boolean Application Load Balancer \u3067 HTTP \u304b\u3089 HTTPS \u306b\u81ea\u52d5\u7684\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002 http.additional_rules. version String HTTP(S) \u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\u3002 'grpc' \u3001 'http1' \u3001\u307e\u305f\u306f 'http2' \u306e\u3069\u308c\u304b\u3067\u3059\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u3001 'http1' \u304c\u63a8\u5b9a\u3055\u308c\u307e\u3059\u3002 gRPC \u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u30c9\u30e1\u30a4\u30f3\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 image Map image \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Docker \u30d3\u30eb\u30c9\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3084\u3001\u65e2\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u53c2\u7167\u306b\u3064\u3044\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002 image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 image. port Integer \u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002Dockerfile \u5185\u306b EXPOSE \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092\u30d1\u30fc\u30b9\u3057\u305f\u5024\u3092\u3053\u3053\u306b\u633f\u5165\u3057\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u3092 443 \u306b\u8a2d\u5b9a\u3057\u3001 \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c http \u3067\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u306f HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Fargate \u30bf\u30b9\u30af\u3068 TLS \u63a5\u7d9a\u3057\u307e\u3059\u3002\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u660e\u66f8\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002 image. healthcheck Map \u30b3\u30f3\u30c6\u30ca\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 image.healthcheck. command Array of Strings \u30b3\u30f3\u30c6\u30ca\u304c healthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a2d\u5b9a\u3059\u308b\u6587\u5b57\u5217\u914d\u5217\u306e\u6700\u521d\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u76f4\u63a5\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e CMD \u3001\u3042\u308b\u3044\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b7\u30a7\u30eb\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b CMD-SHELL \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image.healthcheck. interval Duration \u5404\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u9593\u306e\u79d2\u5358\u4f4d\u306e\u9593\u9694\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff11\uff10\u79d2\u3067\u3059\u3002 image.healthcheck. retries Integer \u30b3\u30f3\u30c6\u30ca\u304c unhealthy \u3068\u898b\u306a\u3055\u308c\u308b\u307e\u3067\u306b\u3001\u5931\u6557\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff12\u3067\u3059\u3002 image.healthcheck. timeout Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u958b\u59cb\u304b\u3089\u5931\u6557\u3068\u307f\u306a\u3059\u307e\u3067\u306b\u5f85\u6a5f\u3059\u308b\u79d2\u5358\u4f4d\u306e\u671f\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff15\u79d2\u3067\u3059\u3002 image.healthcheck. start_period Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u3068\u5931\u6557\u304c\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u59cb\u3081\u308b\u524d\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u51e6\u7406\u3092\u6e08\u307e\u305b\u308b\u7336\u4e88\u671f\u9593\u306e\u9577\u3055\u3067\u3059\u3002\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\uff10\u79d2\u3067\u3059\u3002 cpu Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 memory Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf\uff08MiB\uff09\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 platform String or Map docker build --platform \u3067\u6e21\u3059\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3002\uff08 [os]/[arch] \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\uff09 \u4f8b\u3048\u3070 linux/arm64 \u3084 windows/x86_64 \u306a\u3069\u304c\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f linux/x86_64 \u3067\u3059\u3002 \u7570\u306a\u308b osfamily \u3084 architecture \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001Windows \u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 WINDOWS_SERVER_2019_CORE \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u304c platform : windows/x86_64 Map \u3092\u4f7f\u3063\u3066 WINDOWS_SERVER_2019_FULL \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2019_core architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 count Integer or Map Service \u304c\u4fdd\u3064\u3079\u304d\u30bf\u30b9\u30af\u306e\u6570\u3002 \u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3059\u308b\u3068\u3001 count : 5 Service \u306f\u3001\u5e0c\u671b\u3059\u308b\u30bf\u30b9\u30af\u6570\u3092 5 \u306b\u8a2d\u5b9a\u3057\u3001Service \u5185\u306b 5 \u3064\u306e\u30bf\u30b9\u30af\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u69d8\u306b\u4fdd\u3061\u307e\u3059\u3002 count. spot Integer spot \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6570\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u5b9f\u884c\u306b Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 count : spot : 5 Info ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u52d5\u4f5c\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u306f\u3001Fargate Spot \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 \u3042\u308b\u3044\u306f\u3001Map \u3092\u6307\u5b9a\u3057\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 count : range : 1-10 cooldown : in : 30s cpu_percentage : 70 memory_percentage : value : 80 cooldown : out : 45s requests : 10000 response_time : 2s count. range String or Map \u30e1\u30c8\u30ea\u30af\u30b9\u306b\u6307\u5b9a\u3057\u305f\u5024\u306b\u57fa\u3065\u3044\u3066\u3001Service \u304c\u4fdd\u3064\u3079\u304d\u30bf\u30b9\u30af\u6570\u306e\u6700\u5c0f\u3068\u6700\u5927\u3092\u7bc4\u56f2\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 count : range : n-m \u3053\u308c\u306b\u3088\u308a Application Auto Scaling \u304c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u3001 MinCapacity \u306b n \u304c\u3001 MaxCapacity \u306b m \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u3042\u308b\u3044\u306f\u6b21\u306e\u4f8b\u306b\u6319\u3052\u308b\u3088\u3046\u306b range \u30d5\u30a3\u30fc\u30eb\u30c9\u4ee5\u4e0b\u306b min \u3068 max \u3092\u6307\u5b9a\u3057\u3001\u52a0\u3048\u3066 spot_from \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4e00\u5b9a\u6570\u4ee5\u4e0a\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306b Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u5229\u7528\u3059\u308b\u8a2d\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 count : range : min : 1 max : 10 spot_from : 3 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f Application Auto Scaling \u306f 1-10 \u306e\u7bc4\u56f2\u3067\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u304c\u3001\u6700\u521d\u306e\uff12\u30bf\u30b9\u30af\u306f\u30aa\u30f3\u30c7\u30de\u30f3\u30c9 Fargate \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002Service \u304c\uff13\u3064\u4ee5\u4e0a\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u30b9\u30b1\u30fc\u30eb\u3057\u305f\u5834\u5408\u3001\uff13\u3064\u76ee\u4ee5\u964d\u306e\u30bf\u30b9\u30af\u306f\u6700\u5927\u30bf\u30b9\u30af\u6570\u306b\u9054\u3059\u308b\u307e\u3067 Fargate Spot \u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002 count.range. min Integer Service \u304c\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306e\u6700\u5c0f\u30bf\u30b9\u30af\u6570\u3002 count.range. max Integer Service \u304c\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306e\u6700\u5927\u30bf\u30b9\u30af\u6570\u3002 count.range. spot_from Integer Service \u306e\u4f55\u500b\u76ee\u306e\u30bf\u30b9\u30af\u304b\u3089 Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u5229\u7528\u3059\u308b\u304b\u3002 count. cooldown Map \u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u308b\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3002 count.cooldown. in Duration Service \u3092\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u6642\u9593\u3002 count.cooldown. out Duration Service \u3092\u30b9\u30b1\u30fc\u30eb\u30c0\u30a6\u30f3\u3055\u305b\u308b\u305f\u3081\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u6642\u9593\u3002 cpu_percentage \u3001 memory_percentage \u3001 requests \u304a\u3088\u3073 response_time \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u95a2\u3059\u308b count \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3066\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u5024\u3068\u3057\u3066\u3042\u308b\u3044\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u5024\u3068\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u8a2d\u5b9a\u306b\u95a2\u3059\u308b\u8a73\u7d30\u60c5\u5831\u3092\u542b\u3080\u30de\u30c3\u30d7\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 value : 50 cooldown : in : 30s out : 60s \u3053\u3053\u3067\u6307\u5b9a\u3057\u305f\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u8a2d\u5b9a\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u8a2d\u5b9a\u3088\u308a\u512a\u5148\u3055\u308c\u307e\u3059\u3002 count. cpu_percentage Integer Service \u304c\u4fdd\u3064\u3079\u304d\u5e73\u5747 CPU \u4f7f\u7528\u7387\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. memory_percentage Integer Service \u304c\u4fdd\u3064\u3079\u304d\u5e73\u5747\u30e1\u30e2\u30ea\u4f7f\u7528\u7387\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. requests Integer \u30bf\u30b9\u30af\u3067\u51e6\u7406\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u306b\u5fdc\u3058\u3066\u3001\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. response_time Duration Service \u306e\u5e73\u5747\u30ec\u30b9\u30dd\u30f3\u30b9\u6642\u9593\u306b\u5fdc\u3058\u3066\u3001\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 exec Boolean \u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f false \u3067\u3059\u3002 $ copilot svc exec \u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u306b\u306f\u3001\u3053\u306e\u5024\u306b true \u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 deployment Map deployment \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u306e\u6570\u3084\u3001\u30bf\u30b9\u30af\u306e\u505c\u6b62\u3068\u958b\u59cb\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 deployment. rolling String \u30ed\u30fc\u30ea\u30f3\u30b0\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3002\u6709\u52b9\u306a\u5024\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 \"default\" : \u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u524d\u306b\u3001\u66f4\u65b0\u3055\u308c\u305f\u30bf\u30b9\u30af\u5b9a\u7fa9\u3067\u5fc5\u8981\u306a\u6570\u3060\u3051\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 100 \u306b\u3001 maximumPercent \u3092 200 \u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \"recreate\" : \u5b9f\u884c\u4e2d\u306e\u30bf\u30b9\u30af\u3092\u3059\u3079\u3066\u505c\u6b62\u3057\u3001\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 0 \u306b\u3001 maximumPercent \u3092 100 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 deployment. rollback_alarms \u6587\u5b57\u5217\u307e\u305f\u306f\u30de\u30c3\u30d7\u306e\u914d\u5217 Info \u30c7\u30d7\u30ed\u30a4\u306e\u958b\u59cb\u6642\u306b\u30a2\u30e9\u30fc\u30e0\u304c\u300cIn alarm\u300d\u72b6\u614b\u306b\u3042\u308b\u5834\u5408\u3001Amazon ECS \u306f\u305d\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9593\u3001\u30a2\u30e9\u30fc\u30e0\u3092\u76e3\u8996\u3057\u307e\u305b\u3093\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002 \u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u3001 \u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u306e\u3042\u308b\u3001Service \u306b\u95a2\u9023\u4ed8\u3051\u308b\u65e2\u5b58\u306e CloudWatch \u30a2\u30e9\u30fc\u30e0\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] \u30de\u30c3\u30d7\u3068\u3057\u3066\u3001Copilot \u304c\u4f5c\u6210\u3057\u305f\u30a2\u30e9\u30fc\u30e0\u306e\u30a2\u30e9\u30fc\u30e0 \u30e1\u30c8\u30ea\u30c3\u30af\u3068\u3057\u304d\u3044\u5024 \u5229\u7528\u53ef\u80fd\u306a\u30e1\u30c8\u30ea\u30af\u30b9: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. entrypoint String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 command : ps au # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 command : [ \"ps\" , \"au\" ] network Map network \u30bb\u30af\u30b7\u30e7\u30f3\u306f VPC \u5185\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network. connect Bool or Map Service \u306b\u5bfe\u3057 Service Connect \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002Service \u9593\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8ca0\u8377\u5206\u6563\u3057\u3001\u3088\u308a\u5f3e\u529b\u7684\u306b\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f false \u3067\u3059\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3068\u3001Service \u3067\u5229\u7528\u3059\u308b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\u30a8\u30a4\u30ea\u30a2\u30b9\u306f Environment \u5185\u3067\u30e6\u30cb\u30fc\u30af\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 network.connect. alias String Service Connect \u7d4c\u7531\u3067\u516c\u958b\u3059\u308b Service \u306e\u30ab\u30b9\u30bf\u30e0 DNS\u3000\u540d\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f Service \u540d\u3067\u3059\u3002 network. vpc Map \u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network.vpc. placement String or Map String \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 public \u3042\u308b\u3044\u306f private \u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30bf\u30b9\u30af\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002 Info Copilot \u304c\u751f\u6210\u3057\u305f VPC \u3092\u5229\u7528\u3057\u3066 private \u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u5834\u5408\u3001Copilot \u306f Environment \u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u7528\u306e NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002(\u4fa1\u683c\u306f \u3053\u3061\u3089 \u3002)\u3042\u308b\u3044\u306f copilot env init \u30b3\u30de\u30f3\u30c9\u3067\u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3084\u3001\u5206\u96e2\u3055\u308c\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u7528\u306b VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u69cb\u6210\u3055\u308c\u305f VPC \u3092\u69cb\u6210\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 custom environment resources \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\uff1a network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map String \u306e\u30ea\u30b9\u30c8\u3068\u3059\u308b\u5834\u5408\u3001Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8 ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Map \u306e\u5834\u5408\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u540d\u524d\u3068\u5024\u306e\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30d5\u30a3\u30eb\u30bf\u306f AND \u3067\u7d50\u5408\u3055\u308c\u3001\u5404\u30d5\u30a3\u30eb\u30bf\u306e\u5024\u306f OR \u3067\u7d50\u5408\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: public \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: private \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u4e21\u65b9\u306f\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30bf\u30b0\u30bb\u30c3\u30c8\u3002 network.vpc. security_groups Array of Strings or Map \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot \u306b\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001Environment \u5185\u306e\u30b3\u30f3\u30c6\u30ca\u540c\u58eb\u304c\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u306b\u3059\u308b\u306b\u306f\u3001 Map \u5f62\u5f0f\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 network.vpc.security_groups. deny_default Boolean Environment \u5185\u306e\u3059\u3079\u3066\u306e Service \u304b\u3089\u306e\u4fb5\u5165\u3092\u8a31\u53ef\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002 network.vpc.security_groups. groups Array of Strings \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network.vpc.security_groups.groups from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 variables Map Copilot \u306f Service \u540d\u306a\u3069\u3092\u5e38\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30bf\u30b9\u30af\u306b\u5bfe\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u672c\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u305d\u308c\u3089\u4ee5\u5916\u306b\u8ffd\u52a0\u3067\u6e21\u3057\u305f\u3044\u74b0\u5883\u5909\u6570\u3092\u30ad\u30fc\u30d0\u30fc\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 variables. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 env_file String \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b\u5f15\u304d\u6e21\u3059\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 secrets Map AWS Systems Manager (SSM) \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u307e\u305f\u306f AWS Secrets Manager \u304b\u3089\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u3001Service \u306b\u5b89\u5168\u306b\u6e21\u3055\u308c\u308b\u79d8\u5bc6\u5024\u3092\u8868\u3059\u30ad\u30fc\u30fb\u5024\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 secrets. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 storage Map storage \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u3084\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u3066\u6c38\u7d9a\u5316\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3068\u306a\u308b\u30c7\u30fc\u30bf\u51e6\u7406\u3084 CMS \u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\u8a73\u7d30\u306f \u30b9\u30c8\u30ec\u30fc\u30b8 \u30da\u30fc\u30b8\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u30bf\u30b9\u30af\u30ec\u30d9\u30eb\u306e\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u62e1\u5f35\u3092\u8a2d\u5b9a\u3082\u3067\u304d\u307e\u3059\u3002 storage. ephemeral Int \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u305f\u3044\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u30b5\u30a4\u30ba\u3092 GiB \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u304b\u3064\u6700\u5c0f\u5024\u306f 20 GiB \u3067\u3001\u6700\u5927\u5024\u306f 200 GiB \u3067\u3059\u300220 GiB \u3092\u8d85\u3048\u308b\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u305f\u8ffd\u52a0\u306e\u6599\u91d1\u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u5171\u6709\u3057\u305f\u3044\u5834\u5408\u3001\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u7a7a\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u691c\u8a0e\u3067\u304d\u307e\u3059\u3002 storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false \u3053\u306e\u4f8b\u3067\u306f\u30b5\u30a4\u30c9\u30ab\u30fc\u3068\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3067\u5171\u6709\u3055\u308c\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u3057\u3066\u3001100 GiB \u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u30d7\u30ed\u30d3\u30b8\u30e7\u30f3\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u5927\u304d\u306a\u30b5\u30a4\u30ba\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001\u3042\u308b\u3044\u306f\u30c7\u30a3\u30b9\u30af I/O \u306e\u8981\u6c42\u304c\u9ad8\u3044\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3044\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u5229\u7528\u3057\u3066 EFS \u304b\u3089\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u6709\u52b9\u306a\u65b9\u6cd5\u3068\u8a00\u3048\u307e\u3059\u3002 storage. readonly_fs Boolean \u30b3\u30f3\u30c6\u30ca\u306e\u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u69d8\u306b\u3059\u308b\u306b\u306f\u3001true \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage. volumes Map \u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u540d\u524d\u3084\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u6b21\u306e\u3088\u3046\u306b Map \u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> . path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f\uff12\uff14\uff12\u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> . read_only Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f true \u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 false \u306b\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e elasticfilesystem:ClientWrite \u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3001\u305d\u308c\u306b\u3088\u308a\u30dc\u30ea\u30e5\u30fc\u30e0\u3078\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 storage.volumes. <volume> . efs Boolean or Map \u8a73\u7d30\u306a EFS \u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Boolean \u5024\u306b\u3088\u308b\u6307\u5b9a\u3001\u3042\u308b\u3044\u306f uid \u3068 gid \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u3001EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068 Service \u5c02\u7528\u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 // Boolean \u5024\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : true // POSIX uid/gid \u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30de\u30a6\u30f3\u30c8\u3059\u308b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.id. from_cfn String v1.30.0 \u306b\u3066\u8ffd\u52a0 CloudFormation \u30b9\u30bf\u30c3\u30af\u51fa\u529b\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs. root_dir String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f / \u3067\u3059\u3002EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u3069\u306e\u30d1\u30b9\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30eb\u30fc\u30c8\u3068\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f 255 \u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u672c\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3001\u304b\u3064 auth.iam \u306e\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> .efs. uid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 gid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX UID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. gid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 uid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX GID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. auth Map EFS \u306b\u95a2\u9023\u3059\u308b\u8a8d\u53ef\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. iam Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002EFS \u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b IAM \u306b\u3088\u308b\u8a8d\u53ef\u3092\u5229\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. access_point_id String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"\" \u3067\u3059\u3002\u5229\u7528\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001 root_dir \u306e\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\u3001\u304b\u3064\u672c\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish Map publish \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3067\u304d\u307e\u3059\u3002 publish : topics : - name : orderEvents \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u3053\u306e Manifest \u306f\u3001Copilot \u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u4ed6\u306e Worker Service \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u308b orderEvents \u3068\u3044\u3046\u540d\u524d\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002 COPILOT_SNS_TOPIC_ARNS \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u3001JSON \u6587\u5b57\u5217\u3068\u3057\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 JavaScript\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) \u8a73\u3057\u304f\u306f\u3001 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 publish. topics Array of topics topic \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3002 publish.topics. topic Map 1 \u3064\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002 publish.topics.topic. name String \u5fc5\u9808\u9805\u76ee\u3002SNS \u30c8\u30d4\u30c3\u30af\u306e\u540d\u524d\u3067\u3059\u3002\u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3001\u6570\u5b57\u3001\u30cf\u30a4\u30d5\u30f3\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u307f\u3092\u542b\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3002 true \u3068\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 Copilot \u306f FIFO \u3067\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f, SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u304c\u4e00\u610f\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u91cd\u8907\u6392\u9664\u3092\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 logging Map logging \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30ed\u30b0\u8a2d\u5b9a\u3092\u542b\u307f\u307e\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306e FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002(\u8a2d\u5b9a\u4f8b\u306f \u3053\u3061\u3089 ) logging. retention Integer \u4efb\u610f\u9805\u76ee\u3002 \u30ed\u30b0\u30a4\u30d9\u30f3\u30c8\u3092\u4fdd\u6301\u3059\u308b\u65e5\u6570\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e 30 \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 logging. image Map \u4efb\u610f\u9805\u76ee\u3002\u4f7f\u7528\u3059\u308b Fluent Bit \u306e\u30a4\u30e1\u30fc\u30b8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f public.ecr.aws/aws-observability/aws-for-fluent-bit:stable \u3002 logging. destination Map \u4efb\u610f\u9805\u76ee\u3002FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3002 logging. enableMetadata Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306b ECS \u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3002 logging. secretOptions Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306e\u8a2d\u5b9a\u306b\u6e21\u3059\u79d8\u5bc6\u60c5\u5831\u3067\u3059\u3002 logging. configFilePath Map \u4efb\u610f\u9805\u76ee\u3002\u30ab\u30b9\u30bf\u30e0\u306e Fluent Bit \u30a4\u30e1\u30fc\u30b8\u5185\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9\u3002 logging. env_file String \u30ed\u30ae\u30f3\u30b0\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u8a2d\u5b9a\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u30d1\u30b9\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability Map observability \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Service \u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u6e2c\u5b9a\u3059\u308b\u65b9\u6cd5\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306e\u3068\u3053\u308d\u3001\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 observability \u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability. tracing String \u30c8\u30ec\u30fc\u30b9\u306b\u4f7f\u7528\u3059\u308b\u30d9\u30f3\u30c0\u30fc\u3002\u73fe\u5728\u3001 awsxray \u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 taskdef_overrides Array of Rules taskdef_overrides \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3067\u304d\u307e\u3059 (\u4f8b\u306f \u3053\u3061\u3089 )\u3002 taskdef_overrides. path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30d1\u30b9\u3002 taskdef_overrides. value Any \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3002 environments Map environments \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Manifest \u5185\u306e\u4efb\u610f\u306e\u8a2d\u5b9a\u5024\u3092 Environment \u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002\u4e0a\u90e8\u8a18\u8f09\u306e Manifest \u4f8b\u3067\u306f count \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067 'prod' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u3001'staging' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b Fargate Spot capacity \u306b\u3088\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002","title":"Backend Service"},{"location":"ja/docs/manifest/environment/","text":"'Environment' Manifest \u3067\u5229\u7528\u53ef\u80fd\u306a\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Copilot Environment \u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 Environment \u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Environment \u306e\u30b5\u30f3\u30d7\u30eb Manifest Basic Imported VPC Configured VPC With public certificates Private Content delivery network name : prod type : Environment observability : container_insights : true name : imported type : Environment network : vpc : id : 'vpc-12345' subnets : public : - id : 'subnet-11111' - id : 'subnet-22222' private : - id : 'subnet-33333' - id : 'subnet-44444' name : qa type : Environment network : vpc : cidr : '10.0.0.0/16' subnets : public : - cidr : '10.0.0.0/24' az : 'us-east-2a' - cidr : '10.0.1.0/24' az : 'us-east-2b' private : - cidr : '10.0.3.0/24' az : 'us-east-2a' - cidr : '10.0.4.0/24' az : 'us-east-2b' name : prod-pdx type : Environment http : public : # \u65e2\u5b58\u306e\u8a3c\u660e\u66f8\u3092\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u9069\u7528\u3057\u307e\u3059 certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-cv8f-adf3-j7gd-adf876af95 name : onprem type : Environment network : vpc : id : 'vpc-12345' subnets : private : - id : 'subnet-11111' - id : 'subnet-22222' - id : 'subnet-33333' - id : 'subnet-44444' http : private : # \u65e2\u5b58\u306e\u8a3c\u660e\u66f8\u3092\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u9069\u7528\u3057\u307e\u3059\u3002 certificates : - arn:aws:acm:${AWS_REGION}:${AWS_ACCOUNT_ID}:certificate/13245665-cv8f-adf3-j7gd-adf876af95 subnets : [ 'subnet-11111' , 'subnet-22222' ] name : cloudfront type : Environment cdn : true http : public : ingress : cdn : true name String Environment \u306e\u540d\u524d\u3002 type String 'Environment' \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 network Map network \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u307e\u305f\u306f Copilot \u3067\u751f\u6210\u3055\u308c\u305f VPC \u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 network. vpc Map vpc \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001CIDR \u8a2d\u5b9a\u3084\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 network.vpc. id String The ID of the VPC to import. This field is mutually exclusive with cidr . \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b VPC \u306e ID\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f cidr \u3068\u306f\u6392\u4ed6\u7684\u3067\u3059\u3002 network.vpc. cidr String Copilot \u304c\u751f\u6210\u3057\u305f VPC \u3068\u95a2\u9023\u4ed8\u3051\u308b IPv4 CIDR \u30d6\u30ed\u30c3\u30af\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f id \u3068\u306f\u6392\u4ed6\u7684\u3067\u3059\u3002 network.vpc. subnets Map VPC \u306b\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 network : vpc : id : 'vpc-12345' subnets : public : - id : 'subnet-11111' - id : 'subnet-22222' \u307e\u305f\u306f\u3001Copilot \u3067\u751f\u6210\u3055\u308c\u305f VPC \u3092\u69cb\u6210\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 network : vpc : cidr : '10.0.0.0/16' subnets : public : - cidr : '10.0.0.0/24' az : 'us-east-2a' - cidr : '10.0.1.0/24' az : 'us-east-2b' network.vpc.subnets. public Array of Subnets \u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u306e\u30ea\u30b9\u30c8\u3002 network.vpc.subnets. private Array of Subnets \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u306e\u30ea\u30b9\u30c8\u3002 network.vpc.subnets.<type>. id String \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u306e ID\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001 cidr \u304a\u3088\u3073 az \u3068\u306f\u6392\u4ed6\u7684\u3067\u3059\u3002 network.vpc.subnets.<type>. cidr String \u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f IPv4 CIDR \u30d6\u30ed\u30c3\u30af\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f id \u3068\u306f\u6392\u4ed6\u7684\u3067\u3059\u3002 network.vpc.subnets.<type>. az String \u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u53ef\u7528\u6027\u30be\u30fc\u30f3\u540d\u3067\u3059\u3002 az \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Availability Zone \u306f\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001 id \u3068\u306f\u6392\u4ed6\u7684\u3067\u3059\u3002 network.vpc. security_group Map Environment \u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u95a2\u3059\u308b\u30eb\u30fc\u30eb\u3002 network : vpc : security_group : ingress : - ip_protocol : tcp ports : 80 cidr : 0.0.0.0/0 network.vpc.security_group. ingress Array of Security Group Rules Environment \u306e\u30a4\u30f3\u30d0\u30a6\u30f3\u30c9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u95a2\u3059\u308b\u30eb\u30fc\u30eb\u306e\u30ea\u30b9\u30c8\u3002 network.vpc.security_group. egress Array of Security Group Rules Environment \u306e\u30a2\u30a6\u30c8\u30d0\u30a6\u30f3\u30c9\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u95a2\u3059\u308b\u30eb\u30fc\u30eb\u306e\u30ea\u30b9\u30c8\u3002 network.vpc.security_group.<type>. ip_protocol String IP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u540d\u524d\u307e\u305f\u306f\u756a\u53f7\u3002 network.vpc.security_group.<type>. ports String or Integer \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u30eb\u30fc\u30eb\u306e\u30dd\u30fc\u30c8\u7bc4\u56f2\u307e\u305f\u306f\u30dd\u30fc\u30c8\u756a\u53f7\u3002 ports : 0-65535 \u307e\u305f\u306f ports : 80 network.vpc.security_group.<type>. cidr String IPv4 \u30a2\u30c9\u30ec\u30b9\u306e\u7bc4\u56f2\u3092 CIDR \u5f62\u5f0f\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 network.vpc. flow_logs Boolean or Map 'true' \u3068\u6307\u5b9a\u3059\u308b\u3068\u3001Copilot \u306f VPC \u30d5\u30ed\u30fc\u30ed\u30b0\u3092\u6709\u52b9\u306b\u3057\u3066\u3001 Environment VPC \u306b\u51fa\u5165\u308a\u3059\u308b IP \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e VPC \u30d5\u30ed\u30fc\u30ed\u30b0\u306e\u4fdd\u6301\u671f\u9593\u306f 14 \u65e5\uff082 \u9031\u9593\uff09\u3067\u3059\u3002 network : vpc : flow_logs : on \u4fdd\u6301\u671f\u9593\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002 network : vpc : flow_logs : retention : 30 network.vpc.flow_logs. retention String \u30ed\u30b0\u30a4\u30d9\u30f3\u30c8\u3092\u4fdd\u6301\u3059\u308b\u65e5\u6570\u3067\u3059\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30da\u30fc\u30b8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 cdn Boolean or Map The cdn section contains parameters related to integrating your service with a CloudFront distribution. To enable the CloudFront distribution, specify cdn: true . cdn \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001CloudFront \u306e\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3068 Service \u306e\u7d71\u5408\u306b\u95a2\u9023\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001 cdn: true \u3068\u6307\u5b9a\u3057\u307e\u3059\u3002 cdn. certificate String CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u3067 HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306e\u8a3c\u660e\u66f8\u3002 CloudFront \u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u8a3c\u660e\u66f8\u304c us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u3042\u308b\u3053\u3068\u304c\u5fc5\u9808\u3067\u3059\u3002 \u8a2d\u5b9a\u4f8b\uff1a cdn : certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" cdn. static_assets Map \u4efb\u610f\u9805\u76ee\u3002CloudFront \u306e\u9759\u7684\u30a2\u30bb\u30c3\u30c8\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3002 cdn.static_assets. alias String \u9759\u7684\u30a2\u30bb\u30c3\u30c8\u306b\u4f7f\u7528\u3059\u308b\u8ffd\u52a0\u306e HTTPS \u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u3002 cdn.static_assets. location String S3 \u30d0\u30b1\u30c3\u30c8\u306e DNS \u30c9\u30e1\u30a4\u30f3\u540d\u3002(\u4f8b: EXAMPLE-BUCKET.s3.us-west-2.amazonaws.com ) cdn.static_assets. path String S3 \u30d0\u30b1\u30c3\u30c8\u306b\u8ee2\u9001\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6307\u5b9a\u3059\u308b\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3002(\u4f8b: static/* ) cdn. terminate_tls Boolean CloudFront \u3067\u306e TLS \u30bf\u30fc\u30df\u30cd\u30fc\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002 http Map http \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001 Load Balanced Web Service \u304c\u5171\u6709\u3059\u308b\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3068\u3001 Backend Service \u304c\u5171\u6709\u3059\u308b\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 http. public Map \u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3002 http.public. certificates Array of Strings \u516c\u958b\u3055\u308c\u3066\u3044\u308b AWS Certificate Manager \u306e\u8a3c\u660e\u66f8 ARN \u306e\u30ea\u30b9\u30c8\u3002 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u30d1\u30d6\u30ea\u30c3\u30af\u8a3c\u660e\u66f8\u3092\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u3053\u3068\u3067\u3001Load Balanced Web Service \u3092\u30c9\u30e1\u30a4\u30f3\u540d\u3068\u95a2\u9023\u4ed8\u3051\u3001HTTPS \u3067\u5230\u9054\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 http.alias \u3092\u4f7f\u7528\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 Developing/Domains \u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 http.public. access_logs Boolean or Map Elastic Load Balancing \u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30b0 \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002 true \u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u304c S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 http : public : access_logs : true \u30ed\u30b0\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 http : public : access_logs : prefix : access-logs \u307e\u305f\u3001Copilot \u304c\u4f5c\u6210\u3057\u305f S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u81ea\u5206\u3067\u4f5c\u6210\u3057\u305f S3 \u30d0\u30b1\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 http : public : access_logs : bucket_name : my-bucket prefix : access-logs http.public.access_logs. bucket_name String \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306e\u4fdd\u5b58\u5148\u3068\u306a\u308b\u65e2\u5b58\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3002 http.public.access_logs. prefix String \u30ed\u30b0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3002 http.public. ssl_policy String \u4efb\u610f\u9805\u76ee\u3002 \u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e HTTPS \u30ea\u30b9\u30ca\u30fc\u306b\u5bfe\u3059\u308b SSL \u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http.public. ingress Map Modified in v1.23.0 \u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u901a\u4fe1\u3092\u5236\u9650\u3059\u308b Ingress \u30eb\u30fc\u30eb\u3002 http.public. security_groups Map \u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u8ffd\u52a0\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a\u3002 http : public : ingress : cdn : true \"http.public.ingress\" \u306f\u3001\u4ee5\u524d\u306f \"http.public.security_groups.ingress\" \u3067\u3057\u305f \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001 v1.23.0 . \u307e\u3067\u306f\u3001 http.public.security_groups.ingress \u3067\u3057\u305f\u3002 \u3053\u306e\u5909\u66f4\u306f\u3001\u5b50\u30d5\u30a3\u30fc\u30eb\u30c9 cdn \uff08\u5f53\u6642\u306f\u552f\u4e00\u306e\u5b50\u30d5\u30a3\u30fc\u30eb\u30c9\uff09\u306b\u30ab\u30b9\u30b1\u30fc\u30c9\u3055\u308c\u3001\u4ee5\u524d\u3067\u306f\u3001 http.public.security_groups.ingress.restrict_to.cdn \u3067\u3057\u305f\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u30d6\u30ed\u30b0\u8a18\u4e8b v1.23.0 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 http.public.ingress. cdn Boolean v1.23.0 \u3067\u5909\u66f4\u3055\u308c\u307e\u3057\u305f \u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e Ingress \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c CloudFront \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u6765\u308b\u3088\u3046\u306b\u5236\u9650\u3059\u308b\u304b\u3069\u3046\u304b\u3002 http.public.ingress. source_ips Array of Strings \u30d1\u30d6\u30ea\u30c3\u30af\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3078\u306e Ingress \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30bd\u30fc\u30b9 IP \u306b\u5236\u9650\u3057\u307e\u3059\u3002 http : public : ingress : source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http. private Map \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u8a2d\u5b9a\u3002 http.private. certificates Array of Strings AWS Certificate Manager \u306e\u8a3c\u660e\u66f8 ARN \u306e\u30ea\u30b9\u30c8\u3002 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306b\u30d1\u30d6\u30ea\u30c3\u30af\u307e\u305f\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u8a3c\u660e\u66f8\u3092\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u3053\u3068\u3067\u3001Backend Service \u3092\u30c9\u30e1\u30a4\u30f3\u540d\u3068\u95a2\u9023\u4ed8\u3051\u3001HTTPS \u3067\u5230\u9054\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 http.alias \u3092\u4f7f\u7528\u3057\u3066 Service \u3092\u518d\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 Developing/Domains \u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 http.private. subnets Array of Strings \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u914d\u7f6e\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8 ID\u3002 http.private. ingress Map v1.23.0 \u3067\u5909\u66f4\u3055\u308c\u307e\u3057\u305f \u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8a31\u53ef\u3059\u308b Ingress \u30eb\u30fc\u30eb\u3002 http : private : ingress : vpc : true # VPC \u5185\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u53d7\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 \"http.private.ingress\" \u306f\u3001\u4ee5\u524d\u306f \"http.private.security_groups.ingress\" \u3067\u3057\u305f \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001 v1.23.0 \u307e\u3067\u306f\u3001 http.private.security_groups.ingress \u3067\u3057\u305f\u3002 \u3053\u306e\u5909\u66f4\u306f\u3001\u5b50\u30d5\u30a3\u30fc\u30eb\u30c9 vpc \uff08\u5f53\u6642\u306f\u552f\u4e00\u306e\u5b50\u30d5\u30a3\u30fc\u30eb\u30c9\uff09\u306b\u30ab\u30b9\u30b1\u30fc\u30c9\u3055\u308c\u3001\u4ee5\u524d\u3067\u306f\u3001 http.private.security_groups.ingress.from_vpc \u3067\u3057\u305f\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u30d6\u30ed\u30b0\u8a18\u4e8b v1.23.0 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 http.private.ingress. vpc Boolean v1.23.0 \u3067\u5909\u66f4\u3055\u308c\u307e\u3057\u305f VPC \u5185\u304b\u3089\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\u3069\u3046\u304b\u3002 http.private. ssl_policy String \u4efb\u610f\u9805\u76ee\u3002\u5185\u90e8\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e HTTPS \u30ea\u30b9\u30ca\u30fc\u306b\u5bfe\u3059\u308b SSL \u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 observability Map observability \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f Service \u3084 Job \u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3059\u308b\u65b9\u6cd5\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 observability. container_insights Bool Environment \u306e ECS \u30af\u30e9\u30b9\u30bf\u30fc\u3067 CloudWatch \u306e Container Insights \u3092\u6709\u52b9\u306b\u3059\u308b\u304b\u3069\u3046\u304b\u3002","title":"Environment"},{"location":"ja/docs/manifest/lb-web-service/","text":"\u4ee5\u4e0b\u306f 'Load Balanced Web Service' Manifest \u3067\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Copilot Service \u306e\u6982\u5ff5 \u8aac\u660e\u306e\u30da\u30fc\u30b8\u3082\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5411\u3051 Service \u306e\u30b5\u30f3\u30d7\u30eb Manifest Basic With a domain Larger containers Autoscaling Event-driven Network Load Balancer Shared file system End-to-end encryption Expose Multiple Ports name : 'frontend' type : 'Load Balanced Web Service' image : build : './frontend/Dockerfile' port : 8080 http : path : '/' healthcheck : '/_healthcheck' cpu : 256 memory : 512 count : 3 exec : true variables : LOG_LEVEL : info secrets : GITHUB_TOKEN : GITHUB_TOKEN DB_SECRET : secretsmanager : 'mysql' name : 'frontend' type : 'Load Balanced Web Service' image : build : './frontend/Dockerfile' port : 8080 http : path : '/' alias : 'example.com' environments : qa : http : alias : # \u8a3c\u660e\u66f8\u30a4\u30f3\u30dd\u30fc\u30c8\u6e08\u307f\u306e \"qa\" Environment - name : 'qa.example.com' hosted_zone : Z0873220N255IR3MTNR4 # \u4f8b\u3048\u3070\u3001\u5916\u90e8\u304b\u3089\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u3051\u5165\u308c\u308b\u524d\u306b\u3001Java \u30b5\u30fc\u30d3\u30b9\u3092\u30a6\u30a9\u30fc\u30e0\u30a2\u30c3\u30d7\u3057\u3066\u304a\u304d\u305f\u3044\u5834\u5408\u306a\u3069\u3002 name : 'frontend' type : 'Load Balanced Web Service' image : build : dockerfile : './frontend/Dockerfile' context : './frontend' port : 80 http : path : '/' healthcheck : path : '/_deephealthcheck' port : 8080 success_codes : '200,301' healthy_threshold : 4 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 2m deregistration_delay : 50s stickiness : true allowed_source_ips : [ \"10.24.34.0/23\" ] cpu : 2048 memory : 4096 count : 3 storage : ephemeral : 100 network : vpc : placement : 'private' name : 'frontend' type : 'Load Balanced Web Service' http : path : '/' image : location : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/frontend:latest port : 80 cpu : 512 memory : 1024 count : range : 1-10 cooldown : in : 60s out : 30s cpu_percentage : 70 requests : 30 response_time : 2s # https://aws.github.io/copilot-cli/docs/developing/publish-subscribe/ \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 name : 'orders' type : 'Load Balanced Web Service' image : build : Dockerfile port : 80 http : path : '/' alias : 'orders.example.com' variables : DDB_TABLE_NAME : 'orders' publish : topics : - name : 'products' - name : 'orders' fifo : true name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : false nlb : alias : 'example.com' port : 80/tcp target_container : envoy network : vpc : placement : 'private' sidecars : envoy : port : 80 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy:latest # http://localhost:8000/copilot-cli/docs/developing/storage.ja.md#\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 80 depends_on : bootstrap : success http : path : '/' storage : volumes : wp : path : /bitnami/wordpress read_only : false efs : true # \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002 sidecars : bootstrap : image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/bootstrap:v1.0.0 essential : false mount_points : - source_volume : wp path : /bitnami/wordpress read_only : false name : 'frontend' type : 'Load Balanced Web Service' image : build : Dockerfile port : 8080 http : alias : 'example.com' path : '/' healthcheck : path : '/_health' # \u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u306e\u6307\u5b9a\u306e\u7d50\u679c\u306b\u3088\u308a\u3001envoy \u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u306f 443 \u3067\u3059\u3002\u30d8\u30eb\u30c1\u30a7\u30c3\u30af\u30d7\u30ed\u30c8\u30b3\u30eb\u306f `HTTPS` \u306b\u306a\u308a\u307e\u3059\u3002 # \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Fargate \u30bf\u30b9\u30af\u3068 TLS \u63a5\u7d9a\u3057\u307e\u3059\u3002envoy \u30b3\u30f3\u30c6\u30ca\u306b # \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u8a3c\u660e\u66f8\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u8a3c\u660e\u66f8\u306f\u81ea\u5df1\u8a3c\u660e\u66f8\u3067\u3059\u3002 target_container : envoy sidecars : envoy : port : 443 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy-proxy-with-selfsigned-certs:v1 network : vpc : placement : 'private' name : 'frontend' type : 'Load Balanced Web Service' image : build : './frontend/Dockerfile' port : 8080 nlb : port : 8080/tcp # Traffic on port 8080/tcp is forwarded to the main container, on port 8080. additional_listeners : - port : 8084/tcp # Traffic on port 8084/tcp is forwarded to the main container, on port 8084. - port : 8085/tcp # Traffic on port 8085/tcp is forwarded to the sidecar \"envoy\", on port 3000. target_port : 3000 target_container : envoy http : path : '/' target_port : 8083 # Traffic on \"/\" is forwarded to the main container, on port 8083. additional_rules : - path : 'customerdb' target_port : 8081 # Traffic on \"/customerdb\" is forwarded to the main container, on port 8083. - path : 'admin' target_port : 8082 # Traffic on \"/admin\" is forwarded to the sidecar \"envoy\", on port 8082. target_container : envoy sidecars : envoy : port : 80 image : aws_account_id.dkr.ecr.us-west-2.amazonaws.com/envoy-proxy-with-selfsigned-certs:v1 name String Service \u306e\u540d\u524d\u3002 type String Service \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30bf\u30a4\u30d7\u3002 Load Balanced Web Service \u306f\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u53ca\u3073 AWS Fargate \u4e0a\u306e Amazon ECS \u306b\u3088\u3063\u3066\u69cb\u6210\u3055\u308c\u308b\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u516c\u958b\u3059\u308b\u305f\u3081\u306e Service \u3067\u3059\u3002 http Boolean or Map http \u30bb\u30af\u30b7\u30e7\u30f3\u306f Application Load Balancer \u3068 Service \u3068\u306e\u9023\u643a\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002 Application Load Balancer \u3092\u7121\u52b9\u5316\u3059\u308b\u5834\u5408\u306f\u3001 http: false \u3068\u6307\u5b9a\u3057\u307e\u3059\u3002 Load Balanced Web Service \u3067\u306f\u3001Application Load Balancer \u307e\u305f\u306f\u3001Network Load Balancer \u304c\u5c11\u306a\u304f\u3068\u3082 1 \u3064\u6709\u52b9\u3068\u306a\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u4e8b\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 http. path String \u3053\u306e\u30d1\u30b9\u306b\u5230\u7740\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3001Service \u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u5404\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u306f\u4e00\u610f\u306e\u30d1\u30b9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 http. alb String v1.32.0 \u306b\u3066\u8ffd\u52a0 \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u65e2\u5b58\u306e\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5411\u3051 ALB \u306e ARN \u307e\u305f\u306f ALB \u540d\u3002\u30ea\u30b9\u30ca\u30fc\u306b\u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002Copilot \u306f\u8a3c\u660e\u66f8\u306a\u3069\u306e DNS \u95a2\u9023\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3057\u307e\u305b\u3093\u3002 http. healthcheck String or Map \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ca\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059\u3002 http : healthcheck : '/' \u3042\u308b\u3044\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Map \u306b\u3088\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 http : healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s grace_period : 60s http.healthcheck. path String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5148\u3002 http.healthcheck. port Integer \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u30dd\u30fc\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001 image.port \u3067\u3059\u3002 http.target_container \u3067\u516c\u958b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u516c\u958b\u3057\u3066\u3044\u308b\u30dd\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u304c 443 \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001 \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u81ea\u52d5\u3067 HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 http.healthcheck. success_codes String healthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5bfe\u3057\u3066\u8fd4\u3059 HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002200 \u304b\u3089 499 \u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001\"200,202\" \u306e\u3088\u3046\u306b\u8907\u6570\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3084 \"200-299\" \u306e\u3088\u3046\u306a\u5024\u306e\u7bc4\u56f2\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 200 \u3067\u3059\u3002 http.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 http.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 2 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 http.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015 \u301c 300 \u3067\u3059\u3002 http.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30015 \u301c 300 \u3067\u3059\u3002 http.healthcheck. grace_period Duration \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\u6642\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u3001\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 60 \u79d2\u3067\u3059\u3002\u3053\u308c\u306f\u3001healthy \u3067\u3042\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3057\u306a\u304c\u3089\u7740\u4fe1\u3092\u5f85\u6a5f\u3059\u308b\u307e\u3067\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u305f\u308a\u3001\u8fc5\u901f\u306a\u8d77\u52d5\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u9ad8\u901f\u5316\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 http. deregistration_delay Duration \u767b\u9332\u89e3\u9664\u6642\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306e\u63a5\u7d9a\u3092\u9589\u3058\u308b\u306e\u3092\u5f85\u3064\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f 60 \u79d2\u3067\u3059\u3002\u3053\u306e\u5024\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u5b89\u5168\u306b\u63a5\u7d9a\u3092\u9589\u3058\u308b\u305f\u3081\u306e\u6642\u9593\u3092\u78ba\u4fdd\u3067\u304d\u307e\u3059\u304c\u3001\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u5fc5\u8981\u3068\u306a\u308b\u6642\u9593\u304c\u9577\u304f\u306a\u308a\u307e\u3059\u3002\u7bc4\u56f2\u306f 0 \u301c 3600 \u3067\u3059\u3002 http. target_container String \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308c\u307e\u3059\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u304c 443 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u306f HTTP \u306b\u8a2d\u5b9a\u3055\u308c\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Fargate \u30bf\u30b9\u30af\u3068 TLS \u63a5\u7d9a\u3057\u307e\u3059\u3002\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u660e\u66f8\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002 http. target_port String \u4efb\u610f\u9805\u76ee\u3002\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u304c\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u5834\u5408\u3001 image.port \u3001 \u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u304c\u30b5\u30a4\u30c9\u30ab\u30fc\u306e\u5834\u5408\u306f\u3001 sidecars.<name>.port \u3067\u3059\u3002 http. stickiness Boolean \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http. allowed_source_ips Array of Strings Service \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b CIDR IP \u30a2\u30c9\u30ec\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 http : allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http. alias String or Array of Strings or Array of Maps Service \u306e HTTPS \u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u3002 # String version. http : alias : example.com # Alternatively, as an array of strings. http : alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http. hosted_zone String \u65e2\u5b58\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306e ID\u3002 http.alias \u3068\u306e\u307f\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f Environment \u304c\u3042\u308b\u5834\u5408\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4f5c\u6210\u5f8c\u306b Copilot \u304c A \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3059\u308b\u30db\u30b9\u30c8\u30be\u30fc\u30f3\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 http : alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http. redirect_to_https Boolean Application Load Balancer \u3067\u3001HTTP \u304b\u3089 HTTPS \u3078\u81ea\u52d5\u7684\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002 http. version String HTTP(S) \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3002 'grpc' \u3001 'http1' \u3001\u307e\u305f\u306f 'http2' \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u306f\u3001 'http1' \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002 gRPC \u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001Application \u306b\u30c9\u30e1\u30a4\u30f3\u304c\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 http. additional_rules Array of Maps \u8907\u6570\u306e ALB \u30ea\u30b9\u30ca\u30fc\u30eb\u30fc\u30eb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 http.additional_rules. path String Requests to this path will be forwarded to your service. Each listener rule should listen on a unique path. http.additional_rules. healthcheck String or Map If you specify a string, Copilot interprets it as the path exposed in your container to handle target group health check requests. The default is \"/\". http : additional_rules : - healthcheck : '/' You can also specify healthcheck as a map: http : additional_rules : - healthcheck : path : '/' port : 8080 success_codes : '200' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.additional_rules.healthcheck. path String The destination that the health check requests are sent to. http.additional_rules.healthcheck. port Integer The port that the health check requests are sent to. The default is image.port , or the port exposed by http.target_container , if set. If the port exposed is 443 , then the health check protocol is automatically set to HTTPS. http.additional_rules.healthcheck. success_codes String The HTTP status codes that healthy targets must use when responding to an HTTP health check. You can specify values between 200 and 499. You can specify multiple values (for example, \"200,202\") or a range of values (for example, \"200-299\"). The default is 200. http.additional_rules.healthcheck. healthy_threshold Integer The number of consecutive health check successes required before considering an unhealthy target healthy. The default is 5. Range: 2-10. http.additional_rules.healthcheck. unhealthy_threshold Integer The number of consecutive health check failures required before considering a target unhealthy. The default is 2. Range: 2-10. http.additional_rules.healthcheck. interval Duration The approximate amount of time, in seconds, between health checks of an individual target. The default is 30s. Range: 5s\u2013300s. http.additional_rules.healthcheck. timeout Duration The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5s. Range 5s-300s. http.additional_rules. deregistration_delay Duration The amount of time to wait for targets to drain connections during deregistration. The default is 60s. Setting this to a larger value gives targets more time to gracefully drain connections, but increases the time required for new deployments. Range 0s-3600s. http.additional_rules. target_container String A sidecar container that requests are routed to instead of the main service container. If the target container's port is set to 443 , then the protocol is set to HTTPS so that the load balancer establishes TLS connections with the Fargate tasks using certificates that you install on the target container. http.additional_rules. target_port String The container port that receives traffic. Specify this field if the container port is different from image.port for the main container or sidecar.port for the sidecar containers. http.additional_rules. stickiness Boolean Indicates whether sticky sessions are enabled. http.additional_rules. allowed_source_ips Array of Strings CIDR IP addresses permitted to access your service. http : additional_rules : - allowed_source_ips : [ \"192.0.2.0/24\" , \"198.51.100.10/32\" ] http.additional_rules. alias String or Array of Strings or Array of Maps HTTPS domain alias of your service. # String version. http : additional_rules : - alias : example.com # Alternatively, as an array of strings. http : additional_rules : - alias : [ \"example.com\" , \"v1.example.com\" ] # Alternatively, as an array of maps. http : additional_rules : - alias : - name : example.com hosted_zone : Z0873220N255IR3MTNR4 - name : v1.example.com hosted_zone : AN0THE9H05TED20NEID http.additional_rules. hosted_zone String ID of your existing hosted zone; can only be used with http.alias and http.additional_rules.alias . If you have an environment with imported certificates, you can specify the hosted zone into which Copilot should insert the A record once the load balancer is created. http : additional_rules : - alias : example.com hosted_zone : Z0873220N255IR3MTNR4 # Also see http.alias array of maps example, above. http.additional_rules. redirect_to_https Boolean Automatically redirect the Application Load Balancer from HTTP to HTTPS. By default it is true . http.additional_rules. version String The HTTP(S) protocol version. Must be one of 'grpc' , 'http1' , or 'http2' . If omitted, then 'http1' is assumed. If using gRPC, please note that a domain must be associated with your application. nlb Map nlb \u30bb\u30af\u30b7\u30e7\u30f3\u306f Service \u3092 Network Load Balancer \u3068\u7d71\u5408\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u542b\u307f\u307e\u3059\u3002 Network Load Balancer\u306f\u3001 nlb \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306e\u307f\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002 Load Balanced Web Service \u3067\u306f\u3001Application Load Balancer \u3068 Network Load Balancer \u306e\u3044\u305a\u308c\u304b\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 nlb. port String \u5fc5\u9808\u9805\u76ee\u3002Network Load Balancer \u304c\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u30dd\u30fc\u30c8\u3068\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u4f7f\u7528\u53ef\u80fd\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u306f tcp \u3001 udp \u3068 tls \u3067\u3059\u3002\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 tcp \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b: nlb : port : 80 tcp \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30dd\u30fc\u30c8 80 \u3067\u5f85\u3061\u53d7\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b: nlb : port : 80/tcp \u7c21\u5358\u306b TLS \u7d42\u7aef\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8a2d\u5b9a\u4f8b: nlb : port : 443/tls nlb. healthcheck Map Network Load Balancer \u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb : healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.healthcheck. port String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u308b\u30dd\u30fc\u30c8\u3002\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u30bf\u30fc\u30b2\u30c3\u30c8\u30dd\u30fc\u30c8\u3068\u306f\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3067\u5b9f\u884c\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 nlb.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012 \u301c 10 \u3067\u3059\u3002 nlb.healthcheck. grace_period Duration \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\u6642\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u3001\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 60 \u79d2\u3067\u3059\u3002\u3053\u308c\u306f\u3001healthy \u3067\u3042\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3057\u306a\u304c\u3089\u7740\u4fe1\u3092\u5f85\u6a5f\u3059\u308b\u307e\u3067\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u554f\u984c\u3092\u4fee\u6b63\u3057\u305f\u308a\u3001\u8fc5\u901f\u306a\u8d77\u52d5\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d7\u30ed\u30a4\u3092\u9ad8\u901f\u5316\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 Info \u3053\u306e\u8aac\u660e\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306f\u3001 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u3088\u308b\u3068\u3001Network Load Balancer \u306e 'unhealthy threshold' \u306f 'healthy threshold' \u3068\u540c\u3058\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002 nlb.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306f 10s (10 \u79d2) \u307e\u305f\u306f 30s (30 \u79d2) \u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30s \u3067\u3059\u3002 nlb.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 10s (10 \u79d2)\u3067\u3059\u3002 nlb. target_container String \u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u306b\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308c\u307e\u3059\u3002 nlb. target_port Integer \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306e\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u304c\u30ea\u30b9\u30ca\u30fc\u30dd\u30fc\u30c8\u306e nlb.port \u3068\u7570\u306a\u308b\u5834\u5408\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb. ssl_policy String \u3069\u306e\u3088\u3046\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3084\u6697\u53f7\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u304b\u3092\u5b9a\u7fa9\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002\u8a73\u3057\u304f\u306f \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 nlb. stickiness Boolean \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb. alias String or Array of Strings Service \u306e\u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9 # \u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u5834\u5408 nlb : alias : example.com # \u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u6587\u5b57\u5217\u914d\u5217\u306e\u5834\u5408 nlb : alias : [ \"example.com\" , \"v1.example.com\" ] nlb. additional_listeners Array of Maps \u8907\u6570\u306e NLB \u30ea\u30b9\u30ca\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners Map nlb.additional_listeners. port String \u5fc5\u9808\u9805\u76ee\u3002Network Load Balancer \u304c\u5f85\u3061\u53d7\u3051\u308b\u70ba\u306e\u8ffd\u52a0\u30dd\u30fc\u30c8\u3068\u30d7\u30ed\u30c8\u30b3\u30eb\u3002 \u4f7f\u7528\u53ef\u80fd\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u306f tcp \u3001 udp \u3068 tls \u3067\u3059\u3002\u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3057\u3066 tcp \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002 nlb.additional_listeners. healthcheck Map Network Load Balancer \u306e\u8ffd\u52a0\u30ea\u30b9\u30ca\u30fc\u306b\u5bfe\u3059\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb : additional_listeners : - healthcheck : port : 80 healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s nlb.additional_listeners.healthcheck. port String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u308b\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30bf\u30fc\u30b2\u30c3\u30c8\u30dd\u30fc\u30c8\u3068\u7570\u306a\u308b\u30dd\u30fc\u30c8\u3067\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u5834\u5408\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 nlb.additional_listeners.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30012-10 \u3067\u3059\u3002 nlb.additional_listeners.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 10 \u79d2\u307e\u305f\u306f 30 \u79d2\u304c\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 30 \u79d2\u3067\u3059\u3002 nlb.additional_listeners.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 10 \u79d2\u3067\u3059\u3002 nlb.additional_listeners. target_container String \u30b5\u30fc\u30d3\u30b9\u30b3\u30f3\u30c6\u30ca\u306e\u4ee3\u308f\u308a\u3068\u306a\u308b\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u3002 nlb.additional_listeners. target_port Integer \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u53d7\u4fe1\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u3002\u30b3\u30f3\u30c6\u30ca\u30dd\u30fc\u30c8\u304c nlb.port \u3001\u30ea\u30b9\u30ca\u30fc\u30dd\u30fc\u30c8\u3068\u7570\u306a\u308b\u5834\u5408\u306b\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 nlb.additional_listeners. ssl_policy String \u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30d7\u30ed\u30b3\u30eb\u3068\u6697\u53f7\u3092\u5b9a\u7fa9\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 <span class=\"parent-field\">nlb.additional_listeners.</span><a id=\"nlb-additional-listeners-stickiness\" href=\"#nlb-additional-listeners-stickiness\" class=\"field\">`stickiness`</a> <span class=\"type\">Boolean</span> \u30b9\u30c6\u30a3\u30c3\u30ad\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6709\u52b9\u5316\u3001\u3042\u308b\u3044\u306f\u7121\u52b9\u5316\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 image Map image \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Docker \u30d3\u30eb\u30c9\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3084\u3001\u65e2\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u53c2\u7167\u306b\u3064\u3044\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002 image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 image. port Integer \u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002Dockerfile \u5185\u306b EXPOSE \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092\u30d1\u30fc\u30b9\u3057\u305f\u5024\u3092\u3053\u3053\u306b\u633f\u5165\u3057\u307e\u3059\u3002 \u30dd\u30fc\u30c8\u3092 443 \u306b\u8a2d\u5b9a\u3057\u3001 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c http \u3067\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u306f HTTPS \u306b\u8a2d\u5b9a\u3055\u308c\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f Fargate \u30bf\u30b9\u30af\u3068 TLS \u63a5\u7d9a\u3057\u307e\u3059\u3002\u30bf\u30fc\u30b2\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u8a3c\u660e\u66f8\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002 image. healthcheck Map \u30b3\u30f3\u30c6\u30ca\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u8a2d\u5b9a\u3002\u3053\u306e\u8a2d\u5b9a\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002 image.healthcheck. command Array of Strings \u30b3\u30f3\u30c6\u30ca\u304c healthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u8a2d\u5b9a\u3059\u308b\u6587\u5b57\u5217\u914d\u5217\u306e\u6700\u521d\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u76f4\u63a5\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e CMD \u3001\u3042\u308b\u3044\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b7\u30a7\u30eb\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b CMD-SHELL \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image.healthcheck. interval Duration \u5404\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u9593\u306e\u79d2\u5358\u4f4d\u306e\u9593\u9694\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff11\uff10\u79d2\u3067\u3059\u3002 image.healthcheck. retries Integer \u30b3\u30f3\u30c6\u30ca\u304c unhealthy \u3068\u898b\u306a\u3055\u308c\u308b\u307e\u3067\u306b\u3001\u5931\u6557\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u518d\u8a66\u884c\u3059\u308b\u56de\u6570\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff12\u3067\u3059\u3002 image.healthcheck. timeout Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u958b\u59cb\u304b\u3089\u5931\u6557\u3068\u307f\u306a\u3059\u307e\u3067\u306b\u5f85\u6a5f\u3059\u308b\u79d2\u5358\u4f4d\u306e\u671f\u9593\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\uff15\u79d2\u3067\u3059\u3002 image.healthcheck. start_period Duration \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u884c\u3068\u5931\u6557\u304c\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u59cb\u3081\u308b\u524d\u306b\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u51e6\u7406\u3092\u6e08\u307e\u305b\u308b\u7336\u4e88\u671f\u9593\u306e\u9577\u3055\u3067\u3059\u3002\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\uff10\u79d2\u3067\u3059\u3002 cpu Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 memory Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf\uff08MiB\uff09\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 platform String or Map docker build --platform \u3067\u6e21\u3059\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3002\uff08 [os]/[arch] \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\uff09 \u4f8b\u3048\u3070 linux/arm64 \u3084 windows/x86_64 \u306a\u3069\u304c\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f linux/x86_64 \u3067\u3059\u3002 \u7570\u306a\u308b osfamily \u3084 architecture \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001Windows \u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 WINDOWS_SERVER_2019_CORE \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u304c platform : windows/x86_64 Map \u3092\u4f7f\u3063\u3066 WINDOWS_SERVER_2019_FULL \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2019_core architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 count Integer or Map Service \u304c\u4fdd\u3064\u3079\u304d\u30bf\u30b9\u30af\u306e\u6570\u3002 \u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3059\u308b\u3068\u3001 count : 5 Service \u306f\u3001\u5e0c\u671b\u3059\u308b\u30bf\u30b9\u30af\u6570\u3092 5 \u306b\u8a2d\u5b9a\u3057\u3001Service \u5185\u306b 5 \u3064\u306e\u30bf\u30b9\u30af\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u69d8\u306b\u4fdd\u3061\u307e\u3059\u3002 count. spot Integer spot \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6570\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u5b9f\u884c\u306b Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 count : spot : 5 Info ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u52d5\u4f5c\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u306f\u3001Fargate Spot \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 \u3042\u308b\u3044\u306f\u3001Map \u3092\u6307\u5b9a\u3057\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 count : range : 1-10 cooldown : in : 30s out : 60s cpu_percentage : 70 memory_percentage : value : 80 cooldown : in : 80s out : 160s requests : 10000 response_time : 2s count. range String or Map \u30e1\u30c8\u30ea\u30af\u30b9\u306b\u6307\u5b9a\u3057\u305f\u5024\u306b\u57fa\u3065\u3044\u3066\u3001Service \u304c\u4fdd\u3064\u3079\u304d\u30bf\u30b9\u30af\u6570\u306e\u6700\u5c0f\u3068\u6700\u5927\u3092\u7bc4\u56f2\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 count : range : n-m \u3053\u308c\u306b\u3088\u308a Application Auto Scaling \u304c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u3001 MinCapacity \u306b n \u304c\u3001 MaxCapacity \u306b m \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u3042\u308b\u3044\u306f\u6b21\u306e\u4f8b\u306b\u6319\u3052\u308b\u3088\u3046\u306b range \u30d5\u30a3\u30fc\u30eb\u30c9\u4ee5\u4e0b\u306b min \u3068 max \u3092\u6307\u5b9a\u3057\u3001\u52a0\u3048\u3066 spot_from \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4e00\u5b9a\u6570\u4ee5\u4e0a\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306b Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u5229\u7528\u3059\u308b\u8a2d\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 count : range : min : 1 max : 10 spot_from : 3 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f Application Auto Scaling \u306f 1-10 \u306e\u7bc4\u56f2\u3067\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u304c\u3001\u6700\u521d\u306e\uff12\u30bf\u30b9\u30af\u306f\u30aa\u30f3\u30c7\u30de\u30f3\u30c9 Fargate \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002Service \u304c\uff13\u3064\u4ee5\u4e0a\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u30b9\u30b1\u30fc\u30eb\u3057\u305f\u5834\u5408\u3001\uff13\u3064\u76ee\u4ee5\u964d\u306e\u30bf\u30b9\u30af\u306f\u6700\u5927\u30bf\u30b9\u30af\u6570\u306b\u9054\u3059\u308b\u307e\u3067 Fargate Spot \u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002 count.range. min Integer Service \u304c\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306e\u6700\u5c0f\u30bf\u30b9\u30af\u6570\u3002 count.range. max Integer Service \u304c\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306e\u6700\u5927\u30bf\u30b9\u30af\u6570\u3002 count.range. spot_from Integer Service \u306e\u4f55\u500b\u76ee\u306e\u30bf\u30b9\u30af\u304b\u3089 Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u5229\u7528\u3059\u308b\u304b\u3002 count. cooldown Map \u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u308b\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3002 count.cooldown. in Duration Service \u3092\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u6642\u9593\u3002 count.cooldown. out Duration Service \u3092\u30b9\u30b1\u30fc\u30eb\u30c0\u30a6\u30f3\u3055\u305b\u308b\u305f\u3081\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u6642\u9593\u3002 cpu_percentage \u3001 memory_percentage \u3001 requests \u304a\u3088\u3073 response_time \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u95a2\u3059\u308b count \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3066\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u5024\u3068\u3057\u3066\u3042\u308b\u3044\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u5024\u3068\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u8a2d\u5b9a\u306b\u95a2\u3059\u308b\u8a73\u7d30\u60c5\u5831\u3092\u542b\u3080\u30de\u30c3\u30d7\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 value : 50 cooldown : in : 30s out : 60s \u3053\u3053\u3067\u6307\u5b9a\u3057\u305f\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u8a2d\u5b9a\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u8a2d\u5b9a\u3088\u308a\u512a\u5148\u3055\u308c\u307e\u3059\u3002 count. cpu_percentage Integer or Map Service \u304c\u4fdd\u3064\u3079\u304d\u5e73\u5747 CPU \u4f7f\u7528\u7387\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. memory_percentage Integer Service \u304c\u4fdd\u3064\u3079\u304d\u5e73\u5747\u30e1\u30e2\u30ea\u4f7f\u7528\u7387\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. requests Integer \u30bf\u30b9\u30af\u5f53\u305f\u308a\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. response_time Duration Service \u306e\u5e73\u5747\u30ec\u30b9\u30dd\u30f3\u30b9\u30bf\u30a4\u30e0\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 exec Boolean \u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f false \u3067\u3059\u3002 $ copilot svc exec \u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u306b\u306f\u3001\u3053\u306e\u5024\u306b true \u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 deployment Map deployment \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u306e\u6570\u3084\u3001\u30bf\u30b9\u30af\u306e\u505c\u6b62\u3068\u958b\u59cb\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 deployment. rolling String \u30ed\u30fc\u30ea\u30f3\u30b0\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3002\u6709\u52b9\u306a\u5024\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 \"default\" : \u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u524d\u306b\u3001\u66f4\u65b0\u3055\u308c\u305f\u30bf\u30b9\u30af\u5b9a\u7fa9\u3067\u5fc5\u8981\u306a\u6570\u3060\u3051\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 100 \u306b\u3001 maximumPercent \u3092 200 \u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \"recreate\" : \u5b9f\u884c\u4e2d\u306e\u30bf\u30b9\u30af\u3092\u3059\u3079\u3066\u505c\u6b62\u3057\u3001\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 0 \u306b\u3001 maximumPercent \u3092 100 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 deployment. rollback_alarms \u6587\u5b57\u5217\u307e\u305f\u306f\u30de\u30c3\u30d7\u306e\u914d\u5217 Info \u30c7\u30d7\u30ed\u30a4\u306e\u958b\u59cb\u6642\u306b\u30a2\u30e9\u30fc\u30e0\u304c\u300cIn alarm\u300d\u72b6\u614b\u306b\u3042\u308b\u5834\u5408\u3001Amazon ECS \u306f\u305d\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9593\u3001\u30a2\u30e9\u30fc\u30e0\u3092\u76e3\u8996\u3057\u307e\u305b\u3093\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002 \u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u3001 \u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u306e\u3042\u308b\u3001Service \u306b\u95a2\u9023\u4ed8\u3051\u308b\u65e2\u5b58\u306e CloudWatch \u30a2\u30e9\u30fc\u30e0\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] \u30de\u30c3\u30d7\u3068\u3057\u3066\u3001Copilot \u304c\u4f5c\u6210\u3057\u305f\u30a2\u30e9\u30fc\u30e0\u306e\u30a2\u30e9\u30fc\u30e0 \u30e1\u30c8\u30ea\u30c3\u30af\u3068\u3057\u304d\u3044\u5024 \u5229\u7528\u53ef\u80fd\u306a\u30e1\u30c8\u30ea\u30af\u30b9: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. entrypoint String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 command : ps au # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 command : [ \"ps\" , \"au\" ] network Map network \u30bb\u30af\u30b7\u30e7\u30f3\u306f VPC \u5185\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network. connect Bool or Map Service \u306b\u5bfe\u3057 Service Connect \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002Service \u9593\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8ca0\u8377\u5206\u6563\u3057\u3001\u3088\u308a\u5f3e\u529b\u7684\u306b\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f false \u3067\u3059\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3068\u3001Service \u3067\u5229\u7528\u3059\u308b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\u30a8\u30a4\u30ea\u30a2\u30b9\u306f Environment \u5185\u3067\u30e6\u30cb\u30fc\u30af\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 network.connect. alias String Service Connect \u7d4c\u7531\u3067\u516c\u958b\u3059\u308b Service \u306e\u30ab\u30b9\u30bf\u30e0 DNS\u3000\u540d\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f Service \u540d\u3067\u3059\u3002 network. vpc Map \u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network.vpc. placement String or Map String \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 public \u3042\u308b\u3044\u306f private \u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30bf\u30b9\u30af\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002 Info Copilot \u304c\u751f\u6210\u3057\u305f VPC \u3092\u5229\u7528\u3057\u3066 private \u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u5834\u5408\u3001Copilot \u306f Environment \u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u7528\u306e NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002(\u4fa1\u683c\u306f \u3053\u3061\u3089 \u3002)\u3042\u308b\u3044\u306f copilot env init \u30b3\u30de\u30f3\u30c9\u3067\u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3084\u3001\u5206\u96e2\u3055\u308c\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u7528\u306b VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u69cb\u6210\u3055\u308c\u305f VPC \u3092\u69cb\u6210\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 custom environment resources \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\uff1a network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map String \u306e\u30ea\u30b9\u30c8\u3068\u3059\u308b\u5834\u5408\u3001Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8 ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Map \u306e\u5834\u5408\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u540d\u524d\u3068\u5024\u306e\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30d5\u30a3\u30eb\u30bf\u306f AND \u3067\u7d50\u5408\u3055\u308c\u3001\u5404\u30d5\u30a3\u30eb\u30bf\u306e\u5024\u306f OR \u3067\u7d50\u5408\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: public \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: private \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u4e21\u65b9\u306f\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30bf\u30b0\u30bb\u30c3\u30c8\u3002 network.vpc. security_groups Array of Strings or Map \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot \u306b\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001Environment \u5185\u306e\u30b3\u30f3\u30c6\u30ca\u540c\u58eb\u304c\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u306b\u3059\u308b\u306b\u306f\u3001 Map \u5f62\u5f0f\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 network.vpc.security_groups. deny_default Boolean Environment \u5185\u306e\u3059\u3079\u3066\u306e Service \u304b\u3089\u306e\u4fb5\u5165\u3092\u8a31\u53ef\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002 network.vpc.security_groups. groups Array of Strings \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network.vpc.security_groups.groups from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 variables Map Copilot \u306f Service \u540d\u306a\u3069\u3092\u5e38\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30bf\u30b9\u30af\u306b\u5bfe\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u672c\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u305d\u308c\u3089\u4ee5\u5916\u306b\u8ffd\u52a0\u3067\u6e21\u3057\u305f\u3044\u74b0\u5883\u5909\u6570\u3092\u30ad\u30fc\u30d0\u30fc\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 variables. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 env_file String \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b\u5f15\u304d\u6e21\u3059\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 secrets Map AWS Systems Manager (SSM) \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u307e\u305f\u306f AWS Secrets Manager \u304b\u3089\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u3001Service \u306b\u5b89\u5168\u306b\u6e21\u3055\u308c\u308b\u79d8\u5bc6\u5024\u3092\u8868\u3059\u30ad\u30fc\u30fb\u5024\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 secrets. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 storage Map storage \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u3084\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u3066\u6c38\u7d9a\u5316\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3068\u306a\u308b\u30c7\u30fc\u30bf\u51e6\u7406\u3084 CMS \u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\u8a73\u7d30\u306f \u30b9\u30c8\u30ec\u30fc\u30b8 \u30da\u30fc\u30b8\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u30bf\u30b9\u30af\u30ec\u30d9\u30eb\u306e\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u62e1\u5f35\u3092\u8a2d\u5b9a\u3082\u3067\u304d\u307e\u3059\u3002 storage. ephemeral Int \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u305f\u3044\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u30b5\u30a4\u30ba\u3092 GiB \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u304b\u3064\u6700\u5c0f\u5024\u306f 20 GiB \u3067\u3001\u6700\u5927\u5024\u306f 200 GiB \u3067\u3059\u300220 GiB \u3092\u8d85\u3048\u308b\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u305f\u8ffd\u52a0\u306e\u6599\u91d1\u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u5171\u6709\u3057\u305f\u3044\u5834\u5408\u3001\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u7a7a\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u691c\u8a0e\u3067\u304d\u307e\u3059\u3002 storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false \u3053\u306e\u4f8b\u3067\u306f\u30b5\u30a4\u30c9\u30ab\u30fc\u3068\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3067\u5171\u6709\u3055\u308c\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u3057\u3066\u3001100 GiB \u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u30d7\u30ed\u30d3\u30b8\u30e7\u30f3\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u5927\u304d\u306a\u30b5\u30a4\u30ba\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001\u3042\u308b\u3044\u306f\u30c7\u30a3\u30b9\u30af I/O \u306e\u8981\u6c42\u304c\u9ad8\u3044\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3044\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u5229\u7528\u3057\u3066 EFS \u304b\u3089\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u6709\u52b9\u306a\u65b9\u6cd5\u3068\u8a00\u3048\u307e\u3059\u3002 storage. readonly_fs Boolean \u30b3\u30f3\u30c6\u30ca\u306e\u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u69d8\u306b\u3059\u308b\u306b\u306f\u3001true \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage. volumes Map \u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u540d\u524d\u3084\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u6b21\u306e\u3088\u3046\u306b Map \u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> . path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f\uff12\uff14\uff12\u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> . read_only Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f true \u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 false \u306b\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e elasticfilesystem:ClientWrite \u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3001\u305d\u308c\u306b\u3088\u308a\u30dc\u30ea\u30e5\u30fc\u30e0\u3078\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 storage.volumes. <volume> . efs Boolean or Map \u8a73\u7d30\u306a EFS \u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Boolean \u5024\u306b\u3088\u308b\u6307\u5b9a\u3001\u3042\u308b\u3044\u306f uid \u3068 gid \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u3001EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068 Service \u5c02\u7528\u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 // Boolean \u5024\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : true // POSIX uid/gid \u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30de\u30a6\u30f3\u30c8\u3059\u308b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.id. from_cfn String v1.30.0 \u306b\u3066\u8ffd\u52a0 CloudFormation \u30b9\u30bf\u30c3\u30af\u51fa\u529b\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs. root_dir String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f / \u3067\u3059\u3002EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u3069\u306e\u30d1\u30b9\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30eb\u30fc\u30c8\u3068\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f 255 \u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u672c\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3001\u304b\u3064 auth.iam \u306e\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> .efs. uid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 gid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX UID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. gid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 uid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX GID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. auth Map EFS \u306b\u95a2\u9023\u3059\u308b\u8a8d\u53ef\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. iam Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002EFS \u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b IAM \u306b\u3088\u308b\u8a8d\u53ef\u3092\u5229\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. access_point_id String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"\" \u3067\u3059\u3002\u5229\u7528\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001 root_dir \u306e\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\u3001\u304b\u3064\u672c\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish Map publish \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3067\u304d\u307e\u3059\u3002 publish : topics : - name : orderEvents \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u3053\u306e Manifest \u306f\u3001Copilot \u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u4ed6\u306e Worker Service \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u308b orderEvents \u3068\u3044\u3046\u540d\u524d\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002 COPILOT_SNS_TOPIC_ARNS \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u3001JSON \u6587\u5b57\u5217\u3068\u3057\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 JavaScript\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) \u8a73\u3057\u304f\u306f\u3001 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 publish. topics Array of topics topic \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3002 publish.topics. topic Map 1 \u3064\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002 publish.topics.topic. name String \u5fc5\u9808\u9805\u76ee\u3002SNS \u30c8\u30d4\u30c3\u30af\u306e\u540d\u524d\u3067\u3059\u3002\u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3001\u6570\u5b57\u3001\u30cf\u30a4\u30d5\u30f3\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u307f\u3092\u542b\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3002 true \u3068\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 Copilot \u306f FIFO \u3067\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f, SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u304c\u4e00\u610f\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u91cd\u8907\u6392\u9664\u3092\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 logging Map logging \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30ed\u30b0\u8a2d\u5b9a\u3092\u542b\u307f\u307e\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306e FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002(\u8a2d\u5b9a\u4f8b\u306f \u3053\u3061\u3089 ) logging. retention Integer \u4efb\u610f\u9805\u76ee\u3002 \u30ed\u30b0\u30a4\u30d9\u30f3\u30c8\u3092\u4fdd\u6301\u3059\u308b\u65e5\u6570\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e 30 \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 logging. image Map \u4efb\u610f\u9805\u76ee\u3002\u4f7f\u7528\u3059\u308b Fluent Bit \u306e\u30a4\u30e1\u30fc\u30b8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f public.ecr.aws/aws-observability/aws-for-fluent-bit:stable \u3002 logging. destination Map \u4efb\u610f\u9805\u76ee\u3002FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3002 logging. enableMetadata Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306b ECS \u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3002 logging. secretOptions Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306e\u8a2d\u5b9a\u306b\u6e21\u3059\u79d8\u5bc6\u60c5\u5831\u3067\u3059\u3002 logging. configFilePath Map \u4efb\u610f\u9805\u76ee\u3002\u30ab\u30b9\u30bf\u30e0\u306e Fluent Bit \u30a4\u30e1\u30fc\u30b8\u5185\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9\u3002 logging. env_file String \u30ed\u30ae\u30f3\u30b0\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u8a2d\u5b9a\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u30d1\u30b9\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability Map observability \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Service \u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u6e2c\u5b9a\u3059\u308b\u65b9\u6cd5\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306e\u3068\u3053\u308d\u3001\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 observability \u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability. tracing String \u30c8\u30ec\u30fc\u30b9\u306b\u4f7f\u7528\u3059\u308b\u30d9\u30f3\u30c0\u30fc\u3002\u73fe\u5728\u3001 awsxray \u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 taskdef_overrides Array of Rules taskdef_overrides \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3067\u304d\u307e\u3059 (\u4f8b\u306f \u3053\u3061\u3089 )\u3002 taskdef_overrides. path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30d1\u30b9\u3002 taskdef_overrides. value Any \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3002 environments Map environments \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Manifest \u5185\u306e\u4efb\u610f\u306e\u8a2d\u5b9a\u5024\u3092 Environment \u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002\u4e0a\u90e8\u8a18\u8f09\u306e Manifest \u4f8b\u3067\u306f count \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067 'prod' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u3001'staging' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b Fargate Spot capacity \u306b\u3088\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002","title":"Load Balanced Web Service"},{"location":"ja/docs/manifest/overview/","text":"Manifest AWS Copilot CLI \u306e Manifest \u3068\u306f\u3001Service\u3001Job \u307e\u305f\u306f Environment \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092 \"Infrastructure as Code\" \u3068\u3057\u3066\u8a18\u8ff0\u3057\u305f\u3082\u306e\u3067\u3059\u3002 AWS Copilot CLI \u306e Manifest \u306f\u3001 copilot init \u3001 copilot svc init \u3001 copilot job init \u3042\u308b\u3044\u306f copilot env init \u304b\u3089\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u6700\u7d42\u7684\u306b\u306f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 \u7d20\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u500b\u3005\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3059\u308b\u3053\u3068\u306b\u6bd4\u3079\u3001Manifest \u3067\u306f Service \u3001Job \u3084 Environment \u306e \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u8a2d\u5b9a\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3067\u304d\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u306f\u3001 copilot/<your service, job, or environment name>/manifest.yml \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002","title":"Overview"},{"location":"ja/docs/manifest/overview/#manifest","text":"AWS Copilot CLI \u306e Manifest \u3068\u306f\u3001Service\u3001Job \u307e\u305f\u306f Environment \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092 \"Infrastructure as Code\" \u3068\u3057\u3066\u8a18\u8ff0\u3057\u305f\u3082\u306e\u3067\u3059\u3002 AWS Copilot CLI \u306e Manifest \u306f\u3001 copilot init \u3001 copilot svc init \u3001 copilot job init \u3042\u308b\u3044\u306f copilot env init \u304b\u3089\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u6700\u7d42\u7684\u306b\u306f AWS CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002 \u7d20\u306e CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u500b\u3005\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3059\u308b\u3053\u3068\u306b\u6bd4\u3079\u3001Manifest \u3067\u306f Service \u3001Job \u3084 Environment \u306e \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u8a2d\u5b9a\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3067\u304d\u307e\u3059\u3002 Manifest \u30d5\u30a1\u30a4\u30eb\u306f\u3001 copilot/<your service, job, or environment name>/manifest.yml \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002","title":"Manifest"},{"location":"ja/docs/manifest/pipeline/","text":"\u4ee5\u4e0b\u306f Copilot Pipeline \u306e Manifest \u3067\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Pipeline \u306e\u6982\u5ff5 \u8aac\u660e\u306e\u30da\u30fc\u30b8\u3082\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u7d99\u7d9a\u7684\u30c7\u30ea\u30d0\u30ea\u30fc Pipeline \u306e\u30b5\u30f3\u30d7\u30eb Manifest Release workloads Control order of deployments Release environments # \"app-pipeline\" \u306f\u3001user/repo \u306b\u3042\u308b\u3059\u3079\u3066\u306e Service \u3084 Job \u3092 # \"test\" \u3084 \"prod\" Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 name : app-pipeline source : provider : GitHub properties : branch : main repository : https://github.com/user/repo # \u30aa\u30d7\u30b7\u30e7\u30f3\u3002\u65e2\u5b58\u306e CodeStar Connection \u306e\u63a5\u7d9a\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 # connection_name: a-connection build : image : aws/codebuild/amazonlinux2-x86_64-standard:5.0 # additional_policy: # \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3084\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u969b\u306b\u3001\u6a29\u9650\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 stages : - # \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306f\u30b9\u30c6\u30fc\u30b8\u5185\u3067\u540c\u6642\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3059\u3002 name : test pre_deployments : db_migration : buildspec : ./buildspec.yml test_commands : - make integ-test - echo \"woo! Tests passed\" - name : prod requires_approval : true # \u307e\u305f\u3001\u30b9\u30c6\u30fc\u30b8\u5185\u306e\u30b9\u30bf\u30c3\u30af\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u756a\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002 # https://aws.github.io/copilot-cli/blogs/release-v118/#controlling-order-of-deployments-in-a-pipeline \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 name : app-pipeline source : provider : Bitbucket properties : branch : main repository : https://bitbucket.org/user/repo stages : - name : test deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] - name : prod require_approval : true deployments : orders : warehouse : frontend : depends_on : [ orders , warehouse ] # Environment Manifest \u306e\u5909\u66f4\u3082\u3001Pipeline \u3067\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 name : env-pipeline source : provider : CodeCommit properties : branch : main repository : https://git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo stages : - name : test deployments : deploy-env : template_path : infrastructure/test.env.yml template_config : infrastructure/test.env.params.json stack_name : app-test - name : prod deployments : deploy-prod : template_path : infrastructure/prod.env.yml template_config : infrastructure/prod.env.params.json stack_name : app-prod name String Pipeline \u540d\u3002 version String \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30b9\u30ad\u30fc\u30de\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 1 \u3060\u3051\u3067\u3059\u3002 source Map Pipeline \u306e\u30c8\u30ea\u30ac\u30fc\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3002 source. provider String \u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u540d\u3002\u73fe\u5728 GitHub \u3001 Bitbucket \u305d\u3057\u3066 CodeCommit \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 source. properties Map Pipeline \u306e\u30c8\u30ea\u30ac\u30fc\u306b\u95a2\u3059\u308b\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u56fa\u6709\u306e\u8a2d\u5b9a\u3002 source.properties. access_token_secret String Pipeline \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u305f\u3081\u306e GitHub \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u6301\u3059\u308b AWS Secrets Manager \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u540d\u524d\u3002 (\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u304c GitHub \u3067\u3001\u500b\u4eba\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3057\u3066 Pipeline \u3092\u4f5c\u6210\u3057\u305f\u5834\u5408) Info Copilot v1.4.0 \u304b\u3089 GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30bd\u30fc\u30b9\u306b\u3059\u308b\u5834\u5408\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u4e0d\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4ee3\u308f\u308a\u306b Copilot \u306f AWS CodeStar \u306e GitHub \u3078\u306e\u63a5\u7d9a \u3092\u4f7f\u3063\u3066 Pipeline \u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059\u3002 source.properties. branch String Pipeline \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30d6\u30e9\u30f3\u30c1\u540d\u3002 Copilot \u306f\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u73fe\u5728\u306e\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1\u3092\u81ea\u52d5\u7684\u306b\u5165\u529b\u3057\u307e\u3059\u3002 source.properties. repository String \u30ea\u30dd\u30b8\u30c8\u30ea\u306e URL \u3002 source.properties. connection_name String \u65e2\u5b58\u306e CodeStar Connections \u306e\u63a5\u7d9a\u540d\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408 Copilot \u306f\u63a5\u7d9a\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 source.properties. output_artifact_format String \u4efb\u610f\u9805\u76ee\u3002\u30a2\u30fc\u30c6\u30a3\u30d5\u30a1\u30af\u30c8\u306e\u51fa\u529b\u5f62\u5f0f\u3067\u3059\u3002 CODEBUILD_CLONE_REF \u307e\u305f\u306f CODE_ZIP \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e CODE_ZIP \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002 Info \u3053\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001 access_token_secret \u3092\u4f7f\u7528\u3059\u308b GitHub version 1 \u30bd\u30fc\u30b9\u30a2\u30af\u30b7\u30e7\u30f3\u3067\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002 build Map CodeBuild \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3002 build. image String CodeBuild \u306e\u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5229\u7528\u3059\u308b Docker \u30a4\u30e1\u30fc\u30b8\u306e URI\u3002 aws/codebuild/amazonlinux2-x86_64-standard:5.0 \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3055\u308c\u307e\u3059\u3002 build. buildspec String \u4efb\u610f\u9805\u76ee\u3002\u3053\u306e\u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u3059\u308b\u3001buildspec \u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u3001 copilot/pipelines/[your pipeline name]/buildspec.yml \u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002 build. additional_policy. PolicyDocument Map \u4efb\u610f\u9805\u76ee\u3002\u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30ed\u30fc\u30eb\u306b\u8ffd\u52a0\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u8ffd\u52a0\u306e\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b YAML \u306e\u30de\u30c3\u30d7\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 build : additional_policy : PolicyDocument : Version : '2012-10-17' Statement : - Effect : Allow Action : - ecr:GetAuthorizationToken Resource : '*' or alternatively as JSON: build : additional_policy : PolicyDocument : { \"Statement\" : [ { \"Action\" : [ \"ecr:GetAuthorizationToken\" ], \"Effect\" : \"Allow\" , \"Resource\" : \"*\" } ], \"Version\" : \"2012-10-17\" } stages Array of Maps Pipeline \u306e\u30c7\u30d7\u30ed\u30a4\u5148\u3067\u3042\u308b 1 \u3064\u4ee5\u4e0a\u306e Environment \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u9806\u756a\u306b\u4e26\u3079\u305f\u30ea\u30b9\u30c8\u3002 stages. name String Service \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b Environment \u540d\u3002 stages. requires_approval Boolean \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d7\u30ed\u30a4\u306e\u524d\u306b\u624b\u52d5\u627f\u8a8d\u30b9\u30c6\u30c3\u30d7\u3092\u8ffd\u52a0\u3059\u308b\u304b\u3069\u3046\u304b (\u8ffd\u52a0\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u30c7\u30d7\u30ed\u30a4\u524d\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u304b\u3069\u3046\u304b) \u3092\u793a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f false \u3067\u3059\u3002 stages. pre_deployments Map v1.30.0 \u306b\u3066\u8ffd\u52a0 \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d7\u30ed\u30a4\u524d\u306b\u5b9f\u884c\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 stages : - name : <env name> pre_deployments : <action name> : buildspec : <path to local buildspec> depends_on : [ <other action's name> , ... ] stages.pre_deployments. <name> Map v1.30.0 \u306b\u3066\u8ffd\u52a0 \u30c7\u30d7\u30ed\u30a4\u524d\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u524d\u3002 stages.pre_deployments. <name> . buildspec String v1.30.0 \u306b\u3066\u8ffd\u52a0 \u3053\u306e\u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u3059\u308b buildspec \u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 stages.pre_deployments. <name> . depends_on Array of Strings v1.30.0 \u306b\u3066\u8ffd\u52a0 \u4efb\u610f\u9805\u76ee\u3002\u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3001\u4ed6\u306e\u30c7\u30d7\u30ed\u30a4\u524d\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u524d\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f9d\u5b58\u95a2\u4fc2\u306f\u3042\u308a\u307e\u305b\u3093\u3002 Info \u30c7\u30d7\u30ed\u30a4\u524d\u304a\u3088\u3073\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 v1.30.0 \u306e\u30d6\u30ed\u30b0\u8a18\u4e8b \u304a\u3088\u3073 Pipeline \u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 stages. deployments Map \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d7\u30ed\u30a4\u3059\u308b CloudFormation \u30b9\u30bf\u30c3\u30af\u3068\u305d\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002 \u30c7\u30d7\u30ed\u30a4\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u3001\u6b21\u306e\u5f62\u5f0f\u306e Map \u3067\u6307\u5b9a\u3055\u308c\u307e\u3059\u3002 stages : - name : test deployments : <service or job name> : <other service or job name> : depends_on : [ <name> , ... ] \u4f8b\u3048\u3070\u3001Git \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002 copilot \u251c\u2500\u2500 api \u2502 \u2514\u2500\u2500 manifest.yml \u2514\u2500\u2500 frontend \u2514\u2500\u2500 manifest.yml \u307e\u305f\u3001 frontend \u306e\u524d\u306b api \u304c\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3088\u3046\u306b\u30c7\u30d7\u30ed\u30a4\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30b9\u30c6\u30fc\u30b8\u3092\u6b21\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002 stages : - name : test deployments : api : frontend : depends_on : - api \u307e\u305f\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u4e00\u90e8\u3092\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e Manifest \u3067\u306f\u3001 api \u306e\u307f\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3001 frontend \u3092\u30c7\u30d7\u30ed\u30a4\u3057\u306a\u3044\u3088\u3046\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 stages : - name : test deployments : api : \u6700\u5f8c\u306b\u3001\u3082\u3057 deployments \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Copilot \u306f git \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3042\u308b\u3059\u3079\u3066\u306e Service \u3068 Job \u3092\u4e26\u884c\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 stages.deployments. <name> Map \u30c7\u30d7\u30ed\u30a4\u3059\u308b Job \u307e\u305f\u306f Service \u306e\u540d\u524d\u3002 stages.deployments. <name> . depends_on Array of Strings \u4efb\u610f\u9805\u76ee\u3002\u3053\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u4ed6\u306e Job \u307e\u305f\u306f Service \u306e\u540d\u524d\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f9d\u5b58\u95a2\u4fc2\u306f\u3042\u308a\u307e\u305b\u3093\u3002 stages.deployments. <name> . stack_name String \u4efb\u610f\u9805\u76ee\u3002\u4f5c\u6210\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u30b9\u30bf\u30c3\u30af\u306e\u540d\u524d\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f <app name>-<stage name>-<deployment name> \u3067\u3059\u3002 \u305f\u3068\u3048\u3070\u3001Application \u540d\u304c demo \u3001\u30b9\u30c6\u30fc\u30b8\u540d\u304c test \u3001Service \u540d\u304c frontend \u306e\u5834\u5408\u3001\u30b9\u30bf\u30c3\u30af\u540d\u306f demo-test-frontend \u306b\u306a\u308a\u307e\u3059\u3002 stages.deployments. <name> . template_path String \u4efb\u610f\u9805\u76ee\u3002 build \u30d5\u30a7\u30fc\u30ba\u3067\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3078\u306e\u30d1\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f infrastructure/<deployment name>-<stage name>.yml \u3067\u3059\u3002 stages.deployments. <name> . template_config String \u4efb\u610f\u9805\u76ee\u3002 build \u30d5\u30a7\u30fc\u30ba\u3067\u751f\u6210\u3055\u308c\u305f CloudFormation \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u8a2d\u5b9a\u3078\u306e\u30d1\u30b9\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f infrastructure/<deployment name>-<stage name>.params.json \u3067\u3059\u3002 stages. post_deployments Map v1.30.0 \u306b\u3066\u8ffd\u52a0 \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d7\u30ed\u30a4\u5f8c\u306b\u5b9f\u884c\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 stages.test_commands \u3068\u306f\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u3059\u3002 stages : - name : <env name> post_deployments : <action name> : buildspec : <path to local buildspec> depends_on : [ <other action's name> , ... ] stages.post_deployments. <name> Map v1.30.0 \u306b\u3066\u8ffd\u52a0 \u30c7\u30d7\u30ed\u30a4\u5f8c\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u524d\u3002 stages.post_deployments. <name> . buildspec String v1.30.0 \u306b\u3066\u8ffd\u52a0 \u3053\u306e\u30d3\u30eb\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u3059\u308b buildspec \u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 stages.post_deployments. <name> . depends_on Array of Strings v1.30.0 \u306b\u3066\u8ffd\u52a0 \u4efb\u610f\u9805\u76ee\u3002\u3053\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u524d\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u4ed6\u306e\u30c7\u30d7\u30ed\u30a4\u5f8c\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u540d\u524d\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f9d\u5b58\u95a2\u4fc2\u306f\u3042\u308a\u307e\u305b\u3093\u3002 stages. test_commands Array of Strings \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d7\u30ed\u30a4\u5f8c\u306b\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\u307e\u305f\u306f E2E \u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u5f8c\u306e\u691c\u8a3c\u306f\u884c\u3044\u307e\u305b\u3093\u3002'stages.post_deployment' \u3068\u306f\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u3059\u3002","title":"Pipeline"},{"location":"ja/docs/manifest/rd-web-service/","text":"\u4ee5\u4e0b\u306f 'Request-Driven Web Service' Manifest \u3067\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Copilot Service \u306e\u6982\u5ff5 \u8aac\u660e\u306e\u30da\u30fc\u30b8\u3082\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 AWS App Runner \u306e\u30b5\u30f3\u30d7\u30eb Manifest Public Connected to the environment VPC Event-driven # https://web.example.com \u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a Web \u30b5\u30fc\u30d3\u30b9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002 name : frontend type : Request-Driven Web Service http : healthcheck : '/_healthcheck' alias : web.example.com image : build : ./frontend/Dockerfile port : 80 cpu : 1024 memory : 2048 variables : LOG_LEVEL : info tags : owner : frontend observability : tracing : awsxray secrets : GITHUB_TOKEN : GITHUB_TOKEN DB_SECRET : secretsmanager : 'mysql' environments : test : variables : LOG_LEVEL : debug # \u3059\u3079\u3066\u306e Egress \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u3001Environment \u306e VPC\u3092\u7d4c\u7531\u3057\u3066\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002 name : frontend type : Request-Driven Web Service image : build : ./frontend/Dockerfile port : 8080 cpu : 1024 memory : 2048 network : vpc : placement : private # https://aws.github.io/copilot-cli/docs/developing/publish-subscribe/ \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 name : refunds type : Request-Driven Web Service image : build : ./refunds/Dockerfile port : 8080 http : alias : refunds.example.com cpu : 1024 memory : 2048 publish : topics : - name : 'refunds' - name : 'orders' fifo : true name String Service \u306e\u540d\u524d\u3002 type String Service \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30bf\u30a4\u30d7\u3002 Load Balanced Web Service \u306f\u3001AWS App Runner \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u516c\u958b\u3059\u308b\u305f\u3081\u306e Service \u3067\u3059\u3002 http Map http \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30de\u30cd\u30fc\u30b8\u30c9\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306e\u9023\u643a\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u542b\u307f\u307e\u3059\u3002 http. private Bool or Map \u53d7\u4fe1\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092 Envrionment \u306e\u307f\u306b\u5236\u9650\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f false \u3067\u3059\u3002 http.private endpoint String App Runner \u306b\u5bfe\u3059\u308b\u65e2\u5b58\u306e VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e ID \u3067\u3059\u3002 http : private : endpoint : vpce-12345 http. healthcheck String or Map \u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ca\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"/\" \u3067\u3059\u3002 http : healthcheck : '/' \u3042\u308b\u3044\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Map \u306b\u3088\u308b\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3082\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002 http : healthcheck : path : '/' healthy_threshold : 3 unhealthy_threshold : 2 interval : 15s timeout : 10s http.healthcheck. path String \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u9001\u4fe1\u5148\u3002 http.healthcheck. healthy_threshold Integer unhealthy \u306a\u30bf\u30fc\u30b2\u30c3\u30c8\u3092 healthy \u3068\u307f\u306a\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u6210\u529f\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30011 \u301c 20 \u3067\u3059\u3002 http.healthcheck. unhealthy_threshold Integer \u30bf\u30fc\u30b2\u30c3\u30c8\u304c unhealthy \u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u3001\u9023\u7d9a\u3057\u305f\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306e\u5931\u6557\u56de\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 3 \u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30011 \u301c 20 \u3067\u3059\u3002 http.healthcheck. interval Duration \u500b\u3005\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3078\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u969b\u306e\u3001\u304a\u304a\u3088\u305d\u306e\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 5 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30011 \u301c 20 \u3067\u3059\u3002 http.healthcheck. timeout Duration \u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u306e\u5fdc\u7b54\u304c\u306a\u3044\u5834\u5408\u3001\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3059\u307e\u3067\u306e\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f 2 \u79d2\u3067\u3001\u8a2d\u5b9a\u53ef\u80fd\u306a\u7bc4\u56f2\u306f\u30011 \u301c 20 \u3067\u3059\u3002 http. alias String Request-Driven Web Service \u306b\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30c9\u30e1\u30a4\u30f3\u540d\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u8a73\u3057\u304f\u306f developing/domain \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 image Map image \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Docker \u30d3\u30eb\u30c9\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3084\u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u306b\u3064\u3044\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002 image. build String or Map \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.build \u3068\u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 Note \u73fe\u6642\u70b9\u3067\u306f Amazon ECR Public \u306b\u683c\u7d0d\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u304c\u5229\u7528\u53ef\u80fd\u3067\u3059\u3002 image. port Integer \u516c\u958b\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3002Dockerfile \u5185\u306b EXPOSE \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092\u30d1\u30fc\u30b9\u3057\u305f\u5024\u3092\u3053\u3053\u306b\u633f\u5165\u3057\u307e\u3059\u3002 cpu Integer Service \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f AWS App Runner \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 memory Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf\uff08MiB\uff09\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f AWS App Runner \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 network Map network \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001Environment \u306e VPC \u5185\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306b Service \u3092\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002Service \u3092 VPC \u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3067\u3001 \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea \u3092\u4f7f\u7528\u3057\u3066 Environment \u5185\u306e\u4ed6\u306e Service \u3068\u901a\u4fe1\u3057\u305f\u308a\u3001 storage init \u3067 Amazon Aurora \u306a\u3069\u306e VPC \u5185\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 network. vpc Map Service \u304b\u3089\u306e Egress \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b VPC \u5185\u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 network.vpc. placement String \u3053\u306e\u9805\u76ee\u306b\u304a\u3044\u3066\u73fe\u5728\u6709\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u306f 'private' \u306e\u307f\u3067\u3059\u3002\u3082\u3057\u3001Service \u304c VPC \u306b\u63a5\u7d9a\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u5834\u5408\u306f\u3001 network \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u9805\u76ee\u304c 'private' \u306e\u5834\u5408\u3001App Runner \u30b5\u30fc\u30d3\u30b9\u306f VPC \u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u7d4c\u7531\u3057\u3066 Egress \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002 Copilot \u3067\u751f\u6210\u3055\u308c\u305f VPC \u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001Copilot \u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u7528\u306e NAT Gateway \u3092 Environment \u306b\u81ea\u52d5\u7684\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002 ( VPC \u306e\u6599\u91d1 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002) \u307e\u305f\u3001 copilot env init \u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u3001NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u6301\u3064\u65e2\u5b58\u306e VPC \u3084\u3001\u5206\u96e2\u3055\u308c\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306e VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u8a73\u3057\u304f\u306f\u3001 Environment \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 observability Map observability \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Service \u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u6e2c\u5b9a\u3059\u308b\u65b9\u6cd5\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306e\u3068\u3053\u308d\u3001\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 observability \u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability. tracing String \u30c8\u30ec\u30fc\u30b9\u306b\u4f7f\u7528\u3059\u308b\u30d9\u30f3\u30c0\u30fc\u3002\u73fe\u5728\u3001 awsxray \u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 command String \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 variables Map Copilot \u306f Service \u540d\u306a\u3069\u3092\u5e38\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u5bfe\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u672c\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u305d\u308c\u3089\u4ee5\u5916\u306b\u8ffd\u52a0\u3067\u6e21\u3057\u305f\u3044\u74b0\u5883\u5909\u6570\u3092\u30ad\u30fc\u30fb\u5024\u306e\u30da\u30a2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 secrets Map AWS Systems Manager (SSM) \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u307e\u305f\u306f AWS Secrets Manager \u304b\u3089\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u3001Service \u306b\u5b89\u5168\u306b\u6e21\u3055\u308c\u308b\u79d8\u5bc6\u5024\u3092\u8868\u3059\u30ad\u30fc\u30fb\u5024\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 secrets. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 publish Map publish \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3067\u304d\u307e\u3059\u3002 publish : topics : - name : orderEvents \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u3053\u306e Manifest \u306f\u3001Copilot \u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u4ed6\u306e Worker Service \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u308b orderEvents \u3068\u3044\u3046\u540d\u524d\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002 COPILOT_SNS_TOPIC_ARNS \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u3001JSON \u6587\u5b57\u5217\u3068\u3057\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 JavaScript\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) \u8a73\u3057\u304f\u306f\u3001 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 publish. topics Array of topics topic \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3002 publish.topics. topic Map 1 \u3064\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002 publish.topics.topic. name String \u5fc5\u9808\u9805\u76ee\u3002SNS \u30c8\u30d4\u30c3\u30af\u306e\u540d\u524d\u3067\u3059\u3002\u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3001\u6570\u5b57\u3001\u30cf\u30a4\u30d5\u30f3\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u307f\u3092\u542b\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3002 true \u3068\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 Copilot \u306f FIFO \u3067\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f, SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u304c\u4e00\u610f\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u91cd\u8907\u6392\u9664\u3092\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 tags Map AWS App Runner \u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u6e21\u3055\u308c\u308b AWS \u30bf\u30b0\u3092\u8868\u3059\u30ad\u30fc\u30fb\u5024\u30da\u30a2\u3067\u3059\u3002 count String \u65e2\u5b58\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u8a2d\u5b9a\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 count : high-availability/3 environments Map environments \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Manifest \u5185\u306e\u4efb\u610f\u306e\u8a2d\u5b9a\u5024\u3092 Environment \u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002\u4e0a\u90e8\u8a18\u8f09\u306e Manifest \u4f8b\u3067\u306f test Environment \u306b\u304a\u3051\u308b LOG_LEVEL \u74b0\u5883\u5909\u6570\u306e\u5024\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u307e\u3059\u3002","title":"Request-Driven Web Service"},{"location":"ja/docs/manifest/scheduled-job/","text":"\u4ee5\u4e0b\u306f 'Scheduled Job' Manifest \u3067\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Job \u306e\u6982\u5ff5 \u8aac\u660e\u306e\u30da\u30fc\u30b8\u3082\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f Job \u306e\u30b5\u30f3\u30d7\u30eb Manifest name : report-generator type : Scheduled Job on : schedule : \"@daily\" cpu : 256 memory : 512 retries : 3 timeout : 1h image : build : ./Dockerfile variables : LOG_LEVEL : info env_file : log.env secrets : GITHUB_TOKEN : GITHUB_TOKEN # \u4e0a\u8a18\u3059\u3079\u3066\u306e\u5024\u306f Environment \u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u53ef\u80fd\u3067\u3059\u3002 environments : prod : cpu : 2048 memory : 4096 name String Job \u540d\u3002 type String Job \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30bf\u30a4\u30d7\u3002 \u73fe\u5728\u3001Copilot \u306f\u5b9a\u671f\u7684\u306b\u3082\u3057\u304f\u306f\u56fa\u5b9a\u3057\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u30bf\u30b9\u30af\u3067\u3042\u308b \"Scheduled Job\" \u30bf\u30a4\u30d7\u306e\u307f\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 on Map Job \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u8a2d\u5b9a\u3002 on. schedule String \u5b9a\u671f\u7684\u306b Job \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u983b\u5ea6\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u30b5\u30dd\u30fc\u30c8\u3059\u308b\u983b\u5ea6\u306f: \u983b\u5ea6 \u4ee5\u4e0b\u3068\u540c\u4e00 UTC \u3092\u7528\u3044\u305f\u53ef\u8aad\u8868\u8a18\u306b\u3088\u308b\u5b9f\u884c\u30bf\u30a4\u30df\u30f3\u30b0 \"@yearly\" \"cron(0 * * * ? *)\" 1 \u6708 1 \u65e5\u306e\u5348\u524d 0 \u6642 \"@monthly\" \"cron(0 0 1 * ? *)\" \u6bce\u6708 1 \u65e5\u306e\u5348\u524d 0 \u6642 \"@weekly\" \"cron(0 0 ? * 1 *)\" \u6bce\u9031\u65e5\u66dc\u65e5\u306e\u5348\u524d 0 \u6642 \"@daily\" \"cron(0 0 * * ? *)\" \u6bce\u65e5\u5348\u524d 0 \u6642 \"@hourly\" \"cron(0 * * * ? *)\" \u6bce\u6642 0 \u5206 \"@every {duration}\" (\u4f8b: \"1m\", \"5m\") \"rate({duration})\" CloudWatch \u306e rate \u5f0f \u306e\u5f62\u5f0f \u7279\u5b9a\u306e\u6642\u9593\u306b Job \u3092\u30c8\u30ea\u30ac\u30fc\u3057\u305f\u3044\u5834\u5408\u3001cron \u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \"* * * * *\" \u6a19\u6e96\u7684\u306a cron \u30d5\u30a9\u30fc\u30de\u30c3\u30c8 \u3092\u5229\u7528\u3059\u308b \"cron({fields})\" 6 \u3064\u30d5\u30a3\u30fc\u30eb\u30c9\u304b\u3089\u306a\u308b CloudWatch \u306e cron \u5f0f \u3092\u5229\u7528\u3059\u308b \u6700\u5f8c\u306b\u3001 schedule \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 none \u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Job \u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 on : schedule : \"none\" image Map image \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Docker \u30d3\u30eb\u30c9\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3084\u3001\u65e2\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u53c2\u7167\u306b\u3064\u3044\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002 image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 entrypoint String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 command : ps au # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 command : [ \"ps\" , \"au\" ] cpu Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 memory Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf\uff08MiB\uff09\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 platform String docker build --platform \u3067\u6e21\u3059\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3002\uff08 [os]/[arch] \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\uff09 \u4f8b\u3048\u3070\u3001 linux/arm64 \u3084 windows/x86_64 \u3068\u3044\u3063\u305f\u5024\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f linux/x86_64 \u3067\u3059\u3002 \u751f\u6210\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3001\u6709\u52b9\u306a\u7570\u306a\u308b osfamily \u3084 architecture \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3057\u3066\u30d3\u30eb\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 Windows \u30e6\u30fc\u30b6\u30fc\u306e\u5834\u5408\u306f\u3001 platform : windows/x86_64 \u3068\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306f WINDOWS_SERVER_2019_CORE \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u304c\u3001 Map \u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\uff1a platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2019_core architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 retries Integer Job \u304c\u5931\u6557\u3059\u308b\u307e\u3067\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u56de\u6570\u3002 timeout Duration Job \u306e\u5b9f\u884c\u6642\u9593\u3002\u3053\u306e\u6642\u9593\u3092\u8d85\u3048\u305f\u5834\u5408\u3001Job \u306f\u505c\u6b62\u3055\u308c\u3066\u5931\u6557\u3068\u306a\u308a\u307e\u3059\u3002\u5358\u4f4d\u306b\u306f h , m , s \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 network Map network \u30bb\u30af\u30b7\u30e7\u30f3\u306f VPC \u5185\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3061\u307e\u3059\u3002 network. vpc Map \u30bf\u30b9\u30af\u306b\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3002 network.vpc. placement String 'public' \u304b 'private' \u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30bf\u30b9\u30af\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002 Info Copilot \u304c\u4f5c\u6210\u3057\u305f VPC \u306e 'private' \u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u5229\u7528\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001Copilot \u306f Environment \u306b NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3042\u308b\u3044\u306f Copilot \u5916\u3067\u4f5c\u6210\u3057\u305f VPC \u3092 copilot env init \u30b3\u30de\u30f3\u30c9\u306b\u3066\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e VPC \u306b NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u304c\u3042\u308a\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b5\u30d6\u30cd\u30c3\u30c8\u304b\u3089\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u63a5\u7d9a\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 network.vpc. security_groups Array of Strings \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3065\u3051\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30ea\u30b9\u30c8\u3002Copilot \u306f\u5e38\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u542b\u3093\u3067\u304a\u308a\u3001\u74b0\u5883\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u306f\u4e92\u3044\u306b\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 variables Map Job \u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b key-value \u30da\u30a2\u3002Copilot \u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3044\u304f\u3064\u304b\u306e\u74b0\u5883\u5909\u6570\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 secrets Map AWS Systems Manager \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u304b\u3089\u74b0\u5883\u5909\u6570\u3068\u3057\u3066 Job \u306b\u5b89\u5168\u306b\u6e21\u3055\u308c\u308b key-value \u30da\u30a2\u3002 storage Map Storage \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u304b\u3089\u30de\u30a6\u30f3\u30c8\u3059\u308b\u5916\u90e8\u306e EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u51e6\u7406\u3084 CMS \u306e\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u305f\u3081\u306b\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u3067\u6c38\u7d9a\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3088\u308a\u8a73\u3057\u304f\u306f \u30b9\u30c8\u30ec\u30fc\u30b8 \u306e\u30da\u30fc\u30b8\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 storage. volumes Map \u30a2\u30bf\u30c3\u30c1\u3059\u308b EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u540d\u524d\u3068\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u6b21\u306e\u5f62\u5f0f\u306e Map \u3068\u3057\u3066\u6307\u5b9a\u3055\u308c\u307e\u3059: volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> . path String \u5fc5\u9808\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u5229\u7528\u3067\u304d\u308b\u6587\u5b57\u306f a-zA-Z0-9.-_/ \u306e\u307f\u3067\u3001 242 \u6587\u5b57\u672a\u6e80\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> . read_only Bool \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f true \u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u304c\u8aad\u307f\u8fbc\u307f\u5c02\u7528\u304b\u5426\u304b\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 false \u306e\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e elasticfilesystem:ClientWrite \u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3001\u30dc\u30ea\u30e5\u30fc\u30e0\u306f\u66f8\u304d\u8fbc\u307f\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 storage.volumes. <volume> . efs Map \u3088\u308a\u8a73\u7d30\u306a EFS \u306e\u8a2d\u5b9a\u3002 storage.volumes. <volume> .efs. id String \u5fc5\u9808\u9805\u76ee\u3002\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e ID \u3002 storage.volumes. <volume> .efs. root_dir String \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f / \u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30eb\u30fc\u30c8\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u5229\u7528\u3067\u304d\u308b\u6587\u5b57\u306f a-zA-Z0-9.-_/ \u306e\u307f\u3067\u3001 255 \u6587\u5b57\u672a\u6e80\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001 root_dir \u306f\u7a7a\u304b / \u3067\u3042\u308a\u3001 auth.iam \u304c true \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> .efs. auth Map EFS \u306e\u9ad8\u5ea6\u306a\u8a8d\u53ef\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. iam Bool \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002volume \u306e EFS \u3078\u306e\u63a5\u7d9a\u306e\u53ef\u5426\u306e\u5224\u5b9a\u306b IAM \u3092\u5229\u7528\u3059\u308b\u304b\u3057\u306a\u3044\u304b\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. access_point_id String \u4efb\u610f\u9805\u76ee\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f \"\" \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u63a5\u7d9a\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e ID \u3067\u3059\u3002\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001 root_dir \u306f\u7a7a\u304b / \u3067\u3042\u308a\u3001 auth.iam \u304c true \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 logging Map logging \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306e FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u7528\u306e\u30ed\u30b0\u8a2d\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u307e\u3059\u3002(\u8a2d\u5b9a\u4f8b\u306f \u3053\u3061\u3089 ) logging. image Map \u4efb\u610f\u9805\u76ee\u3002\u4f7f\u7528\u3059\u308b Fluent Bit \u306e\u30a4\u30e1\u30fc\u30b8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f public.ecr.aws/aws-observability/aws-for-fluent-bit:stable \u3002 logging. destination Map \u4efb\u610f\u9805\u76ee\u3002Firelens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3002 logging. enableMetadata Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306b ECS \u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u542b\u3080\u304b\u3069\u3046\u304b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3002 logging. secretOptions Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306e\u8a2d\u5b9a\u306b\u6e21\u3059\u79d8\u5bc6\u60c5\u5831\u3067\u3059\u3002 logging. configFilePath Map \u4efb\u610f\u9805\u76ee\u3002\u30ab\u30b9\u30bf\u30e0\u306e Fluent Bit \u30a4\u30e1\u30fc\u30b8\u5185\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9\u3002 publish Map publish \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3067\u304d\u307e\u3059\u3002 publish : topics : - name : orderEvents \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u3053\u306e Manifest \u306f\u3001Copilot \u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u4ed6\u306e Worker Service \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u308b orderEvents \u3068\u3044\u3046\u540d\u524d\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002 COPILOT_SNS_TOPIC_ARNS \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u3001JSON \u6587\u5b57\u5217\u3068\u3057\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 JavaScript\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) \u8a73\u3057\u304f\u306f\u3001 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 publish. topics Array of topics topic \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3002 publish.topics. topic Map 1 \u3064\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002 publish.topics.topic. name String \u5fc5\u9808\u9805\u76ee\u3002SNS \u30c8\u30d4\u30c3\u30af\u306e\u540d\u524d\u3067\u3059\u3002\u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3001\u6570\u5b57\u3001\u30cf\u30a4\u30d5\u30f3\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u307f\u3092\u542b\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3002 true \u3068\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 Copilot \u306f FIFO \u3067\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f, SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u304c\u4e00\u610f\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u91cd\u8907\u6392\u9664\u3092\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 environments Map environments \u30bb\u30af\u30b7\u30e7\u30f3\u306f Environment \u306e\u8a2d\u5b9a\u3092 Manifest \u3067\u6307\u5b9a\u3057\u305f\u5024\u306b\u3088\u3063\u3066\u4e0a\u66f8\u304d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 \u4e0a\u8a18\u306e\u4f8b\u306e Manifest \u3067\u306f\u3001 CPU \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3044\u308b\u306e\u3067 production \u306e\u30b3\u30f3\u30c6\u30ca\u306f\u3088\u308a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002","title":"Scheduled Job"},{"location":"ja/docs/manifest/static-site/","text":"\u4ee5\u4e0b\u306f 'Static Site Service' Manifest \u3067\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Static Site \u306e \u30b5\u30f3\u30d7\u30eb Manifest name : example type : Static Site http : alias : 'example.com' files : - source : src/someDirectory recursive : true - source : someFile.html # \u4e0a\u8a18\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5024\u306f Environment \u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u304c\u53ef\u80fd\u3067\u3059\u3002 # environments: # test: # files: # - source: './blob' # destination: 'assets' # recursive: true # exclude: '*' # reinclude: # - '*.txt' # - '*.png' name String Service \u306e\u540d\u524d\u3002 type String Service \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30bf\u30a4\u30d7\u3002 Static Site \u306f\u3001Amazon S3 \u306b\u3088\u3063\u3066\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u9762\u3057\u305f Service \u3067\u3059\u3002 http Map \u30b5\u30a4\u30c8\u3078\u306e\u53d7\u4fe1\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u8a2d\u5b9a\u3002 http. alias String Service \u306e HTTPS \u30c9\u30e1\u30a4\u30f3\u30a8\u30a4\u30ea\u30a2\u30b9\u3002 http. certificate String HTTPS \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u5229\u7528\u3059\u308b\u8a3c\u660e\u66f8\u306e ARN\u3002 CloudFront \u3067 ACM \u8a3c\u660e\u66f8\u3092\u5229\u7528\u3059\u308b\u306b\u306f us-east-1 \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001Manifest \u306e\u4e00\u90e8\u306e\u4f8b\u3067\u3059\u3002 http : alias : example.com certificate : \"arn:aws:acm:us-east-1:1234567890:certificate/e5a6e114-b022-45b1-9339-38fbfd6db3e2\" files Array of Maps \u9759\u7684\u30a2\u30bb\u30c3\u30c8\u306b\u95a2\u9023\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3002 files. source String \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u3057\u3066\u3001S3 \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u305f\u306f\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 files. recursive Boolean \u30bd\u30fc\u30b9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u518d\u5e30\u7684\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u304b\u3069\u3046\u304b\u3002\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002 files. destination String \u4efb\u610f\u9805\u76ee\u3002S3 \u30d0\u30b1\u30c3\u30c8\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u4ed8\u52a0\u3055\u308c\u308b\u30b5\u30d6\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f . \u3067\u3059\u3002 files. exclude String \u4efb\u610f\u9805\u76ee\u3002\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u9664\u5916\u3059\u308b\u305f\u3081\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e \u30d5\u30a3\u30eb\u30bf\u30fc \u3002\u4f7f\u7528\u53ef\u80fd\u306a\u30b7\u30f3\u30dc\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 * (\u5168\u3066\u306b\u30de\u30c3\u30c1\u3059\u308b) ? (\u4efb\u610f\u306e 1 \u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b) [sequence] ( sequence \u306e\u4efb\u610f\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b) [!sequence] ( sequence \u306b\u542b\u307e\u308c\u306a\u3044\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b) files. reinclude String \u4efb\u610f\u9805\u76ee\u3002 exclude \u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304b\u3089\u9664\u5916\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u518d\u5ea6\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u305f\u3081\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e \u30d5\u30a3\u30eb\u30bf\u30fc \u3002\u4f7f\u7528\u53ef\u80fd\u306a\u30b7\u30f3\u30dc\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 * (\u5168\u3066\u306b\u30de\u30c3\u30c1\u3059\u308b) ? (\u4efb\u610f\u306e 1 \u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b) [sequence] ( sequence \u306e\u4efb\u610f\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b) [!sequence] ( sequence \u306b\u542b\u307e\u308c\u306a\u3044\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b)","title":"Static Site"},{"location":"ja/docs/manifest/worker-service/","text":"\u4ee5\u4e0b\u306f 'Worker Service' Manifest \u3067\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002 Service \u306e\u6982\u5ff5 \u8aac\u660e\u306e\u30da\u30fc\u30b8\u3082\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 Worker Service \u306e \u30b5\u30f3\u30d7\u30eb Manifest Single queue Spot autoscaling Separate queues # \u4ed6\u306e Service \u304b\u3089\u767a\u884c\u3055\u308c\u305f\u8907\u6570\u306e\u30c8\u30d4\u30c3\u30af\u304b\u3089\u3001\u5358\u4e00\u306e SQS \u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u96c6\u3081\u307e\u3059\u3002 name : cost-analyzer type : Worker Service image : build : ./cost-analyzer/Dockerfile subscribe : topics : - name : products service : orders filter_policy : event : - anything-but : order_cancelled - name : inventory service : warehouse queue : retention : 96h timeout : 30s dead_letter : tries : 10 cpu : 256 memory : 512 count : 3 exec : true secrets : DB : secretsmanager : 'mysql' # \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306b\u4f59\u88d5\u304c\u3042\u308b\u5834\u5408\u306f\u3001Fargate Spot \u306e\u30bf\u30b9\u30af\u306b\u30d0\u30fc\u30b9\u30c8\u3057\u307e\u3059\u3002 name : cost-analyzer type : Worker Service image : build : ./cost-analyzer/Dockerfile subscribe : topics : - name : products service : orders - name : inventory service : warehouse cpu : 256 memory : 512 count : range : min : 1 max : 10 spot_from : 2 queue_delay : # 1 \u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u51e6\u7406\u306b 250ms \u304b\u304b\u308b\u3068\u4eee\u5b9a\u3057\u3066\u300110 \u5206\u4ee5\u5185\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51e6\u7406\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 acceptable_latency : 10m msg_processing_time : 250ms exec : true # \u5404\u30c8\u30d4\u30c3\u30af\u306b\u500b\u5225\u306e\u30ad\u30e5\u30fc\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002 name : cost-analyzer type : Worker Service image : build : ./cost-analyzer/Dockerfile subscribe : topics : - name : products service : orders queue : retention : 5d timeout : 1h dead_letter : tries : 3 - name : inventory service : warehouse queue : retention : 1d timeout : 5m count : 1 name String Service \u306e\u540d\u524d\u3002 type String Service \u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30bf\u30a4\u30d7\u3002 Worker Service \u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3084 VPC \u5916\u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002Worker Service \u306f\u95a2\u9023\u3059\u308b SQS \u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d7\u30eb\u3059\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002SQS \u30ad\u30e5\u30fc\u306f\u3001\u4ed6\u306e Copilot Service \u306e publish \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u4f5c\u6210\u3055\u308c\u305f SNS \u30c8\u30d4\u30c3\u30af\u3078\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u307e\u3059\u3002 subscribe Map subscribe \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Worker Service \u304c\u3001\u540c\u3058 Application \u3084 Environment \u306b\u3042\u308b\u4ed6\u306e Copilot Service \u304c\u516c\u958b\u3059\u308b SNS \u30c8\u30d4\u30c3\u30af\u3078\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u5404\u30c8\u30d4\u30c3\u30af\u306f\u72ec\u81ea\u306e SQS \u30ad\u30e5\u30fc\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3059\u3079\u3066\u306e\u30c8\u30d4\u30c3\u30af\u304c Worker Service \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ad\u30e5\u30fc\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3055\u308c\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u30ad\u30e5\u30fc\u306e URI \u306f\u3001\u74b0\u5883\u5909\u6570 COPILOT_QUEUE_URI \u3068\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u307e\u3059\u3002 subscribe : topics : - name : events service : api queue : # api-events \u30c8\u30d4\u30c3\u30af\u306e\u56fa\u6709\u306e\u30ad\u30e5\u30fc\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 timeout : 20s - name : events service : fe queue : # \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30c8\u30d4\u30c3\u30af\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001\u5171\u6709\u30ad\u30e5\u30fc\u306b\u5165\u308a\u307e\u3059\u3002 timeout : 45s retention : 96h delay : 30s subscribe. queue Map \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u30ec\u30d9\u30eb\u306e\u30ad\u30e5\u30fc\u304c\u5e38\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 queue \u3067\u306f\u3001\u305d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30ad\u30e5\u30fc\u306e\u7279\u5b9a\u306e\u5c5e\u6027\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002 subscribe.queue. delay Duration \u30ad\u30e5\u30fc\u5185\u306e\u3059\u3079\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u914d\u4fe1\u3092\u9045\u5ef6\u3055\u305b\u308b\u6642\u9593\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 0 \u79d2\u3067\u3059\u3002\u6307\u5b9a\u3067\u304d\u308b\u7bc4\u56f2\u306f 0 \u79d2 - 15 \u5206\u3067\u3059\u3002 subscribe.queue. retention Duration Retention \u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u524a\u9664\u3055\u308c\u308b\u524d\u306b\u30ad\u30e5\u30fc\u306b\u6b8b\u3063\u3066\u3044\u308b\u6642\u9593\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 4 \u65e5\u3067\u3059\u3002\u6307\u5b9a\u3067\u304d\u308b\u7bc4\u56f2\u306f 60 \u79d2 - 336 \u6642\u9593\u3067\u3059\u3002 subscribe.queue. timeout Duration Timeout \u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u914d\u4fe1\u3055\u308c\u305f\u5f8c\u306b\u5229\u7528\u3067\u304d\u306a\u3044\u6642\u9593\u306e\u9577\u3055\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 30 \u79d2\u3067\u3059\u3002\u7bc4\u56f2\u306f 0 \u79d2 - 12 \u6642\u9593\u3067\u3059\u3002 subscribe.queue. fifo Boolean or Map SQS \u30ad\u30e5\u30fc\u3067 FIFO (first in, first out) \u9806\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\u64cd\u4f5c\u3084\u30a4\u30d9\u30f3\u30c8\u306e\u9806\u756a\u304c\u91cd\u8981\u3067\u3042\u3063\u305f\u308a\u3001\u91cd\u8907\u304c\u8a31\u5bb9\u3055\u308c\u306a\u3044\u30b7\u30ca\u30ea\u30aa\u306b\u5bfe\u51e6\u3057\u307e\u3059\u3002 subscribe : topics : - name : events service : api - name : events service : fe queue : # \u4e21\u65b9\u306e FIFO SNS \u30c8\u30d4\u30c3\u30af\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001 \u5171\u6709\u306e FIFO SQS \u30ad\u30e5\u30fc\u306b\u5165\u308a\u307e\u3059\u3002 fifo : true \u30ad\u30e5\u30fc\u3067 FIFO \u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3059\u308b\u5834\u5408\u3001Copilot \u306f\u30bd\u30fc\u30b9 SNS \u30c8\u30d4\u30c3\u30af\u3082 FIFO \u3067\u3042\u308b\u3053\u3068\u3092\u8981\u6c42\u3057\u307e\u3059\u3002 \u307e\u305f\u306f\u3001 \u9ad8\u5ea6\u306a SQS FIFO \u30ad\u30e5\u30fc\u8a2d\u5b9a\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 subscribe : topics : - name : events service : api queue : # api-event \u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u305f\u6a19\u6e96\u30ad\u30e5\u30fc\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 timeout : 20s - name : events service : fe queue : # \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u5168\u3066\u306e FIFO \u30c8\u30d4\u30c3\u30af\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001\u5171\u6709\u306e FIFO SQS \u30ad\u30e5\u30fc\u306b\u5165\u308a\u307e\u3059\u3002 fifo : content_based_deduplication : true high_throughput : true subscribe.queue.fifo. content_based_deduplication Boolean \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u304c\u4e00\u610f\u3067\u3042\u308b\u4e8b\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u30d9\u30fc\u30b9\u306e\u91cd\u8907\u6392\u9664\u3092\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 subscribe.queue.fifo. deduplication_scope String FIFO \u30ad\u30e5\u30fc\u3067\u9ad8\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u91cd\u8907\u6392\u9664\u3092\u30e1\u30c3\u30bb\u30fc\u30b8\u30b0\u30eb\u30fc\u30d7\u3067\u884c\u3046\u304b\u30ad\u30e5\u30fc\u5168\u4f53\u3067\u884c\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306f\u3001\"messageGroup\" \u3068 \"queue\" \u3067\u3059\u3002 subscribe.queue.fifo. throughput_limit String FIFO \u30ad\u30e5\u30fc\u3067\u9ad8\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001FIFO \u30ad\u30e5\u30fc\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u4e0a\u9650\u3092\u30ad\u30e5\u30fc\u5168\u4f53\u306b\u9069\u7528\u3059\u308b\u304b\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u30b0\u30eb\u30fc\u30d7\u5358\u4f4d\u3067\u9069\u7528\u3059\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306f\u3001\"perQueue\" \u3068 \"perMessageGroupId\" \u3067\u3059\u3002 subscribe.queue.fifo. high_throughput Boolean \u6709\u52b9\u306b\u3057\u305f\u5834\u5408\u3001 FIFO \u30ad\u30e5\u30fc\u306b\u304a\u3044\u3066\u3001\u3088\u308a\u9ad8\u3044\u79d2\u9593\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3 (TPS) \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002 deduplication_scope \u304a\u3088\u3073 throughput_limit \u3068\u76f8\u4e92\u6392\u4ed6\u7684\u3067\u3059\u3002 subscribe.queue.dead_letter. tries Integer \u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u3001DLQ(\u30c7\u30c3\u30c9\u30ec\u30bf\u30fc\u30ad\u30e5\u30fc)\u3092\u4f5c\u6210\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092 tries \u56de\u8a66\u884c\u3057\u305f\u5f8c\u306b DLQ \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u30ea\u30c9\u30e9\u30a4\u30d6\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001Worker Service \u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u51e6\u7406\u306b tries \u56de\u6210\u529f\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u306f\u30ea\u30c8\u30e9\u30a4\u3055\u308c\u307e\u305b\u3093\u3002 \u30e1\u30c3\u30bb\u30fc\u30b8\u306f DLQ \u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u305f\u3081\u3001\u3042\u3068\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u3066\u5931\u6557\u306e\u539f\u56e0\u5206\u6790\u306b\u5f79\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 subscribe. topics Array of topic s Worker Service \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u3079\u304d SNS \u30c8\u30d4\u30c3\u30af\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 subscribe.topics.topic name String \u5fc5\u9808\u9805\u76ee\u3002\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b SNS \u30c8\u30d4\u30c3\u30af\u306e\u540d\u524d\u3002 subscribe.topics.topic service String \u5fc5\u9808\u9805\u76ee\u3002\u3053\u306e SNS \u30c8\u30d4\u30c3\u30af\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\u30c8\u30d4\u30c3\u30af\u540d\u3068\u5408\u308f\u305b\u3066\u3001Copilot Environment \u5185\u3067 SNS \u30c8\u30d4\u30c3\u30af\u3092\u4e00\u610f\u306b\u8b58\u5225\u3057\u307e\u3059\u3002 subscribe.topics.topic filter_policy Map \u4efb\u610f\u9805\u76ee\u3002SNS \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u30dd\u30ea\u30b7\u30fc\u306f\u3001\u7740\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5c5e\u6027\u3092\u8a55\u4fa1\u3057\u307e\u3059\u3002\u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u306f JSON \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002 f il ter _policy : { \"store\" :[ \"example_corp\" ], \"event\" :[{ \"anything-but\" : \"order_cancelled\" }], \"customer_interests\" :[ \"rugby\" , \"football\" , \"baseball\" ], \"price_usd\" :[{ \"numeric\" :[ \">=\" , 100 ]}]} \u307e\u305f\u306f\u3001YAML \u306e MAP \u3092\u5229\u7528\u3057\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002 filter_policy : store : - example_corp event : - anything-but : order_cancelled customer_interests : - rugby - football - baseball price_usd : - numeric : - \">=\" - 100 \u30d5\u30a3\u30eb\u30bf\u30fc\u30dd\u30ea\u30b7\u30fc\u306e\u66f8\u304d\u65b9\u306b\u95a2\u3059\u308b\u3055\u3089\u306b\u8a73\u3057\u3044\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u3001 SNS documentation \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 subscribe.topics.topic. queue Boolean or Map \u4efb\u610f\u9805\u76ee\u3002\u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u3059\u308b SQS \u30ad\u30e5\u30fc\u306e\u8a2d\u5b9a\u3067\u3059\u3002 true \u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30ad\u30e5\u30fc\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u305f\u30ad\u30e5\u30fc\u306b\u95a2\u3059\u308b\u7279\u6027\u306e\u5c5e\u6027\u306b\u3064\u3044\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Map \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 1 \u3064\u4ee5\u4e0a\u306e\u30c8\u30d4\u30c3\u30af\u56fa\u6709\u30ad\u30e5\u30fc\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 COPILOT_TOPIC_QUEUE_URIS \u5909\u6570\u3092\u4f7f\u3063\u3066\u305d\u308c\u3089\u306e\u30ad\u30e5\u30fc URI \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5909\u6570\u306f\u3001\u30c8\u30d4\u30c3\u30af\u56fa\u6709\u306e\u30ad\u30e5\u30fc\u306e\u4e00\u610f\u306a\u8b58\u5225\u5b50\u304b\u3089\u305d\u306e URI \u3078\u306e JSON Map \u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001 merchant Service \u304b\u3089\u306e orders \u30c8\u30d4\u30c3\u30af\u3068 merchant Service \u304b\u3089\u306e FIFO \u30c8\u30d4\u30c3\u30af transactions \u306e\u30c8\u30d4\u30c3\u30af\u5225\u30ad\u30e5\u30fc\u3092\u6301\u3064\u30ef\u30fc\u30ab\u30fc\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a JSON \u69cb\u9020\u3092\u6301\u3064\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 // COPILOT_TOPIC_QUEUE_URIS { \"merchantOrdersEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" , \"merchantTransactionsfifoEventsQueue\" : \"https://sqs.eu-central-1.amazonaws.com/...\" } subscribe.topics.topic.queue. fifo Boolean or Map \u4efb\u610f\u9805\u76ee\u3002\u30c8\u30d4\u30c3\u30af\u306e SQS FIFO \u30ad\u30e5\u30fc\u306b\u5bfe\u3059\u308b\u8a2d\u5b9a\u3067\u3059\u3002 true \u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 FIFO \u30ad\u30e5\u30fc\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e FIFO \u8a2d\u5b9a\u3067\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 \u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u305f\u30ad\u30e5\u30fc\u306b\u5bfe\u3059\u308b\u7279\u5b9a\u306e\u5c5e\u6027\u306b\u3064\u3044\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092 Map \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 image Map image \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Docker \u30d3\u30eb\u30c9\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3084\u3001\u65e2\u306b\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306b\u5bfe\u3059\u308b\u53c2\u7167\u306b\u3064\u3044\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u307f\u307e\u3059\u3002 image. build String or Map \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e image.location \u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u306f\u6392\u4ed6\u7684\u306a\u4f7f\u7528\u3068\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b String\uff08\u6587\u5b57\u5217\uff09\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Copilot \u306f\u305d\u308c\u3092 Dockerfile \u306e\u5834\u6240\u3092\u793a\u3059\u30d1\u30b9\u3068\u89e3\u91c8\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u304c Docker \u306e\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3059\u3002 image : build : path/to/dockerfile \u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u306e\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile path/to build \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f Map \u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002 image : build : dockerfile : path/to/dockerfile context : context/dir target : build-stage cache_from : - image:tag args : key : value \u3053\u306e\u4f8b\u306f\u3001Copilot \u306f Docker \u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b context \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u793a\u3059\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5229\u7528\u3057\u3001args \u4ee5\u4e0b\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3092\u30a4\u30e1\u30fc\u30b8\u30d3\u30eb\u30c9\u6642\u306e --build-args \u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u4e0a\u8a18\u4f8b\u3068\u540c\u7b49\u306e docker build \u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059: $ docker build --file path/to/dockerfile --target build-stage --cache-from image:tag --build-arg key=value context/dir . Copilot \u306f\u3042\u306a\u305f\u306e\u610f\u56f3\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u6700\u5584\u3092\u5c3d\u304f\u3057\u307e\u3059\u306e\u3067\u3001\u8a18\u8ff0\u3059\u308b\u60c5\u5831\u306e\u7701\u7565\u3082\u53ef\u80fd\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 context \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c dockerfile \u306f\u672a\u6307\u5b9a\u306e\u5834\u5408\u3001Copilot \u306f Dockerfile \u304c \"Dockerfile\" \u3068\u3044\u3046\u540d\u524d\u3067\u5b58\u5728\u3059\u308b\u3068\u4eee\u5b9a\u3057\u3064\u3064\u3001docker \u30b3\u30de\u30f3\u30c9\u3092 context \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u9006\u306b dockerfile \u306f\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c context \u304c\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f\u3001Copilot \u306f\u3042\u306a\u305f\u304c dockerfile \u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30d3\u30eb\u30c9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u5229\u7528\u3057\u305f\u3044\u306e\u3060\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30d1\u30b9\u306f\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u306e\u76f8\u5bfe\u30d1\u30b9\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 image. location String Dockerfile \u304b\u3089\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 image.location \u3068 image.build \u306e\u540c\u6642\u5229\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002 location \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5236\u7d04\u3092\u542b\u3080\u6307\u5b9a\u65b9\u6cd5\u306f Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e image \u30d1\u30e9\u30e1\u30fc\u30bf \u306e\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002 Warning Windows \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: windows/amd64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001Manifest \u306b platform: linux/arm64 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 image. credentials String \u4efb\u610f\u9805\u76ee\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a8d\u8a3c\u60c5\u5831\u306e ARN\u3002 credentials \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001Amazon ECS \u30bf\u30b9\u30af\u5b9a\u7fa9\u306e credentialsParameter \u3068\u540c\u3058\u3067\u3059\u3002 image. labels Map \u30b3\u30f3\u30c6\u30ca\u306b\u4ed8\u4e0e\u3057\u305f\u3044 Docker \u30e9\u30d9\u30eb \u3092 key/value \u306e Map \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002 image. depends_on Map \u4efb\u610f\u9805\u76ee\u3002\u30b3\u30f3\u30c6\u30ca\u306b\u8ffd\u52a0\u3059\u308b Container Dependencies \u306e\u4efb\u610f\u306e key/value \u306e Map\u3002Map \u306e key \u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u3001value \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u8868\u3059\u5024 (\u4f9d\u5b58\u6761\u4ef6) \u3068\u3057\u3066 start \u3001 healthy \u3001 complete \u3001 success \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5fc5\u9808\u30b3\u30f3\u30c6\u30ca\u306b complete \u3084 success \u306e\u4f9d\u5b58\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u8a2d\u5b9a\u4f8b: image : build : ./Dockerfile depends_on : nginx : start startup : success \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306f nginx \u30b5\u30a4\u30c9\u30ab\u30fc\u304c\u8d77\u52d5\u3057\u3001 startup \u30b3\u30f3\u30c6\u30ca\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002 cpu Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b CPU \u30e6\u30cb\u30c3\u30c8\u6570\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 memory Integer \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u308b\u30e1\u30e2\u30ea\u91cf\uff08MiB\uff09\u3002\u6307\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f Amazon ECS \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 platform String or Map docker build --platform \u3067\u6e21\u3059\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3002\uff08 [os]/[arch] \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\uff09 \u4f8b\u3048\u3070 linux/arm64 \u3084 windows/x86_64 \u306a\u3069\u304c\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f linux/x86_64 \u3067\u3059\u3002 \u7570\u306a\u308b osfamily \u3084 architecture \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001Windows \u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 WINDOWS_SERVER_2019_CORE \u304c\u5229\u7528\u3055\u308c\u307e\u3059\u304c platform : windows/x86_64 Map \u3092\u4f7f\u3063\u3066 WINDOWS_SERVER_2019_FULL \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 platform : osfamily : windows_server_2019_full architecture : x86_64 platform : osfamily : windows_server_2019_core architecture : x86_64 platform : osfamily : windows_server_2022_core architecture : x86_64 platform : osfamily : windows_server_2022_full architecture : x86_64 count Integer or Map \u6b21\u306e\u69d8\u306b\u6307\u5b9a\u3059\u308b\u3068\u3001 count : 5 Service \u306f\u3001\u5e0c\u671b\u3059\u308b\u30bf\u30b9\u30af\u6570\u3092 5 \u306b\u8a2d\u5b9a\u3057\u3001Service \u5185\u306b 5 \u3064\u306e\u30bf\u30b9\u30af\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u69d8\u306b\u4fdd\u3061\u307e\u3059\u3002 count. spot Integer spot \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6570\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001Service \u306e\u5b9f\u884c\u306b Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002 count : spot : 5 Info ARM \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u52d5\u4f5c\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u306f\u3001Fargate Spot \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002 \u3042\u308b\u3044\u306f\u3001Map \u3092\u6307\u5b9a\u3057\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 count : range : 1-10 cpu_percentage : 70 memory_percentage : value : 80 cooldown : in : 80s out : 160s queue_delay : acceptable_latency : 10m msg_processing_time : 250ms cooldown : in : 30s out : 60s count. range String or Map \u30e1\u30c8\u30ea\u30af\u30b9\u3067\u6307\u5b9a\u3057\u305f\u5024\u306b\u57fa\u3065\u3044\u3066\u3001Service \u304c\u4fdd\u3064\u3079\u304d\u30bf\u30b9\u30af\u6570\u306e\u6700\u5c0f\u3068\u6700\u5927\u3092\u7bc4\u56f2\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 count : range : n-m \u3053\u308c\u306b\u3088\u308a Application Auto Scaling \u304c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3055\u308c\u3001 MinCapacity \u306b n \u304c\u3001 MaxCapacity \u306b m \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 \u3042\u308b\u3044\u306f\u6b21\u306e\u4f8b\u306b\u6319\u3052\u308b\u3088\u3046\u306b range \u30d5\u30a3\u30fc\u30eb\u30c9\u4ee5\u4e0b\u306b min \u3068 max \u3092\u6307\u5b9a\u3057\u3001\u52a0\u3048\u3066 spot_from \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4e00\u5b9a\u6570\u4ee5\u4e0a\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306b Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u5229\u7528\u3059\u308b\u8a2d\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 count : range : min : 1 max : 10 spot_from : 3 \u4e0a\u8a18\u306e\u4f8b\u3067\u306f Application Auto Scaling \u306f 1-10 \u306e\u7bc4\u56f2\u3067\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u304c\u3001\u6700\u521d\u306e\uff12\u30bf\u30b9\u30af\u306f\u30aa\u30f3\u30c7\u30de\u30f3\u30c9 Fargate \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002Service \u304c\uff13\u3064\u4ee5\u4e0a\u306e\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u30b9\u30b1\u30fc\u30eb\u3057\u305f\u5834\u5408\u3001\uff13\u3064\u76ee\u4ee5\u964d\u306e\u30bf\u30b9\u30af\u306f\u6700\u5927\u30bf\u30b9\u30af\u6570\u306b\u9054\u3059\u308b\u307e\u3067 Fargate Spot \u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002 count.range. min Integer Service \u304c\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306e\u6700\u5c0f\u30bf\u30b9\u30af\u6570\u3002 count.range. max Integer Service \u304c\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306e\u6700\u5927\u30bf\u30b9\u30af\u6570\u3002 count.range. spot_from Integer Service \u306e\u4f55\u500b\u76ee\u306e\u30bf\u30b9\u30af\u304b\u3089 Fargate Spot \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u5229\u7528\u3059\u308b\u304b\u3002 count. cooldown Map \u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u308b\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3002 count.cooldown. in Duration Service \u3092\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u6642\u9593\u3002 count.cooldown. out Duration Service \u3092\u30b9\u30b1\u30fc\u30eb\u30c0\u30a6\u30f3\u3055\u305b\u308b\u305f\u3081\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30af\u30fc\u30eb\u30c0\u30a6\u30f3\u6642\u9593\u3002 cpu_percentage \u304a\u3088\u3073 memory_percentage \u306f count \u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u3042\u308a\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u304b\u3001\u307e\u305f\u306f value \u3068 cooldown \u306b\u3066\u95a2\u9023\u3059\u308b\u8a73\u7d30\u60c5\u5831\u3092\u542b\u3080\u30de\u30c3\u30d7\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 value : 50 cooldown : in : 30s out : 60s The cooldown specified here will override the default cooldown. count. cpu_percentage Integer or Map Service \u304c\u4fdd\u3064\u3079\u304d\u5e73\u5747 CPU \u4f7f\u7528\u7387\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. memory_percentage Integer Service \u304c\u4fdd\u3064\u3079\u304d\u5e73\u5747\u30e1\u30e2\u30ea\u4f7f\u7528\u7387\u3092\u6307\u5b9a\u3057\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 count. queue_delay Integer \u30bf\u30b9\u30af\u5358\u4f4d\u306e\u8a31\u5bb9\u53ef\u80fd\u306a\u30d0\u30c3\u30af\u30ed\u30b0\u3092\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u3001\u8a31\u5bb9\u53ef\u80fd\u306a\u30ad\u30e5\u30fc\u9045\u5ef6\u3092\u7dad\u6301\u3059\u308b\u3088\u3046\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002 \u30bf\u30b9\u30af\u5358\u4f4d\u306e\u8a31\u5bb9\u53ef\u80fd\u306a\u30d0\u30c3\u30af\u30ed\u30b0\u3068\u306f\u3001 acceptable_latency \u3092 msg_processing_time \u3067\u5272\u3063\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5230\u7740\u5f8c\u300110 \u5206\u4ee5\u5185\u306b\u51e6\u7406\u3067\u304d\u308c\u3070\u826f\u3044\u3068\u3057\u307e\u3059\u3002\u307e\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u306e\u306b\u5e73\u5747 250 \u30df\u30ea\u79d2\u304b\u304b\u308b\u3068\u3059\u308b\u3068\u3001\u3053\u306e\u6642\u3001 acceptableBacklogPerTask = 10 * 60 / 0.25 = 2400 \u3068\u306a\u308a\u307e\u3059\u3002\u5404\u30bf\u30b9\u30af\u306f 2,400 \u4ef6\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \u30bf\u30fc\u30b2\u30c3\u30c8\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30dd\u30ea\u30b7\u30fc\u306f\u30bf\u30b9\u30af\u3042\u305f\u308a 2400 \u30e1\u30c3\u30bb\u30fc\u30b8\u4ee5\u4e0b\u306e\u51e6\u7406\u3068\u306a\u308b\u69d8\u306b Service \u3092\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u30fb\u30c0\u30a6\u30f3\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 docs \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 count.queue_delay. acceptable_latency Duration \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30ad\u30e5\u30fc\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u8a31\u5bb9\u53ef\u80fd\u306a\u6642\u9593\u3002\u4f8b\u3048\u3070\u3001 \"45s\" \u3001 \"5m\" \u3001 10h \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 count.queue_delay. msg_processing_time Duration SQS \u30e1\u30c3\u30bb\u30fc\u30b8 1 \u4ef6\u3042\u305f\u308a\u306e\u5e73\u5747\u51e6\u7406\u6642\u9593\u3002\u4f8b\u3048\u3070\u3001 \"250ms\" \u3001 \"1s\" \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 exec Boolean \u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f false \u3067\u3059\u3002 $ copilot svc exec \u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u306b\u306f\u3001\u3053\u306e\u5024\u306b true \u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 deployment Map deployment \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u4e2d\u306b\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u306e\u6570\u3084\u3001\u30bf\u30b9\u30af\u306e\u505c\u6b62\u3068\u958b\u59cb\u306e\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 deployment. rolling String \u30ed\u30fc\u30ea\u30f3\u30b0\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3002\u6709\u52b9\u306a\u5024\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002 \"default\" : \u53e4\u3044\u30bf\u30b9\u30af\u3092\u505c\u6b62\u3059\u308b\u524d\u306b\u3001\u66f4\u65b0\u3055\u308c\u305f\u30bf\u30b9\u30af\u5b9a\u7fa9\u3067\u5fc5\u8981\u306a\u6570\u3060\u3051\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 100 \u306b\u3001 maximumPercent \u3092 200 \u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \"recreate\" : \u5b9f\u884c\u4e2d\u306e\u30bf\u30b9\u30af\u3092\u3059\u3079\u3066\u505c\u6b62\u3057\u3001\u65b0\u3057\u3044\u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u5185\u90e8\u7684\u306b\u306f\u3001 minimumHealthyPercent \u3092 0 \u306b\u3001 maximumPercent \u3092 100 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 deployment. rollback_alarms \u6587\u5b57\u5217\u307e\u305f\u306f\u30de\u30c3\u30d7\u306e\u914d\u5217 Info \u30c7\u30d7\u30ed\u30a4\u306e\u958b\u59cb\u6642\u306b\u30a2\u30e9\u30fc\u30e0\u304c\u300cIn alarm\u300d\u72b6\u614b\u306b\u3042\u308b\u5834\u5408\u3001Amazon ECS \u306f\u305d\u306e\u30c7\u30d7\u30ed\u30a4\u306e\u9593\u3001\u30a2\u30e9\u30fc\u30e0\u3092\u76e3\u8996\u3057\u307e\u305b\u3093\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002 \u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u3001 \u30c7\u30d7\u30ed\u30a4\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u306e\u3042\u308b\u3001Service \u306b\u95a2\u9023\u4ed8\u3051\u308b\u65e2\u5b58\u306e CloudWatch \u30a2\u30e9\u30fc\u30e0\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 deployment : rollback_alarms : [ \"MyAlarm-ELB-4xx\" , \"MyAlarm-ELB-5xx\" ] \u30de\u30c3\u30d7\u3068\u3057\u3066\u3001Copilot \u304c\u4f5c\u6210\u3057\u305f\u30a2\u30e9\u30fc\u30e0\u306e\u30a2\u30e9\u30fc\u30e0 \u30e1\u30c8\u30ea\u30c3\u30af\u3068\u3057\u304d\u3044\u5024 \u5229\u7528\u53ef\u80fd\u306a\u30e1\u30c8\u30ea\u30af\u30b9: deployment : rollback_alarms : cpu_utilization : 70 // Percentage value at or above which alarm is triggered. memory_utilization : 50 // Percentage value at or above which alarm is triggered. messages_delayed : 5 // Number of delayed messages in the queue at or above which alarm is triggered. entrypoint String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 entrypoint : \"/bin/entrypoint --p1 --p2\" # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 entrypoint : [ \"/bin/entrypoint\" , \"--p1\" , \"--p2\" ] command String or Array of Strings \u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002 # \u6587\u5b57\u5217\u306b\u3088\u308b\u6307\u5b9a\u3002 command : ps au # \u3042\u308b\u3044\u306f\u6587\u5b57\u5217\u914d\u5217\u306b\u3088\u308b\u6307\u5b9a\u3082\u53ef\u80fd\u3002 command : [ \"ps\" , \"au\" ] network Map network \u30bb\u30af\u30b7\u30e7\u30f3\u306f VPC \u5185\u306e AWS \u30ea\u30bd\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network. connect Bool or Map Service \u306b\u5bfe\u3057 Service Connect \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002Service \u9593\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u8ca0\u8377\u5206\u6563\u3057\u3001\u3088\u308a\u5f3e\u529b\u7684\u306b\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f false \u3067\u3059\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3068\u3001Service \u3067\u5229\u7528\u3059\u308b\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\u30a8\u30a4\u30ea\u30a2\u30b9\u306f Environment \u5185\u3067\u30e6\u30cb\u30fc\u30af\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 network.connect. alias String Service Connect \u7d4c\u7531\u3067\u516c\u958b\u3059\u308b Service \u306e\u30ab\u30b9\u30bf\u30e0 DNS\u3000\u540d\u3067\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f Service \u540d\u3067\u3059\u3002 network. vpc Map \u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u8a2d\u5b9a\u3067\u3059\u3002 network.vpc. placement String or Map String \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 public \u3042\u308b\u3044\u306f private \u306e\u3069\u3061\u3089\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30bf\u30b9\u30af\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002 Info Copilot \u304c\u751f\u6210\u3057\u305f VPC \u3092\u5229\u7528\u3057\u3066 private \u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u30bf\u30b9\u30af\u3092\u914d\u7f6e\u3059\u308b\u5834\u5408\u3001Copilot \u306f Environment \u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u7528\u306e NAT \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002(\u4fa1\u683c\u306f \u3053\u3061\u3089 \u3002)\u3042\u308b\u3044\u306f copilot env init \u30b3\u30de\u30f3\u30c9\u3067\u65e2\u5b58\u306e VPC \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3084\u3001\u5206\u96e2\u3055\u308c\u305f\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u7528\u306b VPC \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u69cb\u6210\u3055\u308c\u305f VPC \u3092\u69cb\u6210\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306f\u3001 custom environment resources \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Map \u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001 Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b\uff1a network : vpc : placement : subnets : [ \"SubnetID1\" , \"SubnetID2\" ] network.vpc.placement. subnets Array of Strings or Map String \u306e\u30ea\u30b9\u30c8\u3068\u3059\u308b\u5834\u5408\u3001Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8 ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Map \u306e\u5834\u5408\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u540d\u524d\u3068\u5024\u306e\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30d5\u30a3\u30eb\u30bf\u306f AND \u3067\u7d50\u5408\u3055\u308c\u3001\u5404\u30d5\u30a3\u30eb\u30bf\u306e\u5024\u306f OR \u3067\u7d50\u5408\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: public \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u3068\u3001\u30bf\u30b0\u30bb\u30c3\u30c8 org: bi \u3068 type: private \u3092\u6301\u3064\u30b5\u30d6\u30cd\u30c3\u30c8\u306e\u4e21\u65b9\u306f\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 network : vpc : placement : subnets : from_tags : org : bi type : - public - private network.vpc.placement.subnets from_tags Map of String and String or Array of Strings Copilot \u304c ECS \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30bf\u30b0\u30bb\u30c3\u30c8\u3002 network.vpc. security_groups Array of Strings or Map \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network : vpc : security_groups : [ sg-0001 , sg-0002 ] Copilot \u306b\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001Environment \u5185\u306e\u30b3\u30f3\u30c6\u30ca\u540c\u58eb\u304c\u901a\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u306b\u3059\u308b\u306b\u306f\u3001 Map \u5f62\u5f0f\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 network : vpc : security_groups : deny_default : true groups : [ sg-0001 , sg-0002 ] network.vpc.security_groups. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 network.vpc.security_groups. deny_default Boolean Environment \u5185\u306e\u3059\u3079\u3066\u306e Service \u304b\u3089\u306e\u4fb5\u5165\u3092\u8a31\u53ef\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u7121\u52b9\u5316\u3057\u307e\u3059\u3002 network.vpc.security_groups. groups Array of Strings \u30bf\u30b9\u30af\u306b\u95a2\u9023\u3059\u308b\u8ffd\u52a0\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 ID\u3002 network.vpc.security_groups.groups from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 variables Map Copilot \u306f Service \u540d\u306a\u3069\u3092\u5e38\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u30bf\u30b9\u30af\u306b\u5bfe\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\u672c\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u305d\u308c\u3089\u4ee5\u5916\u306b\u8ffd\u52a0\u3067\u6e21\u3057\u305f\u3044\u74b0\u5883\u5909\u6570\u3092\u30ad\u30fc\u30d0\u30fc\u30ea\u30e5\u30fc\u306e\u30da\u30a2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 variables. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 env_file String \u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u3001\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u306b\u5f15\u304d\u6e21\u3059\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 secrets Map AWS Systems Manager (SSM) \u30d1\u30e9\u30e1\u30fc\u30bf\u30b9\u30c8\u30a2 \u307e\u305f\u306f AWS Secrets Manager \u304b\u3089\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u3001Service \u306b\u5b89\u5168\u306b\u6e21\u3055\u308c\u308b\u79d8\u5bc6\u5024\u3092\u8868\u3059\u30ad\u30fc\u30fb\u5024\u30da\u30a2\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 secrets. from_cfn String CloudFormation \u30b9\u30bf\u30c3\u30af\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u79f0\u3002 storage Map storage \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u3084\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u5185\u306e\u30a2\u30d9\u30a4\u30e9\u30d3\u30ea\u30c6\u30a3\u30be\u30fc\u30f3\u306b\u307e\u305f\u304c\u3063\u3066\u6c38\u7d9a\u5316\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3068\u306a\u308b\u30c7\u30fc\u30bf\u51e6\u7406\u3084 CMS \u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306e\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\u8a73\u7d30\u306f \u30b9\u30c8\u30ec\u30fc\u30b8 \u30da\u30fc\u30b8\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u30bf\u30b9\u30af\u30ec\u30d9\u30eb\u306e\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u62e1\u5f35\u3092\u8a2d\u5b9a\u3082\u3067\u304d\u307e\u3059\u3002 storage. ephemeral Int \u30bf\u30b9\u30af\u306b\u5272\u308a\u5f53\u3066\u305f\u3044\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u30b5\u30a4\u30ba\u3092 GiB \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u304b\u3064\u6700\u5c0f\u5024\u306f 20 GiB \u3067\u3001\u6700\u5927\u5024\u306f 200 GiB \u3067\u3059\u300220 GiB \u3092\u8d85\u3048\u308b\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u305f\u8ffd\u52a0\u306e\u6599\u91d1\u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u30bf\u30b9\u30af\u306e\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3068\u30b5\u30a4\u30c9\u30ab\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3092\u5171\u6709\u3057\u305f\u3044\u5834\u5408\u3001\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u7a7a\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u691c\u8a0e\u3067\u304d\u307e\u3059\u3002 storage : ephemeral : 100 volumes : scratch : path : /var/data read_only : false sidecars : mySidecar : image : public.ecr.aws/my-image:latest mount_points : - source_volume : scratch path : /var/data read_only : false \u3053\u306e\u4f8b\u3067\u306f\u30b5\u30a4\u30c9\u30ab\u30fc\u3068\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30ca\u3067\u5171\u6709\u3055\u308c\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u3068\u3057\u3066\u3001100 GiB \u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u30d7\u30ed\u30d3\u30b8\u30e7\u30f3\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u5927\u304d\u306a\u30b5\u30a4\u30ba\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u3001\u3042\u308b\u3044\u306f\u30c7\u30a3\u30b9\u30af I/O \u306e\u8981\u6c42\u304c\u9ad8\u3044\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u304a\u3044\u3066\u30b5\u30a4\u30c9\u30ab\u30fc\u3092\u5229\u7528\u3057\u3066 EFS \u304b\u3089\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u6709\u52b9\u306a\u65b9\u6cd5\u3068\u8a00\u3048\u307e\u3059\u3002 storage. readonly_fs Boolean \u30b3\u30f3\u30c6\u30ca\u306e\u30eb\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3067\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u69d8\u306b\u3059\u308b\u306b\u306f\u3001true \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage. volumes Map \u30de\u30a6\u30f3\u30c8\u3057\u305f\u3044 EFS \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u540d\u524d\u3084\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u306f\u6b21\u306e\u3088\u3046\u306b Map \u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002 volumes : <volume name> : path : \"/etc/mountpath\" efs : ... storage.volumes. <volume> Map \u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> . path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f\uff12\uff14\uff12\u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> . read_only Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f true \u3067\u3059\u3002\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u8aad\u307f\u53d6\u308a\u5c02\u7528\u3068\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 false \u306b\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e elasticfilesystem:ClientWrite \u6a29\u9650\u304c\u4ed8\u4e0e\u3055\u308c\u3001\u305d\u308c\u306b\u3088\u308a\u30dc\u30ea\u30e5\u30fc\u30e0\u3078\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 storage.volumes. <volume> . efs Boolean or Map \u8a73\u7d30\u306a EFS \u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Boolean \u5024\u306b\u3088\u308b\u6307\u5b9a\u3001\u3042\u308b\u3044\u306f uid \u3068 gid \u30b5\u30d6\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u3001EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068 Service \u5c02\u7528\u306e EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002 // Boolean \u5024\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : true // POSIX uid/gid \u3092\u6307\u5b9a\u3059\u308b\u5834\u5408 efs : uid : 10000 gid : 110000 storage.volumes. <volume> .efs. id String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30de\u30a6\u30f3\u30c8\u3059\u308b EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.id. from_cfn String v1.30.0 \u306b\u3066\u8ffd\u52a0 CloudFormation \u30b9\u30bf\u30c3\u30af\u51fa\u529b\u5024\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 \u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs. root_dir String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f / \u3067\u3059\u3002EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u3069\u306e\u30d1\u30b9\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u30eb\u30fc\u30c8\u3068\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u6307\u5b9a\u3059\u308b\u5024\u306f 255 \u6587\u5b57\u672a\u6e80\u304b\u3064 a-zA-Z0-9.-_/ \u306e\u6587\u5b57\u7a2e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u672c\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3001\u304b\u3064 auth.iam \u306e\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 storage.volumes. <volume> .efs. uid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 gid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX UID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. gid Uint32 \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001 uid \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001 root_dir \u3001 auth \u3001 id \u3068\u3068\u3082\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093. Copilot \u7ba1\u7406\u306e EFS \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e POSIX GID \u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u3002 storage.volumes. <volume> .efs. auth Map EFS \u306b\u95a2\u9023\u3059\u308b\u8a8d\u53ef\u8a2d\u5b9a\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. iam Boolean \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3067\u3059\u3002EFS \u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b IAM \u306b\u3088\u308b\u8a8d\u53ef\u3092\u5229\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 storage.volumes. <volume> .efs.auth. access_point_id String \u4efb\u610f\u8a2d\u5b9a\u9805\u76ee\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f \"\" \u3067\u3059\u3002\u5229\u7528\u3059\u308b EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e ID \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002EFS \u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001 root_dir \u306e\u8a2d\u5b9a\u5024\u306b\u7a7a\u3082\u3057\u304f\u306f / \u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\u3001\u304b\u3064\u672c\u8a2d\u5b9a\u5024\u304c true \u3068\u306a\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish Map publish \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u306f 1 \u3064\u307e\u305f\u306f\u8907\u6570\u306e SNS \u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3067\u304d\u307e\u3059\u3002 publish : topics : - name : orderEvents \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u3053\u306e Manifest \u306f\u3001Copilot \u306e Environment \u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305f\u4ed6\u306e Worker Service \u304c\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u308b orderEvents \u3068\u3044\u3046\u540d\u524d\u306e SNS \u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002 COPILOT_SNS_TOPIC_ARNS \u3068\u3044\u3046\u540d\u524d\u306e\u74b0\u5883\u5909\u6570\u304c\u3001JSON \u6587\u5b57\u5217\u3068\u3057\u3066\u30ef\u30fc\u30af\u30ed\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 JavaScript\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002 const { orderEvents } = JSON . parse ( process . env . COPILOT_SNS_TOPIC_ARNS ) \u8a73\u3057\u304f\u306f\u3001 \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5 / \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6 \u306e\u30da\u30fc\u30b8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002 publish. topics Array of topics topic \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3002 publish.topics. topic Map 1 \u3064\u306e SNS \u30c8\u30d4\u30c3\u30af\u306e\u8a2d\u5b9a\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002 publish.topics.topic. name String \u5fc5\u9808\u9805\u76ee\u3002SNS \u30c8\u30d4\u30c3\u30af\u306e\u540d\u524d\u3067\u3059\u3002\u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3001\u6570\u5b57\u3001\u30cf\u30a4\u30d5\u30f3\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u306e\u307f\u3092\u542b\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 publish.topics.topic. fifo Boolean or Map FIFO (first in, first out) SNS \u30c8\u30d4\u30c3\u30af\u8a2d\u5b9a\u3002 true \u3068\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001 Copilot \u306f FIFO \u3067\u30c8\u30d4\u30c3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 publish : topics : - name : mytopic fifo : true \u307e\u305f, SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u9ad8\u5ea6\u306a\u8a2d\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002 publish : topics : - name : mytopic fifo : content_based_deduplication : true publish.topics.topic.fifo. content_based_deduplication Boolean \u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u304c\u4e00\u610f\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001SNS FIFO \u30c8\u30d4\u30c3\u30af\u306e\u91cd\u8907\u6392\u9664\u3092\u6709\u52b9\u5316\u3067\u304d\u307e\u3059\u3002 logging Map logging \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30ed\u30b0\u8a2d\u5b9a\u3092\u542b\u307f\u307e\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306e FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u7528\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002(\u8a2d\u5b9a\u4f8b\u306f \u3053\u3061\u3089 ) logging. retention Integer \u4efb\u610f\u9805\u76ee\u3002 \u30ed\u30b0\u30a4\u30d9\u30f3\u30c8\u3092\u4fdd\u6301\u3059\u308b\u65e5\u6570\u3002\u8a2d\u5b9a\u53ef\u80fd\u306a\u5024\u306b\u3064\u3044\u3066\u306f\u3001 \u3053\u3061\u3089 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u7701\u7565\u3057\u305f\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e 30 \u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002 logging. image Map \u4efb\u610f\u9805\u76ee\u3002\u4f7f\u7528\u3059\u308b Fluent Bit \u306e\u30a4\u30e1\u30fc\u30b8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f public.ecr.aws/aws-observability/aws-for-fluent-bit:stable \u3002 logging. destination Map \u4efb\u610f\u9805\u76ee\u3002FireLens \u30ed\u30b0\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\u306e\u8a2d\u5b9a\u3002 logging. enableMetadata Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306b ECS \u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u542b\u3081\u308b\u304b\u3069\u3046\u304b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f true \u3002 logging. secretOptions Map \u4efb\u610f\u9805\u76ee\u3002\u30ed\u30b0\u306e\u8a2d\u5b9a\u306b\u6e21\u3059\u79d8\u5bc6\u60c5\u5831\u3067\u3059\u3002 logging. configFilePath Map \u4efb\u610f\u9805\u76ee\u3002\u30ab\u30b9\u30bf\u30e0\u306e Fluent Bit \u30a4\u30e1\u30fc\u30b8\u5185\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9\u3002 logging. env_file String \u30ed\u30ae\u30f3\u30b0\u30b5\u30a4\u30c9\u30ab\u30fc\u30b3\u30f3\u30c6\u30ca\u306b\u8a2d\u5b9a\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30eb\u30fc\u30c8\u304b\u3089\u306e\u30d1\u30b9\u3002\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u95a2\u3059\u308b\u8003\u616e\u4e8b\u9805 \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability Map observability \u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3001Service \u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u6e2c\u5b9a\u3059\u308b\u65b9\u6cd5\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306e\u3068\u3053\u308d\u3001\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 observability \u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 observability. tracing String \u30c8\u30ec\u30fc\u30b9\u306b\u4f7f\u7528\u3059\u308b\u30d9\u30f3\u30c0\u30fc\u3002\u73fe\u5728\u3001 awsxray \u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 taskdef_overrides Array of Rules taskdef_overrides \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001ECS \u306e\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u30eb\u30fc\u30eb\u3092\u9069\u7528\u3067\u304d\u307e\u3059 (\u4f8b\u306f \u3053\u3061\u3089 )\u3002 taskdef_overrides. path String \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30d1\u30b9\u3002 taskdef_overrides. value Any \u5fc5\u9808\u8a2d\u5b9a\u9805\u76ee\u3067\u3059\u3002\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30b9\u30af\u5b9a\u7fa9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3002 environments Map environments \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001Manifest \u5185\u306e\u4efb\u610f\u306e\u8a2d\u5b9a\u5024\u3092 Environment \u3054\u3068\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002\u4e0a\u90e8\u8a18\u8f09\u306e Manifest \u4f8b\u3067\u306f count \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067 'prod' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u3001'staging' Environment \u3067\u5b9f\u884c\u3055\u308c\u308b Fargate Spot capacity \u306b\u3088\u308b\u30bf\u30b9\u30af\u6570\u3092 \uff12 \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002","title":"Worker Service"}]}